include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
include('incl/numpair.ax').
include('incl/pred_set.ax').
include('incl/ind_type.ax').
include('incl/list.ax').
fof('thm.rich_list.rich_list_|48|_prove_ltb', axiom, ![V_27A_27]: ![V_27P_27]: ((p(s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),V_27P_27),s('type.list.list'(V_27A_27),'const.list.NIL_0')))) & ![V_27l_27]: (p(s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),V_27P_27),s('type.list.list'(V_27A_27),V_27l_27)))) => ![V_27x_27]: p(s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),V_27P_27),s('type.list.list'(V_27A_27),'const.list.CONS_2'(s(V_27A_27,V_27x_27),s('type.list.list'(V_27A_27),V_27l_27)))))))) => ![V_27l_27]: p(s('bool','happ'(s('fun'('type.list.list'(V_27A_27),'bool'),V_27P_27),s('type.list.list'(V_27A_27),V_27l_27)))))).
fof('thm.rich_list.ELL|split|0', axiom, ![V_27A_27]: ![V_27l_27]: s(V_27A_27,'const.rich_list.ELL_2'(s('type.num.num','const.num.|48|_0'),s('type.list.list'(V_27A_27),V_27l_27))) = s(V_27A_27,'const.list.LAST_1'(s('type.list.list'(V_27A_27),V_27l_27)))).
fof('thm.rich_list.ELL|split|1', axiom, ![V_27A_27]: ![V_27n_27, V_27l_27]: s(V_27A_27,'const.rich_list.ELL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.list.list'(V_27A_27),V_27l_27))) = s(V_27A_27,'const.rich_list.ELL_2'(s('type.num.num',V_27n_27),s('type.list.list'(V_27A_27),'const.list.FRONT_1'(s('type.list.list'(V_27A_27),V_27l_27)))))).
fof('thm.rich_list.ELL_compute|split|1', axiom, ![V_27A_27]: ![V_27n_27, V_27l_27]: s(V_27A_27,'const.rich_list.ELL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))),s('type.list.list'(V_27A_27),V_27l_27))) = s(V_27A_27,'const.rich_list.ELL_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(V_27A_27),'const.list.FRONT_1'(s('type.list.list'(V_27A_27),V_27l_27)))))).
fof('thm.rich_list.ELL_compute|split|2', conjecture, ![V_27A_27]: ![V_27n_27, V_27l_27]: s(V_27A_27,'const.rich_list.ELL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27n_27))))),s('type.list.list'(V_27A_27),V_27l_27))) = s(V_27A_27,'const.rich_list.ELL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))),s('type.list.list'(V_27A_27),'const.list.FRONT_1'(s('type.list.list'(V_27A_27),V_27l_27)))))).
