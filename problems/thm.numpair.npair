include('incl/logic.ax').
include('incl/bool.ax').
include('incl/marker.ax').
include('incl/num.ax').
include('incl/combin.ax').
include('incl/normalForms.ax').
include('incl/sat.ax').
include('incl/relation.ax').
include('incl/pair.ax').
include('incl/prim_rec.ax').
include('incl/arithmetic.ax').
include('incl/numeral.ax').
include('incl/ConseqConv.ax').
include('incl/sum.ax').
include('incl/one.ax').
include('incl/option.ax').
include('incl/while.ax').
include('incl/operator.ax').
include('incl/basicSize.ax').
fof('thm.numpair.tri_def|split|0', axiom, s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.|48|_0')).
fof('thm.numpair.tri_def|split|1', axiom, ![V_27n_27]: s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27)))))).
fof('thm.numpair.tri_def_compute|split|1', axiom, ![V_27n_27]: s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.numpair.tri_def_compute|split|2', axiom, ![V_27n_27]: s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27n_27))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',V_27n_27))))),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',V_27n_27)))))))))).
fof('thm.numpair.twotri_formula', axiom, ![V_27n_27]: s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))).
fof('thm.numpair.tri_formula', axiom, ![V_27n_27]: s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))).
fof('thm.numpair.tri_eq_|48||split|0', axiom, ![V_27n_27]: (s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27))) = s('type.num.num','const.num.|48|_0') <=> s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0'))).
fof('thm.numpair.tri_eq_|48||split|1', axiom, ![V_27n_27]: (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27))) <=> s('type.num.num',V_27n_27) = s('type.num.num','const.num.|48|_0'))).
fof('thm.numpair.tri_LT_I', axiom, ![V_27n_27, V_27m_27]: (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))) => p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27m_27)))))))).
fof('thm.numpair.tri_LT', axiom, ![V_27n_27, V_27m_27]: s('bool','const.prim_rec.<_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27m_27))))) = s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27m_27)))).
fof('thm.numpair.tri_|49||49|', axiom, ![V_27m_27, V_27n_27]: (s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27m_27))) = s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27))) <=> s('type.num.num',V_27m_27) = s('type.num.num',V_27n_27))).
fof('thm.numpair.tri_LE', axiom, ![V_27m_27, V_27n_27]: s('bool','const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27m_27))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27))))) = s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27)))).
fof('thm.numpair.numpair_|49||48|_prove_ltb', axiom, ![V_27a_7c39_7c_27]: (?[V_27n_27, V_27a_27]: s('type.pair.prod'('type.num.num','type.num.num'),V_27a_7c39_7c_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27))) => ?[V_27n_27, V_27a_27]: s('type.pair.prod'('type.num.num','type.num.num'),V_27a_7c39_7c_27) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27))))).
fof('thm.numpair.invtri|48|_ind', axiom, ![V_27P_27]: (![V_27n_27, V_27a_27]: ((~ (p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) => p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num',V_27n_27))),s('type.num.num',V_27a_27))))) => ![V_27v_27, V_27v_7c49_7c_27]: p(s('bool','happ'(s('fun'('type.num.num','bool'),'happ'(s('fun'('type.num.num','fun'('type.num.num','bool')),V_27P_27),s('type.num.num',V_27v_27))),s('type.num.num',V_27v_7c49_7c_27)))))).
fof('thm.numpair.invtri|48|_def', axiom, ![V_27n_27, V_27a_27]: s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.bool.COND_3'(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27))),s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27a_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))).
fof('thm.numpair.invtri_def', axiom, ![V_27n_27]: s('type.num.num','const.numpair.invtri_1'(s('type.num.num',V_27n_27))) = s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',V_27n_27),s('type.num.num','const.num.|48|_0')))))).
fof('thm.numpair.invtri|48|_thm', axiom, ![V_27n_27, V_27a_27]: s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27))))))),s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27n_27),s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27a_27)))))).
fof('thm.numpair.SND_invtri|48|', axiom, ![V_27n_27, V_27a_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',V_27n_27),s('type.num.num',V_27a_27))))))))))).
fof('thm.numpair.invtri_lower', axiom, ![V_27n_27]: p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',V_27n_27))))),s('type.num.num',V_27n_27))))).
fof('thm.numpair.invtri_upper', axiom, ![V_27n_27]: p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))).
fof('thm.numpair.invtri_linverse', axiom, ![V_27n_27]: s('type.num.num','const.numpair.invtri_1'(s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27))))) = s('type.num.num',V_27n_27)).
fof('thm.numpair.invtri_unique', axiom, ![V_27y_27, V_27n_27]: ((p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27y_27))),s('type.num.num',V_27n_27)))) & p(s('bool','const.prim_rec.<_2'(s('type.num.num',V_27n_27),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27y_27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) => s('type.num.num','const.numpair.invtri_1'(s('type.num.num',V_27n_27))) = s('type.num.num',V_27y_27))).
fof('thm.numpair.invtri_linverse_r', axiom, ![V_27y_27, V_27x_27]: (p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27y_27),s('type.num.num',V_27x_27)))) => s('type.num.num','const.numpair.invtri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27x_27))),s('type.num.num',V_27y_27))))) = s('type.num.num',V_27x_27))).
fof('thm.numpair.tri_le', axiom, ![V_27n_27]: p(s('bool','const.arithmetic.<=_2'(s('type.num.num',V_27n_27),s('type.num.num','const.numpair.tri_1'(s('type.num.num',V_27n_27))))))).
fof('thm.numpair.invtri_le', axiom, ![V_27n_27]: p(s('bool','const.arithmetic.<=_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',V_27n_27))),s('type.num.num',V_27n_27))))).
fof('thm.numpair.npair_def', axiom, ![V_27m_27, V_27n_27]: s('type.num.num','const.numpair.npair_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',V_27m_27),s('type.num.num',V_27n_27))))),s('type.num.num',V_27n_27)))).
fof('thm.numpair.nfst_def', axiom, ![V_27n_27]: s('type.num.num','const.numpair.nfst_1'(s('type.num.num',V_27n_27))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',V_27n_27))))),s('type.num.num','const.numpair.invtri_1'(s('type.num.num',V_27n_27))))),s('type.num.num',V_27n_27)))).
fof('thm.numpair.nsnd_def', axiom, ![V_27n_27]: s('type.num.num','const.numpair.nsnd_1'(s('type.num.num',V_27n_27))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',V_27n_27),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',V_27n_27)))))))).
fof('thm.numpair.nfst_npair', axiom, ![V_27y_27, V_27x_27]: s('type.num.num','const.numpair.nfst_1'(s('type.num.num','const.numpair.npair_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27))))) = s('type.num.num',V_27x_27)).
fof('thm.numpair.nsnd_npair', axiom, ![V_27y_27, V_27x_27]: s('type.num.num','const.numpair.nsnd_1'(s('type.num.num','const.numpair.npair_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27))))) = s('type.num.num',V_27y_27)).
fof('thm.numpair.npair_cases', axiom, ![V_27n_27]: ?[V_27x_27, V_27y_27]: s('type.num.num',V_27n_27) = s('type.num.num','const.numpair.npair_2'(s('type.num.num',V_27x_27),s('type.num.num',V_27y_27)))).
fof('thm.numpair.npair', conjecture, ![V_27n_27]: s('type.num.num','const.numpair.npair_2'(s('type.num.num','const.numpair.nfst_1'(s('type.num.num',V_27n_27))),s('type.num.num','const.numpair.nsnd_1'(s('type.num.num',V_27n_27))))) = s('type.num.num',V_27n_27)).
