Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (74199)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 318
% Passive clauses: 4450
% Generated clauses: 40302
% Final active clauses: 285
% Final passive clauses: 3845
% Input formulas: 69
% Initial clauses: 118
% 
% Duplicate literals: 444
% Trivial inequalities: 272
% Fw subsumption resolutions: 2556
% Fw demodulations: 10197
% Bw demodulations: 31
% 
% Simple tautologies: 388
% Equational tautologies: 25
% Forward subsumptions: 21605
% Fw demodulations to eq. taut.: 81
% 
% Binary resolution: 764
% Forward superposition: 13276
% Backward superposition: 12584
% Self superposition: 116
% Equality factoring: 42
% Equality resolution: 19
% 
% Split clauses: 150
% Split components: 301
% SAT solver clauses: 563
% SAT solver unit clauses: 12
% SAT solver binary clauses: 98
% 
% Sat splits: 150
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 563
% TWLsolver calls for satisfiability: 135
% 
% Memory used [KB]: 24562
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% (74223)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 416
% Passive clauses: 2790
% Generated clauses: 38827
% Final active clauses: 193
% Final passive clauses: 1220
% Input formulas: 69
% Initial clauses: 118
% 
% Duplicate literals: 27
% Trivial inequalities: 126
% Fw subsumption resolutions: 1763
% Fw demodulations: 8669
% Bw demodulations: 1192
% Condensations: 116
% Global subsumptions: 14
% 
% Simple tautologies: 381
% Equational tautologies: 5
% Forward subsumptions: 19838
% Fw demodulations to eq. taut.: 55
% Bw demodulations to eq. taut.: 34
% 
% Binary resolution: 519
% Forward superposition: 12978
% Backward superposition: 7560
% Self superposition: 135
% Equality factoring: 2
% Equality resolution: 17
% 
% Split clauses: 165
% Split components: 330
% SAT solver clauses: 3613
% SAT solver unit clauses: 160
% SAT solver binary clauses: 79
% SAT solver learnt clauses: 32
% SAT solver learnt literals: 7
% 
% Sat splits: 165
% Sat splitting refutations: 288
% 
% TWLsolver clauses: 3553
% TWLsolver calls for satisfiability: 724
% 
% Memory used [KB]: 29423
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f36931,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f520,f526,f524,f522,f563,f566,f567,f523,f521,f1349,f1353,f1351,f1951,f1984,f1982,f2971,f2974,f2975,f2977,f2978,f2980,f2985,f2986,f2991,f2992,f2993,f2994,f2973,f30758,f36859])).
fof(f36859,plain,(
  $false | ($spl4 | $spl6)),
  inference(subsumption_resolution,[],[f36858,f30883])).
fof(f30883,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | $spl6),
  inference(subsumption_resolution,[],[f30862,f344])).
fof(f344,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f224,f218])).
fof(f218,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.EXP2_LT',aHL_TRUTH)).
fof(f224,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f72])).
fof(f72,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f70])).
fof(f70,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.arithmetic.EXP2_LT','thm.bool.NOT_CLAUSES|split|2')).
fof(f30862,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | $spl6),
  inference(superposition,[],[f242,f1352])).
fof(f1352,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | $spl6),
  inference(cnf_transformation,[],[f1352_D])).
fof(f1352_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f242,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X16] : (s(bool,'T_0') = s(bool,X16) <=> p(s(bool,X16)))),
  file('thm.arithmetic.EXP2_LT','thm.bool.EQ_CLAUSES|split|0')).
fof(f36858,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | $spl4),
  inference(forward_demodulation,[],[f36857,f314])).
fof(f314,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.EXP|split|1')).
fof(f36857,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))))) | $spl4),
  inference(forward_demodulation,[],[f36789,f11985])).
fof(f11985,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f2881,f2398])).
fof(f2398,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X3)))) )),
  inference(forward_demodulation,[],[f2326,f343])).
fof(f343,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f222,f221])).
fof(f221,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f27])).
fof(f27,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.ONE')).
fof(f222,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f67])).
fof(f67,axiom,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.TWO')).
fof(f2326,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X3)))) )),
  inference(superposition,[],[f313,f346])).
fof(f346,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f232,f221])).
fof(f232,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6)))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.MULT_LEFT_|49|')).
fof(f313,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7)))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.MULT|split|1')).
fof(f2881,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f2826,f343])).
fof(f2826,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f315,f345])).
fof(f345,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f231,f221])).
fof(f231,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.MULT_RIGHT_|49|')).
fof(f315,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.MULT_SUC')).
fof(f36789,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl4),
  inference(unit_resulting_resolution,[],[f4970,f30847])).
fof(f30847,plain,(
  ( ! [X3] : (s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(subsumption_resolution,[],[f30826,f218])).
fof(f30826,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s(bool,X3) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f397,f1351])).
fof(f397,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | s(bool,X0) != s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f246,f235])).
fof(f235,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.EXP2_LT',aHL_BOOL_CASES)).
fof(f246,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X16] : (s(bool,'F_0') = s(bool,X16) <=> ~p(s(bool,X16)))),
  file('thm.arithmetic.EXP2_LT','thm.bool.EQ_CLAUSES|split|3')).
fof(f4970,plain,(
  ( ! [X28,X27] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',X27))),s('type.num.num',X28))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f4969,f234])).
fof(f234,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',X7))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.DIV2_def')).
fof(f4969,plain,(
  ( ! [X28,X27] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X28)))) )),
  inference(forward_demodulation,[],[f4968,f343])).
fof(f4968,plain,(
  ( ! [X28,X27] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.num.num',X28)))) )),
  inference(subsumption_resolution,[],[f4967,f218])).
fof(f4967,plain,(
  ( ! [X28,X27] : (~p(s(bool,'T_0')) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.num.num',X28)))) )),
  inference(forward_demodulation,[],[f4930,f697])).
fof(f697,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f381,f343])).
fof(f381,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f230,f243])).
fof(f243,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f169])).
fof(f230,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X7] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))),
  file('thm.arithmetic.EXP2_LT','thm.prim_rec.LESS_|48|')).
fof(f4930,plain,(
  ( ! [X28,X27] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X27),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.num.num',X28)))) )),
  inference(superposition,[],[f334,f343])).
fof(f334,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) => s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X13,X14,X15] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)))) => s(bool,'const.prim_rec.<_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X15))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X14),s('type.num.num',X15))),s('type.num.num',X13))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.DIV_LT_X')).
fof(f30758,plain,(
  $false | $spl7),
  inference(subsumption_resolution,[],[f30757,f4477])).
fof(f4477,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.num.num',sK1))) | $spl7),
  inference(unit_resulting_resolution,[],[f4375,f242])).
fof(f4375,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.num.num',sK1)))) | $spl7),
  inference(forward_demodulation,[],[f4337,f229])).
fof(f229,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.ADD_|48|')).
fof(f4337,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))))) | $spl7),
  inference(superposition,[],[f3501,f229])).
fof(f3501,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X0))))))) ) | $spl7),
  inference(unit_resulting_resolution,[],[f3413,f327])).
fof(f327,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f215])).
fof(f215,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6,X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.NOT_LESS_EQUAL')).
fof(f3413,plain,(
  ( ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.num.num',X5))))))) ) | $spl7),
  inference(forward_demodulation,[],[f3412,f310])).
fof(f310,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6,X7] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  file('thm.arithmetic.EXP2_LT','thm.prim_rec.LESS_MONO_EQ')).
fof(f3412,plain,(
  ( ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',X5))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.num.num',X5))))))))) ) | $spl7),
  inference(forward_demodulation,[],[f3411,f312])).
fof(f312,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X7,X6] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',X7)))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.ADD_CLAUSES|split|2')).
fof(f3411,plain,(
  ( ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.num.num',X5))))))))) ) | $spl7),
  inference(forward_demodulation,[],[f3410,f312])).
fof(f3410,plain,(
  ( ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.num.num',X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))),s('type.num.num',X5))))))) ) | $spl7),
  inference(subsumption_resolution,[],[f3325,f218])).
fof(f3325,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.num.num',X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))),s('type.num.num',X5))))))) ) | $spl7),
  inference(superposition,[],[f332,f1723])).
fof(f1723,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))))) | $spl7),
  inference(unit_resulting_resolution,[],[f310,f1458])).
fof(f1458,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl7),
  inference(subsumption_resolution,[],[f1454,f218])).
fof(f1454,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl7),
  inference(superposition,[],[f397,f1354])).
fof(f1354,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | $spl7),
  inference(unit_resulting_resolution,[],[f1353,f235])).
fof(f332,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))))) )),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))))),
  inference(ennf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X6,X7,X22] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X22))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X22)))))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.LESS_MONO_ADD')).
fof(f30757,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))),s('type.num.num',sK1))) | $spl7),
  inference(forward_demodulation,[],[f30756,f314])).
fof(f30756,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))),s('type.num.num',sK1))) | $spl7),
  inference(forward_demodulation,[],[f30593,f11985])).
fof(f30593,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | $spl7),
  inference(unit_resulting_resolution,[],[f4685,f8346])).
fof(f8346,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X2)) ) | $spl7),
  inference(subsumption_resolution,[],[f8329,f218])).
fof(f8329,plain,(
  ( ! [X2] : (~p(s(bool,'T_0')) | s(bool,X2) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X2)) ) | $spl7),
  inference(superposition,[],[f397,f8307])).
fof(f8307,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))))) | $spl7),
  inference(condensation,[],[f8306])).
fof(f8306,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl7),
  inference(subsumption_resolution,[],[f8220,f243])).
fof(f8220,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl7),
  inference(superposition,[],[f782,f7327])).
fof(f7327,plain,(
  ( ! [X14] : (s(bool,X14) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))) | s(bool,'T_0') = s(bool,X14)) ) | $spl7),
  inference(subsumption_resolution,[],[f6667,f351])).
fof(f351,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f344,f242])).
fof(f6667,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X14) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))) | s(bool,'T_0') = s(bool,X14)) ) | $spl7),
  inference(superposition,[],[f394,f1364])).
fof(f1364,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))) | $spl7),
  inference(unit_resulting_resolution,[],[f1360,f235])).
fof(f1360,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))) | $spl7),
  inference(backward_demodulation,[],[f1354,f348])).
fof(f348,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))) != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))),
  inference(backward_demodulation,[],[f234,f217])).
fof(f217,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0)))))),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f145])).
fof(f145,plain,(
  ? [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6)))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.EXP2_LT')).
fof(f394,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f235,f235])).
fof(f782,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(subsumption_resolution,[],[f761,f344])).
fof(f761,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(superposition,[],[f326,f235])).
fof(f326,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f215])).
fof(f4685,plain,(
  ( ! [X26,X25] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',X26))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f4684,f234])).
fof(f4684,plain,(
  ( ! [X26,X25] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f4683,f343])).
fof(f4683,plain,(
  ( ! [X26,X25] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X26),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.num.num',X26)))) )),
  inference(subsumption_resolution,[],[f4682,f218])).
fof(f4682,plain,(
  ( ! [X26,X25] : (~p(s(bool,'T_0')) | s(bool,'const.arithmetic.<=_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X26),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f4646,f697])).
fof(f4646,plain,(
  ( ! [X26,X25] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X26),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.num.num',X26)))) )),
  inference(superposition,[],[f333,f343])).
fof(f333,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f162])).
fof(f162,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1))))),
  inference(ennf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) => s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num',X1))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X13,X14,X15] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)))) => s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X14),s('type.num.num',X15))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X15))),s('type.num.num',X14))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.X_LE_DIV')).
fof(f2973,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) | $spl13),
  inference(cnf_transformation,[],[f2973_D])).
fof(f2973_D,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f2994,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0'))))))))) ) | $spl24),
  inference(cnf_transformation,[],[f2994_D])).
fof(f2994_D,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0'))))))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2993,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f2950,f227])).
fof(f227,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.MULT_|48|')).
fof(f2950,plain,(
  ( ! [X6] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(superposition,[],[f236,f227])).
fof(f236,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(X0))))))) )),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2(X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f146])).
fof(f146,plain,(
  ! [X0] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) => ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X1))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X7)))) => ? [X6] : s('type.num.num',X7) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.EVEN_ODD_EXISTS|split|1')).
fof(f2992,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))))))))) ) | $spl22),
  inference(cnf_transformation,[],[f2992_D])).
fof(f2992_D,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))))))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2991,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5)))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f2949,f226])).
fof(f226,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.MULT_CLAUSES|split|0')).
fof(f2949,plain,(
  ( ! [X5] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5))))))))) )),
  inference(superposition,[],[f236,f226])).
fof(f2986,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))))) ) | $spl20),
  inference(cnf_transformation,[],[f2986_D])).
fof(f2986_D,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2985,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f2946,f2522])).
fof(f2522,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f314,f226])).
fof(f2946,plain,(
  ( ! [X4] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))))) )),
  inference(superposition,[],[f236,f2522])).
fof(f2980,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))))))))) | $spl18),
  inference(cnf_transformation,[],[f2980_D])).
fof(f2980_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))))))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2978,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) | $spl7),
  inference(forward_demodulation,[],[f2943,f1771])).
fof(f1771,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))))) | $spl7),
  inference(unit_resulting_resolution,[],[f1764,f317])).
fof(f317,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X1))))),
  inference(ennf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X1))))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X21,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X7)))) => s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X21),s('type.num.num',X7))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.LESS_DIV_EQ_ZERO')).
fof(f1764,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))))) | $spl7),
  inference(subsumption_resolution,[],[f1752,f218])).
fof(f1752,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))))) | $spl7),
  inference(superposition,[],[f318,f1723])).
fof(f318,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',X7)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.arithmetic.EXP2_LT','thm.prim_rec.SUC_LESS')).
fof(f2943,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))))))))) | $spl7),
  inference(superposition,[],[f236,f1771])).
fof(f2977,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))))))) | $spl16),
  inference(cnf_transformation,[],[f2977_D])).
fof(f2977_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2975,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) | $spl7),
  inference(forward_demodulation,[],[f2942,f1457])).
fof(f1457,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | $spl7),
  inference(subsumption_resolution,[],[f1448,f218])).
fof(f1448,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | $spl7),
  inference(superposition,[],[f317,f1354])).
fof(f2942,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))))))))) | $spl7),
  inference(superposition,[],[f236,f1457])).
fof(f2974,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))))) ) | $spl14),
  inference(cnf_transformation,[],[f2974_D])).
fof(f2974_D,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2971,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f2941,f1190])).
fof(f1190,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(subsumption_resolution,[],[f1164,f218])).
fof(f1164,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f317,f381])).
fof(f2941,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK2('const.arithmetic.DIV_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))))) )),
  inference(superposition,[],[f236,f1190])).
fof(f1982,plain,(
  ( ! [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) ) | $spl8),
  inference(cnf_transformation,[],[f1982_D])).
fof(f1982_D,plain,(
  ( ! [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1984,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | $spl11),
  inference(cnf_transformation,[],[f1984_D])).
fof(f1984_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f1951,plain,(
  ( ! [X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) )),
  inference(superposition,[],[f320,f227])).
fof(f320,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))))))),
  inference(flattening,[],[f211])).
fof(f211,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))))) & ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7))))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.ZERO_LESS_MULT')).
fof(f1351,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))) | $spl4),
  inference(cnf_transformation,[],[f1351_D])).
fof(f1351_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1353,plain,(
  s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | $spl7),
  inference(cnf_transformation,[],[f1353_D])).
fof(f1353_D,plain,(
  s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f1349,plain,(
  s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.DIV2_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0)))))),
  inference(superposition,[],[f348,f235])).
fof(f521,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl0),
  inference(cnf_transformation,[],[f521_D])).
fof(f521_D,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f523,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | $spl2),
  inference(cnf_transformation,[],[f523_D])).
fof(f523_D,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f567,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(forward_demodulation,[],[f542,f221])).
fof(f542,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(forward_demodulation,[],[f533,f343])).
fof(f533,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(superposition,[],[f255,f221])).
fof(f255,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))),
  inference(nnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X7] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.EVEN|split|1')).
fof(f566,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(forward_demodulation,[],[f545,f347])).
fof(f347,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f233,f221])).
fof(f233,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.EXP|split|0')).
fof(f545,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f534,f343])).
fof(f534,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f255,f347])).
fof(f563,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f562,f218])).
fof(f562,plain,(
  ~p(s(bool,'T_0')) | $spl1),
  inference(forward_demodulation,[],[f553,f220])).
fof(f220,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f69])).
fof(f69,axiom,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.arithmetic.EXP2_LT','thm.arithmetic.EVEN|split|0')).
fof(f553,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))) | $spl1),
  inference(unit_resulting_resolution,[],[f544,f254])).
fof(f254,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f175])).
fof(f544,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | $spl1),
  inference(forward_demodulation,[],[f543,f221])).
fof(f543,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl1),
  inference(subsumption_resolution,[],[f542,f522])).
fof(f522,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl1),
  inference(cnf_transformation,[],[f522_D])).
fof(f522_D,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f524,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | $spl3),
  inference(cnf_transformation,[],[f524_D])).
fof(f524_D,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f526,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(forward_demodulation,[],[f525,f347])).
fof(f525,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f511,f343])).
fof(f511,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f254,f347])).
fof(f520,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(forward_demodulation,[],[f519,f221])).
fof(f519,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(forward_demodulation,[],[f510,f343])).
fof(f510,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(superposition,[],[f254,f221])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 306
% Passive clauses: 2039
% Generated clauses: 36693
% Final active clauses: 197
% Final passive clauses: 1411
% Input formulas: 69
% Initial clauses: 118
% 
% Duplicate literals: 346
% Trivial inequalities: 102
% Fw subsumption resolutions: 846
% Fw demodulations: 13606
% Bw demodulations: 214
% Condensations: 379
% 
% Simple tautologies: 248
% Equational tautologies: 184
% Forward subsumptions: 18855
% Fw demodulations to eq. taut.: 73
% 
% Unit resulting resolution: 2639
% Forward superposition: 11026
% Backward superposition: 7254
% Self superposition: 104
% Equality factoring: 38
% Equality resolution: 8
% 
% Split clauses: 12
% Split components: 24
% SAT solver clauses: 2068
% SAT solver unit clauses: 379
% SAT solver binary clauses: 1401
% 
% Sat splits: 12
% Sat splitting refutations: 3
% 
% Memory used [KB]: 23666
% Time elapsed: 0.856 s
% ------------------------------
% ------------------------------
% Success in time 2.18 s
