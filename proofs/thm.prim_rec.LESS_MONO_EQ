Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.prim_rec
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.prim_rec
% SZS output start Proof for thm.prim_rec
fof(f901,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f892,f716,f456,f459,f527,f592,f115,f112,f116,f114,f739,f732])).
fof(f732,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl18),
  inference(cnf_transformation,[],[f732_D])).
fof(f732_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f739,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl3),
  inference(trivial_inequality_removal,[],[f734])).
fof(f734,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl3),
  inference(superposition,[],[f116,f44])).
fof(f44,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.prim_rec.LESS_MONO_EQ',aHL_BOOL_CASES)).
fof(f114,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | $spl0),
  inference(cnf_transformation,[],[f114_D])).
fof(f114_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f116,plain,(
  s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl3),
  inference(cnf_transformation,[],[f116_D])).
fof(f116_D,plain,(
  s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f112,plain,(
  s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))),
  inference(superposition,[],[f40,f44])).
fof(f40,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f28])).
fof(f28,plain,(
  ? [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  file('thm.prim_rec.LESS_MONO_EQ','thm.prim_rec.LESS_MONO_EQ')).
fof(f115,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl2),
  inference(cnf_transformation,[],[f115_D])).
fof(f115_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f592,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl7),
  inference(resolution,[],[f50,f461])).
fof(f461,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl7),
  inference(cnf_transformation,[],[f461_D])).
fof(f461_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f50,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.prim_rec.LESS_MONO_EQ','thm.bool.EQ_CLAUSES|split|2')).
fof(f527,plain,(
  $false | $spl4),
  inference(trivial_inequality_removal,[],[f522])).
fof(f522,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl4),
  inference(superposition,[],[f60,f459])).
fof(f60,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(resolution,[],[f45,f43])).
fof(f43,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.prim_rec.LESS_MONO_EQ',aHL_FALSITY)).
fof(f45,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.prim_rec.LESS_MONO_EQ','thm.bool.EQ_CLAUSES|split|1')).
fof(f459,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(cnf_transformation,[],[f459_D])).
fof(f459_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f456,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X9)) ) | $spl0),
  inference(duplicate_literal_removal,[],[f402])).
fof(f402,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl0),
  inference(superposition,[],[f328,f44])).
fof(f328,plain,(
  ( ! [X41] : (s(bool,X41) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X41)) ) | $spl0),
  inference(trivial_inequality_removal,[],[f297])).
fof(f297,plain,(
  ( ! [X41] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X41) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X41)) ) | $spl0),
  inference(superposition,[],[f137,f66])).
fof(f66,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f44,f44])).
fof(f137,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl0),
  inference(backward_demodulation,[],[f114,f40])).
fof(f716,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f715,f43])).
fof(f715,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f714,f115])).
fof(f714,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl0),
  inference(subsumption_resolution,[],[f707,f41])).
fof(f41,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.prim_rec.LESS_MONO_EQ',aHL_TRUTH)).
fof(f707,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl0),
  inference(superposition,[],[f54,f114])).
fof(f54,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.prim_rec.LESS_MONO_EQ','thm.prim_rec.LESS_MONO_REV')).
fof(f892,plain,(
  $false | ($spl1 | $spl6 | $spl18)),
  inference(subsumption_resolution,[],[f891,f41])).
fof(f891,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl6 | $spl18)),
  inference(forward_demodulation,[],[f890,f732])).
fof(f890,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | ($spl1 | $spl6 | $spl18)),
  inference(subsumption_resolution,[],[f870,f43])).
fof(f870,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | ($spl1 | $spl6 | $spl18)),
  inference(superposition,[],[f53,f854])).
fof(f854,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | ($spl1 | $spl6 | $spl18)),
  inference(subsumption_resolution,[],[f813,f732])).
fof(f813,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | ($spl1 | $spl6)),
  inference(superposition,[],[f113,f720])).
fof(f720,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(resolution,[],[f460,f101])).
fof(f101,plain,(
  ( ! [X8,X7] : (~p(s(bool,X7)) | s(bool,X7) = s(bool,X8) | s(bool,'F_0') = s(bool,X8)) )),
  inference(resolution,[],[f58,f50])).
fof(f58,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8,X9] : ((p(s(bool,X8)) => p(s(bool,X9))) => ((p(s(bool,X9)) => p(s(bool,X8))) => s(bool,X8) = s(bool,X9)))),
  file('thm.prim_rec.LESS_MONO_EQ','thm.bool.IMP_ANTISYM_AX')).
fof(f460,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl6),
  inference(cnf_transformation,[],[f460_D])).
fof(f460_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f113,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) | $spl1),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f53,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))),
  file('thm.prim_rec.LESS_MONO_EQ','thm.prim_rec.LESS_MONO')).
% SZS output end Proof for thm.prim_rec
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 35
% Passive clauses: 133
% Generated clauses: 844
% Final active clauses: 21
% Final passive clauses: 66
% Input formulas: 13
% Initial clauses: 20
% 
% Duplicate literals: 74
% Trivial inequalities: 26
% Fw subsumption resolutions: 99
% Fw demodulations: 32
% Bw demodulations: 8
% 
% Simple tautologies: 40
% Equational tautologies: 19
% Forward subsumptions: 400
% 
% Binary resolution: 69
% Factoring: 1
% Forward superposition: 163
% Backward superposition: 273
% Self superposition: 28
% Equality factoring: 30
% Equality resolution: 3
% 
% Split clauses: 20
% Split components: 41
% SAT solver clauses: 44
% SAT solver unit clauses: 3
% SAT solver binary clauses: 19
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 20
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 39
% TWLsolver calls for satisfiability: 14
% 
% Memory used [KB]: 767
% Time elapsed: 0.024 s
% ------------------------------
% ------------------------------
% Success in time 0.026 s
