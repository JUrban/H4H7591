Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.pred_set
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pred_set
% SZS output start Proof for thm.pred_set
fof(f928,plain,(
  $false),
  inference(subsumption_resolution,[],[f927,f172])).
fof(f172,plain,(
  ( ! [X0] : (s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s(fun('type.num.num',bool),'const.pred_set.INSERT_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s(fun('type.num.num',bool),'const.pred_set.INSERT_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s(fun('type.num.num',bool),'const.pred_set.INSERT_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X6)))))),
  file('thm.pred_set.count_add|49|','thm.pred_set.COUNT_SUC')).
fof(f927,plain,(
  s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK7))))) != s(fun('type.num.num',bool),'const.pred_set.INSERT_2'(s('type.num.num',sK7),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',sK7)))))),
  inference(forward_demodulation,[],[f163,f171])).
fof(f171,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.pred_set.count_add|49|','thm.arithmetic.ADD|49|')).
fof(f163,plain,(
  s(fun('type.num.num',bool),'const.pred_set.INSERT_2'(s('type.num.num',sK7),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',sK7))))) != s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  s(fun('type.num.num',bool),'const.pred_set.INSERT_2'(s('type.num.num',sK7),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',sK7))))) != s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f82])).
fof(f82,plain,(
  ? [X0] : s(fun('type.num.num',bool),'const.pred_set.INSERT_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X0))))) != s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(ennf_transformation,[],[f35])).
fof(f35,plain,(
  ~! [X0] : s(fun('type.num.num',bool),'const.pred_set.INSERT_2'(s('type.num.num',X0),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X0))))) = s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s(fun('type.num.num',bool),'const.pred_set.INSERT_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X6))))) = s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s(fun('type.num.num',bool),'const.pred_set.INSERT_2'(s('type.num.num',X6),s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num',X6))))) = s(fun('type.num.num',bool),'const.pred_set.count_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.pred_set.count_add|49|','thm.pred_set.count_add|49|')).
% SZS output end Proof for thm.pred_set
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 126
% Passive clauses: 301
% Generated clauses: 759
% Final active clauses: 126
% Final passive clauses: 139
% Input formulas: 33
% Initial clauses: 105
% 
% Duplicate literals: 29
% Trivial inequalities: 1
% Fw subsumption resolutions: 38
% Fw demodulations: 1
% 
% Simple tautologies: 80
% Equational tautologies: 12
% Forward subsumptions: 284
% 
% Binary resolution: 490
% Factoring: 8
% Forward superposition: 44
% Backward superposition: 23
% Self superposition: 3
% Equality factoring: 2
% Equality resolution: 2
% 
% Split clauses: 34
% Split components: 69
% SAT solver clauses: 51
% SAT solver unit clauses: 4
% SAT solver binary clauses: 25
% 
% Sat splits: 34
% 
% TWLsolver clauses: 51
% TWLsolver calls for satisfiability: 33
% 
% Memory used [KB]: 1023
% Time elapsed: 0.026 s
% ------------------------------
% ------------------------------
% Success in time 0.028 s
