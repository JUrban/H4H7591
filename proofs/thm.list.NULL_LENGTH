Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f136,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f132,f117,f35,f53,f51,f34,f52,f50])).
fof(f50,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | $spl0),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f52,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl2),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f34,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1))))),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  (p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1)))) & (~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f26])).
fof(f26,plain,(
  ? [X0,X1] : ((p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) & (~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ? [X0,X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <~> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),
  inference(flattening,[],[f12])).
fof(f12,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),X7)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),X7)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))))),
  file('thm.list.NULL_LENGTH','thm.list.NULL_LENGTH')).
fof(f51,plain,(
  ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) | $spl1),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f53,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl3),
  inference(cnf_transformation,[],[f53_D])).
fof(f53_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f35,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1))))),
  inference(cnf_transformation,[],[f27])).
fof(f117,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f116,f91])).
fof(f91,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | ($spl0 | $spl3)),
  inference(backward_demodulation,[],[f89,f53])).
fof(f89,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) | $spl0),
  inference(subsumption_resolution,[],[f87,f36])).
fof(f36,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.list.NULL_LENGTH',aHL_TRUTH)).
fof(f87,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) | $spl0),
  inference(superposition,[],[f42,f61])).
fof(f61,plain,(
  s(bool,'T_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1))) | $spl0),
  inference(subsumption_resolution,[],[f58,f38])).
fof(f38,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.list.NULL_LENGTH',aHL_FALSITY)).
fof(f58,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),sK1))) | $spl0),
  inference(superposition,[],[f50,f39])).
fof(f39,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.list.NULL_LENGTH',aHL_BOOL_CASES)).
fof(f42,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1))))))),
  inference(nnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1)))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X6),X7)))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.list.NULL_LENGTH','thm.list.NULL_EQ')).
fof(f116,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl0),
  inference(forward_demodulation,[],[f115,f89])).
fof(f115,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl0),
  inference(trivial_inequality_removal,[],[f113])).
fof(f113,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),'const.list.NIL_0') | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK1))) | $spl0),
  inference(superposition,[],[f45,f89])).
fof(f45,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.list.NULL_LENGTH','thm.list.LENGTH_NIL')).
fof(f132,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f131,f36])).
fof(f131,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f124,f103])).
fof(f103,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.list.NULL_1'(s('type.list.list'(X1),'const.list.NIL_0')))) )),
  inference(resolution,[],[f98,f56])).
fof(f56,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f38,f39])).
fof(f98,plain,(
  ( ! [X0] : (p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),'const.list.NIL_0'))))) )),
  inference(equality_resolution,[],[f43])).
fof(f43,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | p(s(bool,'const.list.NULL_1'(s('type.list.list'(X0),X1))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f124,plain,(
  ~p(s(bool,'const.list.NULL_1'(s('type.list.list'(sK0),'const.list.NIL_0')))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f120,f51])).
fof(f120,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) | $spl2),
  inference(trivial_inequality_removal,[],[f119])).
fof(f119,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK1) | $spl2),
  inference(superposition,[],[f44,f52])).
fof(f44,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f30])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 23
% Passive clauses: 37
% Generated clauses: 100
% Final active clauses: 12
% Final passive clauses: 6
% Input formulas: 10
% Initial clauses: 15
% 
% Duplicate literals: 1
% Trivial inequalities: 6
% Fw subsumption resolutions: 7
% Fw demodulations: 7
% Bw demodulations: 7
% 
% Simple tautologies: 4
% Equational tautologies: 4
% Forward subsumptions: 32
% 
% Binary resolution: 3
% Forward superposition: 21
% Backward superposition: 18
% Self superposition: 4
% Equality factoring: 2
% Equality resolution: 2
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 8
% SAT solver unit clauses: 1
% SAT solver binary clauses: 6
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 3
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 6
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 639
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.017 s
