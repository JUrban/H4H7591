Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.integer
% (25426)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1362
% Passive clauses: 9734
% Generated clauses: 37124
% Final active clauses: 1194
% Final passive clauses: 7804
% Input formulas: 261
% Initial clauses: 591
% 
% Duplicate literals: 253
% Trivial inequalities: 77
% Fw subsumption resolutions: 2283
% Fw demodulations: 4492
% Bw demodulations: 155
% 
% Simple tautologies: 409
% Equational tautologies: 35
% Forward subsumptions: 19324
% 
% Binary resolution: 10818
% Factoring: 839
% Forward superposition: 10453
% Backward superposition: 7017
% Self superposition: 40
% Equality factoring: 2
% Equality resolution: 21
% 
% Split clauses: 735
% Split components: 1472
% SAT solver clauses: 949
% SAT solver unit clauses: 20
% SAT solver binary clauses: 97
% 
% Sat splits: 735
% Sat splitting refutations: 13
% 
% TWLsolver clauses: 943
% TWLsolver calls for satisfiability: 542
% 
% Memory used [KB]: 16247
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% (25444)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 683
% Passive clauses: 4381
% Generated clauses: 24373
% Final active clauses: 641
% Final passive clauses: 3374
% Input formulas: 261
% Initial clauses: 591
% 
% Duplicate literals: 102
% Trivial inequalities: 44
% Fw subsumption resolutions: 890
% Fw demodulations: 3623
% Bw demodulations: 351
% Condensations: 68
% Global subsumptions: 26
% 
% Simple tautologies: 343
% Equational tautologies: 11
% Forward subsumptions: 9888
% Fw demodulations to eq. taut.: 10
% 
% Binary resolution: 3052
% Factoring: 119
% Forward superposition: 6442
% Backward superposition: 4482
% Self superposition: 52
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 31
% Split components: 63
% SAT solver clauses: 5456
% SAT solver unit clauses: 684
% SAT solver binary clauses: 197
% SAT solver learnt clauses: 52
% SAT solver learnt literals: 22
% 
% Sat splits: 31
% Sat splitting refutations: 14
% 
% TWLsolver clauses: 5352
% TWLsolver calls for satisfiability: 4887
% 
% Memory used [KB]: 23027
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integer
% (25478)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1082
% Passive clauses: 10286
% Generated clauses: 83556
% Final active clauses: 829
% Final passive clauses: 6194
% Input formulas: 261
% Initial clauses: 591
% 
% Duplicate literals: 16
% Trivial inequalities: 53
% Fw subsumption resolutions: 1689
% Fw demodulations: 23122
% Bw demodulations: 1479
% Condensations: 27
% Global subsumptions: 5
% 
% Simple tautologies: 213
% Equational tautologies: 49
% Forward subsumptions: 46126
% Fw demodulations to eq. taut.: 124
% 
% Unit resulting resolution: 39660
% Factoring: 4
% Forward superposition: 9160
% Backward superposition: 6294
% Self superposition: 83
% Equality factoring: 2
% Equality resolution: 15
% 
% Split clauses: 46
% Split components: 93
% SAT solver clauses: 12185
% SAT solver unit clauses: 2656
% SAT solver binary clauses: 4769
% 
% Sat splits: 46
% Sat splitting refutations: 1800
% 
% Memory used [KB]: 268012
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f7319,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f583,f875,f873,f582,f876,f581,f872,f884,f1113,f1231,f1229,f1115,f1235,f1233,f1121,f1264,f1380,f1360,f1440,f1710,f1830,f1828,f1712,f1379,f1831,f1832,f1835,f1836,f1842,f1845,f1873,f1874,f1876,f1383,f2229,f2238,f2246,f2255,f2317,f2323,f2329,f2334,f2338,f2343,f2348,f2358,f2362,f2366,f2369,f2373,f2377,f2381,f2387,f2392,f2397,f2400,f2423,f2532,f1384,f3152,f3154,f3035,f3158,f3287,f3289,f3168,f3292,f3293,f3294,f3297,f3298,f3314,f3315,f3329,f3330,f3345,f3346,f3360,f3361,f3375,f3376,f3390,f3391,f3406,f3407,f3422,f3423,f3438,f3439,f3728,f3732,f3744,f1552,f4110,f4253,f3155,f4372,f4261,f1554,f4376,f4637,f4917,f2252,f4920,f2251,f5026,f5028,f5032,f5036,f5102,f5104,f5113,f5117,f5137,f5142,f5145,f5172,f5288,f5286,f5174,f5292,f5290,f5767,f5769,f4919,f5773,f4918,f3295,f5777,f5842,f5844,f5853,f5114,f5856,f5118,f5875,f5138,f5879,f5143,f5881,f5146,f3296,f6122,f6125,f6138,f6139,f6140,f6141,f6142,f6143,f6144,f6145,f6146,f6147,f6148,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6162,f6165,f874,f4129,f1382,f877,f6278,f6279,f6280,f5287,f993,f6401,f6402,f6403,f6404,f6405,f994,f6406,f995,f6822,f6948,f2233,f2231,f6953,f2230,f6963,f2250,f2248,f6967,f2130,f2132,f7029,f2319,f7033,f2324,f7038,f2330,f7042,f7045,f7049,f2335,f7054,f2339,f7064,f2249,f2359,f7067,f7070,f2363,f7073,f2370,f7076,f2374,f7079,f2378,f7082,f2382,f7250,f7256,f7258,f3156,f7130,f7260,f1230,f7261,f7257,f3160,f7266,f1237,f2393,f7099,f2388,f1834,f7269,f1236,f2394,f7094,f2389,f1833,f6283,f1827,f7293,f7295,f7307,f7309,f7311])).
fof(f7311,plain,(
  $false | ($spl20 | $spl22)),
  inference(subsumption_resolution,[],[f7310,f839])).
fof(f839,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f365])).
fof(f365,plain,(
  ! [X0] : p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),
  inference(rectify,[],[f205])).
fof(f205,axiom,(
  ! [X9] : p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int',X9))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_LE_REFL')).
fof(f7310,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK14)))) | ($spl20 | $spl22)),
  inference(forward_demodulation,[],[f3983,f1382])).
fof(f3983,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl20),
  inference(resolution,[],[f1380,f757])).
fof(f757,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f525])).
fof(f525,plain,(
  ! [X0,X1] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f319])).
fof(f319,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(flattening,[],[f318])).
fof(f318,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X9,X11] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',X11)))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X11),s('type.integer.int',X9)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_NOT_LT')).
fof(f7309,plain,(
  $false | ($spl20 | $spl22)),
  inference(subsumption_resolution,[],[f7308,f839])).
fof(f7308,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK14)))) | ($spl20 | $spl22)),
  inference(forward_demodulation,[],[f3984,f1382])).
fof(f3984,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl20),
  inference(resolution,[],[f1380,f759])).
fof(f759,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f526])).
fof(f526,plain,(
  ! [X0,X1] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f321])).
fof(f321,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(flattening,[],[f320])).
fof(f320,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(rectify,[],[f209])).
fof(f209,axiom,(
  ! [X9,X11] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int',X11)))) <=> p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',X9)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_NOT_LE')).
fof(f7307,plain,(
  $false | ($spl20 | $spl22)),
  inference(subsumption_resolution,[],[f7306,f839])).
fof(f7306,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK14)))) | ($spl20 | $spl22)),
  inference(forward_demodulation,[],[f3985,f1382])).
fof(f3985,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl20),
  inference(resolution,[],[f1380,f778])).
fof(f778,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f535])).
fof(f535,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f328])).
fof(f328,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(flattening,[],[f327])).
fof(f327,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X9,X11] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int',X11)))) <=> ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',X9)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.int_le')).
fof(f7295,plain,(
  $false | ($spl7 | $spl26)),
  inference(subsumption_resolution,[],[f4514,f992])).
fof(f992,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | $spl7),
  inference(cnf_transformation,[],[f992_D])).
fof(f992_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f4514,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | $spl26),
  inference(resolution,[],[f1552,f596])).
fof(f596,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f461])).
fof(f461,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))))),
  inference(flattening,[],[f460])).
fof(f460,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f269])).
fof(f269,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0))))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))),s('type.integer.int',X7)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X6))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_ABS_LT|split|0')).
fof(f7293,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) | $spl177),
  inference(cnf_transformation,[],[f7293_D])).
fof(f7293_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) <=> ~$spl177),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl177])])).
fof(f1827,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl30),
  inference(cnf_transformation,[],[f1827_D])).
fof(f1827_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f6283,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) | $spl7),
  inference(resolution,[],[f992,f593])).
fof(f593,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))))) )),
  inference(cnf_transformation,[],[f459])).
fof(f459,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))))))),
  inference(flattening,[],[f458])).
fof(f458,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))))))),
  inference(nnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6)))))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',X6)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_ABS_LT|split|1')).
fof(f1833,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl36),
  inference(cnf_transformation,[],[f1833_D])).
fof(f1833_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2389,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) | $spl77),
  inference(cnf_transformation,[],[f2389_D])).
fof(f2389_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f7094,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f7093,f1382])).
fof(f7093,plain,(
  s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f7092,f629])).
fof(f629,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f295])).
fof(f295,plain,(
  ! [X0] : s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_ABS_NEG')).
fof(f7092,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))) | $spl22),
  inference(forward_demodulation,[],[f6764,f625])).
fof(f625,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f291])).
fof(f291,plain,(
  ! [X0] : s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X9] : s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))),s('type.integer.int',X9)))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_LE_NEGL')).
fof(f6764,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))) | $spl22),
  inference(superposition,[],[f849,f1382])).
fof(f849,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f576])).
fof(f576,plain,(
  ! [X0] : ((s('type.integer.int',X0) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))),
  inference(nnf_transformation,[],[f374])).
fof(f374,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_ABS_EQ_ID')).
fof(f2394,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl79),
  inference(cnf_transformation,[],[f2394_D])).
fof(f2394_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f1236,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | $spl18),
  inference(cnf_transformation,[],[f1236_D])).
fof(f1236_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f7269,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f7268,f1382])).
fof(f7268,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f7267,f626])).
fof(f626,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f292])).
fof(f292,plain,(
  ! [X0] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f110])).
fof(f110,axiom,(
  ! [X9] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_LE_NEGR')).
fof(f7267,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f6765,f623])).
fof(f623,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f289])).
fof(f289,plain,(
  ! [X0] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X9] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_NEG_GE|48|')).
fof(f6765,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(superposition,[],[f849,f1382])).
fof(f1834,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl37),
  inference(cnf_transformation,[],[f1834_D])).
fof(f1834_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f2388,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) | $spl76),
  inference(cnf_transformation,[],[f2388_D])).
fof(f2388_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f7099,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f7098,f1382])).
fof(f7098,plain,(
  s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f7097,f629])).
fof(f7097,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))) | $spl22),
  inference(forward_demodulation,[],[f6766,f625])).
fof(f6766,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))) | $spl22),
  inference(superposition,[],[f850,f1382])).
fof(f850,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f576])).
fof(f2393,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl78),
  inference(cnf_transformation,[],[f2393_D])).
fof(f2393_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f1237,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | $spl19),
  inference(cnf_transformation,[],[f1237_D])).
fof(f1237_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f7266,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f7265,f1382])).
fof(f7265,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f7264,f626])).
fof(f7264,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f6767,f623])).
fof(f6767,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(superposition,[],[f850,f1382])).
fof(f3160,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | $spl86),
  inference(cnf_transformation,[],[f3160_D])).
fof(f3160_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f7257,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK14)))) | $spl173),
  inference(cnf_transformation,[],[f7257_D])).
fof(f7257_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK14)))) <=> ~$spl173),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl173])])).
fof(f7261,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ($spl3 | $spl22)),
  inference(forward_demodulation,[],[f7128,f1382])).
fof(f7128,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl3),
  inference(resolution,[],[f6168,f592])).
fof(f592,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))) )),
  inference(cnf_transformation,[],[f457])).
fof(f457,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))))))))),
  inference(flattening,[],[f456])).
fof(f456,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))))))))),
  inference(nnf_transformation,[],[f267])).
fof(f267,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6)))))))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',X6))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_ABS_LT|split|3')).
fof(f6168,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | $spl3),
  inference(resolution,[],[f875,f779])).
fof(f779,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f535])).
fof(f1230,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | $spl13),
  inference(cnf_transformation,[],[f1230_D])).
fof(f1230_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f7260,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | $spl174),
  inference(cnf_transformation,[],[f7260_D])).
fof(f7260_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f7130,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | $spl3),
  inference(resolution,[],[f6168,f598])).
fof(f598,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f461])).
fof(f3156,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int',sK15)))) | $spl83),
  inference(cnf_transformation,[],[f3156_D])).
fof(f3156_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int',sK15)))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f7258,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK14)))) | $spl172),
  inference(cnf_transformation,[],[f7258_D])).
fof(f7258_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK14)))) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f7256,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int',sK15)))) | ($spl7 | $spl22)),
  inference(forward_demodulation,[],[f6281,f1382])).
fof(f6281,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int',sK15)))) | $spl7),
  inference(resolution,[],[f992,f587])).
fof(f587,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f455])).
fof(f455,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))),s('type.integer.int',X1))))))),
  inference(flattening,[],[f454])).
fof(f454,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f266])).
fof(f266,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))),s('type.integer.int',X1)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))))),s('type.integer.int',X7)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X6)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_ABS_LT|split|2')).
fof(f7250,plain,(
  $false | ($spl0 | $spl3 | $spl28)),
  inference(subsumption_resolution,[],[f7249,f4643])).
fof(f4643,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK15)))) | ($spl0 | $spl28)),
  inference(backward_demodulation,[],[f1554,f1437])).
fof(f1437,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl0),
  inference(resolution,[],[f872,f757])).
fof(f7249,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK15)))) | ($spl3 | $spl28)),
  inference(forward_demodulation,[],[f7129,f1554])).
fof(f7129,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl3),
  inference(resolution,[],[f6168,f594])).
fof(f594,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f459])).
fof(f2382,plain,(
  ( ! [X236] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X236),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X236))))) ) | $spl74),
  inference(cnf_transformation,[],[f2382_D])).
fof(f2382_D,plain,(
  ( ! [X236] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X236),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X236))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f7082,plain,(
  ( ! [X236] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X236),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X236))))) ) | $spl22),
  inference(forward_demodulation,[],[f7081,f623])).
fof(f7081,plain,(
  ( ! [X236] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X236),s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X236))))) ) | $spl22),
  inference(forward_demodulation,[],[f7080,f607])).
fof(f607,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f277])).
fof(f277,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f138])).
fof(f138,axiom,(
  ! [X9,X11] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X11))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_NEG_RMUL')).
fof(f7080,plain,(
  ( ! [X236] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X236),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X236))))) ) | $spl22),
  inference(forward_demodulation,[],[f6761,f625])).
fof(f6761,plain,(
  ( ! [X236] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X236),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X236))))) ) | $spl22),
  inference(superposition,[],[f845,f1382])).
fof(f845,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f426])).
fof(f426,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))),
  inference(flattening,[],[f425])).
fof(f425,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))),
  inference(ennf_transformation,[],[f371])).
fof(f371,plain,(
  ! [X0,X1] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) => p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))),
  inference(rectify,[],[f257])).
fof(f257,axiom,(
  ! [X9,X11] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11))))) => p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X11)))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_LE_MUL')).
fof(f2378,plain,(
  ( ! [X235] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X235))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X235))))) ) | $spl72),
  inference(cnf_transformation,[],[f2378_D])).
fof(f2378_D,plain,(
  ( ! [X235] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X235))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X235))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f7079,plain,(
  ( ! [X235] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X235))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X235))))) ) | $spl22),
  inference(forward_demodulation,[],[f7078,f623])).
fof(f7078,plain,(
  ( ! [X235] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X235)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X235))))) ) | $spl22),
  inference(forward_demodulation,[],[f7077,f605])).
fof(f605,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f275])).
fof(f275,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))),
  inference(rectify,[],[f139])).
fof(f139,axiom,(
  ! [X9,X11] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X11))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))),s('type.integer.int',X11)))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_NEG_LMUL')).
fof(f7077,plain,(
  ( ! [X235] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X235)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X235))))) ) | $spl22),
  inference(forward_demodulation,[],[f6760,f625])).
fof(f6760,plain,(
  ( ! [X235] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X235)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X235))))) ) | $spl22),
  inference(superposition,[],[f845,f1382])).
fof(f2374,plain,(
  ( ! [X234] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X234),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X234))))) ) | $spl70),
  inference(cnf_transformation,[],[f2374_D])).
fof(f2374_D,plain,(
  ( ! [X234] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X234),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X234))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f7076,plain,(
  ( ! [X234] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X234),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X234))))) ) | $spl22),
  inference(forward_demodulation,[],[f7075,f1382])).
fof(f7075,plain,(
  ( ! [X234] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X234),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X234))))) ) | $spl22),
  inference(forward_demodulation,[],[f7074,f626])).
fof(f7074,plain,(
  ( ! [X234] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X234),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X234))))) ) | $spl22),
  inference(forward_demodulation,[],[f6759,f623])).
fof(f6759,plain,(
  ( ! [X234] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X234),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X234))))) ) | $spl22),
  inference(superposition,[],[f845,f1382])).
fof(f2370,plain,(
  ( ! [X233] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X233)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X233))))) ) | $spl68),
  inference(cnf_transformation,[],[f2370_D])).
fof(f2370_D,plain,(
  ( ! [X233] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X233)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X233))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f7073,plain,(
  ( ! [X233] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X233)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X233))))) ) | $spl22),
  inference(forward_demodulation,[],[f7072,f1382])).
fof(f7072,plain,(
  ( ! [X233] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X233)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X233))))) ) | $spl22),
  inference(forward_demodulation,[],[f7071,f626])).
fof(f7071,plain,(
  ( ! [X233] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X233)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X233))))) ) | $spl22),
  inference(forward_demodulation,[],[f6758,f623])).
fof(f6758,plain,(
  ( ! [X233] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X233)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X233)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(superposition,[],[f845,f1382])).
fof(f2363,plain,(
  ( ! [X230] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X230),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X230))))) ) | $spl66),
  inference(cnf_transformation,[],[f2363_D])).
fof(f2363_D,plain,(
  ( ! [X230] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X230),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X230))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f7070,plain,(
  ( ! [X232] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X232),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X232))))) ) | $spl22),
  inference(forward_demodulation,[],[f7069,f1382])).
fof(f7069,plain,(
  ( ! [X232] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X232),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X232))))) ) | $spl22),
  inference(forward_demodulation,[],[f6757,f625])).
fof(f6757,plain,(
  ( ! [X232] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X232),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X232))))) ) | $spl22),
  inference(superposition,[],[f844,f1382])).
fof(f844,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f424])).
fof(f424,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))),
  inference(flattening,[],[f423])).
fof(f423,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))),
  inference(ennf_transformation,[],[f370])).
fof(f370,plain,(
  ! [X0,X1] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))),
  inference(rectify,[],[f253])).
fof(f253,axiom,(
  ! [X9,X11] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X9),s('type.integer.int',X11)))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_LTE_ADD')).
fof(f7067,plain,(
  ( ! [X230] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X230),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X230))))) ) | $spl22),
  inference(forward_demodulation,[],[f7066,f1382])).
fof(f7066,plain,(
  ( ! [X230] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X230),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X230))))) ) | $spl22),
  inference(forward_demodulation,[],[f7065,f626])).
fof(f7065,plain,(
  ( ! [X230] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X230),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X230))))) ) | $spl22),
  inference(forward_demodulation,[],[f6755,f623])).
fof(f6755,plain,(
  ( ! [X230] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X230),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X230))))) ) | $spl22),
  inference(superposition,[],[f844,f1382])).
fof(f2359,plain,(
  ( ! [X229] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',X229)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) | $spl64),
  inference(cnf_transformation,[],[f2359_D])).
fof(f2359_D,plain,(
  ( ! [X229] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',X229)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f2249,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl51),
  inference(cnf_transformation,[],[f2249_D])).
fof(f2249_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f7064,plain,(
  ( ! [X229] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',X229)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) | $spl22),
  inference(forward_demodulation,[],[f6754,f622])).
fof(f622,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f288])).
fof(f288,plain,(
  ! [X0] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X9] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_NEG_GT|48|')).
fof(f6754,plain,(
  ( ! [X229] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',X229)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(superposition,[],[f844,f1382])).
fof(f2339,plain,(
  ( ! [X180,X178,X179] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X180)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X178)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X178),s('type.integer.int',X179)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X178),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X179),s('type.integer.int',X180))))))) ) | $spl62),
  inference(cnf_transformation,[],[f2339_D])).
fof(f2339_D,plain,(
  ( ! [X180,X178,X179] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X180)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X178)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X178),s('type.integer.int',X179)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X178),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X179),s('type.integer.int',X180))))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f7054,plain,(
  ( ! [X189,X187,X188] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X188),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X189),s('type.integer.int',X187)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X187)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X188),s('type.integer.int',X189)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X188))))) ) | $spl22),
  inference(forward_demodulation,[],[f7053,f1382])).
fof(f7053,plain,(
  ( ! [X189,X187,X188] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X188),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X189),s('type.integer.int',X187)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X187)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X188),s('type.integer.int',X189)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X188))))) ) | $spl22),
  inference(forward_demodulation,[],[f7052,f626])).
fof(f7052,plain,(
  ( ! [X189,X187,X188] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X188),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X189),s('type.integer.int',X187)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X187)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X188),s('type.integer.int',X189)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X188))))) ) | $spl22),
  inference(forward_demodulation,[],[f7051,f623])).
fof(f7051,plain,(
  ( ! [X189,X187,X188] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X188),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X189),s('type.integer.int',X187)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X187)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X188),s('type.integer.int',X189)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X188))))) ) | $spl22),
  inference(forward_demodulation,[],[f6738,f607])).
fof(f6738,plain,(
  ( ! [X189,X187,X188] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X187)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X188),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X189),s('type.integer.int',X187)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X188),s('type.integer.int',X189)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X188))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f840,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f420])).
fof(f420,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(flattening,[],[f419])).
fof(f419,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(ennf_transformation,[],[f366])).
fof(f366,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(rectify,[],[f145])).
fof(f145,axiom,(
  ! [X31,X32,X33,X34] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X33)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X31),s('type.integer.int',X32)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X33),s('type.integer.int',X34))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',X33))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int',X34)))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_LT_MUL2')).
fof(f2335,plain,(
  ( ! [X177,X175,X176] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X176)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X175)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X175),s('type.integer.int',X177)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X175))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X176),s('type.integer.int',X177))))))) ) | $spl60),
  inference(cnf_transformation,[],[f2335_D])).
fof(f2335_D,plain,(
  ( ! [X177,X175,X176] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X176)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X175)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X175),s('type.integer.int',X177)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X175))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X176),s('type.integer.int',X177))))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f7049,plain,(
  ( ! [X182,X183,X181] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X182))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X181),s('type.integer.int',X183)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X181)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X182),s('type.integer.int',X183)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X182))))) ) | $spl22),
  inference(forward_demodulation,[],[f7048,f1382])).
fof(f7048,plain,(
  ( ! [X182,X183,X181] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X182))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X181),s('type.integer.int',X183)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X181)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X182),s('type.integer.int',X183)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X182))))) ) | $spl22),
  inference(forward_demodulation,[],[f7047,f626])).
fof(f7047,plain,(
  ( ! [X182,X183,X181] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X182))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X181),s('type.integer.int',X183)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X181)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X182),s('type.integer.int',X183)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X182))))) ) | $spl22),
  inference(forward_demodulation,[],[f7046,f623])).
fof(f7046,plain,(
  ( ! [X182,X183,X181] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X182))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X181),s('type.integer.int',X183)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X181)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X182),s('type.integer.int',X183)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X182)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(forward_demodulation,[],[f6736,f605])).
fof(f6736,plain,(
  ( ! [X182,X183,X181] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X181)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X182))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X181),s('type.integer.int',X183)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X182),s('type.integer.int',X183)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X182)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f7045,plain,(
  ( ! [X180,X178,X179] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X180)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X178),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X179),s('type.integer.int',X180)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X178),s('type.integer.int',X179)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X178))))) ) | $spl22),
  inference(forward_demodulation,[],[f7044,f1382])).
fof(f7044,plain,(
  ( ! [X180,X178,X179] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X178),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X179),s('type.integer.int',X180)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X180)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X178),s('type.integer.int',X179)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X178))))) ) | $spl22),
  inference(forward_demodulation,[],[f7043,f607])).
fof(f7043,plain,(
  ( ! [X180,X178,X179] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X178),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X179),s('type.integer.int',X180)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X180)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X178),s('type.integer.int',X179)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X178))))) ) | $spl22),
  inference(forward_demodulation,[],[f6735,f625])).
fof(f6735,plain,(
  ( ! [X180,X178,X179] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X178),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X179),s('type.integer.int',X180)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X180)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X178),s('type.integer.int',X179)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X178))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f7042,plain,(
  ( ! [X177,X175,X176] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X176)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X175))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X176),s('type.integer.int',X177)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X175),s('type.integer.int',X177)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X175))))) ) | $spl22),
  inference(forward_demodulation,[],[f7041,f1382])).
fof(f7041,plain,(
  ( ! [X177,X175,X176] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X175))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X176),s('type.integer.int',X177)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X175),s('type.integer.int',X177)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X176)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X175))))) ) | $spl22),
  inference(forward_demodulation,[],[f7040,f605])).
fof(f7040,plain,(
  ( ! [X177,X175,X176] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X175))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X176),s('type.integer.int',X177)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X175),s('type.integer.int',X177)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X176)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X175))))) ) | $spl22),
  inference(forward_demodulation,[],[f6734,f625])).
fof(f6734,plain,(
  ( ! [X177,X175,X176] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X175))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X176),s('type.integer.int',X177)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X175),s('type.integer.int',X177)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X176)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X175))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f2330,plain,(
  ( ! [X171,X169,X170] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X171)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171))))))) ) | $spl58),
  inference(cnf_transformation,[],[f2330_D])).
fof(f2330_D,plain,(
  ( ! [X171,X169,X170] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X171)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171))))))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f7038,plain,(
  ( ! [X171,X169,X170] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X171)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169))))) ) | $spl22),
  inference(forward_demodulation,[],[f7037,f1382])).
fof(f7037,plain,(
  ( ! [X171,X169,X170] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X171)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169))))) ) | $spl22),
  inference(forward_demodulation,[],[f7036,f626])).
fof(f7036,plain,(
  ( ! [X171,X169,X170] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X171)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169))))) ) | $spl22),
  inference(forward_demodulation,[],[f7035,f623])).
fof(f7035,plain,(
  ( ! [X171,X169,X170] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X171)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169))))) ) | $spl22),
  inference(forward_demodulation,[],[f6732,f1382])).
fof(f6732,plain,(
  ( ! [X171,X169,X170] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X171)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f2324,plain,(
  ( ! [X165,X163,X164] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X164)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165))))))) ) | $spl56),
  inference(cnf_transformation,[],[f2324_D])).
fof(f2324_D,plain,(
  ( ! [X165,X163,X164] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X164)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165))))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f7033,plain,(
  ( ! [X165,X163,X164] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X164)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163))))) ) | $spl22),
  inference(forward_demodulation,[],[f7032,f1382])).
fof(f7032,plain,(
  ( ! [X165,X163,X164] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X164)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163))))) ) | $spl22),
  inference(forward_demodulation,[],[f7031,f626])).
fof(f7031,plain,(
  ( ! [X165,X163,X164] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X164)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163))))) ) | $spl22),
  inference(forward_demodulation,[],[f7030,f623])).
fof(f7030,plain,(
  ( ! [X165,X163,X164] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X164)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(forward_demodulation,[],[f6730,f1382])).
fof(f6730,plain,(
  ( ! [X165,X163,X164] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X164)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f2319,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl54),
  inference(cnf_transformation,[],[f2319_D])).
fof(f2319_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.int_neg_1'(s('type.integer.int',sK15)))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f7029,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f7028,f1382])).
fof(f7028,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(forward_demodulation,[],[f6728,f625])).
fof(f6728,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(superposition,[],[f836,f1382])).
fof(f836,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44(X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f574])).
fof(f574,plain,(
  ! [X0] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK44])],[f418])).
fof(f418,plain,(
  ! [X0] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ? [X1] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))),
  inference(ennf_transformation,[],[f361])).
fof(f361,plain,(
  ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) => ? [X1] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f198])).
fof(f198,axiom,(
  ! [X16] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X16)))) => ? [X10] : s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X10))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.NUM_POSINT_EXISTS')).
fof(f2132,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl42),
  inference(cnf_transformation,[],[f2132_D])).
fof(f2132_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f2130,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | $spl40),
  inference(cnf_transformation,[],[f2130_D])).
fof(f2130_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f6967,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | ($spl22 | $spl53)),
  inference(subsumption_resolution,[],[f6966,f2251])).
fof(f6966,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f6965,f1382])).
fof(f6965,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(forward_demodulation,[],[f6964,f624])).
fof(f624,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f290])).
fof(f290,plain,(
  ! [X0] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X9] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_NEG_LT|48|')).
fof(f6964,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(forward_demodulation,[],[f6662,f622])).
fof(f6662,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(superposition,[],[f619,f1382])).
fof(f619,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f285])).
fof(f285,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))))),
  inference(rectify,[],[f148])).
fof(f148,axiom,(
  ! [X9] : (s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9)))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_LT_NEGTOTAL')).
fof(f2248,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl48),
  inference(cnf_transformation,[],[f2248_D])).
fof(f2248_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f2250,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl50),
  inference(cnf_transformation,[],[f2250_D])).
fof(f2250_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f6963,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl22 | $spl53)),
  inference(subsumption_resolution,[],[f6962,f2251])).
fof(f6962,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl22),
  inference(forward_demodulation,[],[f6961,f1382])).
fof(f6961,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(forward_demodulation,[],[f6960,f622])).
fof(f6960,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(forward_demodulation,[],[f6661,f622])).
fof(f6661,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(superposition,[],[f619,f1382])).
fof(f2230,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl44),
  inference(cnf_transformation,[],[f2230_D])).
fof(f2230_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f6953,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl22),
  inference(forward_demodulation,[],[f6952,f1382])).
fof(f6952,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl22),
  inference(forward_demodulation,[],[f6951,f626])).
fof(f6951,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl22),
  inference(forward_demodulation,[],[f6950,f623])).
fof(f6950,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(forward_demodulation,[],[f6949,f626])).
fof(f6949,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(forward_demodulation,[],[f6659,f623])).
fof(f6659,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(superposition,[],[f618,f1382])).
fof(f618,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f284])).
fof(f284,plain,(
  ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X9] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9)))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_LE_NEGTOTAL')).
fof(f2231,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl45),
  inference(cnf_transformation,[],[f2231_D])).
fof(f2231_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f2233,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | $spl46),
  inference(cnf_transformation,[],[f2233_D])).
fof(f2233_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f6948,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl22),
  inference(forward_demodulation,[],[f6947,f1382])).
fof(f6947,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | $spl22),
  inference(forward_demodulation,[],[f6658,f626])).
fof(f6658,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | $spl22),
  inference(superposition,[],[f613,f1382])).
fof(f613,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16(X0)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(cnf_transformation,[],[f465])).
fof(f465,plain,(
  ! [X0] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16(X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16])],[f391])).
fof(f391,plain,(
  ! [X0] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ? [X1] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))),
  inference(ennf_transformation,[],[f281])).
fof(f281,plain,(
  ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) => ? [X1] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X16] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) => ? [X10] : s('type.integer.int',X16) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X10))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.NUM_NEGINT_EXISTS')).
fof(f6822,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | ($spl22 | $spl25)),
  inference(subsumption_resolution,[],[f6568,f1384])).
fof(f6568,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(superposition,[],[f619,f1382])).
fof(f995,plain,(
  s('type.integer.int',sK14) = s('type.integer.int',sK15) | $spl8),
  inference(cnf_transformation,[],[f995_D])).
fof(f995_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int',sK15) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f6406,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | s('type.integer.int',sK14) = s('type.integer.int',sK15) | $spl28),
  inference(forward_demodulation,[],[f4657,f625])).
fof(f4657,plain,(
  s('type.integer.int',sK14) = s('type.integer.int',sK15) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl28),
  inference(superposition,[],[f1554,f850])).
fof(f994,plain,(
  s('type.integer.int',sK14) != s('type.integer.int',sK15) | $spl9),
  inference(cnf_transformation,[],[f994_D])).
fof(f994_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int',sK15) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f6405,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | s('type.integer.int',sK14) != s('type.integer.int',sK15) | $spl28),
  inference(forward_demodulation,[],[f4674,f625])).
fof(f4674,plain,(
  s('type.integer.int',sK14) != s('type.integer.int',sK15) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl28),
  inference(superposition,[],[f849,f1554])).
fof(f6404,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | s('type.integer.int',sK14) = s('type.integer.int',sK15) | $spl28),
  inference(forward_demodulation,[],[f4675,f625])).
fof(f4675,plain,(
  s('type.integer.int',sK14) = s('type.integer.int',sK15) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl28),
  inference(superposition,[],[f850,f1554])).
fof(f6403,plain,(
  $false | ($spl7 | $spl19)),
  inference(subsumption_resolution,[],[f6288,f1237])).
fof(f6288,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | $spl7),
  inference(resolution,[],[f992,f779])).
fof(f6402,plain,(
  $false | ($spl7 | $spl19)),
  inference(subsumption_resolution,[],[f6287,f1237])).
fof(f6287,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | $spl7),
  inference(resolution,[],[f992,f758])).
fof(f758,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f526])).
fof(f6401,plain,(
  $false | ($spl7 | $spl19)),
  inference(subsumption_resolution,[],[f6286,f1237])).
fof(f6286,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | $spl7),
  inference(resolution,[],[f992,f756])).
fof(f756,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f525])).
fof(f993,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | $spl6),
  inference(cnf_transformation,[],[f993_D])).
fof(f993_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f5287,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl139),
  inference(cnf_transformation,[],[f5287_D])).
fof(f5287_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) <=> ~$spl139),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl139])])).
fof(f6280,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | ($spl21 | $spl28)),
  inference(forward_demodulation,[],[f4120,f1554])).
fof(f4120,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int',sK15)))) | $spl21),
  inference(resolution,[],[f1379,f587])).
fof(f6279,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | ($spl21 | $spl28)),
  inference(forward_demodulation,[],[f4247,f1554])).
fof(f4247,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl21),
  inference(forward_demodulation,[],[f4123,f630])).
fof(f630,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f296])).
fof(f296,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f107])).
fof(f107,axiom,(
  ! [X9] : s('type.integer.int',X9) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_NEGNEG')).
fof(f4123,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl21),
  inference(resolution,[],[f1379,f593])).
fof(f6278,plain,(
  $false | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f6166,f993])).
fof(f6166,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | $spl3),
  inference(resolution,[],[f875,f781])).
fof(f781,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f537])).
fof(f537,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f536])).
fof(f536,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f329])).
fof(f329,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)))),
  inference(rectify,[],[f149])).
fof(f149,axiom,(
  ! [X9,X11] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int',X11)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',X11)))) | s('type.integer.int',X9) = s('type.integer.int',X11)))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_LE_LT')).
fof(f877,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | $spl5),
  inference(cnf_transformation,[],[f877_D])).
fof(f877_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f1382,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) | $spl22),
  inference(cnf_transformation,[],[f1382_D])).
fof(f1382_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f4129,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | $spl21),
  inference(resolution,[],[f1379,f780])).
fof(f780,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int',X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f537])).
fof(f874,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | $spl2),
  inference(cnf_transformation,[],[f874_D])).
fof(f874_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f6165,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | $spl0),
  inference(forward_demodulation,[],[f3840,f625])).
fof(f3840,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl0),
  inference(superposition,[],[f872,f850])).
fof(f6162,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | $spl171),
  inference(cnf_transformation,[],[f6162_D])).
fof(f6162_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) <=> ~$spl171),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl171])])).
fof(f6160,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | $spl0),
  inference(forward_demodulation,[],[f4358,f625])).
fof(f4358,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl0),
  inference(superposition,[],[f1437,f850])).
fof(f6159,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl168),
  inference(cnf_transformation,[],[f6159_D])).
fof(f6159_D,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f6158,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP0(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl0),
  inference(forward_demodulation,[],[f4384,f625])).
fof(f4384,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1450,f850])).
fof(f1450,plain,(
  ( ! [X21,X22] : (sP0(X21,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X22)) ) | $spl0),
  inference(resolution,[],[f872,f641])).
fof(f641,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f472])).
fof(f472,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP0(X0,X1,X2)))),
  inference(rectify,[],[f471])).
fof(f471,plain,(
  ! [X2,X0,X1] : ((~sP0(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP0(X2,X0,X1)))),
  inference(flattening,[],[f470])).
fof(f470,plain,(
  ! [X2,X0,X1] : ((~sP0(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP0(X2,X0,X1)))),
  inference(nnf_transformation,[],[f427])).
fof(f427,plain,(
  ! [X2,X0,X1] : (sP0(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f6157,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl166),
  inference(cnf_transformation,[],[f6157_D])).
fof(f6157_D,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f6156,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP2(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl0),
  inference(forward_demodulation,[],[f4397,f625])).
fof(f4397,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1463,f850])).
fof(f1463,plain,(
  ( ! [X47,X48] : (sP2(X47,X48,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) ) | $spl0),
  inference(resolution,[],[f872,f657])).
fof(f657,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f480])).
fof(f480,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(rectify,[],[f479])).
fof(f479,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(flattening,[],[f478])).
fof(f478,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(nnf_transformation,[],[f430])).
fof(f430,plain,(
  ! [X2,X0,X1] : (sP2(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f6155,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl164),
  inference(cnf_transformation,[],[f6155_D])).
fof(f6155_D,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f6154,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP2(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl0),
  inference(forward_demodulation,[],[f4410,f625])).
fof(f4410,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1464,f850])).
fof(f1464,plain,(
  ( ! [X50,X49] : (sP2(X49,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X50)) ) | $spl0),
  inference(resolution,[],[f872,f658])).
fof(f658,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f480])).
fof(f6153,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl162),
  inference(cnf_transformation,[],[f6153_D])).
fof(f6153_D,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f6152,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP4(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl0),
  inference(forward_demodulation,[],[f4423,f625])).
fof(f4423,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1480,f850])).
fof(f1480,plain,(
  ( ! [X81,X82] : (sP4(X81,X82,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) ) | $spl0),
  inference(resolution,[],[f872,f674])).
fof(f674,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f487])).
fof(f487,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(flattening,[],[f486])).
fof(f486,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(nnf_transformation,[],[f433])).
fof(f433,plain,(
  ! [X0,X1,X2] : (sP4(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f6151,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl160),
  inference(cnf_transformation,[],[f6151_D])).
fof(f6151_D,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f6150,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP8(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl0),
  inference(forward_demodulation,[],[f4434,f625])).
fof(f4434,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1493,f850])).
fof(f1493,plain,(
  ( ! [X107,X108] : (sP8(X107,X108,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) ) | $spl0),
  inference(resolution,[],[f872,f691])).
fof(f691,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f495])).
fof(f495,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f494])).
fof(f494,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f493])).
fof(f493,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f438])).
fof(f438,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f6149,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl158),
  inference(cnf_transformation,[],[f6149_D])).
fof(f6149_D,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f6148,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP7(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl0),
  inference(forward_demodulation,[],[f4446,f625])).
fof(f4446,plain,(
  ( ! [X0,X1] : (sP7(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1496,f850])).
fof(f1496,plain,(
  ( ! [X114,X113] : (sP7(X113,X114,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) ) | $spl0),
  inference(resolution,[],[f872,f695])).
fof(f695,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f498])).
fof(f498,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f497])).
fof(f497,plain,(
  ! [X1,X0,X2] : ((~sP7(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP7(X1,X0,X2)))),
  inference(flattening,[],[f496])).
fof(f496,plain,(
  ! [X1,X0,X2] : ((~sP7(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP7(X1,X0,X2)))),
  inference(nnf_transformation,[],[f437])).
fof(f437,plain,(
  ! [X1,X0,X2] : (sP7(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f6147,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl156),
  inference(cnf_transformation,[],[f6147_D])).
fof(f6147_D,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f6146,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP6(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl0),
  inference(forward_demodulation,[],[f4458,f625])).
fof(f4458,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1497,f850])).
fof(f1497,plain,(
  ( ! [X116,X115] : (sP6(X115,X116,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) ) | $spl0),
  inference(resolution,[],[f872,f699])).
fof(f699,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f500])).
fof(f500,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(flattening,[],[f499])).
fof(f499,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(nnf_transformation,[],[f436])).
fof(f436,plain,(
  ! [X0,X1,X2] : (sP6(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f6145,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl154),
  inference(cnf_transformation,[],[f6145_D])).
fof(f6145_D,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f6144,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP6(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl0),
  inference(forward_demodulation,[],[f4471,f625])).
fof(f4471,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1498,f850])).
fof(f1498,plain,(
  ( ! [X118,X117] : (sP6(X117,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X118)) ) | $spl0),
  inference(resolution,[],[f872,f700])).
fof(f700,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f500])).
fof(f6143,plain,(
  ( ! [X0,X1] : (sP6('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl152),
  inference(cnf_transformation,[],[f6143_D])).
fof(f6143_D,plain,(
  ( ! [X0,X1] : (sP6('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f6142,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP6('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl0),
  inference(forward_demodulation,[],[f4484,f625])).
fof(f4484,plain,(
  ( ! [X0,X1] : (sP6('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1499,f850])).
fof(f1499,plain,(
  ( ! [X120,X119] : (sP6('const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X119,X120)) ) | $spl0),
  inference(resolution,[],[f872,f701])).
fof(f701,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f500])).
fof(f6141,plain,(
  ( ! [X0,X1] : (sP10('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl150),
  inference(cnf_transformation,[],[f6141_D])).
fof(f6141_D,plain,(
  ( ! [X0,X1] : (sP10('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f6140,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP10('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl0),
  inference(forward_demodulation,[],[f4498,f625])).
fof(f4498,plain,(
  ( ! [X0,X1] : (sP10('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1510,f850])).
fof(f1510,plain,(
  ( ! [X142,X141] : (sP10('const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X141,X142)) ) | $spl0),
  inference(resolution,[],[f872,f719])).
fof(f719,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X2,X1) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f508])).
fof(f508,plain,(
  ! [X0,X1,X2] : ((((~p(s(bool,X1)) | ~p(s(bool,X2))) & ~p(s(bool,X0))) | sP10(X0,X2,X1)) & (~sP10(X0,X2,X1) | (p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0))))),
  inference(flattening,[],[f507])).
fof(f507,plain,(
  ! [X0,X1,X2] : ((((~p(s(bool,X1)) | ~p(s(bool,X2))) & ~p(s(bool,X0))) | sP10(X0,X2,X1)) & (~sP10(X0,X2,X1) | ((p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f442])).
fof(f442,plain,(
  ! [X0,X1,X2] : (((p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0))) <=> sP10(X0,X2,X1))),
  inference(definition_folding,[],[f306,f441])).
fof(f441,plain,(
  ! [X0,X2,X1] : (sP10(X0,X2,X1) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f306,plain,(
  ! [X0,X1,X2] : (((p(s(bool,X1)) & p(s(bool,X2))) | p(s(bool,X0))) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | p(s(bool,X0)))))),
  inference(rectify,[],[f238])).
fof(f238,axiom,(
  ! [X8,X27,X40] : (((p(s(bool,X27)) & p(s(bool,X40))) | p(s(bool,X8))) <=> ((p(s(bool,X27)) | p(s(bool,X8))) & (p(s(bool,X40)) | p(s(bool,X8)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.bool.RIGHT_OR_OVER_AND')).
fof(f6139,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl148),
  inference(cnf_transformation,[],[f6139_D])).
fof(f6139_D,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f6138,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP11(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl0),
  inference(forward_demodulation,[],[f4509,f625])).
fof(f4509,plain,(
  ( ! [X0,X1] : (sP11(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl0),
  inference(superposition,[],[f1517,f850])).
fof(f1517,plain,(
  ( ! [X156,X155] : (sP11(X155,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X156)) ) | $spl0),
  inference(resolution,[],[f872,f728])).
fof(f728,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f513])).
fof(f513,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X0)) & (~p(s(bool,X1)) | ~p(s(bool,X2)))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2)))))),
  inference(flattening,[],[f512])).
fof(f512,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X0)) & (~p(s(bool,X1)) | ~p(s(bool,X2)))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | (p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f444])).
fof(f444,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2)))) <=> sP11(X2,X0,X1))),
  inference(definition_folding,[],[f307,f443])).
fof(f443,plain,(
  ! [X2,X0,X1] : (sP11(X2,X0,X1) <=> ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f307,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X0)) | (p(s(bool,X1)) & p(s(bool,X2)))) <=> ((p(s(bool,X0)) | p(s(bool,X1))) & (p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(rectify,[],[f237])).
fof(f237,axiom,(
  ! [X8,X27,X40] : ((p(s(bool,X8)) | (p(s(bool,X27)) & p(s(bool,X40)))) <=> ((p(s(bool,X8)) | p(s(bool,X27))) & (p(s(bool,X8)) | p(s(bool,X40)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.bool.LEFT_OR_OVER_AND')).
fof(f6125,plain,(
  $false | ($spl0 | $spl5 | $spl28)),
  inference(subsumption_resolution,[],[f6124,f4643])).
fof(f6124,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK15)))) | ($spl5 | $spl28)),
  inference(forward_demodulation,[],[f6123,f1554])).
fof(f6123,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl5),
  inference(forward_demodulation,[],[f5996,f604])).
fof(f604,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f274])).
fof(f274,plain,(
  ! [X0,X1] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X9,X11] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',X9))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X9))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_LT_NEG')).
fof(f5996,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl5),
  inference(resolution,[],[f3857,f589])).
fof(f589,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f455])).
fof(f3857,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl5),
  inference(resolution,[],[f877,f779])).
fof(f6122,plain,(
  $false | ($spl0 | $spl5 | $spl28)),
  inference(subsumption_resolution,[],[f6121,f4643])).
fof(f6121,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK15)))) | ($spl5 | $spl28)),
  inference(forward_demodulation,[],[f5994,f1554])).
fof(f5994,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl5),
  inference(resolution,[],[f3857,f595])).
fof(f595,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))))) )),
  inference(cnf_transformation,[],[f459])).
fof(f3296,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl95),
  inference(cnf_transformation,[],[f3296_D])).
fof(f3296_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f5146,plain,(
  ( ! [X229] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X229),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) | $spl134),
  inference(cnf_transformation,[],[f5146_D])).
fof(f5146_D,plain,(
  ( ! [X229] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X229),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f5881,plain,(
  ( ! [X229] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X229),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) | $spl28),
  inference(forward_demodulation,[],[f5880,f4680])).
fof(f4680,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) | $spl28),
  inference(superposition,[],[f858,f1554])).
fof(f858,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f382])).
fof(f382,plain,(
  ! [X0] : s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X6] : s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6)))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_ABS_ABS')).
fof(f5880,plain,(
  ( ! [X229] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X229),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) | $spl28),
  inference(forward_demodulation,[],[f5611,f625])).
fof(f5611,plain,(
  ( ! [X229] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X229),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) | $spl28),
  inference(superposition,[],[f845,f4680])).
fof(f5143,plain,(
  ( ! [X228] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X228)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X228))))) ) | $spl132),
  inference(cnf_transformation,[],[f5143_D])).
fof(f5143_D,plain,(
  ( ! [X228] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X228)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X228))))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f5879,plain,(
  ( ! [X228] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X228)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X228))))) ) | $spl28),
  inference(forward_demodulation,[],[f5878,f4680])).
fof(f5878,plain,(
  ( ! [X228] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',X228)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X228))))) ) | $spl28),
  inference(forward_demodulation,[],[f5610,f625])).
fof(f5610,plain,(
  ( ! [X228] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',X228)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X228))))) ) | $spl28),
  inference(superposition,[],[f845,f4680])).
fof(f5138,plain,(
  ( ! [X225] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X225),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X225))))) ) | $spl130),
  inference(cnf_transformation,[],[f5138_D])).
fof(f5138_D,plain,(
  ( ! [X225] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X225),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X225))))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f5875,plain,(
  ( ! [X225] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X225),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X225))))) ) | $spl28),
  inference(forward_demodulation,[],[f5874,f4680])).
fof(f5874,plain,(
  ( ! [X225] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X225),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X225))))) ) | $spl28),
  inference(forward_demodulation,[],[f5607,f625])).
fof(f5607,plain,(
  ( ! [X225] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X225),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X225))))) ) | $spl28),
  inference(superposition,[],[f844,f4680])).
fof(f5118,plain,(
  ( ! [X173,X171,X172] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',X173)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X171)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X171),s('type.integer.int',X172)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X171),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X172),s('type.integer.int',X173))))))) ) | $spl128),
  inference(cnf_transformation,[],[f5118_D])).
fof(f5118_D,plain,(
  ( ! [X173,X171,X172] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',X173)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X171)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X171),s('type.integer.int',X172)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X171),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X172),s('type.integer.int',X173))))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f5856,plain,(
  ( ! [X173,X171,X172] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',X173)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X171),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X172),s('type.integer.int',X173)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X171),s('type.integer.int',X172)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X171))))) ) | $spl28),
  inference(forward_demodulation,[],[f5855,f4680])).
fof(f5855,plain,(
  ( ! [X173,X171,X172] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X171),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X172),s('type.integer.int',X173)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',X173)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X171),s('type.integer.int',X172)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X171))))) ) | $spl28),
  inference(forward_demodulation,[],[f5854,f4680])).
fof(f5854,plain,(
  ( ! [X173,X171,X172] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X171),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X172),s('type.integer.int',X173)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',X173)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X171),s('type.integer.int',X172)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X171))))) ) | $spl28),
  inference(forward_demodulation,[],[f5585,f625])).
fof(f5585,plain,(
  ( ! [X173,X171,X172] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X171),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X172),s('type.integer.int',X173)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',X173)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X171),s('type.integer.int',X172)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X171))))) ) | $spl28),
  inference(superposition,[],[f840,f4680])).
fof(f5114,plain,(
  ( ! [X169,X170,X168] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',X169)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X168)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X168),s('type.integer.int',X170)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X168))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',X170))))))) ) | $spl126),
  inference(cnf_transformation,[],[f5114_D])).
fof(f5114_D,plain,(
  ( ! [X169,X170,X168] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',X169)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X168)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X168),s('type.integer.int',X170)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X168))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',X170))))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f5853,plain,(
  ( ! [X169,X170,X168] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',X169)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X168))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',X170)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X168),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X168))))) ) | $spl28),
  inference(forward_demodulation,[],[f5852,f4680])).
fof(f5852,plain,(
  ( ! [X169,X170,X168] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X168))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',X170)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X168),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',X169)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X168))))) ) | $spl28),
  inference(forward_demodulation,[],[f5851,f4680])).
fof(f5851,plain,(
  ( ! [X169,X170,X168] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',X168))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',X170)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X168),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',X169)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X168))))) ) | $spl28),
  inference(forward_demodulation,[],[f5584,f625])).
fof(f5584,plain,(
  ( ! [X169,X170,X168] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',X168))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',X170)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X168),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int',X169)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X168))))) ) | $spl28),
  inference(superposition,[],[f840,f4680])).
fof(f5844,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.ABS_1'(s('type.integer.int',sK15)))))) | $spl146),
  inference(cnf_transformation,[],[f5844_D])).
fof(f5844_D,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.ABS_1'(s('type.integer.int',sK15)))))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f5842,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.ABS_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl28),
  inference(forward_demodulation,[],[f5841,f4680])).
fof(f5841,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.ABS_1'(s('type.integer.int',sK15)))))) | $spl28),
  inference(forward_demodulation,[],[f5578,f625])).
fof(f5578,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.ABS_1'(s('type.integer.int',sK15)))))) | $spl28),
  inference(superposition,[],[f836,f4680])).
fof(f5777,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl25 | $spl28)),
  inference(subsumption_resolution,[],[f5776,f1384])).
fof(f5776,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl28),
  inference(forward_demodulation,[],[f5775,f4680])).
fof(f5775,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl28),
  inference(forward_demodulation,[],[f5774,f4680])).
fof(f5774,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl28),
  inference(forward_demodulation,[],[f5511,f622])).
fof(f5511,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl28),
  inference(superposition,[],[f619,f4680])).
fof(f3295,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl94),
  inference(cnf_transformation,[],[f3295_D])).
fof(f3295_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f4918,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl120),
  inference(cnf_transformation,[],[f4918_D])).
fof(f4918_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f5773,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl28),
  inference(forward_demodulation,[],[f5772,f626])).
fof(f5772,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl28),
  inference(forward_demodulation,[],[f5771,f4680])).
fof(f5771,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl28),
  inference(forward_demodulation,[],[f5770,f623])).
fof(f5770,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | $spl28),
  inference(forward_demodulation,[],[f5510,f625])).
fof(f5510,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | $spl28),
  inference(superposition,[],[f618,f4680])).
fof(f4919,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl121),
  inference(cnf_transformation,[],[f4919_D])).
fof(f4919_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) <=> ~$spl121),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl121])])).
fof(f5769,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | $spl144),
  inference(cnf_transformation,[],[f5769_D])).
fof(f5769_D,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.ABS_1'(s('type.integer.int',sK15)))))))) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f5767,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl28),
  inference(forward_demodulation,[],[f5766,f4680])).
fof(f5766,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | $spl28),
  inference(forward_demodulation,[],[f5508,f626])).
fof(f5508,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | $spl28),
  inference(superposition,[],[f613,f4680])).
fof(f5290,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) | $spl141),
  inference(cnf_transformation,[],[f5290_D])).
fof(f5290_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) <=> ~$spl141),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl141])])).
fof(f5292,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl142),
  inference(cnf_transformation,[],[f5292_D])).
fof(f5292_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f5174,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) | ($spl0 | $spl28)),
  inference(resolution,[],[f4643,f593])).
fof(f5286,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int',sK15)))) | $spl137),
  inference(cnf_transformation,[],[f5286_D])).
fof(f5286_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int',sK15)))) <=> ~$spl137),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl137])])).
fof(f5288,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl138),
  inference(cnf_transformation,[],[f5288_D])).
fof(f5288_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f5172,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int',sK15)))) | ($spl0 | $spl28)),
  inference(resolution,[],[f4643,f587])).
fof(f5145,plain,(
  ( ! [X229] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X229),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) | $spl28),
  inference(forward_demodulation,[],[f5144,f1554])).
fof(f5144,plain,(
  ( ! [X229] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X229),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) | $spl28),
  inference(forward_demodulation,[],[f4860,f625])).
fof(f4860,plain,(
  ( ! [X229] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X229),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) | $spl28),
  inference(superposition,[],[f845,f1554])).
fof(f5142,plain,(
  ( ! [X228] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X228)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X228))))) ) | $spl28),
  inference(forward_demodulation,[],[f5141,f1554])).
fof(f5141,plain,(
  ( ! [X228] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X228)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X228))))) ) | $spl28),
  inference(forward_demodulation,[],[f4859,f625])).
fof(f4859,plain,(
  ( ! [X228] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X228)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X228))))) ) | $spl28),
  inference(superposition,[],[f845,f1554])).
fof(f5137,plain,(
  ( ! [X225] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X225),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X225))))) ) | $spl28),
  inference(forward_demodulation,[],[f5136,f1554])).
fof(f5136,plain,(
  ( ! [X225] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X225),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X225))))) ) | $spl28),
  inference(forward_demodulation,[],[f4856,f625])).
fof(f4856,plain,(
  ( ! [X225] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X225),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X225))))) ) | $spl28),
  inference(superposition,[],[f844,f1554])).
fof(f5117,plain,(
  ( ! [X173,X171,X172] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',X173)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X171),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X172),s('type.integer.int',X173)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X171),s('type.integer.int',X172)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X171))))) ) | $spl28),
  inference(forward_demodulation,[],[f5116,f1554])).
fof(f5116,plain,(
  ( ! [X173,X171,X172] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X171),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X172),s('type.integer.int',X173)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X173)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X171),s('type.integer.int',X172)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X171))))) ) | $spl28),
  inference(forward_demodulation,[],[f5115,f1554])).
fof(f5115,plain,(
  ( ! [X173,X171,X172] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X171),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X172),s('type.integer.int',X173)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X173)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X171),s('type.integer.int',X172)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X171))))) ) | $spl28),
  inference(forward_demodulation,[],[f4834,f625])).
fof(f4834,plain,(
  ( ! [X173,X171,X172] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X171),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X172),s('type.integer.int',X173)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X173)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X171),s('type.integer.int',X172)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X171))))) ) | $spl28),
  inference(superposition,[],[f840,f1554])).
fof(f5113,plain,(
  ( ! [X169,X170,X168] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',X169)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X168))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',X170)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X168),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X168))))) ) | $spl28),
  inference(forward_demodulation,[],[f5112,f1554])).
fof(f5112,plain,(
  ( ! [X169,X170,X168] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X168))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',X170)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X168),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X169)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X168))))) ) | $spl28),
  inference(forward_demodulation,[],[f5111,f1554])).
fof(f5111,plain,(
  ( ! [X169,X170,X168] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X168))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',X170)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X168),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X169)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X168))))) ) | $spl28),
  inference(forward_demodulation,[],[f4833,f625])).
fof(f4833,plain,(
  ( ! [X169,X170,X168] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X168))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',X170)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X168),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X169)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X168))))) ) | $spl28),
  inference(superposition,[],[f840,f1554])).
fof(f5104,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl124),
  inference(cnf_transformation,[],[f5104_D])).
fof(f5104_D,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.ABS_1'(s('type.integer.int',sK14)))))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f5102,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.ABS_1'(s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl28),
  inference(forward_demodulation,[],[f5101,f1554])).
fof(f5101,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl28),
  inference(forward_demodulation,[],[f4827,f625])).
fof(f4827,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl28),
  inference(superposition,[],[f836,f1554])).
fof(f5036,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl25 | $spl28)),
  inference(subsumption_resolution,[],[f5035,f1384])).
fof(f5035,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl28),
  inference(forward_demodulation,[],[f5034,f1554])).
fof(f5034,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl28),
  inference(forward_demodulation,[],[f5033,f1554])).
fof(f5033,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl28),
  inference(forward_demodulation,[],[f4760,f622])).
fof(f4760,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl28),
  inference(superposition,[],[f619,f1554])).
fof(f5032,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl28),
  inference(forward_demodulation,[],[f5031,f626])).
fof(f5031,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl28),
  inference(forward_demodulation,[],[f5030,f1554])).
fof(f5030,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | $spl28),
  inference(forward_demodulation,[],[f5029,f623])).
fof(f5029,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | $spl28),
  inference(forward_demodulation,[],[f4759,f625])).
fof(f4759,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | $spl28),
  inference(superposition,[],[f618,f1554])).
fof(f5028,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | $spl122),
  inference(cnf_transformation,[],[f5028_D])).
fof(f5028_D,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.ABS_1'(s('type.integer.int',sK14)))))))) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f5026,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl28),
  inference(forward_demodulation,[],[f5025,f1554])).
fof(f5025,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | $spl28),
  inference(forward_demodulation,[],[f4757,f626])).
fof(f4757,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | $spl28),
  inference(superposition,[],[f613,f1554])).
fof(f2251,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl53),
  inference(cnf_transformation,[],[f2251_D])).
fof(f2251_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f4920,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl28),
  inference(forward_demodulation,[],[f4673,f626])).
fof(f4673,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl28),
  inference(superposition,[],[f848,f1554])).
fof(f848,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f575])).
fof(f575,plain,(
  ! [X0] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))),
  inference(nnf_transformation,[],[f373])).
fof(f373,plain,(
  ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_ABS_LE|48|')).
fof(f2252,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl52),
  inference(cnf_transformation,[],[f2252_D])).
fof(f2252_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f4917,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl28),
  inference(forward_demodulation,[],[f4672,f626])).
fof(f4672,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl28),
  inference(superposition,[],[f847,f1554])).
fof(f847,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(cnf_transformation,[],[f575])).
fof(f4637,plain,(
  $false | ($spl21 | $spl26)),
  inference(subsumption_resolution,[],[f4515,f1379])).
fof(f4515,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | $spl26),
  inference(resolution,[],[f1552,f597])).
fof(f597,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f461])).
fof(f4376,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl119),
  inference(cnf_transformation,[],[f4376_D])).
fof(f4376_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f1554,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl28),
  inference(cnf_transformation,[],[f1554_D])).
fof(f1554_D,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f4261,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl0),
  inference(resolution,[],[f1437,f780])).
fof(f4372,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl117),
  inference(cnf_transformation,[],[f4372_D])).
fof(f4372_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) <=> ~$spl117),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl117])])).
fof(f3155,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int',sK15)))) | $spl82),
  inference(cnf_transformation,[],[f3155_D])).
fof(f3155_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int',sK15)))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f4253,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl0),
  inference(resolution,[],[f1437,f587])).
fof(f4110,plain,(
  $false | ($spl5 | $spl20)),
  inference(subsumption_resolution,[],[f3986,f877])).
fof(f3986,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | $spl20),
  inference(resolution,[],[f1380,f781])).
fof(f1552,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | $spl26),
  inference(cnf_transformation,[],[f1552_D])).
fof(f1552_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f3744,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | $spl0),
  inference(resolution,[],[f872,f780])).
fof(f3732,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f3731,f998])).
fof(f998,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl1),
  inference(resolution,[],[f873,f779])).
fof(f3731,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | ($spl2 | $spl4)),
  inference(forward_demodulation,[],[f3730,f604])).
fof(f3730,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ($spl2 | $spl4)),
  inference(subsumption_resolution,[],[f3729,f881])).
fof(f881,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | $spl2),
  inference(resolution,[],[f874,f757])).
fof(f3729,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl4),
  inference(forward_demodulation,[],[f3605,f630])).
fof(f3605,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl4),
  inference(resolution,[],[f1261,f587])).
fof(f1261,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl4),
  inference(resolution,[],[f876,f757])).
fof(f3728,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f3727,f998])).
fof(f3727,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | ($spl2 | $spl4)),
  inference(subsumption_resolution,[],[f3603,f881])).
fof(f3603,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl4),
  inference(resolution,[],[f1261,f593])).
fof(f3439,plain,(
  ( ! [X0,X1] : (sP7('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl114),
  inference(cnf_transformation,[],[f3439_D])).
fof(f3439_D,plain,(
  ( ! [X0,X1] : (sP7('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f3438,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP7('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl1),
  inference(forward_demodulation,[],[f3430,f625])).
fof(f3430,plain,(
  ( ! [X0,X1] : (sP7('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl1),
  inference(superposition,[],[f1055,f850])).
fof(f1055,plain,(
  ( ! [X107,X108] : (sP7('const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X107,X108)) ) | $spl1),
  inference(resolution,[],[f873,f697])).
fof(f697,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f498])).
fof(f3423,plain,(
  ( ! [X0,X1] : (sP7(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl112),
  inference(cnf_transformation,[],[f3423_D])).
fof(f3423_D,plain,(
  ( ! [X0,X1] : (sP7(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f3422,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP7(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl1),
  inference(forward_demodulation,[],[f3414,f625])).
fof(f3414,plain,(
  ( ! [X0,X1] : (sP7(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl1),
  inference(superposition,[],[f1054,f850])).
fof(f1054,plain,(
  ( ! [X105,X106] : (sP7(X105,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X106)) ) | $spl1),
  inference(resolution,[],[f873,f696])).
fof(f696,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f498])).
fof(f3407,plain,(
  ( ! [X0,X1] : (sP8('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl110),
  inference(cnf_transformation,[],[f3407_D])).
fof(f3407_D,plain,(
  ( ! [X0,X1] : (sP8('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f3406,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP8('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl1),
  inference(forward_demodulation,[],[f3398,f625])).
fof(f3398,plain,(
  ( ! [X0,X1] : (sP8('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl1),
  inference(superposition,[],[f1052,f850])).
fof(f1052,plain,(
  ( ! [X101,X102] : (sP8('const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X101,X102)) ) | $spl1),
  inference(resolution,[],[f873,f693])).
fof(f693,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f495])).
fof(f3391,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl108),
  inference(cnf_transformation,[],[f3391_D])).
fof(f3391_D,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f3390,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP8(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl1),
  inference(forward_demodulation,[],[f3383,f625])).
fof(f3383,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl1),
  inference(superposition,[],[f1051,f850])).
fof(f1051,plain,(
  ( ! [X99,X100] : (sP8(X99,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X100)) ) | $spl1),
  inference(resolution,[],[f873,f692])).
fof(f692,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f495])).
fof(f3376,plain,(
  ( ! [X0,X1] : (sP4('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl106),
  inference(cnf_transformation,[],[f3376_D])).
fof(f3376_D,plain,(
  ( ! [X0,X1] : (sP4('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f3375,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP4('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl1),
  inference(forward_demodulation,[],[f3369,f625])).
fof(f3369,plain,(
  ( ! [X0,X1] : (sP4('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl1),
  inference(superposition,[],[f1039,f850])).
fof(f1039,plain,(
  ( ! [X76,X75] : (sP4('const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X75,X76)) ) | $spl1),
  inference(resolution,[],[f873,f676])).
fof(f676,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f487])).
fof(f3361,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl104),
  inference(cnf_transformation,[],[f3361_D])).
fof(f3361_D,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f3360,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP4(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1)) ) | $spl1),
  inference(forward_demodulation,[],[f3354,f625])).
fof(f3354,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl1),
  inference(superposition,[],[f1038,f850])).
fof(f1038,plain,(
  ( ! [X74,X73] : (sP4(X73,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X74)) ) | $spl1),
  inference(resolution,[],[f873,f675])).
fof(f675,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f487])).
fof(f3346,plain,(
  ( ! [X0,X1] : (sP2('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl102),
  inference(cnf_transformation,[],[f3346_D])).
fof(f3346_D,plain,(
  ( ! [X0,X1] : (sP2('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f3345,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP2('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl1),
  inference(forward_demodulation,[],[f3338,f625])).
fof(f3338,plain,(
  ( ! [X0,X1] : (sP2('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl1),
  inference(superposition,[],[f1025,f850])).
fof(f1025,plain,(
  ( ! [X47,X48] : (sP2('const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X47,X48)) ) | $spl1),
  inference(resolution,[],[f873,f659])).
fof(f659,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f480])).
fof(f3330,plain,(
  ( ! [X0,X1] : (sP0('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl100),
  inference(cnf_transformation,[],[f3330_D])).
fof(f3330_D,plain,(
  ( ! [X0,X1] : (sP0('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f3329,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP0('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1)) ) | $spl1),
  inference(forward_demodulation,[],[f3323,f625])).
fof(f3323,plain,(
  ( ! [X0,X1] : (sP0('const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)),X0,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl1),
  inference(superposition,[],[f1009,f850])).
fof(f1009,plain,(
  ( ! [X15,X16] : (sP0('const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)),X15,X16)) ) | $spl1),
  inference(resolution,[],[f873,f642])).
fof(f642,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f472])).
fof(f3315,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl98),
  inference(cnf_transformation,[],[f3315_D])).
fof(f3315_D,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f3314,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | sP0(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) ) | $spl1),
  inference(forward_demodulation,[],[f3308,f625])).
fof(f3308,plain,(
  ( ! [X0,X1] : (sP0(X0,X1,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl1),
  inference(superposition,[],[f1008,f850])).
fof(f1008,plain,(
  ( ! [X14,X13] : (sP0(X13,X14,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) ) | $spl1),
  inference(resolution,[],[f873,f640])).
fof(f640,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f472])).
fof(f3298,plain,(
  ( ! [X4,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X4))))) ) | $spl96),
  inference(cnf_transformation,[],[f3298_D])).
fof(f3298_D,plain,(
  ( ! [X4,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X4))))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f3297,plain,(
  ( ! [X4,X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) | $spl1),
  inference(forward_demodulation,[],[f3177,f625])).
fof(f3177,plain,(
  ( ! [X4,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) | $spl1),
  inference(resolution,[],[f998,f840])).
fof(f3294,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) ) | $spl92),
  inference(cnf_transformation,[],[f3294_D])).
fof(f3294_D,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f3293,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) ) | $spl1),
  inference(forward_demodulation,[],[f3176,f625])).
fof(f3176,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15))))) ) | $spl1),
  inference(resolution,[],[f998,f840])).
fof(f3292,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl90),
  inference(cnf_transformation,[],[f3292_D])).
fof(f3292_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f3168,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int',sK15)))) | $spl1),
  inference(resolution,[],[f998,f598])).
fof(f3289,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl89),
  inference(cnf_transformation,[],[f3289_D])).
fof(f3289_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f3287,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl1),
  inference(forward_demodulation,[],[f3166,f858])).
fof(f3166,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl1),
  inference(resolution,[],[f998,f592])).
fof(f3158,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) | $spl85),
  inference(cnf_transformation,[],[f3158_D])).
fof(f3158_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f3035,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))) | $spl1),
  inference(resolution,[],[f996,f593])).
fof(f996,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | $spl1),
  inference(resolution,[],[f873,f781])).
fof(f3154,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl80),
  inference(cnf_transformation,[],[f3154_D])).
fof(f3154_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f3152,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl1),
  inference(forward_demodulation,[],[f3033,f858])).
fof(f3033,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))))))),s('type.integer.int',sK15)))) | $spl1),
  inference(resolution,[],[f996,f587])).
fof(f1384,plain,(
  s('type.integer.int',sK15) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl25),
  inference(cnf_transformation,[],[f1384_D])).
fof(f1384_D,plain,(
  s('type.integer.int',sK15) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f2532,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | s('type.integer.int',sK15) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl4),
  inference(superposition,[],[f876,f612])).
fof(f612,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f464])).
fof(f464,plain,(
  ! [X0] : ((s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(nnf_transformation,[],[f280])).
fof(f280,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f173])).
fof(f173,axiom,(
  ! [X6] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))) <=> s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_NEG_SAME_EQ')).
fof(f2423,plain,(
  s('type.integer.int',sK14) != s('type.integer.int',sK15) | s('type.integer.int',sK15) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl23),
  inference(superposition,[],[f1381,f612])).
fof(f1381,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) | $spl23),
  inference(cnf_transformation,[],[f1381_D])).
fof(f1381_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f2400,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f2399,f1382])).
fof(f2399,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f2398,f626])).
fof(f2398,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f2075,f623])).
fof(f2075,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(superposition,[],[f850,f1382])).
fof(f2397,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f2396,f1382])).
fof(f2396,plain,(
  s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f2395,f629])).
fof(f2395,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))) | $spl22),
  inference(forward_demodulation,[],[f2074,f625])).
fof(f2074,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))) | $spl22),
  inference(superposition,[],[f850,f1382])).
fof(f2392,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f2391,f1382])).
fof(f2391,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f2390,f626])).
fof(f2390,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl22),
  inference(forward_demodulation,[],[f2073,f623])).
fof(f2073,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(superposition,[],[f849,f1382])).
fof(f2387,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f2386,f1382])).
fof(f2386,plain,(
  s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f2385,f629])).
fof(f2385,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))) | $spl22),
  inference(forward_demodulation,[],[f2072,f625])).
fof(f2072,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))) | $spl22),
  inference(superposition,[],[f849,f1382])).
fof(f2381,plain,(
  ( ! [X236] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X236),s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X236))))) ) | $spl22),
  inference(forward_demodulation,[],[f2380,f623])).
fof(f2380,plain,(
  ( ! [X236] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X236),s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X236))))) ) | $spl22),
  inference(forward_demodulation,[],[f2379,f607])).
fof(f2379,plain,(
  ( ! [X236] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X236),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X236))))) ) | $spl22),
  inference(forward_demodulation,[],[f2069,f625])).
fof(f2069,plain,(
  ( ! [X236] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X236),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X236))))) ) | $spl22),
  inference(superposition,[],[f845,f1382])).
fof(f2377,plain,(
  ( ! [X235] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X235))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X235))))) ) | $spl22),
  inference(forward_demodulation,[],[f2376,f623])).
fof(f2376,plain,(
  ( ! [X235] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X235)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X235))))) ) | $spl22),
  inference(forward_demodulation,[],[f2375,f605])).
fof(f2375,plain,(
  ( ! [X235] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X235)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X235))))) ) | $spl22),
  inference(forward_demodulation,[],[f2068,f625])).
fof(f2068,plain,(
  ( ! [X235] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X235)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X235))))) ) | $spl22),
  inference(superposition,[],[f845,f1382])).
fof(f2373,plain,(
  ( ! [X234] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X234),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X234))))) ) | $spl22),
  inference(forward_demodulation,[],[f2372,f1382])).
fof(f2372,plain,(
  ( ! [X234] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X234),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X234))))) ) | $spl22),
  inference(forward_demodulation,[],[f2371,f626])).
fof(f2371,plain,(
  ( ! [X234] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X234),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X234))))) ) | $spl22),
  inference(forward_demodulation,[],[f2067,f623])).
fof(f2067,plain,(
  ( ! [X234] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X234),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X234))))) ) | $spl22),
  inference(superposition,[],[f845,f1382])).
fof(f2369,plain,(
  ( ! [X233] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X233)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X233))))) ) | $spl22),
  inference(forward_demodulation,[],[f2368,f1382])).
fof(f2368,plain,(
  ( ! [X233] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X233)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X233))))) ) | $spl22),
  inference(forward_demodulation,[],[f2367,f626])).
fof(f2367,plain,(
  ( ! [X233] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X233)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X233))))) ) | $spl22),
  inference(forward_demodulation,[],[f2066,f623])).
fof(f2066,plain,(
  ( ! [X233] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X233)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X233)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(superposition,[],[f845,f1382])).
fof(f2366,plain,(
  ( ! [X232] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X232),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X232))))) ) | $spl22),
  inference(forward_demodulation,[],[f2365,f1382])).
fof(f2365,plain,(
  ( ! [X232] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X232),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X232))))) ) | $spl22),
  inference(forward_demodulation,[],[f2065,f625])).
fof(f2065,plain,(
  ( ! [X232] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X232),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X232))))) ) | $spl22),
  inference(superposition,[],[f844,f1382])).
fof(f2362,plain,(
  ( ! [X230] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X230),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X230))))) ) | $spl22),
  inference(forward_demodulation,[],[f2361,f1382])).
fof(f2361,plain,(
  ( ! [X230] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X230),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X230))))) ) | $spl22),
  inference(forward_demodulation,[],[f2360,f626])).
fof(f2360,plain,(
  ( ! [X230] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X230),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X230))))) ) | $spl22),
  inference(forward_demodulation,[],[f2063,f623])).
fof(f2063,plain,(
  ( ! [X230] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X230),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X230))))) ) | $spl22),
  inference(superposition,[],[f844,f1382])).
fof(f2358,plain,(
  ( ! [X229] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',X229)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229))))) ) | $spl22),
  inference(forward_demodulation,[],[f2062,f622])).
fof(f2062,plain,(
  ( ! [X229] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK14),s('type.integer.int',X229)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X229)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(superposition,[],[f844,f1382])).
fof(f2348,plain,(
  ( ! [X189,X187,X188] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X188),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X189),s('type.integer.int',X187)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X187)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X188),s('type.integer.int',X189)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X188))))) ) | $spl22),
  inference(forward_demodulation,[],[f2347,f1382])).
fof(f2347,plain,(
  ( ! [X189,X187,X188] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X188),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X189),s('type.integer.int',X187)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X187)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X188),s('type.integer.int',X189)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X188))))) ) | $spl22),
  inference(forward_demodulation,[],[f2346,f626])).
fof(f2346,plain,(
  ( ! [X189,X187,X188] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X188),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X189),s('type.integer.int',X187)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X187)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X188),s('type.integer.int',X189)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X188))))) ) | $spl22),
  inference(forward_demodulation,[],[f2345,f623])).
fof(f2345,plain,(
  ( ! [X189,X187,X188] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X188),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X189),s('type.integer.int',X187)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X187)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X188),s('type.integer.int',X189)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X188))))) ) | $spl22),
  inference(forward_demodulation,[],[f2046,f607])).
fof(f2046,plain,(
  ( ! [X189,X187,X188] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X187)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X188),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X189),s('type.integer.int',X187)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X188),s('type.integer.int',X189)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X188))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f2343,plain,(
  ( ! [X182,X183,X181] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X182))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X181),s('type.integer.int',X183)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X181)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X182),s('type.integer.int',X183)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X182))))) ) | $spl22),
  inference(forward_demodulation,[],[f2342,f1382])).
fof(f2342,plain,(
  ( ! [X182,X183,X181] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X182))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X181),s('type.integer.int',X183)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X181)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X182),s('type.integer.int',X183)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X182))))) ) | $spl22),
  inference(forward_demodulation,[],[f2341,f626])).
fof(f2341,plain,(
  ( ! [X182,X183,X181] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X182))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X181),s('type.integer.int',X183)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X181)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X182),s('type.integer.int',X183)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X182))))) ) | $spl22),
  inference(forward_demodulation,[],[f2340,f623])).
fof(f2340,plain,(
  ( ! [X182,X183,X181] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X182))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X181),s('type.integer.int',X183)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X181)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X182),s('type.integer.int',X183)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X182)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(forward_demodulation,[],[f2044,f605])).
fof(f2044,plain,(
  ( ! [X182,X183,X181] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X181)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X182))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X181),s('type.integer.int',X183)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X182),s('type.integer.int',X183)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X182)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f2338,plain,(
  ( ! [X180,X178,X179] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X180)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X178),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X179),s('type.integer.int',X180)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X178),s('type.integer.int',X179)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X178))))) ) | $spl22),
  inference(forward_demodulation,[],[f2337,f1382])).
fof(f2337,plain,(
  ( ! [X180,X178,X179] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X178),s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X179),s('type.integer.int',X180)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X180)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X178),s('type.integer.int',X179)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X178))))) ) | $spl22),
  inference(forward_demodulation,[],[f2336,f607])).
fof(f2336,plain,(
  ( ! [X180,X178,X179] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X178),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X179),s('type.integer.int',X180)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X180)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X178),s('type.integer.int',X179)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X178))))) ) | $spl22),
  inference(forward_demodulation,[],[f2043,f625])).
fof(f2043,plain,(
  ( ! [X180,X178,X179] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X178),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X179),s('type.integer.int',X180)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X180)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X178),s('type.integer.int',X179)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X178))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f2334,plain,(
  ( ! [X177,X175,X176] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X176)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X175))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X176),s('type.integer.int',X177)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X175),s('type.integer.int',X177)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X175))))) ) | $spl22),
  inference(forward_demodulation,[],[f2333,f1382])).
fof(f2333,plain,(
  ( ! [X177,X175,X176] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X175))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X176),s('type.integer.int',X177)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X175),s('type.integer.int',X177)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X176)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X175))))) ) | $spl22),
  inference(forward_demodulation,[],[f2332,f605])).
fof(f2332,plain,(
  ( ! [X177,X175,X176] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X175))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X176),s('type.integer.int',X177)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X175),s('type.integer.int',X177)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X176)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X175))))) ) | $spl22),
  inference(forward_demodulation,[],[f2042,f625])).
fof(f2042,plain,(
  ( ! [X177,X175,X176] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X175))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X176),s('type.integer.int',X177)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X175),s('type.integer.int',X177)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X176)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X175))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f2329,plain,(
  ( ! [X171,X169,X170] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X171)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169))))) ) | $spl22),
  inference(forward_demodulation,[],[f2328,f1382])).
fof(f2328,plain,(
  ( ! [X171,X169,X170] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X171)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169))))) ) | $spl22),
  inference(forward_demodulation,[],[f2327,f626])).
fof(f2327,plain,(
  ( ! [X171,X169,X170] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X171)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169))))) ) | $spl22),
  inference(forward_demodulation,[],[f2326,f623])).
fof(f2326,plain,(
  ( ! [X171,X169,X170] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X171)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169))))) ) | $spl22),
  inference(forward_demodulation,[],[f2040,f1382])).
fof(f2040,plain,(
  ( ! [X171,X169,X170] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X169),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X170),s('type.integer.int',X171)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X171)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X169),s('type.integer.int',X170)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X169))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f2323,plain,(
  ( ! [X165,X163,X164] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X164)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163))))) ) | $spl22),
  inference(forward_demodulation,[],[f2322,f1382])).
fof(f2322,plain,(
  ( ! [X165,X163,X164] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X164)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163))))) ) | $spl22),
  inference(forward_demodulation,[],[f2321,f626])).
fof(f2321,plain,(
  ( ! [X165,X163,X164] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X164)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163))))) ) | $spl22),
  inference(forward_demodulation,[],[f2320,f623])).
fof(f2320,plain,(
  ( ! [X165,X163,X164] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',X164)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(forward_demodulation,[],[f2038,f1382])).
fof(f2038,plain,(
  ( ! [X165,X163,X164] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X163))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X164),s('type.integer.int',X165)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X163),s('type.integer.int',X165)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',X164)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X163)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))))))) ) | $spl22),
  inference(superposition,[],[f840,f1382])).
fof(f2317,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f2316,f1382])).
fof(f2316,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(forward_demodulation,[],[f2036,f625])).
fof(f2036,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK44('const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(superposition,[],[f836,f1382])).
fof(f2255,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl22),
  inference(forward_demodulation,[],[f2254,f1382])).
fof(f2254,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(forward_demodulation,[],[f2253,f624])).
fof(f2253,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(forward_demodulation,[],[f1970,f622])).
fof(f1970,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(superposition,[],[f619,f1382])).
fof(f2246,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl22),
  inference(forward_demodulation,[],[f2245,f1382])).
fof(f2245,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(forward_demodulation,[],[f2244,f622])).
fof(f2244,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(forward_demodulation,[],[f1969,f622])).
fof(f1969,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(superposition,[],[f619,f1382])).
fof(f2238,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl22),
  inference(forward_demodulation,[],[f2237,f1382])).
fof(f2237,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl22),
  inference(forward_demodulation,[],[f2236,f626])).
fof(f2236,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl22),
  inference(forward_demodulation,[],[f2235,f623])).
fof(f2235,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(forward_demodulation,[],[f2234,f626])).
fof(f2234,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(forward_demodulation,[],[f1967,f623])).
fof(f1967,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl22),
  inference(superposition,[],[f618,f1382])).
fof(f2229,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl22),
  inference(forward_demodulation,[],[f2228,f1382])).
fof(f2228,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | $spl22),
  inference(forward_demodulation,[],[f1966,f626])).
fof(f1966,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16('const.integer.int_neg_1'(s('type.integer.int',sK15)))))))) | $spl22),
  inference(superposition,[],[f613,f1382])).
fof(f1383,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl24),
  inference(cnf_transformation,[],[f1383_D])).
fof(f1383_D,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1876,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK15)))) | s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(superposition,[],[f619,f1382])).
fof(f1874,plain,(
  s('type.integer.int',sK14) = s('type.integer.int',sK15) | s('type.integer.int',sK15) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(superposition,[],[f612,f1382])).
fof(f1873,plain,(
  s('type.integer.int',sK14) != s('type.integer.int',sK15) | s('type.integer.int',sK15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(superposition,[],[f611,f1382])).
fof(f611,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f464])).
fof(f1845,plain,(
  s('type.integer.int',sK14) = s('type.integer.int',sK15) | s('type.integer.int',sK15) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(superposition,[],[f1382,f612])).
fof(f1842,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | s('type.integer.int',sK14) != s('type.integer.int',sK15) | $spl1),
  inference(forward_demodulation,[],[f1839,f625])).
fof(f1839,plain,(
  s('type.integer.int',sK14) != s('type.integer.int',sK15) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl1),
  inference(superposition,[],[f997,f850])).
fof(f997,plain,(
  s('type.integer.int',sK15) != s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | $spl1),
  inference(resolution,[],[f873,f782])).
fof(f782,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) != s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f537])).
fof(f1836,plain,(
  ( ! [X4,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X4))))) ) | $spl38),
  inference(cnf_transformation,[],[f1836_D])).
fof(f1836_D,plain,(
  ( ! [X4,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X4))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f1835,plain,(
  ( ! [X4,X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) | $spl6),
  inference(forward_demodulation,[],[f1721,f625])).
fof(f1721,plain,(
  ( ! [X4,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) | $spl6),
  inference(resolution,[],[f993,f840])).
fof(f1832,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) ) | $spl34),
  inference(cnf_transformation,[],[f1832_D])).
fof(f1832_D,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f1831,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) ) | $spl6),
  inference(forward_demodulation,[],[f1720,f625])).
fof(f1720,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))))) ) | $spl6),
  inference(resolution,[],[f993,f840])).
fof(f1379,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | $spl21),
  inference(cnf_transformation,[],[f1379_D])).
fof(f1379_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f1712,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | $spl6),
  inference(resolution,[],[f993,f598])).
fof(f1828,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl31),
  inference(cnf_transformation,[],[f1828_D])).
fof(f1828_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f1830,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | $spl32),
  inference(cnf_transformation,[],[f1830_D])).
fof(f1830_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f1710,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14)))))) | $spl6),
  inference(resolution,[],[f993,f592])).
fof(f1440,plain,(
  s('type.integer.int',sK15) = s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | $spl0),
  inference(resolution,[],[f872,f780])).
fof(f1360,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | s('type.integer.int',sK15) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl4),
  inference(superposition,[],[f876,f612])).
fof(f1380,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | $spl20),
  inference(cnf_transformation,[],[f1380_D])).
fof(f1380_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1264,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | $spl4),
  inference(resolution,[],[f876,f780])).
fof(f1121,plain,(
  s('type.integer.int',sK14) = s('type.integer.int',sK15) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK15),s('type.integer.int',sK14)))) | $spl2),
  inference(resolution,[],[f881,f780])).
fof(f1233,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl15),
  inference(cnf_transformation,[],[f1233_D])).
fof(f1233_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f1235,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | $spl16),
  inference(cnf_transformation,[],[f1235_D])).
fof(f1235_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1115,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK15),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14)))))) | $spl2),
  inference(resolution,[],[f881,f593])).
fof(f1229,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int',sK14)))) | $spl11),
  inference(cnf_transformation,[],[f1229_D])).
fof(f1229_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int',sK14)))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f1231,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | $spl12),
  inference(cnf_transformation,[],[f1231_D])).
fof(f1231_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f1113,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK15))))),s('type.integer.int',sK14)))) | $spl2),
  inference(resolution,[],[f881,f587])).
fof(f884,plain,(
  s('type.integer.int',sK14) = s('type.integer.int',sK15) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | $spl2),
  inference(resolution,[],[f874,f780])).
fof(f872,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | $spl0),
  inference(cnf_transformation,[],[f872_D])).
fof(f872_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f581,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15))))),
  inference(cnf_transformation,[],[f451])).
fof(f451,plain,(
  (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15])],[f450])).
fof(f450,plain,(
  ? [X0,X1] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0))))))),
  inference(flattening,[],[f449])).
fof(f449,plain,(
  ? [X0,X1] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) | (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))))))),
  inference(nnf_transformation,[],[f390])).
fof(f390,plain,(
  ? [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) <~> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0))))))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ~! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))),s('type.integer.int',X7)))) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))),s('type.integer.int',X7)))) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7))),s('type.integer.int',X6))))))),
  file('thm.integer.INT_ABS_LE|split|0','thm.integer.INT_ABS_LE|split|0')).
fof(f876,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | $spl4),
  inference(cnf_transformation,[],[f876_D])).
fof(f876_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f582,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15))))),
  inference(cnf_transformation,[],[f451])).
fof(f873,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) | $spl1),
  inference(cnf_transformation,[],[f873_D])).
fof(f873_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f875,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | $spl3),
  inference(cnf_transformation,[],[f875_D])).
fof(f875_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f583,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK15))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int',sK15)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK14))),s('type.integer.int',sK15))))),
  inference(cnf_transformation,[],[f451])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 339
% Passive clauses: 3134
% Generated clauses: 6912
% Final active clauses: 225
% Final passive clauses: 838
% Input formulas: 261
% Initial clauses: 284
% 
% Selected by SInE selection: 96
% SInE iterations: 1
% 
% Duplicate literals: 65
% Trivial inequalities: 2
% Fw subsumption resolutions: 178
% Fw demodulations: 1220
% Bw demodulations: 15
% 
% Simple tautologies: 159
% Equational tautologies: 2
% Forward subsumptions: 1302
% 
% Binary resolution: 2909
% Forward superposition: 889
% Backward superposition: 1037
% 
% Split clauses: 129
% Split components: 262
% SAT solver clauses: 145
% SAT solver binary clauses: 12
% 
% Sat splits: 129
% Sat splitting refutations: 15
% 
% Memory used [KB]: 4221
% Time elapsed: 0.136 s
% ------------------------------
% ------------------------------
% Success in time 11.9 s
