Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.quotient_list
% (69373)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 74
% Passive clauses: 2010
% Generated clauses: 14574
% Final active clauses: 66
% Final passive clauses: 1864
% Input formulas: 21
% Initial clauses: 46
% 
% Duplicate literals: 1073
% Trivial inequalities: 176
% Fw subsumption resolutions: 1957
% Fw demodulations: 506
% Bw demodulations: 4
% 
% Simple tautologies: 295
% Equational tautologies: 102
% Forward subsumptions: 6458
% 
% Binary resolution: 64
% Forward superposition: 5943
% Backward superposition: 3997
% Self superposition: 363
% Equality factoring: 295
% Equality resolution: 11
% 
% Split clauses: 789
% Split components: 1588
% SAT solver clauses: 2016
% SAT solver unit clauses: 271
% SAT solver binary clauses: 610
% 
% Sat splits: 789
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2010
% TWLsolver calls for satisfiability: 77
% 
% Memory used [KB]: 7547
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quotient_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quotient_list
% SZS output start Proof for thm.quotient_list
fof(f1223,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1208,f86,f142,f88,f144,f127,f159,f177,f179,f83,f138,f89,f145,f180,f182,f84,f136,f477,f527,f528,f123,f157,f431,f432,f85,f134,f162,f172,f534,f171,f185,f183,f193,f82,f140])).
fof(f140,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK2),s(fun(sK1,sK0),sK3),s(fun(sK0,sK1),sK4)))) | $spl6),
  inference(cnf_transformation,[],[f140_D])).
fof(f140_D,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK2),s(fun(sK1,sK0),sK3),s(fun(sK0,sK1),sK4)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f82,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK2),s(fun(sK1,sK0),sK3),s(fun(sK0,sK1),sK4))))),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK2),s(fun(sK1,sK0),sK3),s(fun(sK0,sK1),sK4)))) & (p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6)))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8])],[f50])).
fof(f50,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) & ? [X5,X6,X7,X8] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X7))),s(X1,X8)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6)))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X7),s('type.list.list'(X1),X5))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X8),s('type.list.list'(X1),X6))))))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) & ? [X5,X6,X7,X8] : ((p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X7))),s(X1,X8)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6))))) & ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X7),s('type.list.list'(X1),X5))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X8),s('type.list.list'(X1),X6))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6,X7,X8] : ((p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X7))),s(X1,X8)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X7),s('type.list.list'(X1),X5))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X8),s('type.list.list'(X1),X6))))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6,X7,X8] : ((p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X7))),s(X1,X8)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),X5),s('type.list.list'(X1),X6))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X7),s('type.list.list'(X1),X5))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X8),s('type.list.list'(X1),X6))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X8),s(fun(X7,X6),X9),s(fun(X6,X7),X10)))) => ! [X11,X12,X13,X14] : ((p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X7,fun(X7,bool)),X8),s(X7,X13))),s(X7,X14)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),X11),s('type.list.list'(X7),X12))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X13),s('type.list.list'(X7),X11))),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X14),s('type.list.list'(X7),X12))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X8),s(fun(X7,X6),X9),s(fun(X6,X7),X10)))) => ! [X11,X12,X13,X14] : ((p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X7,fun(X7,bool)),X8),s(X7,X13))),s(X7,X14)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),X11),s('type.list.list'(X7),X12))))) => p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X13),s('type.list.list'(X7),X11))),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X14),s('type.list.list'(X7),X12))))))))),
  file('thm.quotient_list.CONS_RSP','thm.quotient_list.CONS_RSP')).
fof(f193,plain,(
  $false | ($spl6 | $spl11 | $spl40)),
  inference(subsumption_resolution,[],[f186,f144])).
fof(f186,plain,(
  p(s(bool,'F_0')) | ($spl6 | $spl40)),
  inference(backward_demodulation,[],[f183,f140])).
fof(f183,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl40),
  inference(cnf_transformation,[],[f183_D])).
fof(f183_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f185,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl43),
  inference(cnf_transformation,[],[f185_D])).
fof(f185_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f171,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) ) | $spl12),
  inference(equality_factoring,[],[f145])).
fof(f534,plain,(
  $false | ($spl20 | $spl43 | $spl66)),
  inference(subsumption_resolution,[],[f533,f185])).
fof(f533,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl20 | $spl66)),
  inference(backward_demodulation,[],[f528,f157])).
fof(f172,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl30),
  inference(cnf_transformation,[],[f172_D])).
fof(f172_D,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f162,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(superposition,[],[f145,f145])).
fof(f134,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6)))))) | $spl1),
  inference(cnf_transformation,[],[f134_D])).
fof(f134_D,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f85,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6))))))),
  inference(cnf_transformation,[],[f57])).
fof(f432,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl52),
  inference(cnf_transformation,[],[f432_D])).
fof(f432_D,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6))))) | s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f431,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6))))) | s(bool,'T_0') = s(bool,X9)) ) | ($spl1 | $spl8 | $spl30)),
  inference(subsumption_resolution,[],[f298,f142])).
fof(f298,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6))))) | s(bool,'T_0') = s(bool,X9)) ) | ($spl1 | $spl30)),
  inference(superposition,[],[f134,f172])).
fof(f157,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))),s('type.list.list'(X1),'const.list.NIL_0')))) ) | $spl20),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))),s('type.list.list'(X1),'const.list.NIL_0')))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f123,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))),s('type.list.list'(X1),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2,X3,X4] : s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))),s('type.list.list'(X1),'const.list.NIL_0')))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X2))),s('type.list.list'(X1),'const.list.NIL_0')))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X7,X6] : ! [X18,X19,X8] : s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X8),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X19),s('type.list.list'(X7),X18))),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.quotient_list.CONS_RSP','thm.list.LIST_REL_def|split|1')).
fof(f528,plain,(
  ( ! [X21,X19,X17,X20,X18] : (s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X17,fun(X18,bool)),X19),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,X20),s('type.list.list'(X17),X21))),s('type.list.list'(X18),'const.list.NIL_0')))) ) | $spl66),
  inference(cnf_transformation,[],[f528_D])).
fof(f528_D,plain,(
  ( ! [X21,X19,X17,X20,X18] : (s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X17,fun(X18,bool)),X19),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,X20),s('type.list.list'(X17),X21))),s('type.list.list'(X18),'const.list.NIL_0')))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f527,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6))))) | $spl64),
  inference(cnf_transformation,[],[f527_D])).
fof(f527_D,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6))))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f477,plain,(
  ( ! [X21,X19,X17,X20,X18] : (s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK7),s('type.list.list'(sK1),sK5))),s('type.list.list'(sK1),'const.list.CONS_2'(s(sK1,sK8),s('type.list.list'(sK1),sK6))))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(X17,fun(X18,bool)),X19),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,X20),s('type.list.list'(X17),X21))),s('type.list.list'(X18),'const.list.NIL_0')))) ) | ($spl20 | $spl52)),
  inference(superposition,[],[f432,f157])).
fof(f136,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6)))) | $spl2),
  inference(cnf_transformation,[],[f136_D])).
fof(f136_D,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f84,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6))))),
  inference(cnf_transformation,[],[f57])).
fof(f182,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6))) | $spl38),
  inference(cnf_transformation,[],[f182_D])).
fof(f182_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f180,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6))) | ($spl2 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f168,f144])).
fof(f168,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6))) | ($spl2 | $spl12)),
  inference(superposition,[],[f136,f145])).
fof(f145,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f89,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quotient_list.CONS_RSP',aHL_BOOL_CASES)).
fof(f138,plain,(
  p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8)))) | $spl4),
  inference(cnf_transformation,[],[f138_D])).
fof(f138_D,plain,(
  p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f83,plain,(
  p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8))))),
  inference(cnf_transformation,[],[f57])).
fof(f179,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8))) | $spl36),
  inference(cnf_transformation,[],[f179_D])).
fof(f179_D,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f177,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8))) | ($spl4 | $spl11 | $spl12)),
  inference(subsumption_resolution,[],[f167,f144])).
fof(f167,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8))) | ($spl4 | $spl12)),
  inference(superposition,[],[f138,f145])).
fof(f159,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X2)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X4),s('type.list.list'(X1),X2)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X6),s(X0,X5))),s(X1,X3))))) ) | $spl24),
  inference(cnf_transformation,[],[f159_D])).
fof(f159_D,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X2)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X4),s('type.list.list'(X1),X2)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X6),s(X0,X5))),s(X1,X3))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f127,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X2)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X4),s('type.list.list'(X1),X2)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X6),s(X0,X5))),s(X1,X3))))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X2)))))) | (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X6),s(X0,X5))),s(X1,X3)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X4),s('type.list.list'(X1),X2)))))) & (~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X6),s(X0,X5))),s(X1,X3)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X4),s('type.list.list'(X1),X2)))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X2))))))))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X2)))))) | (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X6),s(X0,X5))),s(X1,X3)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X4),s('type.list.list'(X1),X2)))))) & ((~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X6),s(X0,X5))),s(X1,X3)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X4),s('type.list.list'(X1),X2))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X2))))))))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X2)))))) <=> (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X6),s(X0,X5))),s(X1,X3)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X4),s('type.list.list'(X1),X2))))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X4))),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X2)))))) <=> (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X6),s(X0,X5))),s(X1,X3)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X6),s('type.list.list'(X0),X4),s('type.list.list'(X1),X2))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X7,X6] : ! [X20,X21,X18,X19,X8] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X8),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X19),s('type.list.list'(X7),X18))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),X20)))))) <=> (p(s(bool,happ(s(fun(X6,bool),happ(s(fun(X7,fun(X6,bool)),X8),s(X7,X19))),s(X6,X21)))) & p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X8),s('type.list.list'(X7),X18),s('type.list.list'(X6),X20))))))),
  file('thm.quotient_list.CONS_RSP','thm.list.LIST_REL_def|split|3')).
fof(f144,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f88,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quotient_list.CONS_RSP',aHL_FALSITY)).
fof(f142,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f86,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quotient_list.CONS_RSP',aHL_TRUTH)).
fof(f1208,plain,(
  $false | ($spl8 | $spl11 | $spl24 | $spl36 | $spl38 | $spl64)),
  inference(subsumption_resolution,[],[f1207,f142])).
fof(f1207,plain,(
  ~p(s(bool,'T_0')) | ($spl8 | $spl11 | $spl24 | $spl36 | $spl38 | $spl64)),
  inference(forward_demodulation,[],[f1206,f179])).
fof(f1206,plain,(
  ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8)))) | ($spl8 | $spl11 | $spl24 | $spl38 | $spl64)),
  inference(subsumption_resolution,[],[f1205,f142])).
fof(f1205,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8)))) | ($spl11 | $spl24 | $spl38 | $spl64)),
  inference(forward_demodulation,[],[f1204,f182])).
fof(f1204,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6)))) | ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8)))) | ($spl11 | $spl24 | $spl64)),
  inference(subsumption_resolution,[],[f1150,f144])).
fof(f1150,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.list.list'(sK1),sK5),s('type.list.list'(sK1),sK6)))) | ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK1,fun(sK1,bool)),sK2),s(sK1,sK7))),s(sK1,sK8)))) | ($spl24 | $spl64)),
  inference(superposition,[],[f159,f527])).
% SZS output end Proof for thm.quotient_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 35
% Passive clauses: 108
% Generated clauses: 1107
% Final active clauses: 27
% Final passive clauses: 44
% Input formulas: 21
% Initial clauses: 46
% 
% Duplicate literals: 92
% Trivial inequalities: 8
% Fw subsumption resolutions: 66
% Fw demodulations: 59
% Bw demodulations: 32
% Condensations: 94
% Global subsumptions: 8
% 
% Simple tautologies: 44
% Equational tautologies: 16
% Forward subsumptions: 388
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 6
% Forward superposition: 361
% Backward superposition: 160
% Self superposition: 29
% Equality factoring: 30
% 
% Split clauses: 24
% Split components: 58
% SAT solver clauses: 281
% SAT solver unit clauses: 66
% SAT solver binary clauses: 17
% SAT solver learnt clauses: 17
% 
% Sat splits: 24
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 248
% TWLsolver calls for satisfiability: 122
% 
% Memory used [KB]: 1918
% Time elapsed: 0.040 s
% ------------------------------
% ------------------------------
% Success in time 0.656 s
