Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% (90817)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 200
% Passive clauses: 4447
% Generated clauses: 19203
% Final active clauses: 78
% Final passive clauses: 1010
% Input formulas: 28
% Initial clauses: 44
% 
% Duplicate literals: 58
% Trivial inequalities: 63
% Fw subsumption resolutions: 65
% Fw demodulations: 7659
% Bw demodulations: 28
% 
% Simple tautologies: 70
% Equational tautologies: 25
% Forward subsumptions: 7105
% Fw demodulations to eq. taut.: 85
% 
% Binary resolution: 16
% Forward superposition: 6153
% Backward superposition: 4740
% Self superposition: 133
% Equality factoring: 26
% Equality resolution: 76
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 24
% SAT solver unit clauses: 7
% SAT solver binary clauses: 13
% 
% Sat splits: 7
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 24
% TWLsolver calls for satisfiability: 12
% 
% Memory used [KB]: 12920
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numeral
% (90826)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 183
% Passive clauses: 1543
% Generated clauses: 18709
% Final active clauses: 119
% Final passive clauses: 1145
% Input formulas: 28
% Initial clauses: 44
% 
% Duplicate literals: 110
% Trivial inequalities: 140
% Fw subsumption resolutions: 186
% Fw demodulations: 6709
% Bw demodulations: 191
% Condensations: 91
% Global subsumptions: 4
% 
% Simple tautologies: 87
% Equational tautologies: 22
% Forward subsumptions: 6599
% Fw demodulations to eq. taut.: 90
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 16
% Forward superposition: 4700
% Backward superposition: 3546
% Self superposition: 112
% Equality factoring: 28
% Equality resolution: 55
% 
% Split clauses: 23
% Split components: 51
% SAT solver clauses: 2660
% SAT solver unit clauses: 61
% SAT solver binary clauses: 42
% SAT solver learnt clauses: 11
% SAT solver learnt literals: 7
% 
% Sat splits: 23
% Sat splitting refutations: 89
% 
% TWLsolver clauses: 2641
% TWLsolver calls for satisfiability: 281
% 
% Memory used [KB]: 17142
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f5343,plain,(
  $false),
  inference(subsumption_resolution,[],[f5342,f550])).
fof(f550,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f549,f385])).
fof(f385,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f369,f86])).
fof(f86,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_add|split|8','thm.numeral.iiSUC')).
fof(f369,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f116,f347])).
fof(f347,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f325,f126])).
fof(f126,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f87,f81])).
fof(f81,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.numeral_add|split|8','thm.arithmetic.ALT_ZERO')).
fof(f87,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.numeral.numeral_add|split|8','thm.arithmetic.BIT|49|')).
fof(f325,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f116,f124])).
fof(f124,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f84,f81])).
fof(f84,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_add|split|8','thm.arithmetic.ADD_|48|')).
fof(f116,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_add|split|8','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f549,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f548,f401])).
fof(f401,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f128,f115])).
fof(f115,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.numeral.numeral_add|split|8','thm.arithmetic.ADD_SYM')).
fof(f128,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f127,f81])).
fof(f127,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f88,f86])).
fof(f88,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  file('thm.numeral.numeral_add|split|8','thm.arithmetic.BIT2')).
fof(f548,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f547,f86])).
fof(f547,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(backward_demodulation,[],[f546,f495])).
fof(f495,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f130,f446])).
fof(f446,plain,(
  s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f425,f86])).
fof(f425,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f368,f119])).
fof(f119,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X7,X6] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.numeral.numeral_add|split|8','thm.prim_rec.INV_SUC_EQ')).
fof(f368,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f347,f125])).
fof(f125,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f85,f81])).
fof(f85,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))),
  file('thm.numeral.numeral_add|split|8','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f130,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f117,f116])).
fof(f117,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_add|split|8','thm.arithmetic.ADD_CLAUSES|split|2')).
fof(f546,plain,(
  ( ! [X6] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X6)))) )),
  inference(forward_demodulation,[],[f498,f125])).
fof(f498,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f130,f368])).
fof(f5342,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f5340,f86])).
fof(f5340,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))))),
  inference(backward_demodulation,[],[f5335,f2196])).
fof(f2196,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f2195,f550])).
fof(f2195,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(unit_resulting_resolution,[],[f2070,f118])).
fof(f118,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f76])).
fof(f2070,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))),
  inference(forward_demodulation,[],[f2061,f550])).
fof(f2061,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(superposition,[],[f1584,f116])).
fof(f1584,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f1583,f86])).
fof(f1583,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f1582,f116])).
fof(f1582,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f1581,f971])).
fof(f971,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f944,f568])).
fof(f568,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X7)))))))) )),
  inference(forward_demodulation,[],[f567,f178])).
fof(f178,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f86,f86])).
fof(f567,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) )),
  inference(forward_demodulation,[],[f516,f86])).
fof(f516,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))))) )),
  inference(superposition,[],[f130,f347])).
fof(f944,plain,(
  ( ! [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f116,f549])).
fof(f1581,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(unit_resulting_resolution,[],[f1531,f118])).
fof(f1531,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))),
  inference(forward_demodulation,[],[f1530,f973])).
fof(f973,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))) )),
  inference(backward_demodulation,[],[f971,f688])).
fof(f688,plain,(
  ( ! [X8] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f86,f550])).
fof(f1530,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))),
  inference(forward_demodulation,[],[f1529,f550])).
fof(f1529,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1)))))))))),
  inference(forward_demodulation,[],[f1476,f1449])).
fof(f1449,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X4))))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f1412,f904])).
fof(f904,plain,(
  ( ! [X5] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f903,f86])).
fof(f903,plain,(
  ( ! [X5] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f872,f550])).
fof(f872,plain,(
  ( ! [X5] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f384,f130])).
fof(f384,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(backward_demodulation,[],[f368,f325])).
fof(f1412,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f904,f121])).
fof(f121,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X6,X8] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8)))),
  file('thm.numeral.numeral_add|split|8','thm.arithmetic.ADD_ASSOC')).
fof(f1476,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))))) != s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))),
  inference(unit_resulting_resolution,[],[f129,f224])).
fof(f224,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))) != s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) | s('type.num.num',X1) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(superposition,[],[f118,f86])).
fof(f129,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))),
  inference(backward_demodulation,[],[f116,f78])).
fof(f78,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f58])).
fof(f58,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))),
  inference(ennf_transformation,[],[f30])).
fof(f30,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))))),
  file('thm.numeral.numeral_add|split|8','thm.numeral.numeral_add|split|8')).
fof(f5335,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(forward_demodulation,[],[f5334,f116])).
fof(f5334,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9)))))) )),
  inference(forward_demodulation,[],[f5333,f971])).
fof(f5333,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9)))))))) )),
  inference(forward_demodulation,[],[f5332,f4823])).
fof(f4823,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f812,f513])).
fof(f513,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f130,f115])).
fof(f812,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))),s('type.num.num',X9))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))))) )),
  inference(forward_demodulation,[],[f753,f130])).
fof(f753,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))),s('type.num.num',X9))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X9)))))) )),
  inference(superposition,[],[f121,f347])).
fof(f5332,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))))) )),
  inference(forward_demodulation,[],[f5195,f116])).
fof(f5195,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X9))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))),s('type.num.num',X8)))))))) )),
  inference(superposition,[],[f116,f4416])).
fof(f4416,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num',X9)))))) )),
  inference(backward_demodulation,[],[f4415,f1450])).
fof(f1450,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X10)))))))))) )),
  inference(backward_demodulation,[],[f1449,f819])).
fof(f819,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)))))))))) )),
  inference(forward_demodulation,[],[f818,f562])).
fof(f562,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(backward_demodulation,[],[f553,f548])).
fof(f553,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(backward_demodulation,[],[f550,f446])).
fof(f818,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)))))))))) )),
  inference(forward_demodulation,[],[f776,f115])).
fof(f776,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f121,f556])).
fof(f556,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(backward_demodulation,[],[f553,f128])).
fof(f4415,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f4328,f1463])).
fof(f1463,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(forward_demodulation,[],[f1415,f562])).
fof(f1415,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f121,f904])).
fof(f4328,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X2))),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f811,f115])).
fof(f811,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.numeral.iiSUC_1'(s('type.num.num',X7)))))))) )),
  inference(forward_demodulation,[],[f810,f562])).
fof(f810,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X7)))))))) )),
  inference(forward_demodulation,[],[f752,f121])).
fof(f752,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7)))))) )),
  inference(superposition,[],[f121,f556])).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 89
% Passive clauses: 568
% Generated clauses: 5249
% Final active clauses: 69
% Final passive clauses: 422
% Input formulas: 28
% Initial clauses: 44
% 
% Duplicate literals: 40
% Trivial inequalities: 7
% Fw subsumption resolutions: 9
% Fw demodulations: 1648
% Bw demodulations: 77
% Condensations: 32
% 
% Simple tautologies: 32
% Equational tautologies: 27
% Forward subsumptions: 2706
% Fw demodulations to eq. taut.: 108
% 
% Unit resulting resolution: 163
% Forward superposition: 1627
% Backward superposition: 1481
% Self superposition: 88
% Equality factoring: 26
% Equality resolution: 6
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 572
% SAT solver unit clauses: 289
% SAT solver binary clauses: 270
% 
% Sat splits: 1
% 
% Memory used [KB]: 6396
% Time elapsed: 0.212 s
% ------------------------------
% ------------------------------
% Success in time 1.529 s
