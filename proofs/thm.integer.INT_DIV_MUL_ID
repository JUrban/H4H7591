Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f16442,plain,(
  $false),
  inference(subsumption_resolution,[],[f16430,f297])).
fof(f297,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))),s('type.integer.int',sK13)))),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) & s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))),s('type.integer.int',sK13)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f142])).
fof(f142,plain,(
  ? [X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))),
  inference(flattening,[],[f141])).
fof(f141,plain,(
  ? [X0,X1] : ((s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))),
  inference(ennf_transformation,[],[f60])).
fof(f60,plain,(
  ~! [X0,X1] : ((s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ~! [X0,X1] : ((~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ((~s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) => s('type.integer.int',X6) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ((~s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) => s('type.integer.int',X6) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X7))))),
  file('thm.integer.INT_DIV_MUL_ID','thm.integer.INT_DIV_MUL_ID')).
fof(f16430,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))),s('type.integer.int',sK13)))),
  inference(superposition,[],[f4910,f305])).
fof(f305,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X13] : s('type.integer.int',X13) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.integer.INT_DIV_MUL_ID','thm.integer.INT_ADD_RID')).
fof(f4910,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(subsumption_resolution,[],[f4906,f295])).
fof(f295,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f185])).
fof(f4906,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f318,f296])).
fof(f296,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))),
  inference(cnf_transformation,[],[f185])).
fof(f318,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f190])).
fof(f190,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ((~p(s(bool,sK14(X1,X0))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,sK14(X1,X0)))) & ((~p(s(bool,sK15(X1,X0))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))) | p(s(bool,sK15(X1,X0)))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,sK14(X1,X0)),s(bool,sK15(X1,X0)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15])],[f189])).
fof(f189,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ? [X2] : ((~p(s(bool,X2)) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X2))) & ? [X3] : ((~p(s(bool,X3)) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))) | p(s(bool,X3))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3))))))))),
  inference(flattening,[],[f188])).
fof(f188,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ? [X2] : (((~p(s(bool,X2)) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,X2)))) & ? [X3] : (((~p(s(bool,X3)) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))) | p(s(bool,X3)))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3))))))))),
  inference(nnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ? [X2] : ((p(s(bool,X2)) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X3] : ((p(s(bool,X3)) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3))))))))),
  inference(ennf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ? [X2] : ((p(s(bool,X2)) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X3] : ((p(s(bool,X3)) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3))))))))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ? [X2] : ((p(s(bool,X2)) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X3] : ((p(s(bool,X3)) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3))))))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X7] : (~s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X6] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7))))) & ? [X21] : ((p(s(bool,X21)) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X22] : ((p(s(bool,X22)) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X7)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X21),s(bool,X22))))))))),
  file('thm.integer.INT_DIV_MUL_ID','thm.integer.INT_DIVISION')).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 580
% Passive clauses: 6819
% Generated clauses: 15954
% Final active clauses: 575
% Final passive clauses: 5985
% Input formulas: 57
% Initial clauses: 235
% 
% Duplicate literals: 415
% Trivial inequalities: 71
% Fw subsumption resolutions: 1299
% Fw demodulations: 241
% Bw demodulations: 5
% 
% Simple tautologies: 243
% Equational tautologies: 56
% Forward subsumptions: 6520
% 
% Binary resolution: 7548
% Factoring: 931
% Forward superposition: 1753
% Backward superposition: 3252
% Self superposition: 34
% Equality factoring: 26
% Equality resolution: 17
% 
% Split clauses: 299
% Split components: 600
% SAT solver clauses: 541
% SAT solver unit clauses: 11
% SAT solver binary clauses: 123
% 
% Sat splits: 299
% 
% TWLsolver clauses: 541
% TWLsolver calls for satisfiability: 264
% 
% Memory used [KB]: 8315
% Time elapsed: 0.451 s
% ------------------------------
% ------------------------------
% Success in time 0.455 s
