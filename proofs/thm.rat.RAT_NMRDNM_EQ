Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rat
% (79225)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 167
% Passive clauses: 1519
% Generated clauses: 25010
% Final active clauses: 141
% Final passive clauses: 1180
% Input formulas: 21
% Initial clauses: 29
% 
% Duplicate literals: 1282
% Trivial inequalities: 340
% Fw subsumption resolutions: 4121
% Fw demodulations: 3005
% Bw demodulations: 21
% 
% Simple tautologies: 514
% Equational tautologies: 65
% Forward subsumptions: 11928
% 
% Binary resolution: 190
% Forward superposition: 6140
% Backward superposition: 9148
% Self superposition: 264
% Equality factoring: 187
% Equality resolution: 37
% 
% Split clauses: 1389
% Split components: 2883
% SAT solver clauses: 2205
% SAT solver unit clauses: 57
% SAT solver binary clauses: 307
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 1389
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2203
% TWLsolver calls for satisfiability: 172
% 
% Memory used [KB]: 10490
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f2158,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1277,f1283,f1259,f1269,f66,f102,f1248,f1250,f62,f97,f139,f148,f149,f67,f103,f158,f63,f99,f64,f100,f199,f203,f61,f95,f69,f104,f663,f676,f73,f106,f78,f108,f1008,f1010,f58,f91,f549,f556,f545,f546,f82,f113,f933,f934,f65,f101,f80,f111,f686,f687,f757,f758,f79,f109,f1019,f1040,f883,f884,f81,f110,f683,f680,f174,f177,f167,f171,f1672,f1674,f1616,f1618,f56,f88,f86,f2052,f2054,f2142,f684,f685,f166,f169,f755,f756,f1257,f1267,f60,f93,f754,f748,f1284,f1285,f1258,f1268,f1571,f1573,f1597,f83,f112,f116,f118,f57,f89,f87])).
fof(f87,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) | $spl1),
  inference(cnf_transformation,[],[f87_D])).
fof(f87_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f89,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) | $spl3),
  inference(cnf_transformation,[],[f89_D])).
fof(f89_D,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f57,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0)))))))))),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0)))) & (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f46])).
fof(f46,plain,(
  ? [X0] : ((s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))) & (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ? [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))))) <~> s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))))) <=> s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))))))))) <=> s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))))))))) <=> s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.rat.RAT_NMRDNM_EQ')).
fof(f118,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))) | $spl45),
  inference(cnf_transformation,[],[f118_D])).
fof(f118_D,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f116,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))) | ($spl1 | $spl2 | $spl6)),
  inference(forward_demodulation,[],[f115,f93])).
fof(f115,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f87,f88])).
fof(f112,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) ) | $spl38),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f83,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : ((s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) & (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6,X13] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X6))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X13))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac',X13)))))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.rat.RAT_ABS_EQUIV')).
fof(f1597,plain,(
  $false | ($spl38 | $spl45 | $spl280)),
  inference(subsumption_resolution,[],[f1583,f118])).
fof(f1583,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))) | ($spl38 | $spl280)),
  inference(resolution,[],[f1573,f112])).
fof(f1573,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) | $spl280),
  inference(cnf_transformation,[],[f1573_D])).
fof(f1573_D,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f1571,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) | ($spl2 | $spl268)),
  inference(forward_demodulation,[],[f1570,f88])).
fof(f1570,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) | ($spl2 | $spl268)),
  inference(trivial_inequality_removal,[],[f1560])).
fof(f1560,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) | ($spl2 | $spl268)),
  inference(superposition,[],[f1285,f88])).
fof(f1268,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int',X0)))) ) | $spl248),
  inference(cnf_transformation,[],[f1268_D])).
fof(f1268_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int',X0)))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f1258,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int',X0)))) ) | ($spl16 | $spl232)),
  inference(backward_demodulation,[],[f1250,f101])).
fof(f1285,plain,(
  ( ! [X4] : (s('type.integer.int',X4) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) | $spl268),
  inference(cnf_transformation,[],[f1285_D])).
fof(f1285_D,plain,(
  ( ! [X4] : (s('type.integer.int',X4) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f1284,plain,(
  ( ! [X4] : (s('type.integer.int',X4) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) | ($spl248 | $spl266)),
  inference(forward_demodulation,[],[f1283,f1268])).
fof(f748,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) ) | $spl126),
  inference(cnf_transformation,[],[f748_D])).
fof(f748_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f754,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) ) | ($spl4 | $spl32 | $spl60)),
  inference(subsumption_resolution,[],[f734,f91])).
fof(f734,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) ) | ($spl32 | $spl60)),
  inference(superposition,[],[f109,f177])).
fof(f93,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl6),
  inference(cnf_transformation,[],[f93_D])).
fof(f93_D,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f60,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f21])).
fof(f21,axiom,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.rat.rat_|49|')).
fof(f1267,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))))) | $spl246),
  inference(cnf_transformation,[],[f1267_D])).
fof(f1267_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))))) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f1257,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))))) | ($spl10 | $spl232)),
  inference(backward_demodulation,[],[f1250,f97])).
fof(f756,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) ) | $spl128),
  inference(cnf_transformation,[],[f756_D])).
fof(f756_D,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f755,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) ) | ($spl4 | $spl32 | $spl56)),
  inference(subsumption_resolution,[],[f735,f91])).
fof(f735,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) ) | ($spl32 | $spl56)),
  inference(superposition,[],[f109,f169])).
fof(f169,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) | $spl56),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f166,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) | ($spl14 | $spl22)),
  inference(resolution,[],[f100,f104])).
fof(f685,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) ) | $spl108),
  inference(cnf_transformation,[],[f685_D])).
fof(f685_D,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f684,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) ) | ($spl4 | $spl30 | $spl56)),
  inference(subsumption_resolution,[],[f668,f91])).
fof(f668,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) ) | ($spl30 | $spl56)),
  inference(superposition,[],[f108,f169])).
fof(f2142,plain,(
  $false | ($spl3 | $spl108 | $spl128 | $spl158 | $spl326)),
  inference(subsumption_resolution,[],[f2141,f89])).
fof(f2141,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) | ($spl108 | $spl128 | $spl158 | $spl326)),
  inference(forward_demodulation,[],[f2140,f756])).
fof(f2140,plain,(
  s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) | ($spl108 | $spl158 | $spl326)),
  inference(forward_demodulation,[],[f2127,f685])).
fof(f2127,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) | ($spl158 | $spl326)),
  inference(resolution,[],[f2054,f934])).
fof(f2054,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0)))))))))) | $spl326),
  inference(cnf_transformation,[],[f2054_D])).
fof(f2054_D,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0)))))))))) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f2052,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0)))))))))) | ($spl246 | $spl312)),
  inference(forward_demodulation,[],[f2051,f1267])).
fof(f2051,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0)))))))))) | ($spl246 | $spl312)),
  inference(trivial_inequality_removal,[],[f2045])).
fof(f2045,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0)))))))))) | ($spl246 | $spl312)),
  inference(superposition,[],[f1674,f1267])).
fof(f86,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) | $spl0),
  inference(cnf_transformation,[],[f86_D])).
fof(f86_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f88,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) | $spl2),
  inference(cnf_transformation,[],[f88_D])).
fof(f88_D,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f56,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0)))))))))),
  inference(cnf_transformation,[],[f47])).
fof(f1618,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) | $spl286),
  inference(cnf_transformation,[],[f1618_D])).
fof(f1618_D,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f1616,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))) | ($spl0 | $spl6)),
  inference(forward_demodulation,[],[f86,f93])).
fof(f1674,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))))) ) | $spl312),
  inference(cnf_transformation,[],[f1674_D])).
fof(f1674_D,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))))) ) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f1672,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0))))))))))) ) | ($spl40 | $spl286)),
  inference(superposition,[],[f113,f1618])).
fof(f171,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))) | $spl58),
  inference(cnf_transformation,[],[f171_D])).
fof(f171_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f167,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))) | ($spl2 | $spl14)),
  inference(superposition,[],[f100,f88])).
fof(f177,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | $spl60),
  inference(cnf_transformation,[],[f177_D])).
fof(f177_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f174,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | ($spl22 | $spl58)),
  inference(resolution,[],[f171,f104])).
fof(f680,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) ) | $spl106),
  inference(cnf_transformation,[],[f680_D])).
fof(f680_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f683,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) ) | ($spl4 | $spl30 | $spl60)),
  inference(subsumption_resolution,[],[f667,f91])).
fof(f667,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0)))))))))) ) | ($spl30 | $spl60)),
  inference(superposition,[],[f108,f177])).
fof(f110,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) ) | $spl34),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f81,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) & (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6,X13] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac',X13)))) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X13))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))))))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.rat.rat_equiv_def')).
fof(f884,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X2))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X2),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) | $spl138),
  inference(cnf_transformation,[],[f884_D])).
fof(f884_D,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X2))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X2),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f883,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X2))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X2),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) | ($spl34 | $spl106 | $spl126)),
  inference(forward_demodulation,[],[f870,f748])).
fof(f870,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X2))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X2),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) | ($spl34 | $spl106)),
  inference(superposition,[],[f110,f680])).
fof(f1040,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) | $spl194),
  inference(cnf_transformation,[],[f1040_D])).
fof(f1040_D,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f1019,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) | ($spl138 | $spl178)),
  inference(superposition,[],[f884,f1010])).
fof(f109,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) ) | $spl32),
  inference(cnf_transformation,[],[f109_D])).
fof(f109_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f79,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X11,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) => s('type.integer.int',X11) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int',X12))))))))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.frac.NMR')).
fof(f758,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl130),
  inference(cnf_transformation,[],[f758_D])).
fof(f758_D,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f757,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | ($spl4 | $spl32 | $spl68)),
  inference(subsumption_resolution,[],[f736,f91])).
fof(f736,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s('type.integer.int',X3) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | ($spl32 | $spl68)),
  inference(superposition,[],[f109,f203])).
fof(f687,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl110),
  inference(cnf_transformation,[],[f687_D])).
fof(f687_D,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f686,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | ($spl4 | $spl30 | $spl68)),
  inference(subsumption_resolution,[],[f669,f91])).
fof(f669,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | ($spl30 | $spl68)),
  inference(superposition,[],[f108,f203])).
fof(f111,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) | $spl36),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f80,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f101,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X0)))) ) | $spl16),
  inference(cnf_transformation,[],[f101_D])).
fof(f101_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X0)))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f65,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X8] : s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X8)))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.integer.INT_MUL_LID')).
fof(f934,plain,(
  ( ! [X0] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac',X0)))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))) ) | $spl158),
  inference(cnf_transformation,[],[f934_D])).
fof(f934_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac',X0)))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f933,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac',X0))))) ) | ($spl10 | $spl16 | $spl18 | $spl36 | $spl110 | $spl130)),
  inference(forward_demodulation,[],[f932,f102])).
fof(f932,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac',X0))))) ) | ($spl10 | $spl16 | $spl36 | $spl110 | $spl130)),
  inference(forward_demodulation,[],[f931,f101])).
fof(f931,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac',X0))))) ) | ($spl10 | $spl36 | $spl110 | $spl130)),
  inference(forward_demodulation,[],[f930,f687])).
fof(f930,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac',X0))))) ) | ($spl10 | $spl36 | $spl130)),
  inference(forward_demodulation,[],[f918,f758])).
fof(f918,plain,(
  ( ! [X0] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac',X0)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) | ($spl10 | $spl36)),
  inference(superposition,[],[f111,f97])).
fof(f113,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) ) | $spl40),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f82,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) )),
  inference(cnf_transformation,[],[f54])).
fof(f546,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X0))))) ) | $spl84),
  inference(cnf_transformation,[],[f546_D])).
fof(f546_D,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X0))))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f545,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X0))))) ) | $spl40),
  inference(equality_resolution,[],[f113])).
fof(f556,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X3),s('type.frac.frac',X3)))) ) | $spl88),
  inference(cnf_transformation,[],[f556_D])).
fof(f556_D,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X3),s('type.frac.frac',X3)))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f549,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X3),s('type.frac.frac',X3)))) ) | ($spl22 | $spl84)),
  inference(resolution,[],[f546,f104])).
fof(f91,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f91_D])).
fof(f91_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f58,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rat.RAT_NMRDNM_EQ',aHL_TRUTH)).
fof(f1010,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | $spl178),
  inference(cnf_transformation,[],[f1010_D])).
fof(f1010_D,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f1008,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl4 | $spl88 | $spl158)),
  inference(subsumption_resolution,[],[f995,f91])).
fof(f995,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl88 | $spl158)),
  inference(superposition,[],[f934,f556])).
fof(f108,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) ) | $spl30),
  inference(cnf_transformation,[],[f108_D])).
fof(f108_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f78,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X11,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) => s('type.integer.int',X12) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int',X12))))))))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.frac.DNM')).
fof(f106,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl26),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f73,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X9] : (s(bool,'F_0') = s(bool,X9) <=> ~p(s(bool,X9)))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.bool.EQ_CLAUSES|split|2')).
fof(f676,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int',X3))))))) | s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) ) | $spl104),
  inference(cnf_transformation,[],[f676_D])).
fof(f676_D,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int',X3))))))) | s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f663,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int',X3))))))) | s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) ) | ($spl26 | $spl30)),
  inference(resolution,[],[f108,f106])).
fof(f104,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl22),
  inference(cnf_transformation,[],[f104_D])).
fof(f104_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f69,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.bool.EQ_CLAUSES|split|1')).
fof(f95,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl8),
  inference(cnf_transformation,[],[f95_D])).
fof(f95_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f61,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(cnf_transformation,[],[f19])).
fof(f19,axiom,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.integer.INT_LT_|48||49|')).
fof(f203,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl68),
  inference(cnf_transformation,[],[f203_D])).
fof(f203_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f199,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl8 | $spl22)),
  inference(resolution,[],[f95,f104])).
fof(f100,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) ) | $spl14),
  inference(cnf_transformation,[],[f100_D])).
fof(f100_D,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f64,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X10] : p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.frac.FRAC_DNMPOS')).
fof(f99,plain,(
  ~p(s(bool,'F_0')) | $spl13),
  inference(cnf_transformation,[],[f99_D])).
fof(f99_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f63,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rat.RAT_NMRDNM_EQ',aHL_FALSITY)).
fof(f158,plain,(
  $false | ($spl13 | $spl14 | $spl54)),
  inference(subsumption_resolution,[],[f152,f99])).
fof(f152,plain,(
  p(s(bool,'F_0')) | ($spl14 | $spl54)),
  inference(backward_demodulation,[],[f149,f100])).
fof(f103,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl20),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f67,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rat.RAT_NMRDNM_EQ',aHL_BOOL_CASES)).
fof(f149,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl54),
  inference(cnf_transformation,[],[f149_D])).
fof(f149_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f148,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl53),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f139,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) ) | $spl20),
  inference(equality_factoring,[],[f103])).
fof(f97,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl10),
  inference(cnf_transformation,[],[f97_D])).
fof(f97_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f62,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f13])).
fof(f13,axiom,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.frac.frac_|49|_def')).
fof(f1250,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl232),
  inference(cnf_transformation,[],[f1250_D])).
fof(f1250_D,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f1248,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl10 | $spl53 | $spl68 | $spl104 | $spl178)),
  inference(subsumption_resolution,[],[f1247,f148])).
fof(f1247,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl10 | $spl68 | $spl104 | $spl178)),
  inference(forward_demodulation,[],[f1246,f203])).
fof(f1246,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl10 | $spl104 | $spl178)),
  inference(forward_demodulation,[],[f1223,f1010])).
fof(f1223,plain,(
  s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl10 | $spl104)),
  inference(superposition,[],[f676,f97])).
fof(f102,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl18),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f66,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X8] : s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.rat.RAT_NMRDNM_EQ','thm.integer.INT_MUL_RID')).
fof(f1269,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0')))))) ) | $spl250),
  inference(cnf_transformation,[],[f1269_D])).
fof(f1269_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0')))))) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f1259,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0')))))) ) | ($spl18 | $spl232)),
  inference(backward_demodulation,[],[f1250,f102])).
fof(f1283,plain,(
  ( ! [X4] : (s('type.integer.int',X4) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) | $spl266),
  inference(cnf_transformation,[],[f1283_D])).
fof(f1283_D,plain,(
  ( ! [X4] : (s('type.integer.int',X4) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f1277,plain,(
  ( ! [X4] : (s('type.integer.int',X4) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))))))))))) ) | ($spl194 | $spl250)),
  inference(backward_demodulation,[],[f1269,f1040])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 87
% Passive clauses: 171
% Generated clauses: 2093
% Final active clauses: 60
% Final passive clauses: 65
% Input formulas: 21
% Initial clauses: 29
% 
% Duplicate literals: 117
% Trivial inequalities: 58
% Fw subsumption resolutions: 132
% Fw demodulations: 255
% Bw demodulations: 33
% Condensations: 146
% 
% Simple tautologies: 63
% Equational tautologies: 19
% Forward subsumptions: 834
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 69
% Forward superposition: 510
% Backward superposition: 441
% Self superposition: 35
% Equality factoring: 30
% Equality resolution: 19
% 
% Split clauses: 17
% Split components: 39
% SAT solver clauses: 306
% SAT solver unit clauses: 37
% SAT solver binary clauses: 36
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 3
% 
% Sat splits: 17
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 303
% TWLsolver calls for satisfiability: 153
% 
% Memory used [KB]: 2430
% Time elapsed: 0.056 s
% ------------------------------
% ------------------------------
% Success in time 0.67 s
