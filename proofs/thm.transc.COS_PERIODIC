Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f284,plain,(
  $false),
  inference(subsumption_resolution,[],[f283,f36])).
fof(f36,plain,(
  ( ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0] : s('type.realax.real',X0) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : s('type.realax.real',X6) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6)))))),
  file('thm.transc.COS_PERIODIC','thm.real.REAL_NEGNEG')).
fof(f283,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0)))))))),
  inference(forward_demodulation,[],[f274,f37])).
fof(f37,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0')))))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0] : s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.transc.pi_0')))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real','const.transc.pi_0')))))),
  file('thm.transc.COS_PERIODIC','thm.transc.COS_PERIODIC_PI')).
fof(f274,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real','const.transc.pi_0')))))))),
  inference(superposition,[],[f258,f241])).
fof(f241,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real','const.transc.pi_0')))))))) )),
  inference(superposition,[],[f37,f45])).
fof(f45,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X2)))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X2)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X8,X9] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X8),s('type.realax.real',X9))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X8))),s('type.realax.real',X9)))),
  file('thm.transc.COS_PERIODIC','thm.realax.REAL_ADD_ASSOC')).
fof(f258,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.transc.pi_0')))))))),
  inference(forward_demodulation,[],[f32,f38])).
fof(f38,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real',X6))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X6)))),
  file('thm.transc.COS_PERIODIC','thm.real.REAL_DOUBLE')).
fof(f32,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.transc.pi_0')))))))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',sK0),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.transc.pi_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f26])).
fof(f26,plain,(
  ? [X0] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))) != s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.transc.pi_0')))))))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ~! [X0] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.transc.pi_0')))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.transc.pi_0')))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X6))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X6),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.transc.pi_0')))))))),
  file('thm.transc.COS_PERIODIC','thm.transc.COS_PERIODIC')).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 16
% Passive clauses: 43
% Generated clauses: 240
% Final active clauses: 14
% Final passive clauses: 20
% Input formulas: 12
% Initial clauses: 14
% 
% Duplicate literals: 37
% Trivial inequalities: 3
% Fw subsumption resolutions: 1
% Fw demodulations: 6
% 
% Simple tautologies: 18
% Equational tautologies: 15
% Forward subsumptions: 111
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 4
% Forward superposition: 66
% Backward superposition: 47
% Self superposition: 34
% Equality factoring: 26
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 895
% Time elapsed: 0.017 s
% ------------------------------
% ------------------------------
% Success in time 0.018 s
