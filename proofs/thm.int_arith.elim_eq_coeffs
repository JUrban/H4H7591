Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.int_arith
% (64674)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 701
% Passive clauses: 7606
% Generated clauses: 19876
% Final active clauses: 692
% Final passive clauses: 6524
% Input formulas: 45
% Initial clauses: 152
% 
% Duplicate literals: 336
% Trivial inequalities: 108
% Fw subsumption resolutions: 1550
% Fw demodulations: 1212
% Bw demodulations: 8
% 
% Simple tautologies: 166
% Equational tautologies: 57
% Forward subsumptions: 8248
% 
% Binary resolution: 7628
% Factoring: 1151
% Forward superposition: 3851
% Backward superposition: 3489
% Self superposition: 65
% Equality factoring: 26
% Equality resolution: 26
% 
% Split clauses: 631
% Split components: 1271
% SAT solver clauses: 928
% SAT solver unit clauses: 12
% SAT solver binary clauses: 342
% 
% Sat splits: 631
% 
% TWLsolver clauses: 928
% TWLsolver calls for satisfiability: 429
% 
% Memory used [KB]: 11641
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.int_arith
% (64696)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 375
% Passive clauses: 2624
% Generated clauses: 17361
% Final active clauses: 317
% Final passive clauses: 1609
% Input formulas: 45
% Initial clauses: 152
% 
% Duplicate literals: 202
% Trivial inequalities: 87
% Fw subsumption resolutions: 761
% Fw demodulations: 2709
% Bw demodulations: 685
% Condensations: 277
% Global subsumptions: 18
% 
% Simple tautologies: 229
% Equational tautologies: 23
% Forward subsumptions: 7336
% Fw demodulations to eq. taut.: 22
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 2040
% Factoring: 40
% Forward superposition: 3741
% Backward superposition: 3444
% Self superposition: 62
% Equality factoring: 32
% Equality resolution: 23
% 
% Split clauses: 101
% Split components: 209
% SAT solver clauses: 2754
% SAT solver unit clauses: 167
% SAT solver binary clauses: 88
% SAT solver learnt clauses: 36
% SAT solver learnt literals: 10
% 
% Sat splits: 101
% Sat splitting refutations: 23
% 
% TWLsolver clauses: 2682
% TWLsolver calls for satisfiability: 1238
% 
% Memory used [KB]: 15735
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.int_arith
% (64719)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1608
% Passive clauses: 16819
% Generated clauses: 108969
% Final active clauses: 276
% Final passive clauses: 236
% Input formulas: 45
% Initial clauses: 152
% 
% Duplicate literals: 425
% Trivial inequalities: 379
% Fw subsumption resolutions: 3910
% Fw demodulations: 21069
% Bw demodulations: 11440
% Condensations: 2380
% Global subsumptions: 735
% 
% Simple tautologies: 92
% Equational tautologies: 224
% Forward subsumptions: 57273
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 672
% 
% Unit resulting resolution: 19325
% Factoring: 1
% Forward superposition: 20919
% Backward superposition: 18624
% Self superposition: 213
% Equality factoring: 28
% Equality resolution: 38
% 
% Split clauses: 282
% Split components: 570
% SAT solver clauses: 21013
% SAT solver unit clauses: 1011
% SAT solver binary clauses: 3155
% 
% Sat splits: 282
% Sat splitting refutations: 2892
% 
% Memory used [KB]: 79956
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 180 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.int_arith
% (65028)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 3353
% Passive clauses: 50272
% Generated clauses: 203363
% Final active clauses: 791
% Final passive clauses: 27027
% Input formulas: 45
% Initial clauses: 149
% 
% Selected by SInE selection: 43
% SInE iterations: 1
% 
% Duplicate literals: 4350
% Trivial inequalities: 825
% Fw subsumption resolutions: 18092
% Fw demodulations: 39449
% Bw demodulations: 1651
% 
% Simple tautologies: 6514
% Equational tautologies: 8
% Forward subsumptions: 82209
% 
% Binary resolution: 43963
% Forward superposition: 39467
% Backward superposition: 46966
% Self superposition: 150
% Equality resolution: 160
% 
% Split clauses: 5456
% Split components: 12264
% SAT solver clauses: 6401
% SAT solver unit clauses: 19
% SAT solver binary clauses: 493
% 
% Sat splits: 5456
% Sat splitting refutations: 115
% 
% Memory used [KB]: 68058
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 140 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.int_arith
% (65151)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 337
% Passive clauses: 2352
% Generated clauses: 14806
% Final active clauses: 328
% Final passive clauses: 1971
% Input formulas: 45
% Initial clauses: 152
% 
% Duplicate literals: 498
% Trivial inequalities: 222
% Fw subsumption resolutions: 2003
% Fw demodulations: 310
% Bw demodulations: 25
% Global subsumptions: 16
% 
% Simple tautologies: 535
% Equational tautologies: 49
% Forward subsumptions: 8782
% 
% Unit resulting resolution: 2714
% Factoring: 18
% Forward superposition: 4522
% Backward superposition: 4170
% Self superposition: 103
% Equality factoring: 6
% Equality resolution: 24
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 2407
% SAT solver unit clauses: 255
% SAT solver binary clauses: 188
% 
% Sat splits: 10
% Sat splitting refutations: 27
% 
% Memory used [KB]: 7419
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 133 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.int_arith
% (65168)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1208
% Passive clauses: 6459
% Generated clauses: 37757
% Final active clauses: 972
% Final passive clauses: 4854
% Input formulas: 45
% Initial clauses: 152
% 
% Duplicate literals: 1029
% Trivial inequalities: 89
% Fw subsumption resolutions: 3480
% Bw subsumption resolutions: 277
% Fw demodulations: 449
% Bw demodulations: 2
% Condensations: 1748
% Global subsumptions: 3
% 
% Simple tautologies: 1418
% Equational tautologies: 383
% Forward subsumptions: 22749
% Backward subsumptions: 434
% 
% Binary resolution: 26057
% Factoring: 27
% Forward superposition: 2843
% Backward superposition: 1185
% Self superposition: 41
% Equality factoring: 2
% Equality resolution: 36
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 6489
% SAT solver unit clauses: 121
% SAT solver binary clauses: 852
% 
% Sat splits: 2
% Sat splitting refutations: 23
% 
% Memory used [KB]: 11001
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 117 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f8418,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f379,f385,f383,f381,f386,f382,f387,f384,f223,f389,f391,f390,f393,f522,f521,f520,f519,f518,f517,f516,f515,f514,f510,f509,f508,f507,f506,f505,f550,f504,f503,f502,f501,f500,f548,f499,f552,f496,f495,f494,f493,f492,f491,f490,f489,f488,f554,f480,f479,f478,f477,f562,f476,f475,f558,f474,f473,f566,f472,f556,f471,f560,f470,f564,f469,f568,f466,f465,f464,f463,f462,f461,f460,f459,f458,f570,f455,f454,f453,f452,f451,f450,f449,f448,f447,f572,f446,f445,f444,f443,f442,f441,f440,f439,f438,f574,f437,f436,f435,f434,f433,f432,f431,f430,f429,f428,f427,f426,f425,f584,f424,f423,f422,f582,f421,f420,f580,f419,f576,f418,f578,f417,f416,f415,f414,f413,f412,f588,f411,f586,f410,f590,f408,f406,f399,f398,f397,f396,f530,f531,f592,f613,f615,f597,f380,f726,f725,f724,f723,f549,f722,f757,f721,f720,f719,f759,f709,f761,f707,f706,f705,f704,f765,f703,f763,f702,f701,f700,f767,f694,f693,f692,f691,f771,f690,f769,f689,f688,f687,f773,f685,f684,f683,f682,f777,f681,f775,f680,f679,f678,f779,f677,f676,f675,f674,f783,f673,f781,f672,f671,f670,f785,f668,f667,f666,f664,f663,f662,f661,f660,f659,f579,f658,f577,f656,f655,f654,f581,f652,f651,f650,f583,f644,f643,f642,f640,f639,f638,f630,f629,f627,f728,f787,f729,f730,f788,f593,f791,f809,f808,f807,f815,f806,f817,f800,f799,f798,f819,f797,f821,f822,f823,f793,f849,f847,f828,f853,f854,f855,f856,f857,f858,f859,f860,f863,f310,f305,f864,f283,f275,f268,f263,f239,f865,f236,f866,f233,f867,f868,f614,f1009,f1008,f1026,f1002,f1001,f1000,f999,f998,f997,f996,f995,f994,f1028,f990,f989,f988,f987,f986,f985,f1030,f982,f981,f980,f979,f978,f977,f976,f975,f974,f1032,f968,f967,f966,f1034,f963,f962,f961,f960,f959,f958,f957,f956,f955,f1036,f952,f951,f950,f949,f948,f947,f946,f945,f944,f1038,f934,f933,f932,f931,f930,f929,f928,f927,f926,f925,f924,f1044,f923,f922,f921,f1042,f920,f919,f1040,f1129,f1130,f1131,f1139,f1140,f1141,f1142,f1160,f1162,f1159,f1164,f1169,f1170,f1185,f1186,f1188,f1190,f1195,f546,f1199,f1200,f1201,f1212,f1213,f1202,f1215,f1216,f1227,f1228,f1217,f1230,f1231,f1248,f1249,f1238,f1251,f1252,f1257,f1262,f1263,f1264,f1265,f1270,f1275,f1276,f1277,f1278,f792,f1279,f594,f1318,f1317,f1316,f1321,f1465,f1470,f1477,f1482,f1489,f1494,f1501,f1506,f1525,f1524,f1523,f1548,f1751,f1750,f1749,f1274,f1806,f1824,f1809,f1825,f1811,f1826,f2058,f2073,f2072,f2063,f2064,f2082,f2080,f2101,f2100,f2094,f2155,f2133,f2134,f2136,f2137,f2159,f2169,f2172,f2170,f2174,f2157,f2192,f2191,f2183,f2211,f2210,f2202,f2233,f2232,f2224,f2284,f2289,f2298,f2303,f2447,f2446,f2445,f2437,f2478,f2491,f2490,f2493,f2497,f2499,f2501,f2485,f2486,f2506,f2487,f2510,f2529,f2541,f2540,f2536,f2537,f2547,f2555,f1214,f2585,f2584,f2583,f1229,f2594,f2593,f1250,f2698,f2709,f2714,f2719,f2734,f2733,f2732,f1261,f2770,f2769,f2768,f2776,f2764,f2761,f2758,f2779,f2888,f2890,f2887,f2896,f2911,f2897,f2913,f2920,f2933,f2921,f2935,f2926,f2937,f2928,f2939,f2929,f2941,f2931,f2943,f2944,f2960,f2968,f2969,f2967,f3036,f3079,f3043,f3058,f3087,f3076,f3091,f3092,f3106,f2940,f3107,f2936,f3108,f2934,f3220,f3227,f3231,f3244,f3254,f3196,f2077,f3205,f3245,f3198,f2546,f2544,f3197,f3188,f3260,f3185,f3082,f3178,f3221,f3265,f3266,f3313,f3339,f3316,f3341,f3319,f3343,f3322,f3369,f3345,f3500,f3518,f3523,f3700,f3701,f3679,f3709,f3631,f2505,f2503,f3716,f2078,f3717,f3719,f3838,f4150,f4159,f4164,f4166,f4154,f4169,f4156,f4157,f4158,f4201,f4202,f4203,f4204,f4205,f4206,f4214,f4217,f4207,f4614,f4427,f4680,f4392,f4684,f4327,f4694,f4712,f4715,f4729,f4163,f3840,f4763,f4764,f4793,f4794,f4795,f4796,f5133,f5134,f5135,f5136,f5137,f5204,f5250,f5205,f5252,f5312,f5313,f5314,f5315,f5316,f5317,f5450,f5451,f5498,f5502,f5503,f5453,f5459,f5461,f5463,f5466,f5468,f5470,f5480,f5482,f5484,f5504,f5505,f5506,f5507,f5508,f5509,f5510,f5511,f5512,f5513,f5514,f5515,f5516,f5682,f5687,f5749,f5750,f5814,f5251,f5815,f5889,f5891,f5890,f6000,f5997,f4171,f6083,f6085,f6093,f6094,f5719,f6099,f6098,f4718,f2494,f6042,f6041,f6111,f5674,f5673,f6112,f5628,f5627,f6113,f5376,f5358,f6114,f5342,f5341,f5326,f5325,f6115,f3080,f6031,f6117,f5565,f6119,f5189,f5222,f6121,f6128,f6129,f2079,f6130,f6132,f6137,f6131,f6136,f6168,f2910,f6175,f6176,f6178,f2892,f6188,f6189,f6204,f6206,f3229,f6307,f6309,f6324,f6318,f6329,f6319,f6330,f6320,f6331,f6327,f6392,f6395,f6397,f6398,f6399,f6400,f6393,f6409,f6410,f6411,f6412,f6413,f6415,f6499,f6500,f3230,f6501,f6498,f3233,f6721,f6726,f6811,f6810,f6818,f6820,f6875,f6819,f6877,f6925,f6924,f6969,f6968,f6922,f6971,f6972,f6973,f6966,f6939,f6978,f6940,f6979,f6965,f6942,f6980,f6964,f3256,f6992,f7020,f7194,f7196,f7195,f7203,f7205,f7204,f7077,f7207,f7206,f7285,f7287,f2495,f7288,f7290,f7563,f7564,f7551,f7577,f7648,f7649,f6976,f7657,f7658,f7644,f852,f7670,f7733,f6414,f7801,f7803,f7805,f3344,f7806,f7874,f7875,f7847,f7883,f7848,f7884,f8015,f7898,f8018,f7900,f8017,f8020,f8071,f8072,f2508,f8073,f8074,f2549,f8242,f8103,f8104,f8246,f8248,f8124,f8125,f8243,f8251,f8247,f8134,f8136,f8137,f8255,f8180,f8252,f8182,f8253,f8183,f8254,f8259,f8256,f8287,f8274,f8275,f8288,f8289,f8290,f8392,f8395,f3223,f8400,f8403,f2081,f8401,f8333,f8334,f8396,f3228,f6731,f4714,f6730,f8414,f8394,f6087,f392,f8416,f6086])).
fof(f6086,plain,(
  s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl343),
  inference(cnf_transformation,[],[f6086_D])).
fof(f6086_D,plain,(
  s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl343),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl343])])).
fof(f8416,plain,(
  s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | ($spl230 | $spl236 | $spl359)),
  inference(forward_demodulation,[],[f8415,f6179])).
fof(f6179,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f234])).
fof(f234,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X7] : s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.int_arith.elim_eq_coeffs','thm.integer.INT_MUL_RID')).
fof(f8415,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | ($spl236 | $spl359)),
  inference(forward_demodulation,[],[f6116,f2933])).
fof(f6116,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | $spl359),
  inference(cnf_transformation,[],[f6116_D])).
fof(f6116_D,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) <=> ~$spl359),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl359])])).
fof(f392,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | $spl8),
  inference(cnf_transformation,[],[f392_D])).
fof(f392_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f6087,plain,(
  s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl342),
  inference(cnf_transformation,[],[f6087_D])).
fof(f6087_D,plain,(
  s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f8394,plain,(
  s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl92 | $spl230 | $spl236)),
  inference(forward_demodulation,[],[f8393,f6179])).
fof(f8393,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl92 | $spl236)),
  inference(forward_demodulation,[],[f8321,f2933])).
fof(f8321,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | $spl92),
  inference(superposition,[],[f3690,f787])).
fof(f3690,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(trivial_inequality_removal,[],[f3689])).
fof(f3689,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(duplicate_literal_removal,[],[f3688])).
fof(f3688,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f328,f245])).
fof(f245,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),
  inference(ennf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X17] : (~s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17))))),
  file('thm.int_arith.elim_eq_coeffs','thm.integer.INT_MOD_ID')).
fof(f328,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))))),
  inference(ennf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2] : ((~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X16,X18,X19] : ((~s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X18)))) => s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X18))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',X16))),s('type.integer.int',X18))))),
  file('thm.int_arith.elim_eq_coeffs','thm.integer.INT_MUL_DIV')).
fof(f8414,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | $spl483),
  inference(cnf_transformation,[],[f8414_D])).
fof(f8414_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) <=> ~$spl483),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl483])])).
fof(f6730,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | ($spl95 | $spl230 | $spl241)),
  inference(backward_demodulation,[],[f6728,f2936])).
fof(f6728,plain,(
  ( ! [X2] : (s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | ($spl95 | $spl230)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f809,f808,f807,f806,f800,f799,f798,f797,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f793,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1068,f1072,f1075,f1077,f1079,f1080,f1082,f1084,f1086,f1092,f1094,f1525,f1524,f1523,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1722,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2738,f2742,f2740,f2764,f2761,f2758,f2843,f2919,f2922,f2923,f2924,f2925,f2321,f2314,f3093,f3094,f3095,f3096,f3097,f3102,f3103,f3104,f3105,f3124,f3157,f3220,f3224,f3226,f3227,f3231,f3235,f3237,f3238,f3240,f3244,f3247,f3250,f3251,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3258,f3257,f3246,f3216,f3211,f3199,f3194,f3180,f3524,f3526,f3527,f3534,f3535,f3536,f3537,f3538,f3539,f3540,f3541,f3542,f3543,f3544,f3545,f3557,f3592,f3654,f3692,f3698,f3700,f3679,f3670,f3645,f3664,f2327,f2354,f3023,f2355,f5010,f5009,f5008,f5007,f5002,f4986,f4973,f4933,f4932,f4929,f4928,f4927,f4926,f4911,f4896,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f299,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3711,f3710,f3690,f3680,f3678,f3677,f3671,f3662,f3648,f3644,f3632,f3628,f3614,f3264,f3263,f3203,f3187,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f2892,f6179,f6181,f6182,f6184,f6185,f6186,f6187,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6199,f6200,f6201,f6218,f6246,f6264,f6273,f6299,f6381,f6425,f6427,f6428,f6429,f6430,f6431,f6432,f6433,f6434,f6435,f6436,f6437,f6438,f6445,f6446,f6676,f6673,f6672,f6671,f6670,f6720,f6725,f6721,f6722,f6727,f6724])).
fof(f6724,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,'F_0') | s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | ($spl95 | $spl230)),
  inference(backward_demodulation,[],[f6670,f6181])).
fof(f6727,plain,(
  ( ! [X24,X25] : (s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X25,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl95 | $spl230)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f809,f808,f807,f806,f800,f799,f798,f797,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f793,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1068,f1072,f1075,f1077,f1079,f1080,f1082,f1084,f1086,f1092,f1094,f1525,f1524,f1523,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1722,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2738,f2742,f2740,f2764,f2761,f2758,f2843,f2919,f2922,f2923,f2924,f2925,f2321,f2314,f3093,f3094,f3095,f3096,f3097,f3102,f3103,f3104,f3105,f3124,f3157,f3220,f3224,f3226,f3227,f3231,f3235,f3237,f3238,f3240,f3244,f3247,f3250,f3251,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3258,f3257,f3246,f3216,f3211,f3199,f3194,f3180,f3524,f3526,f3527,f3534,f3535,f3536,f3537,f3538,f3539,f3540,f3541,f3542,f3543,f3544,f3545,f3557,f3592,f3654,f3692,f3698,f3700,f3679,f3670,f3645,f3664,f2327,f2354,f3023,f2355,f5010,f5009,f5008,f5007,f5002,f4986,f4973,f4933,f4932,f4929,f4928,f4927,f4926,f4911,f4896,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f299,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3711,f3710,f3690,f3680,f3678,f3677,f3671,f3662,f3648,f3644,f3632,f3628,f3614,f3264,f3263,f3203,f3187,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f2892,f6179,f6181,f6182,f6184,f6185,f6186,f6187,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6199,f6200,f6201,f6218,f6246,f6264,f6273,f6299,f6381,f6425,f6427,f6428,f6429,f6430,f6431,f6432,f6433,f6434,f6435,f6436,f6437,f6438,f6445,f6446,f6676,f6673,f6672,f6671,f6670,f6720,f6725,f6721,f6722])).
fof(f6722,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') = s(bool,'F_0') | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X25,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl95 | $spl230)),
  inference(backward_demodulation,[],[f6670,f6195])).
fof(f6725,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int',sK13(X3,'const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) ) | ($spl95 | $spl230)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f809,f808,f807,f806,f800,f799,f798,f797,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f793,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1068,f1072,f1075,f1077,f1079,f1080,f1082,f1084,f1086,f1092,f1094,f1525,f1524,f1523,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1722,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2738,f2742,f2740,f2764,f2761,f2758,f2843,f2919,f2922,f2923,f2924,f2925,f2321,f2314,f3093,f3094,f3095,f3096,f3097,f3102,f3103,f3104,f3105,f3124,f3157,f3220,f3224,f3226,f3227,f3231,f3235,f3237,f3238,f3240,f3244,f3247,f3250,f3251,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3258,f3257,f3246,f3216,f3211,f3199,f3194,f3180,f3524,f3526,f3527,f3534,f3535,f3536,f3537,f3538,f3539,f3540,f3541,f3542,f3543,f3544,f3545,f3557,f3592,f3654,f3692,f3698,f3700,f3679,f3670,f3645,f3664,f2327,f2354,f3023,f2355,f5010,f5009,f5008,f5007,f5002,f4986,f4973,f4933,f4932,f4929,f4928,f4927,f4926,f4911,f4896,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f299,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3711,f3710,f3690,f3680,f3678,f3677,f3671,f3662,f3648,f3644,f3632,f3628,f3614,f3264,f3263,f3203,f3187,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f2892,f6179,f6181,f6182,f6184,f6185,f6186,f6187,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6199,f6200,f6201,f6218,f6246,f6264,f6273,f6299,f6381,f6425,f6427,f6428,f6429,f6430,f6431,f6432,f6433,f6434,f6435,f6436,f6437,f6438,f6445,f6446,f6676,f6673,f6672,f6671,f6670,f6720])).
fof(f6720,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,'F_0') | s('type.integer.int',X3) = s('type.integer.int',sK13(X3,'const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) ) | ($spl95 | $spl230)),
  inference(backward_demodulation,[],[f6670,f6218])).
fof(f6670,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0)))) ) | ($spl95 | $spl230)),
  inference(unit_resulting_resolution,[],[f793,f6184,f887])).
fof(f6671,plain,(
  ( ! [X0] : (~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0)),'T_0')) ) | ($spl95 | $spl230)),
  inference(unit_resulting_resolution,[],[f793,f6184,f891])).
fof(f6672,plain,(
  ( ! [X0] : (~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0)))) ) | ($spl95 | $spl230)),
  inference(unit_resulting_resolution,[],[f793,f6184,f896])).
fof(f6673,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0)),X1)) ) | ($spl95 | $spl230)),
  inference(unit_resulting_resolution,[],[f793,f6184,f905])).
fof(f6676,plain,(
  ( ! [X0,X1] : (sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0)),'T_0',X1)) ) | ($spl95 | $spl230)),
  inference(unit_resulting_resolution,[],[f6184,f2843])).
fof(f6446,plain,(
  ( ! [X76,X74,X75,X73] : (sP7(happ(s(fun(X73,bool),X74),s(X73,sK12(X74,X73))),'T_0',X75) | s(bool,'F_0') = s(bool,happ(s(fun(X73,bool),X74),s(X73,X76)))) ) | $spl95),
  inference(resolution,[],[f2843,f908])).
fof(f6445,plain,(
  ( ! [X70,X72,X71,X69] : (sP7(happ(s(fun(X69,bool),X70),s(X69,sK11(X70,X69))),'T_0',X71) | s(bool,'F_0') = s(bool,happ(s(fun(X69,bool),X70),s(X69,X72)))) ) | $spl95),
  inference(resolution,[],[f2843,f907])).
fof(f6438,plain,(
  ( ! [X59,X57,X58,X56] : (sP7(X56,'T_0',X57) | sP7(X58,X59,X56) | s(bool,'F_0') = s(bool,X58)) ) | $spl95),
  inference(resolution,[],[f2843,f904])).
fof(f6437,plain,(
  ( ! [X54,X52,X55,X53] : (sP7(X52,'T_0',X53) | sP7(X54,X52,X55) | p(s(bool,X54)) | s(bool,'F_0') = s(bool,X55)) ) | $spl95),
  inference(resolution,[],[f2843,f903])).
fof(f6436,plain,(
  ( ! [X50,X48,X51,X49] : (sP7(X48,'T_0',X49) | sP7(X48,X50,X51) | p(s(bool,X50)) | s(bool,'F_0') = s(bool,X51)) ) | $spl95),
  inference(resolution,[],[f2843,f903])).
fof(f6435,plain,(
  ( ! [X47,X45,X46] : (sP7(X45,'T_0',X46) | sP1(X45,X47) | s(bool,'F_0') = s(bool,X47)) ) | $spl95),
  inference(resolution,[],[f2843,f893])).
fof(f6434,plain,(
  ( ! [X43,X44,X42] : (sP7(X42,'T_0',X43) | sP1(X44,X42) | s(bool,'F_0') = s(bool,X44)) ) | $spl95),
  inference(resolution,[],[f2843,f892])).
fof(f6433,plain,(
  ( ! [X39,X41,X38,X40] : (sP7(X38,'T_0',X39) | sP6(X38,X40,X41)) ) | $spl95),
  inference(resolution,[],[f2843,f368])).
fof(f368,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f220])).
fof(f220,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(rectify,[],[f219])).
fof(f219,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(flattening,[],[f218])).
fof(f218,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(nnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X2,X0,X1] : (sP6(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f6432,plain,(
  ( ! [X37,X35,X36,X34] : (sP7(X34,'T_0',X35) | sP6(X36,X37,X34)) ) | $spl95),
  inference(resolution,[],[f2843,f366])).
fof(f366,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f220])).
fof(f6431,plain,(
  ( ! [X30,X33,X31,X32] : (sP7(X30,'T_0',X31) | sP5(X30,X32,X33) | s(bool,X32) = s(bool,X33)) ) | $spl95),
  inference(resolution,[],[f2843,f354])).
fof(f354,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f214])).
fof(f214,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP5(X2,X1,X0)) & (~sP5(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP5(X2,X1,X0))),
  inference(definition_folding,[],[f107,f146,f145,f144,f143])).
fof(f143,plain,(
  ! [X0,X1,X2] : (sP2(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f144,plain,(
  ! [X1,X0,X2] : (sP3(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f145,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f146,plain,(
  ! [X2,X1,X0] : (sP5(X2,X1,X0) <=> (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f107,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X21,X18,X16] : ((p(s(bool,X16)) <=> s(bool,X18) = s(bool,X21)) <=> ((p(s(bool,X16)) | p(s(bool,X18)) | p(s(bool,X21))) & (p(s(bool,X16)) | ~p(s(bool,X21)) | ~p(s(bool,X18))) & (p(s(bool,X18)) | ~p(s(bool,X21)) | ~p(s(bool,X16))) & (p(s(bool,X21)) | ~p(s(bool,X18)) | ~p(s(bool,X16)))))),
  file('thm.int_arith.elim_eq_coeffs','thm.sat.sat_2|49|_prove_ltb')).
fof(f6430,plain,(
  ( ! [X28,X26,X29,X27] : (sP7(X26,'T_0',X27) | sP3(X26,X28,X29)) ) | $spl95),
  inference(resolution,[],[f2843,f349])).
fof(f349,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f210])).
fof(f210,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(flattening,[],[f209])).
fof(f209,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(nnf_transformation,[],[f144])).
fof(f6429,plain,(
  ( ! [X24,X23,X25,X22] : (sP7(X22,'T_0',X23) | sP3(X24,X22,X25)) ) | $spl95),
  inference(resolution,[],[f2843,f348])).
fof(f348,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f211])).
fof(f6428,plain,(
  ( ! [X21,X19,X20,X18] : (sP7(X18,'T_0',X19) | sP4(X18,X20,X21)) ) | $spl95),
  inference(resolution,[],[f2843,f345])).
fof(f345,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f207])).
fof(f207,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f206])).
fof(f206,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f145])).
fof(f6427,plain,(
  ( ! [X14,X17,X15,X16] : (sP7(X14,'T_0',X15) | sP4(X16,X14,X17)) ) | $spl95),
  inference(resolution,[],[f2843,f344])).
fof(f344,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f208])).
fof(f6425,plain,(
  ( ! [X10,X8,X9] : (sP7(X8,'T_0',X9) | p(s(bool,X10)) | s(bool,X8) = s(bool,X10)) ) | $spl95),
  inference(resolution,[],[f2843,f294])).
fof(f294,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X9,X10] : ((p(s(bool,X9)) => p(s(bool,X10))) => ((p(s(bool,X10)) => p(s(bool,X9))) => s(bool,X9) = s(bool,X10)))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.IMP_ANTISYM_AX')).
fof(f6381,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(forward_demodulation,[],[f6335,f2892])).
fof(f6335,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(superposition,[],[f246,f6179])).
fof(f6299,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(superposition,[],[f245,f6179])).
fof(f6273,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',X2))))) )),
  inference(superposition,[],[f299,f293])).
fof(f293,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X8,X7] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',X7)))),
  file('thm.int_arith.elim_eq_coeffs','thm.integer.INT_MUL_SYM')).
fof(f6264,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2))))) )),
  inference(superposition,[],[f299,f293])).
fof(f6246,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) )),
  inference(superposition,[],[f299,f293])).
fof(f6218,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int',sK13(X3,'const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X3)))) ) | $spl230),
  inference(superposition,[],[f6179,f906])).
fof(f6201,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3715])).
fof(f6200,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3711])).
fof(f6199,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X8)))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3710])).
fof(f6197,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X23))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',X23))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3677])).
fof(f6196,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3662])).
fof(f6195,plain,(
  ( ! [X24,X25] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X25))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X25,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3648])).
fof(f6194,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3644])).
fof(f6193,plain,(
  ( ! [X21,X20] : (s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X21,'const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',X21))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3632])).
fof(f6192,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12)))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3628])).
fof(f6191,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3614])).
fof(f6187,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13(X12,'const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3029])).
fof(f6186,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9)))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X10))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3027])).
fof(f6185,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1)))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3002])).
fof(f6184,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2992])).
fof(f6182,plain,(
  ( ! [X2,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X3,'const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))),s('type.integer.int',X2))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2345])).
fof(f6181,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2323])).
fof(f246,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(ennf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X16] : (~s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  file('thm.int_arith.elim_eq_coeffs','thm.integer.INT_DIV_ID')).
fof(f2322,plain,(
  ( ! [X17,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X18,'const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int',X18))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f906,f245])).
fof(f2331,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X10),s('type.integer.int',X10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,X11)),s('type.integer.int',X11))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) )),
  inference(superposition,[],[f245,f906])).
fof(f2332,plain,(
  ( ! [X12,X13] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) )),
  inference(superposition,[],[f246,f906])).
fof(f2357,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) )),
  inference(forward_demodulation,[],[f2356,f293])).
fof(f2356,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X38,X39)),s('type.integer.int',X39))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) )),
  inference(forward_demodulation,[],[f2340,f293])).
fof(f2340,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X38,X39)),s('type.integer.int',X39))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X38,X39)),s('type.integer.int',X39))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X38,X39)),s('type.integer.int',X39))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) )),
  inference(superposition,[],[f328,f906])).
fof(f2358,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))),s('type.integer.int',X44))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))))),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X44))) | s('type.integer.int',X44) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42)))) )),
  inference(forward_demodulation,[],[f2341,f293])).
fof(f2341,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X42,X43)),s('type.integer.int',X43))),s('type.integer.int',X44))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X42,X43)),s('type.integer.int',X43))))),s('type.integer.int',X44))) | s('type.integer.int',X44) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42)))) )),
  inference(superposition,[],[f328,f906])).
fof(f3155,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) )),
  inference(superposition,[],[f245,f293])).
fof(f3167,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',X11)))))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f299,f245])).
fof(f3168,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X15) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',X15)))) | s('type.integer.int',X14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f299,f245])).
fof(f3176,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4)),X5)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3164,f293])).
fof(f3164,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4)),X5)),s('type.integer.int',X5))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f245])).
fof(f298,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X1,X0)),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f188])).
fof(f188,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X1,X0)),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f187])).
fof(f187,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ? [X3] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(rectify,[],[f186])).
fof(f186,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) & (! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X16,X18] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X16),s('type.integer.int',X18)))) <=> ? [X6] : s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X16))))),
  file('thm.int_arith.elim_eq_coeffs','thm.integer.INT_DIVIDES')).
fof(f3177,plain,(
  ( ! [X6,X7] : (s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3165,f293])).
fof(f3165,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6)))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f245])).
fof(f3187,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f246,f246])).
fof(f3203,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f300,f246])).
fof(f300,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f189])).
fof(f189,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))) <=> s('type.num.num',X6) = s('type.num.num',X15))),
  file('thm.int_arith.elim_eq_coeffs','thm.integer.INT_INJ')).
fof(f3263,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int',sK13(X12,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))),s('type.integer.int',X12)))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(backward_demodulation,[],[f3002,f3248])).
fof(f3264,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',X16) != s('type.integer.int',X17) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16)))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(backward_demodulation,[],[f234,f3195])).
fof(f3614,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) )),
  inference(superposition,[],[f246,f293])).
fof(f3628,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12)))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f299,f246])).
fof(f3632,plain,(
  ( ! [X21,X20] : (s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X21,'const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',X21))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f906,f246])).
fof(f3644,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f299,f246])).
fof(f3648,plain,(
  ( ! [X24,X25] : (s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X25,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X25))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f906,f246])).
fof(f3662,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3641,f293])).
fof(f3641,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)),s('type.integer.int',X10))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f246])).
fof(f3671,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int',X5))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',X5))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))),s('type.integer.int',X5))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f328,f293])).
fof(f3677,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X23))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',X23))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f328,f246])).
fof(f3678,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X26))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int',X26))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',X26))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f328,f245])).
fof(f3680,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) )),
  inference(superposition,[],[f328,f293])).
fof(f3710,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X8)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3626,f293])).
fof(f3626,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X8)))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f246])).
fof(f3711,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3625,f293])).
fof(f3625,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)),s('type.integer.int',X6))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f246])).
fof(f3715,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(backward_demodulation,[],[f234,f3670])).
fof(f2323,plain,(
  ( ! [X2] : (s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X2)))) )),
  inference(superposition,[],[f906,f234])).
fof(f2345,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X3))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X3,'const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),s('type.integer.int',X2)))) )),
  inference(forward_demodulation,[],[f2315,f234])).
fof(f2315,plain,(
  ( ! [X2,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X3,'const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),s('type.integer.int',X2))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int',X3)))) )),
  inference(superposition,[],[f906,f234])).
fof(f2992,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X0))))) )),
  inference(unit_resulting_resolution,[],[f234,f299])).
fof(f3002,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1)))) )),
  inference(superposition,[],[f234,f293])).
fof(f3027,plain,(
  ( ! [X10,X9] : (s('type.integer.int',X9) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9))))) )),
  inference(forward_demodulation,[],[f3026,f234])).
fof(f3026,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9))))) )),
  inference(forward_demodulation,[],[f3011,f293])).
fof(f3011,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),X10)),s('type.integer.int',X10)))) )),
  inference(superposition,[],[f298,f234])).
fof(f3029,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13(X12,'const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12))))) )),
  inference(forward_demodulation,[],[f3028,f234])).
fof(f3028,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int',sK13(X12,'const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12))))) )),
  inference(forward_demodulation,[],[f3012,f293])).
fof(f3012,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,'const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) )),
  inference(superposition,[],[f298,f234])).
fof(f299,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f188])).
fof(f5060,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))) )),
  inference(superposition,[],[f3023,f293])).
fof(f5043,plain,(
  ( ! [X88,X87,X85,X86] : (s(bool,'F_0') = s(bool,X85) | sP7(X85,'const.integer.int_divides_2'(s('type.integer.int',X86),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X87),s('type.integer.int',X86)))),X88)) )),
  inference(resolution,[],[f3023,f905])).
fof(f5042,plain,(
  ( ! [X83,X84,X82] : (s(bool,'F_0') = s(bool,X82) | ~sP1(X82,'const.integer.int_divides_2'(s('type.integer.int',X83),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X84),s('type.integer.int',X83)))))) )),
  inference(resolution,[],[f3023,f896])).
fof(f5041,plain,(
  ( ! [X80,X81,X79] : (s(bool,'F_0') = s(bool,X79) | ~sP1('const.integer.int_divides_2'(s('type.integer.int',X80),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X81),s('type.integer.int',X80)))),X79)) )),
  inference(resolution,[],[f3023,f891])).
fof(f5040,plain,(
  ( ! [X78,X76,X77] : (s(bool,'F_0') = s(bool,X76) | s(bool,X76) = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X77),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X78),s('type.integer.int',X77)))))) )),
  inference(resolution,[],[f3023,f887])).
fof(f5039,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,X72)) | sP7('const.integer.int_divides_2'(s('type.integer.int',X73),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X74),s('type.integer.int',X73)))),X72,X75)) )),
  inference(resolution,[],[f3023,f371])).
fof(f371,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f222])).
fof(f222,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f221])).
fof(f221,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP7(X2,X0,X1))),
  inference(definition_folding,[],[f138,f149,f148])).
fof(f149,plain,(
  ! [X2,X0,X1] : (sP7(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP6(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f138,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X21,X18,X16] : ((p(s(bool,X16)) <=> (p(s(bool,X18)) => p(s(bool,X21)))) <=> ((p(s(bool,X16)) | p(s(bool,X18))) & (p(s(bool,X16)) | ~p(s(bool,X21))) & (~p(s(bool,X18)) | p(s(bool,X21)) | ~p(s(bool,X16)))))),
  file('thm.int_arith.elim_eq_coeffs','thm.sat.sat_27_prove_ltb')).
fof(f5038,plain,(
  ( ! [X70,X68,X71,X69] : (p(s(bool,X68)) | sP7('const.integer.int_divides_2'(s('type.integer.int',X69),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X70),s('type.integer.int',X69)))),X71,X68)) )),
  inference(resolution,[],[f3023,f370])).
fof(f370,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f222])).
fof(f5037,plain,(
  ( ! [X66,X64,X67,X65] : (p(s(bool,X64)) | sP7(X65,X64,'const.integer.int_divides_2'(s('type.integer.int',X66),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X67),s('type.integer.int',X66))))) | p(s(bool,X65))) )),
  inference(resolution,[],[f3023,f369])).
fof(f369,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP7(X2,X0,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f222])).
fof(f5030,plain,(
  ( ! [X39,X37,X38] : (~p(s(bool,X37)) | ~sP1('const.integer.int_divides_2'(s('type.integer.int',X38),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',X38)))),X37)) )),
  inference(resolution,[],[f3023,f325])).
fof(f325,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | ~sP1(X1,X0)) )),
  inference(cnf_transformation,[],[f199])).
fof(f199,plain,(
  ! [X0,X1] : ((((p(s(bool,X1)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)))) | sP1(X1,X0)) & (~sP1(X1,X0) | ((~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X0)) | p(s(bool,X1))))))),
  inference(nnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : ((p(s(bool,X1)) <=> ~p(s(bool,X0))) <=> sP1(X1,X0))),
  inference(definition_folding,[],[f100,f141])).
fof(f141,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f100,plain,(
  ! [X0,X1] : ((p(s(bool,X1)) <=> ~p(s(bool,X0))) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  inference(flattening,[],[f99])).
fof(f99,plain,(
  ! [X0,X1] : ((p(s(bool,X1)) <=> ~p(s(bool,X0))) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X18,X16] : ((p(s(bool,X16)) <=> ~p(s(bool,X18))) <=> ((p(s(bool,X16)) | p(s(bool,X18))) & (~p(s(bool,X18)) | ~p(s(bool,X16)))))),
  file('thm.int_arith.elim_eq_coeffs','thm.sat.sat_29_prove_ltb')).
fof(f5027,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X28)) | sP1(X28,'const.integer.int_divides_2'(s('type.integer.int',X29),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int',X29)))))) )),
  inference(resolution,[],[f3023,f322])).
fof(f322,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f197])).
fof(f197,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f196])).
fof(f196,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f141])).
fof(f5026,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X25)) | sP1('const.integer.int_divides_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int',X26)))),X25)) )),
  inference(resolution,[],[f3023,f319])).
fof(f319,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f198])).
fof(f5025,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~sP1(X22,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',X23)))))) )),
  inference(resolution,[],[f3023,f318])).
fof(f318,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | ~sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f198])).
fof(f4842,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)),X1)),s('type.integer.int',X1)))) )),
  inference(unit_resulting_resolution,[],[f3023,f298])).
fof(f4858,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1)))))) )),
  inference(unit_resulting_resolution,[],[f3023,f303])).
fof(f303,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f191])).
fof(f191,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f190])).
fof(f190,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f4860,plain,(
  ( ! [X2,X0,X1] : (sP0('const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),X2)) )),
  inference(unit_resulting_resolution,[],[f3023,f309])).
fof(f309,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f193])).
fof(f193,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) & ~p(s(bool,'F_0'))) | p(s(bool,X0)) | p(s(bool,'F_0'))) & (((~p(s(bool,X1)) | p(s(bool,'F_0'))) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f192])).
fof(f192,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | ((p(s(bool,X1)) & ~p(s(bool,'F_0'))) | p(s(bool,X0)) | p(s(bool,'F_0')))) & (((~p(s(bool,X1)) | p(s(bool,'F_0'))) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> ((p(s(bool,X1)) & ~p(s(bool,'F_0'))) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(definition_folding,[],[f130,f139])).
fof(f130,plain,(
  ! [X0,X1] : ((p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ((p(s(bool,X1)) & ~p(s(bool,'F_0'))) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : (((p(s(bool,X1)) | p(s(bool,X0))) | p(s(bool,'F_0'))) <=> ((p(s(bool,X1)) & ~p(s(bool,'F_0'))) | (p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(ennf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1] : ((~(p(s(bool,X1)) | p(s(bool,X0))) => p(s(bool,'F_0'))) <=> ((p(s(bool,X1)) => p(s(bool,'F_0'))) => (~p(s(bool,X0)) => p(s(bool,'F_0')))))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0,X1] : ((~(p(s(bool,X1)) | p(s(bool,X0))) => p(s(bool,'F_0'))) <=> ((p(s(bool,X1)) => p(s(bool,'F_0'))) => (~p(s(bool,X0)) => p(s(bool,'F_0')))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X20,X12] : ((~(p(s(bool,X12)) | p(s(bool,X20))) => p(s(bool,'F_0'))) <=> ((p(s(bool,X12)) => p(s(bool,'F_0'))) => (~p(s(bool,X20)) => p(s(bool,'F_0')))))),
  file('thm.int_arith.elim_eq_coeffs','thm.sat.sat_9_prove_ltb')).
fof(f4880,plain,(
  ( ! [X2,X0,X3,X1] : (~sP1('const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2)))))) )),
  inference(unit_resulting_resolution,[],[f3023,f3023,f325])).
fof(f4896,plain,(
  ( ! [X0,X1] : (sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) ) | $spl95),
  inference(unit_resulting_resolution,[],[f1082,f1080,f1075,f3023,f339])).
fof(f339,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | ~p(s(bool,X2)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f205])).
fof(f205,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | (sP2(X2,X1,X0) & sP3(X1,X2,X0) & sP4(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP2(X2,X1,X0) | ~sP3(X1,X2,X0) | ~sP4(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f204])).
fof(f204,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP5(X2,X1,X0)))),
  inference(flattening,[],[f203])).
fof(f203,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP5(X2,X1,X0)))),
  inference(nnf_transformation,[],[f146])).
fof(f4911,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(X0,X1,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2)))))) )),
  inference(unit_resulting_resolution,[],[f3023,f343])).
fof(f343,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f208])).
fof(f4926,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X0,X1,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2)))))) )),
  inference(unit_resulting_resolution,[],[f3023,f347])).
fof(f347,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f211])).
fof(f4927,plain,(
  ( ! [X2,X0,X3,X1] : (sP2(X0,X1,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2)))))) )),
  inference(unit_resulting_resolution,[],[f3023,f351])).
fof(f351,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | sP2(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f213])).
fof(f213,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(flattening,[],[f212])).
fof(f212,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(nnf_transformation,[],[f143])).
fof(f4928,plain,(
  ( ! [X2,X0,X3,X1] : (sP2(X0,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1)))),X3)) )),
  inference(unit_resulting_resolution,[],[f3023,f352])).
fof(f352,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | sP2(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f213])).
fof(f4929,plain,(
  ( ! [X2,X0,X3,X1] : (sP2('const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f3023,f353])).
fof(f353,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | sP2(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f213])).
fof(f4932,plain,(
  ( ! [X0,X1] : (~sP5('const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),'T_0','F_0')) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f3023,f356])).
fof(f356,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f214])).
fof(f4933,plain,(
  ( ! [X0,X1] : (~sP5('const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),'F_0','T_0')) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f3023,f356])).
fof(f4973,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1)))),X3)) )),
  inference(unit_resulting_resolution,[],[f3023,f367])).
fof(f367,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f220])).
fof(f4986,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP7('const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2)))),X4)) )),
  inference(unit_resulting_resolution,[],[f3023,f3023,f371])).
fof(f5002,plain,(
  ( ! [X2,X0,X1] : (sP7('const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),'T_0',X2)) ) | $spl95),
  inference(unit_resulting_resolution,[],[f1092,f3023,f378])).
fof(f378,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | sP7(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f361])).
fof(f361,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~sP6(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP6(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP6(X0,X1,X2) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f216])).
fof(f216,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP6(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP6(X2,X0,X1) | sP7(X2,X0,X1)))),
  inference(flattening,[],[f215])).
fof(f215,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP6(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP6(X2,X0,X1)) | sP7(X2,X0,X1)))),
  inference(nnf_transformation,[],[f149])).
fof(f5007,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f3023,f887])).
fof(f5008,plain,(
  ( ! [X0,X1] : (~sP1('const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),'T_0')) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f3023,f891])).
fof(f5009,plain,(
  ( ! [X0,X1] : (~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f3023,f896])).
fof(f5010,plain,(
  ( ! [X2,X0,X1] : (sP7('T_0','const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),X2)) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f3023,f905])).
fof(f2355,plain,(
  ( ! [X37,X35,X36,X34] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',sK13(X34,X35)))),s('type.integer.int',X36)))) | s('type.integer.int',X36) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X37),s('type.integer.int',X34))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X35),s('type.integer.int',X34)))) )),
  inference(forward_demodulation,[],[f2339,f293])).
fof(f2339,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.integer.int',X36) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X37),s('type.integer.int',X34))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X34,X35)),s('type.integer.int',X35))),s('type.integer.int',X36)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X35),s('type.integer.int',X34)))) )),
  inference(superposition,[],[f299,f906])).
fof(f3023,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))) )),
  inference(forward_demodulation,[],[f2994,f234])).
fof(f2994,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(unit_resulting_resolution,[],[f234,f299])).
fof(f2354,plain,(
  ( ! [X30,X33,X31,X32] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13(X30,X31))))))) | s('type.integer.int',X30) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int',X33))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(forward_demodulation,[],[f2338,f293])).
fof(f2338,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.integer.int',X30) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int',X33))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X30,X31)),s('type.integer.int',X31)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(superposition,[],[f299,f906])).
fof(f2327,plain,(
  ( ! [X2,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int',X3) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X1)))) )),
  inference(superposition,[],[f299,f906])).
fof(f3664,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK13(X12,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))),s('type.integer.int',X12)))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3642,f293])).
fof(f3642,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))),s('type.integer.int',X12)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f246])).
fof(f3645,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int',X20) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X20)))) | s('type.integer.int',X19) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f299,f246])).
fof(f3670,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f328,f246])).
fof(f3698,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X23))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',X23))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3677,f2892])).
fof(f3692,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3691,f3524])).
fof(f3691,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3670,f2892])).
fof(f3654,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(forward_demodulation,[],[f3615,f2892])).
fof(f3615,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(superposition,[],[f246,f3524])).
fof(f3592,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(superposition,[],[f245,f3524])).
fof(f3557,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int',sK13(X3,'const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X3)))) ) | $spl230),
  inference(superposition,[],[f3524,f906])).
fof(f3545,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3258])).
fof(f3544,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X8)))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3257])).
fof(f3543,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3246])).
fof(f3542,plain,(
  ( ! [X26,X25] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X26))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X26,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3216])).
fof(f3541,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3211])).
fof(f3540,plain,(
  ( ! [X21,X22] : (s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X22,'const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))),s('type.integer.int',X22))) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3199])).
fof(f3539,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12)))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3194])).
fof(f3538,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3180])).
fof(f3537,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13(X12,'const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3029])).
fof(f3536,plain,(
  ( ! [X10,X9] : (s('type.integer.int',X9) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3027])).
fof(f3535,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1)))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3002])).
fof(f3534,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2992])).
fof(f3527,plain,(
  ( ! [X2,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X3,'const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))),s('type.integer.int',X2))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2345])).
fof(f3526,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2323])).
fof(f3524,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f234])).
fof(f3180,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) )),
  inference(superposition,[],[f246,f293])).
fof(f3194,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12)))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f299,f246])).
fof(f3199,plain,(
  ( ! [X21,X22] : (s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X22,'const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))),s('type.integer.int',X22))) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f906,f246])).
fof(f3211,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f299,f246])).
fof(f3216,plain,(
  ( ! [X26,X25] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X26,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X26))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f906,f246])).
fof(f3246,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3208,f293])).
fof(f3208,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)),s('type.integer.int',X10))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f246])).
fof(f3257,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X8)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3192,f293])).
fof(f3192,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X8)))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f246])).
fof(f3258,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3191,f293])).
fof(f3191,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)),s('type.integer.int',X6))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f246])).
fof(f3195,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',X16) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16)))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f299,f246])).
fof(f3248,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK13(X12,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))),s('type.integer.int',X12)))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3209,f293])).
fof(f3209,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))),s('type.integer.int',X12)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f246])).
fof(f3212,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int',X20) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X20)))) | s('type.integer.int',X19) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f299,f246])).
fof(f3251,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3211,f2892])).
fof(f3250,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int',sK13(X12,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))),s('type.integer.int',X12)))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3249,f3103])).
fof(f3249,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK13(X12,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))),s('type.integer.int',X12)))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3248,f2892])).
fof(f3247,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3246,f2892])).
fof(f3240,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',X16) != s('type.integer.int',X17) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16)))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3239,f3093])).
fof(f3239,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',X16) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16)))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3195,f2892])).
fof(f3238,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12)))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3194,f2892])).
fof(f3237,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X8)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3236,f293])).
fof(f3236,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X8)))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3192,f2892])).
fof(f3235,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3234,f293])).
fof(f3234,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)),s('type.integer.int',X6))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3191,f2892])).
fof(f3226,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(forward_demodulation,[],[f3181,f2892])).
fof(f3181,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(superposition,[],[f246,f3093])).
fof(f3224,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) ) | $spl230),
  inference(forward_demodulation,[],[f3179,f2892])).
fof(f3179,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) )),
  inference(superposition,[],[f246,f293])).
fof(f3157,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(superposition,[],[f245,f3093])).
fof(f3124,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int',sK13(X3,'const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X3)))) ) | $spl230),
  inference(superposition,[],[f3093,f906])).
fof(f3105,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13(X12,'const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3029])).
fof(f3104,plain,(
  ( ! [X10,X9] : (s('type.integer.int',X9) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3027])).
fof(f3103,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1)))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f3002])).
fof(f3102,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2992])).
fof(f3097,plain,(
  ( ! [X2,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X3,'const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))),s('type.integer.int',X2))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2345])).
fof(f3096,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2323])).
fof(f3095,plain,(
  ( ! [X15,X16] : (s('type.integer.int',X16) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,'const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2321])).
fof(f3094,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X1,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2314])).
fof(f3093,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f234])).
fof(f2314,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X1,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f906,f246])).
fof(f2321,plain,(
  ( ! [X15,X16] : (s('type.integer.int',X16) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,'const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f906,f246])).
fof(f2925,plain,(
  ( ! [X2,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X3,'const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))),s('type.integer.int',X2))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2345])).
fof(f2924,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2323])).
fof(f2923,plain,(
  ( ! [X15,X16] : (s('type.integer.int',X16) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,'const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2321])).
fof(f2922,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X1,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f2314])).
fof(f2919,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(backward_demodulation,[],[f2892,f234])).
fof(f2843,plain,(
  ( ! [X2,X3] : (~p(s(bool,X2)) | sP7(X2,'T_0',X3)) ) | $spl95),
  inference(resolution,[],[f1092,f378])).
fof(f2740,plain,(
  ( ! [X6,X7] : (p(s(bool,X6)) | sP5(X6,'T_0',X7) | ~sP3('T_0',X7,X6) | ~sP2(X7,'T_0',X6)) ) | $spl95),
  inference(resolution,[],[f1075,f341])).
fof(f341,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | p(s(bool,X0)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f205])).
fof(f2742,plain,(
  ( ! [X2,X3] : (~p(s(bool,X2)) | sP5(X3,'T_0',X2) | ~sP3('T_0',X2,X3)) ) | $spl95),
  inference(global_subsumption,[],[f379,f386,f387,f223,f809,f808,f807,f806,f800,f799,f798,f797,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f793,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1068,f1072,f1075,f1077,f1079,f1080,f1082,f1084,f1086,f1092,f1094,f1525,f1524,f1523,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1722,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2314,f2345,f2316,f2349,f2321,f2322,f2323,f2324,f2327,f2331,f2332,f2351,f2353,f2354,f2355,f2357,f2358,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2738])).
fof(f2738,plain,(
  ( ! [X2,X3] : (~p(s(bool,X2)) | sP5(X3,'T_0',X2) | ~sP3('T_0',X2,X3) | ~sP2(X2,'T_0',X3)) ) | $spl95),
  inference(resolution,[],[f1075,f339])).
fof(f2435,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X0),s(bool,X1))) | s(bool,'T_0') = s(bool,sK12(X0,bool))) )),
  inference(superposition,[],[f908,f235])).
fof(f235,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.int_arith.elim_eq_coeffs',aHL_BOOL_CASES)).
fof(f2434,plain,(
  ( ! [X125,X123,X121,X124,X122] : (s(bool,'F_0') = s(bool,happ(s(fun(X121,bool),X122),s(X121,X123))) | s(bool,'F_0') = s(bool,X124) | sP7(X124,happ(s(fun(X121,bool),X122),s(X121,sK12(X122,X121))),X125)) )),
  inference(resolution,[],[f908,f905])).
fof(f2433,plain,(
  ( ! [X118,X120,X119,X117] : (s(bool,'F_0') = s(bool,happ(s(fun(X117,bool),X118),s(X117,X119))) | s(bool,'F_0') = s(bool,X120) | ~sP1(X120,happ(s(fun(X117,bool),X118),s(X117,sK12(X118,X117))))) )),
  inference(resolution,[],[f908,f896])).
fof(f2432,plain,(
  ( ! [X116,X114,X115,X113] : (s(bool,'F_0') = s(bool,happ(s(fun(X113,bool),X114),s(X113,X115))) | s(bool,'F_0') = s(bool,X116) | ~sP1(happ(s(fun(X113,bool),X114),s(X113,sK12(X114,X113))),X116)) )),
  inference(resolution,[],[f908,f891])).
fof(f2431,plain,(
  ( ! [X111,X109,X112,X110] : (s(bool,'F_0') = s(bool,happ(s(fun(X109,bool),X110),s(X109,X111))) | s(bool,'F_0') = s(bool,X112) | s(bool,X112) = s(bool,happ(s(fun(X109,bool),X110),s(X109,sK12(X110,X109))))) )),
  inference(resolution,[],[f908,f887])).
fof(f2430,plain,(
  ( ! [X107,X105,X108,X106,X104] : (s(bool,'F_0') = s(bool,happ(s(fun(X104,bool),X105),s(X104,X106))) | ~p(s(bool,X107)) | sP7(happ(s(fun(X104,bool),X105),s(X104,sK12(X105,X104))),X107,X108)) )),
  inference(resolution,[],[f908,f371])).
fof(f2429,plain,(
  ( ! [X103,X101,X99,X102,X100] : (s(bool,'F_0') = s(bool,happ(s(fun(X99,bool),X100),s(X99,X101))) | p(s(bool,X102)) | sP7(happ(s(fun(X99,bool),X100),s(X99,sK12(X100,X99))),X103,X102)) )),
  inference(resolution,[],[f908,f370])).
fof(f2428,plain,(
  ( ! [X94,X97,X95,X98,X96] : (s(bool,'F_0') = s(bool,happ(s(fun(X94,bool),X95),s(X94,X96))) | p(s(bool,X97)) | sP7(X98,X97,happ(s(fun(X94,bool),X95),s(X94,sK12(X95,X94)))) | p(s(bool,X98))) )),
  inference(resolution,[],[f908,f369])).
fof(f2427,plain,(
  ( ! [X92,X90,X93,X91,X89] : (s(bool,'F_0') = s(bool,happ(s(fun(X89,bool),X90),s(X89,X91))) | sP6(X92,happ(s(fun(X89,bool),X90),s(X89,sK12(X90,X89))),X93)) )),
  inference(resolution,[],[f908,f367])).
fof(f2426,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s(bool,'F_0') = s(bool,happ(s(fun(X84,bool),X85),s(X84,X86))) | sP2(happ(s(fun(X84,bool),X85),s(X84,sK12(X85,X84))),X87,X88)) )),
  inference(resolution,[],[f908,f353])).
fof(f2425,plain,(
  ( ! [X80,X83,X81,X79,X82] : (s(bool,'F_0') = s(bool,happ(s(fun(X79,bool),X80),s(X79,X81))) | sP2(X82,happ(s(fun(X79,bool),X80),s(X79,sK12(X80,X79))),X83)) )),
  inference(resolution,[],[f908,f352])).
fof(f2424,plain,(
  ( ! [X78,X76,X74,X77,X75] : (s(bool,'F_0') = s(bool,happ(s(fun(X74,bool),X75),s(X74,X76))) | sP2(X77,X78,happ(s(fun(X74,bool),X75),s(X74,sK12(X75,X74))))) )),
  inference(resolution,[],[f908,f351])).
fof(f2423,plain,(
  ( ! [X70,X72,X71,X69,X73] : (s(bool,'F_0') = s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))) | sP3(X72,X73,happ(s(fun(X69,bool),X70),s(X69,sK12(X70,X69))))) )),
  inference(resolution,[],[f908,f347])).
fof(f2422,plain,(
  ( ! [X68,X66,X64,X67,X65] : (s(bool,'F_0') = s(bool,happ(s(fun(X64,bool),X65),s(X64,X66))) | sP4(X67,X68,happ(s(fun(X64,bool),X65),s(X64,sK12(X65,X64))))) )),
  inference(resolution,[],[f908,f343])).
fof(f2421,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'F_0') = s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))) | ~p(s(bool,X63)) | ~sP1(happ(s(fun(X60,bool),X61),s(X60,sK12(X61,X60))),X63)) )),
  inference(resolution,[],[f908,f325])).
fof(f2418,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))) | p(s(bool,X51)) | sP1(X51,happ(s(fun(X48,bool),X49),s(X48,sK12(X49,X48))))) )),
  inference(resolution,[],[f908,f322])).
fof(f2417,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') = s(bool,happ(s(fun(X44,bool),X45),s(X44,X46))) | p(s(bool,X47)) | sP1(happ(s(fun(X44,bool),X45),s(X44,sK12(X45,X44))),X47)) )),
  inference(resolution,[],[f908,f319])).
fof(f2416,plain,(
  ( ! [X43,X41,X42,X40] : (s(bool,'F_0') = s(bool,happ(s(fun(X40,bool),X41),s(X40,X42))) | ~p(s(bool,X43)) | ~sP1(X43,happ(s(fun(X40,bool),X41),s(X40,sK12(X41,X40))))) )),
  inference(resolution,[],[f908,f318])).
fof(f2414,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'F_0') = s(bool,happ(s(fun(X32,bool),X33),s(X32,X34))) | sP0(happ(s(fun(X32,bool),X33),s(X32,sK12(X33,X32))),X35)) )),
  inference(resolution,[],[f908,f304])).
fof(f304,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f191])).
fof(f2413,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,happ(s(fun(X28,bool),X29),s(X28,X30))) | sP0(X31,happ(s(fun(X28,bool),X29),s(X28,sK12(X29,X28))))) )),
  inference(resolution,[],[f908,f303])).
fof(f2412,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'F_0') = s(bool,happ(s(fun(X24,bool),X25),s(X24,X26))) | ~p(s(bool,X27)) | s(bool,X27) = s(bool,happ(s(fun(X24,bool),X25),s(X24,sK12(X25,X24))))) )),
  inference(resolution,[],[f908,f297])).
fof(f297,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f128])).
fof(f2406,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,happ(s(fun(X6,bool),X7),s(X6,sK12(X7,X6))))) )),
  inference(resolution,[],[f908,f248])).
fof(f248,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.EQ_CLAUSES|split|0')).
fof(f2402,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X0),s(bool,X1))) | s(bool,'T_0') = s(bool,sK11(X0,bool))) )),
  inference(superposition,[],[f907,f235])).
fof(f2401,plain,(
  ( ! [X125,X123,X121,X124,X122] : (s(bool,'F_0') = s(bool,happ(s(fun(X121,bool),X122),s(X121,X123))) | s(bool,'F_0') = s(bool,X124) | sP7(X124,happ(s(fun(X121,bool),X122),s(X121,sK11(X122,X121))),X125)) )),
  inference(resolution,[],[f907,f905])).
fof(f2400,plain,(
  ( ! [X118,X120,X119,X117] : (s(bool,'F_0') = s(bool,happ(s(fun(X117,bool),X118),s(X117,X119))) | s(bool,'F_0') = s(bool,X120) | ~sP1(X120,happ(s(fun(X117,bool),X118),s(X117,sK11(X118,X117))))) )),
  inference(resolution,[],[f907,f896])).
fof(f2399,plain,(
  ( ! [X116,X114,X115,X113] : (s(bool,'F_0') = s(bool,happ(s(fun(X113,bool),X114),s(X113,X115))) | s(bool,'F_0') = s(bool,X116) | ~sP1(happ(s(fun(X113,bool),X114),s(X113,sK11(X114,X113))),X116)) )),
  inference(resolution,[],[f907,f891])).
fof(f2398,plain,(
  ( ! [X111,X109,X112,X110] : (s(bool,'F_0') = s(bool,happ(s(fun(X109,bool),X110),s(X109,X111))) | s(bool,'F_0') = s(bool,X112) | s(bool,X112) = s(bool,happ(s(fun(X109,bool),X110),s(X109,sK11(X110,X109))))) )),
  inference(resolution,[],[f907,f887])).
fof(f2397,plain,(
  ( ! [X107,X105,X108,X106,X104] : (s(bool,'F_0') = s(bool,happ(s(fun(X104,bool),X105),s(X104,X106))) | ~p(s(bool,X107)) | sP7(happ(s(fun(X104,bool),X105),s(X104,sK11(X105,X104))),X107,X108)) )),
  inference(resolution,[],[f907,f371])).
fof(f2396,plain,(
  ( ! [X103,X101,X99,X102,X100] : (s(bool,'F_0') = s(bool,happ(s(fun(X99,bool),X100),s(X99,X101))) | p(s(bool,X102)) | sP7(happ(s(fun(X99,bool),X100),s(X99,sK11(X100,X99))),X103,X102)) )),
  inference(resolution,[],[f907,f370])).
fof(f2395,plain,(
  ( ! [X94,X97,X95,X98,X96] : (s(bool,'F_0') = s(bool,happ(s(fun(X94,bool),X95),s(X94,X96))) | p(s(bool,X97)) | sP7(X98,X97,happ(s(fun(X94,bool),X95),s(X94,sK11(X95,X94)))) | p(s(bool,X98))) )),
  inference(resolution,[],[f907,f369])).
fof(f2394,plain,(
  ( ! [X92,X90,X93,X91,X89] : (s(bool,'F_0') = s(bool,happ(s(fun(X89,bool),X90),s(X89,X91))) | sP6(X92,happ(s(fun(X89,bool),X90),s(X89,sK11(X90,X89))),X93)) )),
  inference(resolution,[],[f907,f367])).
fof(f2393,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s(bool,'F_0') = s(bool,happ(s(fun(X84,bool),X85),s(X84,X86))) | sP2(happ(s(fun(X84,bool),X85),s(X84,sK11(X85,X84))),X87,X88)) )),
  inference(resolution,[],[f907,f353])).
fof(f2392,plain,(
  ( ! [X80,X83,X81,X79,X82] : (s(bool,'F_0') = s(bool,happ(s(fun(X79,bool),X80),s(X79,X81))) | sP2(X82,happ(s(fun(X79,bool),X80),s(X79,sK11(X80,X79))),X83)) )),
  inference(resolution,[],[f907,f352])).
fof(f2391,plain,(
  ( ! [X78,X76,X74,X77,X75] : (s(bool,'F_0') = s(bool,happ(s(fun(X74,bool),X75),s(X74,X76))) | sP2(X77,X78,happ(s(fun(X74,bool),X75),s(X74,sK11(X75,X74))))) )),
  inference(resolution,[],[f907,f351])).
fof(f2390,plain,(
  ( ! [X70,X72,X71,X69,X73] : (s(bool,'F_0') = s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))) | sP3(X72,X73,happ(s(fun(X69,bool),X70),s(X69,sK11(X70,X69))))) )),
  inference(resolution,[],[f907,f347])).
fof(f2389,plain,(
  ( ! [X68,X66,X64,X67,X65] : (s(bool,'F_0') = s(bool,happ(s(fun(X64,bool),X65),s(X64,X66))) | sP4(X67,X68,happ(s(fun(X64,bool),X65),s(X64,sK11(X65,X64))))) )),
  inference(resolution,[],[f907,f343])).
fof(f2388,plain,(
  ( ! [X61,X62,X60,X63] : (s(bool,'F_0') = s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))) | ~p(s(bool,X63)) | ~sP1(happ(s(fun(X60,bool),X61),s(X60,sK11(X61,X60))),X63)) )),
  inference(resolution,[],[f907,f325])).
fof(f2385,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))) | p(s(bool,X51)) | sP1(X51,happ(s(fun(X48,bool),X49),s(X48,sK11(X49,X48))))) )),
  inference(resolution,[],[f907,f322])).
fof(f2384,plain,(
  ( ! [X47,X45,X46,X44] : (s(bool,'F_0') = s(bool,happ(s(fun(X44,bool),X45),s(X44,X46))) | p(s(bool,X47)) | sP1(happ(s(fun(X44,bool),X45),s(X44,sK11(X45,X44))),X47)) )),
  inference(resolution,[],[f907,f319])).
fof(f2383,plain,(
  ( ! [X43,X41,X42,X40] : (s(bool,'F_0') = s(bool,happ(s(fun(X40,bool),X41),s(X40,X42))) | ~p(s(bool,X43)) | ~sP1(X43,happ(s(fun(X40,bool),X41),s(X40,sK11(X41,X40))))) )),
  inference(resolution,[],[f907,f318])).
fof(f2381,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'F_0') = s(bool,happ(s(fun(X32,bool),X33),s(X32,X34))) | sP0(happ(s(fun(X32,bool),X33),s(X32,sK11(X33,X32))),X35)) )),
  inference(resolution,[],[f907,f304])).
fof(f2380,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'F_0') = s(bool,happ(s(fun(X28,bool),X29),s(X28,X30))) | sP0(X31,happ(s(fun(X28,bool),X29),s(X28,sK11(X29,X28))))) )),
  inference(resolution,[],[f907,f303])).
fof(f2379,plain,(
  ( ! [X26,X24,X27,X25] : (s(bool,'F_0') = s(bool,happ(s(fun(X24,bool),X25),s(X24,X26))) | ~p(s(bool,X27)) | s(bool,X27) = s(bool,happ(s(fun(X24,bool),X25),s(X24,sK11(X25,X24))))) )),
  inference(resolution,[],[f907,f297])).
fof(f2373,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,happ(s(fun(X6,bool),X7),s(X6,sK11(X7,X6))))) )),
  inference(resolution,[],[f907,f248])).
fof(f2353,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',sK13(X23,X24)))),s('type.integer.int',sK13(X25,'const.integer.int_mul_2'(s('type.integer.int',sK13(X23,X24)),s('type.integer.int',X24)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int',X25)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int',X23)))) )),
  inference(forward_demodulation,[],[f2352,f293])).
fof(f2352,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X23,X24)),s('type.integer.int',X24))),s('type.integer.int',sK13(X25,'const.integer.int_mul_2'(s('type.integer.int',sK13(X23,X24)),s('type.integer.int',X24)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int',X25)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int',X23)))) )),
  inference(forward_demodulation,[],[f2336,f293])).
fof(f2336,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int',X25)))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X25,'const.integer.int_mul_2'(s('type.integer.int',sK13(X23,X24)),s('type.integer.int',X24)))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X23,X24)),s('type.integer.int',X24))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int',X23)))) )),
  inference(superposition,[],[f298,f906])).
fof(f2351,plain,(
  ( ! [X21,X22,X20] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int',sK13(X20,X21)))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X22),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X20,X21)),s('type.integer.int',X21)),X22)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X22),s('type.integer.int',X20)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X21),s('type.integer.int',X20)))) )),
  inference(forward_demodulation,[],[f2350,f293])).
fof(f2350,plain,(
  ( ! [X21,X22,X20] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X20,X21)),s('type.integer.int',X21))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X22),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X20,X21)),s('type.integer.int',X21)),X22)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X22),s('type.integer.int',X20)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X21),s('type.integer.int',X20)))) )),
  inference(forward_demodulation,[],[f2335,f293])).
fof(f2335,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X22),s('type.integer.int',X20)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X20,X21)),s('type.integer.int',X21))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X20,X21)),s('type.integer.int',X21)),X22)),s('type.integer.int',X22))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X21),s('type.integer.int',X20)))) )),
  inference(superposition,[],[f298,f906])).
fof(f2324,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13(X3,X4)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X4),s('type.integer.int',X3)))) )),
  inference(superposition,[],[f906,f293])).
fof(f2349,plain,(
  ( ! [X14,X12,X13] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',sK13(X12,X13)))),s('type.integer.int',X14))) | s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X14,'const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13)))),s('type.integer.int',X12))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) )),
  inference(forward_demodulation,[],[f2320,f293])).
fof(f2320,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X14,'const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13)))),s('type.integer.int',X12))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))),s('type.integer.int',X14))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) )),
  inference(superposition,[],[f906,f906])).
fof(f2316,plain,(
  ( ! [X6,X4,X5] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X6,'const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X5)))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',X4))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X5))),s('type.integer.int',X6)))) )),
  inference(superposition,[],[f906,f293])).
fof(f2038,plain,(
  ( ! [X0,X1] : (sP7(X0,X0,X1) | p(s(bool,X0)) | s(bool,'F_0') = s(bool,X1)) )),
  inference(factoring,[],[f903])).
fof(f2037,plain,(
  ( ! [X134,X132,X135,X133,X131] : (sP7(X131,happ(s(fun(X132,bool),X133),s(X132,X134)),X135) | p(s(bool,X131)) | s(bool,'F_0') = s(bool,X135) | p(s(bool,happ(s(fun(X132,bool),X133),s(X132,sK12(X133,X132)))))) )),
  inference(resolution,[],[f903,f292])).
fof(f292,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK12(X1,X0)))))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1] : ((p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK11(X1,X0))))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK12(X1,X0))))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK11,sK12])],[f184])).
fof(f184,plain,(
  ! [X0,X1] : ((? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(rectify,[],[f183])).
fof(f183,plain,(
  ! [X0,X1] : ((? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(nnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : (! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(ennf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1] : (~? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0] : ! [X1] : (~? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X12] : ! [X13] : (~? [X7] : p(s(bool,happ(s(fun(X12,bool),X13),s(X12,X7)))) <=> ! [X7] : ~p(s(bool,happ(s(fun(X12,bool),X13),s(X12,X7)))))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.NOT_EXISTS_THM')).
fof(f2036,plain,(
  ( ! [X127,X130,X128,X126,X129] : (sP7(X126,happ(s(fun(X127,bool),X128),s(X127,X129)),X130) | p(s(bool,X126)) | s(bool,'F_0') = s(bool,X130) | p(s(bool,happ(s(fun(X127,bool),X128),s(X127,sK11(X128,X127)))))) )),
  inference(resolution,[],[f903,f291])).
fof(f291,plain,(
  ( ! [X4,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK11(X1,X0)))))) )),
  inference(cnf_transformation,[],[f185])).
fof(f2055,plain,(
  ( ! [X125,X123,X124,X122] : (s('type.integer.int',X124) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X123),s('type.integer.int',sK13(X124,X123)))) | sP7(X122,'const.integer.int_divides_2'(s('type.integer.int',X123),s('type.integer.int',X124)),X125) | p(s(bool,X122)) | s(bool,'F_0') = s(bool,X125)) )),
  inference(forward_demodulation,[],[f2035,f293])).
fof(f2035,plain,(
  ( ! [X125,X123,X124,X122] : (sP7(X122,'const.integer.int_divides_2'(s('type.integer.int',X123),s('type.integer.int',X124)),X125) | p(s(bool,X122)) | s(bool,'F_0') = s(bool,X125) | s('type.integer.int',X124) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X124,X123)),s('type.integer.int',X123)))) )),
  inference(resolution,[],[f903,f298])).
fof(f2033,plain,(
  ( ! [X118,X116,X119,X117,X115] : (sP7(X115,X116,X117) | p(s(bool,X115)) | s(bool,'F_0') = s(bool,X117) | s(bool,'F_0') = s(bool,X118) | sP7(X118,X116,X119)) )),
  inference(resolution,[],[f903,f905])).
fof(f2032,plain,(
  ( ! [X111,X114,X112,X113] : (sP7(X111,X112,X113) | p(s(bool,X111)) | s(bool,'F_0') = s(bool,X113) | s(bool,'F_0') = s(bool,X114) | ~sP1(X114,X112)) )),
  inference(resolution,[],[f903,f896])).
fof(f2031,plain,(
  ( ! [X109,X107,X110,X108] : (sP7(X107,X108,X109) | p(s(bool,X107)) | s(bool,'F_0') = s(bool,X109) | s(bool,'F_0') = s(bool,X110) | ~sP1(X108,X110)) )),
  inference(resolution,[],[f903,f891])).
fof(f2030,plain,(
  ( ! [X103,X105,X106,X104] : (sP7(X103,X104,X105) | p(s(bool,X103)) | s(bool,'F_0') = s(bool,X105) | s(bool,'F_0') = s(bool,X106) | s(bool,X104) = s(bool,X106)) )),
  inference(resolution,[],[f903,f887])).
fof(f2029,plain,(
  ( ! [X101,X99,X102,X100,X98] : (sP7(X98,X99,X100) | p(s(bool,X98)) | s(bool,'F_0') = s(bool,X100) | ~p(s(bool,X101)) | sP7(X99,X101,X102)) )),
  inference(resolution,[],[f903,f371])).
fof(f2028,plain,(
  ( ! [X94,X97,X95,X93,X96] : (sP7(X93,X94,X95) | p(s(bool,X93)) | s(bool,'F_0') = s(bool,X95) | p(s(bool,X96)) | sP7(X94,X97,X96)) )),
  inference(resolution,[],[f903,f370])).
fof(f2027,plain,(
  ( ! [X92,X90,X88,X91,X89] : (sP7(X88,X89,X90) | p(s(bool,X88)) | s(bool,'F_0') = s(bool,X90) | p(s(bool,X91)) | sP7(X92,X91,X89) | p(s(bool,X92))) )),
  inference(resolution,[],[f903,f369])).
fof(f2026,plain,(
  ( ! [X87,X85,X83,X86,X84] : (sP7(X83,X84,X85) | p(s(bool,X83)) | s(bool,'F_0') = s(bool,X85) | sP6(X86,X84,X87)) )),
  inference(resolution,[],[f903,f367])).
fof(f2025,plain,(
  ( ! [X80,X78,X81,X79,X82] : (sP7(X78,X79,X80) | p(s(bool,X78)) | s(bool,'F_0') = s(bool,X80) | sP2(X79,X81,X82)) )),
  inference(resolution,[],[f903,f353])).
fof(f2024,plain,(
  ( ! [X76,X74,X77,X75,X73] : (sP7(X73,X74,X75) | p(s(bool,X73)) | s(bool,'F_0') = s(bool,X75) | sP2(X76,X74,X77)) )),
  inference(resolution,[],[f903,f352])).
fof(f2023,plain,(
  ( ! [X70,X68,X72,X71,X69] : (sP7(X68,X69,X70) | p(s(bool,X68)) | s(bool,'F_0') = s(bool,X70) | sP2(X71,X72,X69)) )),
  inference(resolution,[],[f903,f351])).
fof(f2022,plain,(
  ( ! [X66,X64,X67,X65,X63] : (sP7(X63,X64,X65) | p(s(bool,X63)) | s(bool,'F_0') = s(bool,X65) | sP3(X66,X67,X64)) )),
  inference(resolution,[],[f903,f347])).
fof(f2021,plain,(
  ( ! [X61,X59,X62,X60,X58] : (sP7(X58,X59,X60) | p(s(bool,X58)) | s(bool,'F_0') = s(bool,X60) | sP4(X61,X62,X59)) )),
  inference(resolution,[],[f903,f343])).
fof(f2020,plain,(
  ( ! [X57,X54,X56,X55] : (sP7(X54,X55,X56) | p(s(bool,X54)) | s(bool,'F_0') = s(bool,X56) | ~p(s(bool,X57)) | ~sP1(X55,X57)) )),
  inference(resolution,[],[f903,f325])).
fof(f2017,plain,(
  ( ! [X45,X43,X44,X42] : (sP7(X42,X43,X44) | p(s(bool,X42)) | s(bool,'F_0') = s(bool,X44) | p(s(bool,X45)) | sP1(X45,X43)) )),
  inference(resolution,[],[f903,f322])).
fof(f2016,plain,(
  ( ! [X39,X41,X38,X40] : (sP7(X38,X39,X40) | p(s(bool,X38)) | s(bool,'F_0') = s(bool,X40) | p(s(bool,X41)) | sP1(X39,X41)) )),
  inference(resolution,[],[f903,f319])).
fof(f2015,plain,(
  ( ! [X37,X35,X36,X34] : (sP7(X34,X35,X36) | p(s(bool,X34)) | s(bool,'F_0') = s(bool,X36) | ~p(s(bool,X37)) | ~sP1(X37,X35)) )),
  inference(resolution,[],[f903,f318])).
fof(f2013,plain,(
  ( ! [X28,X26,X29,X27] : (sP7(X26,X27,X28) | p(s(bool,X26)) | s(bool,'F_0') = s(bool,X28) | sP0(X27,X29)) )),
  inference(resolution,[],[f903,f304])).
fof(f2012,plain,(
  ( ! [X24,X23,X25,X22] : (sP7(X22,X23,X24) | p(s(bool,X22)) | s(bool,'F_0') = s(bool,X24) | sP0(X25,X23)) )),
  inference(resolution,[],[f903,f303])).
fof(f2011,plain,(
  ( ! [X21,X19,X20,X18] : (sP7(X18,X19,X20) | p(s(bool,X18)) | s(bool,'F_0') = s(bool,X20) | ~p(s(bool,X21)) | s(bool,X19) = s(bool,X21)) )),
  inference(resolution,[],[f903,f297])).
fof(f2005,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | s(bool,'F_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X1)) )),
  inference(resolution,[],[f903,f248])).
fof(f2004,plain,(
  ( ! [X134,X132,X135,X133,X131] : (sP7(happ(s(fun(X131,bool),X132),s(X131,X133)),X134,X135) | p(s(bool,X134)) | s(bool,'F_0') = s(bool,X135) | p(s(bool,happ(s(fun(X131,bool),X132),s(X131,sK12(X132,X131)))))) )),
  inference(resolution,[],[f903,f292])).
fof(f2003,plain,(
  ( ! [X127,X130,X128,X126,X129] : (sP7(happ(s(fun(X126,bool),X127),s(X126,X128)),X129,X130) | p(s(bool,X129)) | s(bool,'F_0') = s(bool,X130) | p(s(bool,happ(s(fun(X126,bool),X127),s(X126,sK11(X127,X126)))))) )),
  inference(resolution,[],[f903,f291])).
fof(f2054,plain,(
  ( ! [X125,X123,X124,X122] : (s('type.integer.int',X123) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X122),s('type.integer.int',sK13(X123,X122)))) | sP7('const.integer.int_divides_2'(s('type.integer.int',X122),s('type.integer.int',X123)),X124,X125) | p(s(bool,X124)) | s(bool,'F_0') = s(bool,X125)) )),
  inference(forward_demodulation,[],[f2002,f293])).
fof(f2002,plain,(
  ( ! [X125,X123,X124,X122] : (sP7('const.integer.int_divides_2'(s('type.integer.int',X122),s('type.integer.int',X123)),X124,X125) | p(s(bool,X124)) | s(bool,'F_0') = s(bool,X125) | s('type.integer.int',X123) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X123,X122)),s('type.integer.int',X122)))) )),
  inference(resolution,[],[f903,f298])).
fof(f2000,plain,(
  ( ! [X118,X116,X119,X117,X115] : (sP7(X115,X116,X117) | p(s(bool,X116)) | s(bool,'F_0') = s(bool,X117) | s(bool,'F_0') = s(bool,X118) | sP7(X118,X115,X119)) )),
  inference(resolution,[],[f903,f905])).
fof(f1999,plain,(
  ( ! [X111,X114,X112,X113] : (sP7(X111,X112,X113) | p(s(bool,X112)) | s(bool,'F_0') = s(bool,X113) | s(bool,'F_0') = s(bool,X114) | ~sP1(X114,X111)) )),
  inference(resolution,[],[f903,f896])).
fof(f1998,plain,(
  ( ! [X109,X107,X110,X108] : (sP7(X107,X108,X109) | p(s(bool,X108)) | s(bool,'F_0') = s(bool,X109) | s(bool,'F_0') = s(bool,X110) | ~sP1(X107,X110)) )),
  inference(resolution,[],[f903,f891])).
fof(f1997,plain,(
  ( ! [X103,X105,X106,X104] : (sP7(X103,X104,X105) | p(s(bool,X104)) | s(bool,'F_0') = s(bool,X105) | s(bool,'F_0') = s(bool,X106) | s(bool,X103) = s(bool,X106)) )),
  inference(resolution,[],[f903,f887])).
fof(f1996,plain,(
  ( ! [X101,X99,X102,X100,X98] : (sP7(X98,X99,X100) | p(s(bool,X99)) | s(bool,'F_0') = s(bool,X100) | ~p(s(bool,X101)) | sP7(X98,X101,X102)) )),
  inference(resolution,[],[f903,f371])).
fof(f1995,plain,(
  ( ! [X94,X97,X95,X93,X96] : (sP7(X93,X94,X95) | p(s(bool,X94)) | s(bool,'F_0') = s(bool,X95) | p(s(bool,X96)) | sP7(X93,X97,X96)) )),
  inference(resolution,[],[f903,f370])).
fof(f1994,plain,(
  ( ! [X92,X90,X88,X91,X89] : (sP7(X88,X89,X90) | p(s(bool,X89)) | s(bool,'F_0') = s(bool,X90) | p(s(bool,X91)) | sP7(X92,X91,X88) | p(s(bool,X92))) )),
  inference(resolution,[],[f903,f369])).
fof(f1993,plain,(
  ( ! [X87,X85,X83,X86,X84] : (sP7(X83,X84,X85) | p(s(bool,X84)) | s(bool,'F_0') = s(bool,X85) | sP6(X86,X83,X87)) )),
  inference(resolution,[],[f903,f367])).
fof(f1992,plain,(
  ( ! [X80,X78,X81,X79,X82] : (sP7(X78,X79,X80) | p(s(bool,X79)) | s(bool,'F_0') = s(bool,X80) | sP2(X78,X81,X82)) )),
  inference(resolution,[],[f903,f353])).
fof(f1991,plain,(
  ( ! [X76,X74,X77,X75,X73] : (sP7(X73,X74,X75) | p(s(bool,X74)) | s(bool,'F_0') = s(bool,X75) | sP2(X76,X73,X77)) )),
  inference(resolution,[],[f903,f352])).
fof(f1990,plain,(
  ( ! [X70,X68,X72,X71,X69] : (sP7(X68,X69,X70) | p(s(bool,X69)) | s(bool,'F_0') = s(bool,X70) | sP2(X71,X72,X68)) )),
  inference(resolution,[],[f903,f351])).
fof(f1989,plain,(
  ( ! [X66,X64,X67,X65,X63] : (sP7(X63,X64,X65) | p(s(bool,X64)) | s(bool,'F_0') = s(bool,X65) | sP3(X66,X67,X63)) )),
  inference(resolution,[],[f903,f347])).
fof(f1988,plain,(
  ( ! [X61,X59,X62,X60,X58] : (sP7(X58,X59,X60) | p(s(bool,X59)) | s(bool,'F_0') = s(bool,X60) | sP4(X61,X62,X58)) )),
  inference(resolution,[],[f903,f343])).
fof(f1987,plain,(
  ( ! [X57,X54,X56,X55] : (sP7(X54,X55,X56) | p(s(bool,X55)) | s(bool,'F_0') = s(bool,X56) | ~p(s(bool,X57)) | ~sP1(X54,X57)) )),
  inference(resolution,[],[f903,f325])).
fof(f1984,plain,(
  ( ! [X45,X43,X44,X42] : (sP7(X42,X43,X44) | p(s(bool,X43)) | s(bool,'F_0') = s(bool,X44) | p(s(bool,X45)) | sP1(X45,X42)) )),
  inference(resolution,[],[f903,f322])).
fof(f1983,plain,(
  ( ! [X39,X41,X38,X40] : (sP7(X38,X39,X40) | p(s(bool,X39)) | s(bool,'F_0') = s(bool,X40) | p(s(bool,X41)) | sP1(X38,X41)) )),
  inference(resolution,[],[f903,f319])).
fof(f1982,plain,(
  ( ! [X37,X35,X36,X34] : (sP7(X34,X35,X36) | p(s(bool,X35)) | s(bool,'F_0') = s(bool,X36) | ~p(s(bool,X37)) | ~sP1(X37,X34)) )),
  inference(resolution,[],[f903,f318])).
fof(f1980,plain,(
  ( ! [X28,X26,X29,X27] : (sP7(X26,X27,X28) | p(s(bool,X27)) | s(bool,'F_0') = s(bool,X28) | sP0(X26,X29)) )),
  inference(resolution,[],[f903,f304])).
fof(f1979,plain,(
  ( ! [X24,X23,X25,X22] : (sP7(X22,X23,X24) | p(s(bool,X23)) | s(bool,'F_0') = s(bool,X24) | sP0(X25,X22)) )),
  inference(resolution,[],[f903,f303])).
fof(f1978,plain,(
  ( ! [X21,X19,X20,X18] : (sP7(X18,X19,X20) | p(s(bool,X19)) | s(bool,'F_0') = s(bool,X20) | ~p(s(bool,X21)) | s(bool,X18) = s(bool,X21)) )),
  inference(resolution,[],[f903,f297])).
fof(f1972,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(resolution,[],[f903,f248])).
fof(f1937,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'F_0') = s(bool,X48) | s(bool,X48) = s(bool,X49) | sP7(X50,X51,X49) | s(bool,'F_0') = s(bool,X50)) )),
  inference(resolution,[],[f887,f904])).
fof(f1936,plain,(
  ( ! [X47,X45,X46] : (s(bool,'F_0') = s(bool,X45) | s(bool,X45) = s(bool,X46) | sP1(X46,X47) | s(bool,'F_0') = s(bool,X47)) )),
  inference(resolution,[],[f887,f893])).
fof(f1935,plain,(
  ( ! [X43,X44,X42] : (s(bool,'F_0') = s(bool,X42) | s(bool,X42) = s(bool,X43) | sP1(X44,X43) | s(bool,'F_0') = s(bool,X44)) )),
  inference(resolution,[],[f887,f892])).
fof(f1934,plain,(
  ( ! [X39,X41,X38,X40] : (s(bool,'F_0') = s(bool,X38) | s(bool,X38) = s(bool,X39) | sP6(X39,X40,X41)) )),
  inference(resolution,[],[f887,f368])).
fof(f1933,plain,(
  ( ! [X37,X35,X36,X34] : (s(bool,'F_0') = s(bool,X34) | s(bool,X34) = s(bool,X35) | sP6(X36,X37,X35)) )),
  inference(resolution,[],[f887,f366])).
fof(f1932,plain,(
  ( ! [X30,X33,X31,X32] : (s(bool,'F_0') = s(bool,X30) | s(bool,X30) = s(bool,X31) | sP5(X31,X32,X33) | s(bool,X32) = s(bool,X33)) )),
  inference(resolution,[],[f887,f354])).
fof(f1931,plain,(
  ( ! [X28,X26,X29,X27] : (s(bool,'F_0') = s(bool,X26) | s(bool,X26) = s(bool,X27) | sP3(X27,X28,X29)) )),
  inference(resolution,[],[f887,f349])).
fof(f1930,plain,(
  ( ! [X24,X23,X25,X22] : (s(bool,'F_0') = s(bool,X22) | s(bool,X22) = s(bool,X23) | sP3(X24,X23,X25)) )),
  inference(resolution,[],[f887,f348])).
fof(f1929,plain,(
  ( ! [X21,X19,X20,X18] : (s(bool,'F_0') = s(bool,X18) | s(bool,X18) = s(bool,X19) | sP4(X19,X20,X21)) )),
  inference(resolution,[],[f887,f345])).
fof(f1928,plain,(
  ( ! [X14,X17,X15,X16] : (s(bool,'F_0') = s(bool,X14) | s(bool,X14) = s(bool,X15) | sP4(X16,X15,X17)) )),
  inference(resolution,[],[f887,f344])).
fof(f1926,plain,(
  ( ! [X10,X8,X9] : (s(bool,'F_0') = s(bool,X8) | s(bool,X8) = s(bool,X9) | p(s(bool,X10)) | s(bool,X9) = s(bool,X10)) )),
  inference(resolution,[],[f887,f294])).
fof(f1922,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X0) | s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1)) )),
  inference(resolution,[],[f887,f254])).
fof(f1739,plain,(
  ( ! [X68,X69] : (s(bool,'F_0') = s(bool,X68) | sP7(X68,'T_0',X69)) )),
  inference(resolution,[],[f905,f377])).
fof(f377,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f289])).
fof(f289,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f182])).
fof(f182,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X12] : ! [X7] : (s(X12,X7) = s(X12,X7) <=> p(s(bool,'T_0')))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.REFL_CLAUSE')).
fof(f1738,plain,(
  ( ! [X66,X64,X67,X65,X63] : (s(bool,'F_0') = s(bool,X63) | sP7(X63,X64,X65) | sP7(X66,X67,X64) | s(bool,'F_0') = s(bool,X66)) )),
  inference(resolution,[],[f905,f904])).
fof(f1737,plain,(
  ( ! [X61,X59,X62,X60] : (s(bool,'F_0') = s(bool,X59) | sP7(X59,X60,X61) | sP1(X60,X62) | s(bool,'F_0') = s(bool,X62)) )),
  inference(resolution,[],[f905,f893])).
fof(f1736,plain,(
  ( ! [X57,X58,X56,X55] : (s(bool,'F_0') = s(bool,X55) | sP7(X55,X56,X57) | sP1(X58,X56) | s(bool,'F_0') = s(bool,X58)) )),
  inference(resolution,[],[f905,f892])).
fof(f1735,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s(bool,'F_0') = s(bool,X50) | sP7(X50,X51,X52) | sP6(X51,X53,X54)) )),
  inference(resolution,[],[f905,f368])).
fof(f1734,plain,(
  ( ! [X47,X45,X48,X46,X49] : (s(bool,'F_0') = s(bool,X45) | sP7(X45,X46,X47) | sP6(X48,X49,X46)) )),
  inference(resolution,[],[f905,f366])).
fof(f1733,plain,(
  ( ! [X43,X41,X44,X42,X40] : (s(bool,'F_0') = s(bool,X40) | sP7(X40,X41,X42) | sP5(X41,X43,X44) | s(bool,X43) = s(bool,X44)) )),
  inference(resolution,[],[f905,f354])).
fof(f1732,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s(bool,'F_0') = s(bool,X35) | sP7(X35,X36,X37) | sP3(X36,X38,X39)) )),
  inference(resolution,[],[f905,f349])).
fof(f1731,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s(bool,'F_0') = s(bool,X30) | sP7(X30,X31,X32) | sP3(X33,X31,X34)) )),
  inference(resolution,[],[f905,f348])).
fof(f1730,plain,(
  ( ! [X28,X26,X29,X27,X25] : (s(bool,'F_0') = s(bool,X25) | sP7(X25,X26,X27) | sP4(X26,X28,X29)) )),
  inference(resolution,[],[f905,f345])).
fof(f1729,plain,(
  ( ! [X24,X23,X21,X22,X20] : (s(bool,'F_0') = s(bool,X20) | sP7(X20,X21,X22) | sP4(X23,X21,X24)) )),
  inference(resolution,[],[f905,f344])).
fof(f1727,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,'F_0') = s(bool,X12) | sP7(X12,X13,X14) | p(s(bool,X15)) | s(bool,X13) = s(bool,X15)) )),
  inference(resolution,[],[f905,f294])).
fof(f1723,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,X0) | sP7(X0,X1,X2) | s(bool,'F_0') = s(bool,X1)) )),
  inference(resolution,[],[f905,f254])).
fof(f1722,plain,(
  ( ! [X0] : (sP7('T_0','T_0',X0)) ) | $spl95),
  inference(unit_resulting_resolution,[],[f227,f793,f905])).
fof(f227,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.TRUTH')).
fof(f1711,plain,(
  ( ! [X125,X123,X126,X124,X122] : (sP7(X122,X123,happ(s(fun(X124,bool),X125),s(X124,X126))) | s(bool,'F_0') = s(bool,X122) | p(s(bool,happ(s(fun(X124,bool),X125),s(X124,sK12(X125,X124)))))) )),
  inference(resolution,[],[f904,f292])).
fof(f1710,plain,(
  ( ! [X121,X118,X120,X119,X117] : (sP7(X117,X118,happ(s(fun(X119,bool),X120),s(X119,X121))) | s(bool,'F_0') = s(bool,X117) | p(s(bool,happ(s(fun(X119,bool),X120),s(X119,sK11(X120,X119)))))) )),
  inference(resolution,[],[f904,f291])).
fof(f1718,plain,(
  ( ! [X116,X114,X115,X113] : (s('type.integer.int',X116) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X115),s('type.integer.int',sK13(X116,X115)))) | sP7(X113,X114,'const.integer.int_divides_2'(s('type.integer.int',X115),s('type.integer.int',X116))) | s(bool,'F_0') = s(bool,X113)) )),
  inference(forward_demodulation,[],[f1709,f293])).
fof(f1709,plain,(
  ( ! [X116,X114,X115,X113] : (sP7(X113,X114,'const.integer.int_divides_2'(s('type.integer.int',X115),s('type.integer.int',X116))) | s(bool,'F_0') = s(bool,X113) | s('type.integer.int',X116) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X116,X115)),s('type.integer.int',X115)))) )),
  inference(resolution,[],[f904,f298])).
fof(f1707,plain,(
  ( ! [X109,X107,X110,X108] : (sP7(X107,X108,X109) | s(bool,'F_0') = s(bool,X107) | s(bool,'F_0') = s(bool,X110) | ~sP1(X110,X109)) )),
  inference(resolution,[],[f904,f896])).
fof(f1706,plain,(
  ( ! [X103,X105,X106,X104] : (sP7(X103,X104,X105) | s(bool,'F_0') = s(bool,X103) | s(bool,'F_0') = s(bool,X106) | ~sP1(X105,X106)) )),
  inference(resolution,[],[f904,f891])).
fof(f1705,plain,(
  ( ! [X101,X99,X102,X100,X98] : (sP7(X98,X99,X100) | s(bool,'F_0') = s(bool,X98) | ~p(s(bool,X101)) | sP7(X100,X101,X102)) )),
  inference(resolution,[],[f904,f371])).
fof(f1704,plain,(
  ( ! [X94,X97,X95,X93,X96] : (sP7(X93,X94,X95) | s(bool,'F_0') = s(bool,X93) | p(s(bool,X96)) | sP7(X95,X97,X96)) )),
  inference(resolution,[],[f904,f370])).
fof(f1703,plain,(
  ( ! [X92,X90,X88,X91,X89] : (sP7(X88,X89,X90) | s(bool,'F_0') = s(bool,X88) | p(s(bool,X91)) | sP7(X92,X91,X90) | p(s(bool,X92))) )),
  inference(resolution,[],[f904,f369])).
fof(f1702,plain,(
  ( ! [X87,X85,X83,X86,X84] : (sP7(X83,X84,X85) | s(bool,'F_0') = s(bool,X83) | sP6(X86,X85,X87)) )),
  inference(resolution,[],[f904,f367])).
fof(f1701,plain,(
  ( ! [X80,X78,X81,X79,X82] : (sP7(X78,X79,X80) | s(bool,'F_0') = s(bool,X78) | sP2(X80,X81,X82)) )),
  inference(resolution,[],[f904,f353])).
fof(f1700,plain,(
  ( ! [X76,X74,X77,X75,X73] : (sP7(X73,X74,X75) | s(bool,'F_0') = s(bool,X73) | sP2(X76,X75,X77)) )),
  inference(resolution,[],[f904,f352])).
fof(f1699,plain,(
  ( ! [X70,X68,X72,X71,X69] : (sP7(X68,X69,X70) | s(bool,'F_0') = s(bool,X68) | sP2(X71,X72,X70)) )),
  inference(resolution,[],[f904,f351])).
fof(f1698,plain,(
  ( ! [X66,X64,X67,X65,X63] : (sP7(X63,X64,X65) | s(bool,'F_0') = s(bool,X63) | sP3(X66,X67,X65)) )),
  inference(resolution,[],[f904,f347])).
fof(f1697,plain,(
  ( ! [X61,X59,X62,X60,X58] : (sP7(X58,X59,X60) | s(bool,'F_0') = s(bool,X58) | sP4(X61,X62,X60)) )),
  inference(resolution,[],[f904,f343])).
fof(f1696,plain,(
  ( ! [X57,X54,X56,X55] : (sP7(X54,X55,X56) | s(bool,'F_0') = s(bool,X54) | ~p(s(bool,X57)) | ~sP1(X56,X57)) )),
  inference(resolution,[],[f904,f325])).
fof(f1693,plain,(
  ( ! [X45,X43,X44,X42] : (sP7(X42,X43,X44) | s(bool,'F_0') = s(bool,X42) | p(s(bool,X45)) | sP1(X45,X44)) )),
  inference(resolution,[],[f904,f322])).
fof(f1692,plain,(
  ( ! [X39,X41,X38,X40] : (sP7(X38,X39,X40) | s(bool,'F_0') = s(bool,X38) | p(s(bool,X41)) | sP1(X40,X41)) )),
  inference(resolution,[],[f904,f319])).
fof(f1691,plain,(
  ( ! [X37,X35,X36,X34] : (sP7(X34,X35,X36) | s(bool,'F_0') = s(bool,X34) | ~p(s(bool,X37)) | ~sP1(X37,X36)) )),
  inference(resolution,[],[f904,f318])).
fof(f1689,plain,(
  ( ! [X28,X26,X29,X27] : (sP7(X26,X27,X28) | s(bool,'F_0') = s(bool,X26) | sP0(X28,X29)) )),
  inference(resolution,[],[f904,f304])).
fof(f1688,plain,(
  ( ! [X24,X23,X25,X22] : (sP7(X22,X23,X24) | s(bool,'F_0') = s(bool,X22) | sP0(X25,X24)) )),
  inference(resolution,[],[f904,f303])).
fof(f1687,plain,(
  ( ! [X21,X19,X20,X18] : (sP7(X18,X19,X20) | s(bool,'F_0') = s(bool,X18) | ~p(s(bool,X21)) | s(bool,X20) = s(bool,X21)) )),
  inference(resolution,[],[f904,f297])).
fof(f1681,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X2)) )),
  inference(resolution,[],[f904,f248])).
fof(f1661,plain,(
  ( ! [X48] : (~sP1(X48,'T_0') | s(bool,'F_0') = s(bool,X48)) )),
  inference(resolution,[],[f896,f377])).
fof(f1660,plain,(
  ( ! [X47,X45,X46] : (s(bool,'F_0') = s(bool,X45) | ~sP1(X45,X46) | sP1(X46,X47) | s(bool,'F_0') = s(bool,X47)) )),
  inference(resolution,[],[f896,f893])).
fof(f1659,plain,(
  ( ! [X43,X44,X42] : (s(bool,'F_0') = s(bool,X42) | ~sP1(X42,X43) | sP1(X44,X43) | s(bool,'F_0') = s(bool,X44)) )),
  inference(resolution,[],[f896,f892])).
fof(f1658,plain,(
  ( ! [X39,X41,X38,X40] : (s(bool,'F_0') = s(bool,X38) | ~sP1(X38,X39) | sP6(X39,X40,X41)) )),
  inference(resolution,[],[f896,f368])).
fof(f1657,plain,(
  ( ! [X37,X35,X36,X34] : (s(bool,'F_0') = s(bool,X34) | ~sP1(X34,X35) | sP6(X36,X37,X35)) )),
  inference(resolution,[],[f896,f366])).
fof(f1656,plain,(
  ( ! [X30,X33,X31,X32] : (s(bool,'F_0') = s(bool,X30) | ~sP1(X30,X31) | sP5(X31,X32,X33) | s(bool,X32) = s(bool,X33)) )),
  inference(resolution,[],[f896,f354])).
fof(f1655,plain,(
  ( ! [X28,X26,X29,X27] : (s(bool,'F_0') = s(bool,X26) | ~sP1(X26,X27) | sP3(X27,X28,X29)) )),
  inference(resolution,[],[f896,f349])).
fof(f1654,plain,(
  ( ! [X24,X23,X25,X22] : (s(bool,'F_0') = s(bool,X22) | ~sP1(X22,X23) | sP3(X24,X23,X25)) )),
  inference(resolution,[],[f896,f348])).
fof(f1653,plain,(
  ( ! [X21,X19,X20,X18] : (s(bool,'F_0') = s(bool,X18) | ~sP1(X18,X19) | sP4(X19,X20,X21)) )),
  inference(resolution,[],[f896,f345])).
fof(f1652,plain,(
  ( ! [X14,X17,X15,X16] : (s(bool,'F_0') = s(bool,X14) | ~sP1(X14,X15) | sP4(X16,X15,X17)) )),
  inference(resolution,[],[f896,f344])).
fof(f1650,plain,(
  ( ! [X10,X8,X9] : (s(bool,'F_0') = s(bool,X8) | ~sP1(X8,X9) | p(s(bool,X10)) | s(bool,X9) = s(bool,X10)) )),
  inference(resolution,[],[f896,f294])).
fof(f1626,plain,(
  ( ! [X92,X90,X91,X89] : (sP1(happ(s(fun(X89,bool),X90),s(X89,X91)),X92) | s(bool,'F_0') = s(bool,X92) | p(s(bool,happ(s(fun(X89,bool),X90),s(X89,sK12(X90,X89)))))) )),
  inference(resolution,[],[f893,f292])).
fof(f1625,plain,(
  ( ! [X88,X87,X85,X86] : (sP1(happ(s(fun(X85,bool),X86),s(X85,X87)),X88) | s(bool,'F_0') = s(bool,X88) | p(s(bool,happ(s(fun(X85,bool),X86),s(X85,sK11(X86,X85)))))) )),
  inference(resolution,[],[f893,f291])).
fof(f1637,plain,(
  ( ! [X83,X84,X82] : (s('type.integer.int',X83) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X82),s('type.integer.int',sK13(X83,X82)))) | sP1('const.integer.int_divides_2'(s('type.integer.int',X82),s('type.integer.int',X83)),X84) | s(bool,'F_0') = s(bool,X84)) )),
  inference(forward_demodulation,[],[f1624,f293])).
fof(f1624,plain,(
  ( ! [X83,X84,X82] : (sP1('const.integer.int_divides_2'(s('type.integer.int',X82),s('type.integer.int',X83)),X84) | s(bool,'F_0') = s(bool,X84) | s('type.integer.int',X83) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X83,X82)),s('type.integer.int',X82)))) )),
  inference(resolution,[],[f893,f298])).
fof(f1622,plain,(
  ( ! [X80,X78,X79] : (sP1(X78,X79) | s(bool,'F_0') = s(bool,X79) | s(bool,'F_0') = s(bool,X80) | ~sP1(X78,X80)) )),
  inference(resolution,[],[f893,f891])).
fof(f1621,plain,(
  ( ! [X76,X74,X77,X75] : (sP1(X74,X75) | s(bool,'F_0') = s(bool,X75) | ~p(s(bool,X76)) | sP7(X74,X76,X77)) )),
  inference(resolution,[],[f893,f371])).
fof(f1620,plain,(
  ( ! [X70,X72,X71,X73] : (sP1(X70,X71) | s(bool,'F_0') = s(bool,X71) | p(s(bool,X72)) | sP7(X70,X73,X72)) )),
  inference(resolution,[],[f893,f370])).
fof(f1619,plain,(
  ( ! [X68,X66,X69,X67] : (sP1(X66,X67) | s(bool,'F_0') = s(bool,X67) | p(s(bool,X68)) | sP7(X69,X68,X66) | p(s(bool,X69))) )),
  inference(resolution,[],[f893,f369])).
fof(f1618,plain,(
  ( ! [X64,X62,X65,X63] : (sP1(X62,X63) | s(bool,'F_0') = s(bool,X63) | sP6(X64,X62,X65)) )),
  inference(resolution,[],[f893,f367])).
fof(f1617,plain,(
  ( ! [X61,X59,X60,X58] : (sP1(X58,X59) | s(bool,'F_0') = s(bool,X59) | sP2(X58,X60,X61)) )),
  inference(resolution,[],[f893,f353])).
fof(f1616,plain,(
  ( ! [X57,X54,X56,X55] : (sP1(X54,X55) | s(bool,'F_0') = s(bool,X55) | sP2(X56,X54,X57)) )),
  inference(resolution,[],[f893,f352])).
fof(f1615,plain,(
  ( ! [X52,X50,X53,X51] : (sP1(X50,X51) | s(bool,'F_0') = s(bool,X51) | sP2(X52,X53,X50)) )),
  inference(resolution,[],[f893,f351])).
fof(f1614,plain,(
  ( ! [X47,X48,X46,X49] : (sP1(X46,X47) | s(bool,'F_0') = s(bool,X47) | sP3(X48,X49,X46)) )),
  inference(resolution,[],[f893,f347])).
fof(f1613,plain,(
  ( ! [X45,X43,X44,X42] : (sP1(X42,X43) | s(bool,'F_0') = s(bool,X43) | sP4(X44,X45,X42)) )),
  inference(resolution,[],[f893,f343])).
fof(f1612,plain,(
  ( ! [X39,X41,X40] : (sP1(X39,X40) | s(bool,'F_0') = s(bool,X40) | ~p(s(bool,X41)) | ~sP1(X39,X41)) )),
  inference(resolution,[],[f893,f325])).
fof(f1609,plain,(
  ( ! [X30,X31,X32] : (sP1(X30,X31) | s(bool,'F_0') = s(bool,X31) | p(s(bool,X32)) | sP1(X32,X30)) )),
  inference(resolution,[],[f893,f322])).
fof(f1608,plain,(
  ( ! [X28,X29,X27] : (sP1(X27,X28) | s(bool,'F_0') = s(bool,X28) | p(s(bool,X29)) | sP1(X27,X29)) )),
  inference(resolution,[],[f893,f319])).
fof(f1607,plain,(
  ( ! [X26,X24,X25] : (sP1(X24,X25) | s(bool,'F_0') = s(bool,X25) | ~p(s(bool,X26)) | ~sP1(X26,X24)) )),
  inference(resolution,[],[f893,f318])).
fof(f1605,plain,(
  ( ! [X19,X20,X18] : (sP1(X18,X19) | s(bool,'F_0') = s(bool,X19) | sP0(X18,X20)) )),
  inference(resolution,[],[f893,f304])).
fof(f1604,plain,(
  ( ! [X17,X15,X16] : (sP1(X15,X16) | s(bool,'F_0') = s(bool,X16) | sP0(X17,X15)) )),
  inference(resolution,[],[f893,f303])).
fof(f1603,plain,(
  ( ! [X14,X12,X13] : (sP1(X12,X13) | s(bool,'F_0') = s(bool,X13) | ~p(s(bool,X14)) | s(bool,X12) = s(bool,X14)) )),
  inference(resolution,[],[f893,f297])).
fof(f1597,plain,(
  ( ! [X0,X1] : (sP1(X0,X1) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(resolution,[],[f893,f248])).
fof(f1581,plain,(
  ( ! [X92,X90,X91,X89] : (sP1(X89,happ(s(fun(X90,bool),X91),s(X90,X92))) | s(bool,'F_0') = s(bool,X89) | p(s(bool,happ(s(fun(X90,bool),X91),s(X90,sK12(X91,X90)))))) )),
  inference(resolution,[],[f892,f292])).
fof(f1580,plain,(
  ( ! [X88,X87,X85,X86] : (sP1(X85,happ(s(fun(X86,bool),X87),s(X86,X88))) | s(bool,'F_0') = s(bool,X85) | p(s(bool,happ(s(fun(X86,bool),X87),s(X86,sK11(X87,X86)))))) )),
  inference(resolution,[],[f892,f291])).
fof(f1592,plain,(
  ( ! [X83,X84,X82] : (s('type.integer.int',X84) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X83),s('type.integer.int',sK13(X84,X83)))) | sP1(X82,'const.integer.int_divides_2'(s('type.integer.int',X83),s('type.integer.int',X84))) | s(bool,'F_0') = s(bool,X82)) )),
  inference(forward_demodulation,[],[f1579,f293])).
fof(f1579,plain,(
  ( ! [X83,X84,X82] : (sP1(X82,'const.integer.int_divides_2'(s('type.integer.int',X83),s('type.integer.int',X84))) | s(bool,'F_0') = s(bool,X82) | s('type.integer.int',X84) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X84,X83)),s('type.integer.int',X83)))) )),
  inference(resolution,[],[f892,f298])).
fof(f1577,plain,(
  ( ! [X80,X78,X79] : (sP1(X78,X79) | s(bool,'F_0') = s(bool,X78) | s(bool,'F_0') = s(bool,X80) | ~sP1(X79,X80)) )),
  inference(resolution,[],[f892,f891])).
fof(f1576,plain,(
  ( ! [X76,X74,X77,X75] : (sP1(X74,X75) | s(bool,'F_0') = s(bool,X74) | ~p(s(bool,X76)) | sP7(X75,X76,X77)) )),
  inference(resolution,[],[f892,f371])).
fof(f1575,plain,(
  ( ! [X70,X72,X71,X73] : (sP1(X70,X71) | s(bool,'F_0') = s(bool,X70) | p(s(bool,X72)) | sP7(X71,X73,X72)) )),
  inference(resolution,[],[f892,f370])).
fof(f1574,plain,(
  ( ! [X68,X66,X69,X67] : (sP1(X66,X67) | s(bool,'F_0') = s(bool,X66) | p(s(bool,X68)) | sP7(X69,X68,X67) | p(s(bool,X69))) )),
  inference(resolution,[],[f892,f369])).
fof(f1573,plain,(
  ( ! [X64,X62,X65,X63] : (sP1(X62,X63) | s(bool,'F_0') = s(bool,X62) | sP6(X64,X63,X65)) )),
  inference(resolution,[],[f892,f367])).
fof(f1572,plain,(
  ( ! [X61,X59,X60,X58] : (sP1(X58,X59) | s(bool,'F_0') = s(bool,X58) | sP2(X59,X60,X61)) )),
  inference(resolution,[],[f892,f353])).
fof(f1571,plain,(
  ( ! [X57,X54,X56,X55] : (sP1(X54,X55) | s(bool,'F_0') = s(bool,X54) | sP2(X56,X55,X57)) )),
  inference(resolution,[],[f892,f352])).
fof(f1570,plain,(
  ( ! [X52,X50,X53,X51] : (sP1(X50,X51) | s(bool,'F_0') = s(bool,X50) | sP2(X52,X53,X51)) )),
  inference(resolution,[],[f892,f351])).
fof(f1569,plain,(
  ( ! [X47,X48,X46,X49] : (sP1(X46,X47) | s(bool,'F_0') = s(bool,X46) | sP3(X48,X49,X47)) )),
  inference(resolution,[],[f892,f347])).
fof(f1568,plain,(
  ( ! [X45,X43,X44,X42] : (sP1(X42,X43) | s(bool,'F_0') = s(bool,X42) | sP4(X44,X45,X43)) )),
  inference(resolution,[],[f892,f343])).
fof(f1567,plain,(
  ( ! [X39,X41,X40] : (sP1(X39,X40) | s(bool,'F_0') = s(bool,X39) | ~p(s(bool,X41)) | ~sP1(X40,X41)) )),
  inference(resolution,[],[f892,f325])).
fof(f1564,plain,(
  ( ! [X30,X31,X32] : (sP1(X30,X31) | s(bool,'F_0') = s(bool,X30) | p(s(bool,X32)) | sP1(X32,X31)) )),
  inference(resolution,[],[f892,f322])).
fof(f1563,plain,(
  ( ! [X28,X29,X27] : (sP1(X27,X28) | s(bool,'F_0') = s(bool,X27) | p(s(bool,X29)) | sP1(X28,X29)) )),
  inference(resolution,[],[f892,f319])).
fof(f1562,plain,(
  ( ! [X26,X24,X25] : (sP1(X24,X25) | s(bool,'F_0') = s(bool,X24) | ~p(s(bool,X26)) | ~sP1(X26,X25)) )),
  inference(resolution,[],[f892,f318])).
fof(f1560,plain,(
  ( ! [X19,X20,X18] : (sP1(X18,X19) | s(bool,'F_0') = s(bool,X18) | sP0(X19,X20)) )),
  inference(resolution,[],[f892,f304])).
fof(f1559,plain,(
  ( ! [X17,X15,X16] : (sP1(X15,X16) | s(bool,'F_0') = s(bool,X15) | sP0(X17,X16)) )),
  inference(resolution,[],[f892,f303])).
fof(f1558,plain,(
  ( ! [X14,X12,X13] : (sP1(X12,X13) | s(bool,'F_0') = s(bool,X12) | ~p(s(bool,X14)) | s(bool,X13) = s(bool,X14)) )),
  inference(resolution,[],[f892,f297])).
fof(f1552,plain,(
  ( ! [X0,X1] : (sP1(X0,X1) | s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(resolution,[],[f892,f248])).
fof(f1539,plain,(
  ( ! [X42] : (~sP1('T_0',X42) | s(bool,'F_0') = s(bool,X42)) )),
  inference(resolution,[],[f891,f377])).
fof(f1538,plain,(
  ( ! [X39,X41,X38,X40] : (s(bool,'F_0') = s(bool,X38) | ~sP1(X39,X38) | sP6(X39,X40,X41)) )),
  inference(resolution,[],[f891,f368])).
fof(f1537,plain,(
  ( ! [X37,X35,X36,X34] : (s(bool,'F_0') = s(bool,X34) | ~sP1(X35,X34) | sP6(X36,X37,X35)) )),
  inference(resolution,[],[f891,f366])).
fof(f1536,plain,(
  ( ! [X30,X33,X31,X32] : (s(bool,'F_0') = s(bool,X30) | ~sP1(X31,X30) | sP5(X31,X32,X33) | s(bool,X32) = s(bool,X33)) )),
  inference(resolution,[],[f891,f354])).
fof(f1535,plain,(
  ( ! [X28,X26,X29,X27] : (s(bool,'F_0') = s(bool,X26) | ~sP1(X27,X26) | sP3(X27,X28,X29)) )),
  inference(resolution,[],[f891,f349])).
fof(f1534,plain,(
  ( ! [X24,X23,X25,X22] : (s(bool,'F_0') = s(bool,X22) | ~sP1(X23,X22) | sP3(X24,X23,X25)) )),
  inference(resolution,[],[f891,f348])).
fof(f1533,plain,(
  ( ! [X21,X19,X20,X18] : (s(bool,'F_0') = s(bool,X18) | ~sP1(X19,X18) | sP4(X19,X20,X21)) )),
  inference(resolution,[],[f891,f345])).
fof(f1532,plain,(
  ( ! [X14,X17,X15,X16] : (s(bool,'F_0') = s(bool,X14) | ~sP1(X15,X14) | sP4(X16,X15,X17)) )),
  inference(resolution,[],[f891,f344])).
fof(f1530,plain,(
  ( ! [X10,X8,X9] : (s(bool,'F_0') = s(bool,X8) | ~sP1(X9,X8) | p(s(bool,X10)) | s(bool,X9) = s(bool,X10)) )),
  inference(resolution,[],[f891,f294])).
fof(f1526,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X0) | ~sP1(X1,X0) | s(bool,'F_0') = s(bool,X1)) )),
  inference(resolution,[],[f891,f254])).
fof(f1094,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') = s(bool,X3) | sP7(X4,X3,X5) | ~p(s(bool,X4))) )),
  inference(resolution,[],[f902,f378])).
fof(f1092,plain,(
  ( ! [X0,X1] : (sP6(X0,'T_0',X1)) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f902])).
fof(f1086,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,X1)) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f901])).
fof(f1084,plain,(
  ( ! [X0,X1] : (sP2(X0,'T_0',X1)) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f900])).
fof(f1082,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'T_0')) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f899])).
fof(f1080,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f898])).
fof(f1079,plain,(
  ( ! [X10,X11,X9] : (s(bool,'F_0') = s(bool,X9) | p(s(bool,X10)) | sP5(X10,X9,X11) | ~sP3(X9,X11,X10) | ~sP2(X11,X9,X10)) )),
  inference(resolution,[],[f897,f341])).
fof(f1077,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') = s(bool,X3) | ~p(s(bool,X4)) | sP5(X5,X3,X4) | ~sP3(X3,X4,X5) | ~sP2(X4,X3,X5)) )),
  inference(resolution,[],[f897,f339])).
fof(f1075,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f897])).
fof(f1072,plain,(
  ( ! [X0] : (sP0('T_0',X0)) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f889])).
fof(f1068,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) ) | $spl95),
  inference(unit_resulting_resolution,[],[f793,f888])).
fof(f908,plain,(
  ( ! [X59,X60,X58] : (p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK12(X59,X58))))) | s(bool,'F_0') = s(bool,happ(s(fun(X58,bool),X59),s(X58,X60)))) )),
  inference(resolution,[],[f254,f292])).
fof(f907,plain,(
  ( ! [X57,X56,X55] : (p(s(bool,happ(s(fun(X55,bool),X56),s(X55,sK11(X56,X55))))) | s(bool,'F_0') = s(bool,happ(s(fun(X55,bool),X56),s(X55,X57)))) )),
  inference(resolution,[],[f254,f291])).
fof(f906,plain,(
  ( ! [X54,X53] : (s('type.integer.int',X54) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X54,X53)),s('type.integer.int',X53))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X53),s('type.integer.int',X54)))) )),
  inference(resolution,[],[f254,f298])).
fof(f905,plain,(
  ( ! [X52,X50,X51] : (~p(s(bool,X51)) | s(bool,'F_0') = s(bool,X50) | sP7(X50,X51,X52)) )),
  inference(resolution,[],[f254,f371])).
fof(f904,plain,(
  ( ! [X47,X48,X49] : (sP7(X47,X49,X48) | p(s(bool,X48)) | s(bool,'F_0') = s(bool,X47)) )),
  inference(resolution,[],[f254,f370])).
fof(f903,plain,(
  ( ! [X45,X46,X44] : (sP7(X46,X45,X44) | p(s(bool,X46)) | p(s(bool,X45)) | s(bool,'F_0') = s(bool,X44)) )),
  inference(resolution,[],[f254,f369])).
fof(f902,plain,(
  ( ! [X43,X41,X42] : (sP6(X42,X41,X43) | s(bool,'F_0') = s(bool,X41)) )),
  inference(resolution,[],[f254,f367])).
fof(f901,plain,(
  ( ! [X39,X38,X40] : (sP2(X38,X39,X40) | s(bool,'F_0') = s(bool,X38)) )),
  inference(resolution,[],[f254,f353])).
fof(f900,plain,(
  ( ! [X37,X35,X36] : (sP2(X36,X35,X37) | s(bool,'F_0') = s(bool,X35)) )),
  inference(resolution,[],[f254,f352])).
fof(f899,plain,(
  ( ! [X33,X34,X32] : (sP2(X33,X34,X32) | s(bool,'F_0') = s(bool,X32)) )),
  inference(resolution,[],[f254,f351])).
fof(f898,plain,(
  ( ! [X30,X31,X29] : (sP3(X30,X31,X29) | s(bool,'F_0') = s(bool,X29)) )),
  inference(resolution,[],[f254,f347])).
fof(f897,plain,(
  ( ! [X28,X26,X27] : (sP4(X27,X28,X26) | s(bool,'F_0') = s(bool,X26)) )),
  inference(resolution,[],[f254,f343])).
fof(f896,plain,(
  ( ! [X24,X25] : (~p(s(bool,X25)) | s(bool,'F_0') = s(bool,X24) | ~sP1(X24,X25)) )),
  inference(resolution,[],[f254,f325])).
fof(f893,plain,(
  ( ! [X19,X18] : (p(s(bool,X19)) | sP1(X19,X18) | s(bool,'F_0') = s(bool,X18)) )),
  inference(resolution,[],[f254,f322])).
fof(f892,plain,(
  ( ! [X17,X16] : (p(s(bool,X17)) | sP1(X16,X17) | s(bool,'F_0') = s(bool,X16)) )),
  inference(resolution,[],[f254,f319])).
fof(f891,plain,(
  ( ! [X14,X15] : (~p(s(bool,X15)) | s(bool,'F_0') = s(bool,X14) | ~sP1(X15,X14)) )),
  inference(resolution,[],[f254,f318])).
fof(f889,plain,(
  ( ! [X10,X11] : (sP0(X10,X11) | s(bool,'F_0') = s(bool,X10)) )),
  inference(resolution,[],[f254,f304])).
fof(f888,plain,(
  ( ! [X8,X9] : (sP0(X9,X8) | s(bool,'F_0') = s(bool,X8)) )),
  inference(resolution,[],[f254,f303])).
fof(f887,plain,(
  ( ! [X6,X7] : (~p(s(bool,X7)) | s(bool,'F_0') = s(bool,X6) | s(bool,X6) = s(bool,X7)) )),
  inference(resolution,[],[f254,f297])).
fof(f874,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,X1) | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f253,f235])).
fof(f870,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302])).
fof(f302,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f191])).
fof(f230,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f154])).
fof(f154,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f49])).
fof(f49,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f23])).
fof(f23,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.NOT_CLAUSES|split|1')).
fof(f232,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f50])).
fof(f50,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f24])).
fof(f24,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.NOT_CLAUSES|split|2')).
fof(f253,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.EQ_CLAUSES|split|2')).
fof(f254,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f159])).
fof(f4714,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | $spl306),
  inference(cnf_transformation,[],[f4714_D])).
fof(f4714_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f6731,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | ($spl95 | $spl230 | $spl278)),
  inference(backward_demodulation,[],[f6728,f3340])).
fof(f3340,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl278),
  inference(cnf_transformation,[],[f3340_D])).
fof(f3340_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f3228,plain,(
  ( ! [X8] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl264),
  inference(cnf_transformation,[],[f3228_D])).
fof(f3228_D,plain,(
  ( ! [X8] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl264),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl264])])).
fof(f8396,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl478),
  inference(cnf_transformation,[],[f8396_D])).
fof(f8396_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl478),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl478])])).
fof(f8334,plain,(
  ( ! [X30,X28,X29] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X28),s('type.integer.int',X28))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X28) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3690,f3187])).
fof(f8333,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3690,f3187])).
fof(f8401,plain,(
  ( ! [X20] : (s('type.integer.int',X20) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X20),s('type.integer.int',sK10))),s('type.integer.int',sK10)))) ) | $spl480),
  inference(cnf_transformation,[],[f8401_D])).
fof(f8401_D,plain,(
  ( ! [X20] : (s('type.integer.int',X20) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X20),s('type.integer.int',sK10))),s('type.integer.int',sK10)))) ) <=> ~$spl480),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl480])])).
fof(f2081,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl174),
  inference(cnf_transformation,[],[f2081_D])).
fof(f2081_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f8403,plain,(
  ( ! [X24] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',sK10))),s('type.integer.int',sK10)))) ) | ($spl92 | $spl230)),
  inference(forward_demodulation,[],[f8402,f787])).
fof(f8402,plain,(
  ( ! [X24] : (s('type.integer.int',X24) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',sK10))),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) ) | ($spl92 | $spl230)),
  inference(forward_demodulation,[],[f8332,f6179])).
fof(f8332,plain,(
  ( ! [X24] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',sK10))),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) ) | $spl92),
  inference(superposition,[],[f3690,f787])).
fof(f8400,plain,(
  ( ! [X20] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X20),s('type.integer.int',sK10))),s('type.integer.int',sK10)))) ) | ($spl4 | $spl230)),
  inference(forward_demodulation,[],[f8399,f384])).
fof(f8399,plain,(
  ( ! [X20] : (s('type.integer.int',X20) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X20),s('type.integer.int',sK10))),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) ) | ($spl4 | $spl230)),
  inference(forward_demodulation,[],[f8330,f6179])).
fof(f8330,plain,(
  ( ! [X20] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X20),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X20),s('type.integer.int',sK10))),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) ) | $spl4),
  inference(superposition,[],[f3690,f384])).
fof(f3223,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | $spl262),
  inference(cnf_transformation,[],[f3223_D])).
fof(f3223_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f8395,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f8322,f2892])).
fof(f8322,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3690,f246])).
fof(f8392,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl230 | $spl236)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f598,f597,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2058,f2063,f2064,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2478,f2493,f2485,f2486,f2529,f2536,f2537,f2919,f2922,f2923,f2924,f2925,f2927,f2930,f2321,f2314,f3093,f3094,f3095,f3096,f3097,f3098,f3100,f3102,f3103,f3104,f3105,f3124,f3157,f3220,f3224,f3226,f3227,f3231,f3235,f3237,f3238,f3240,f3244,f3247,f3250,f3251,f3196,f3212,f3248,f3205,f3198,f3197,f3195,f3188,f3185,f3178,f2511,f2346,f2543,f2531,f2528,f2527,f2526,f2525,f2524,f2523,f2522,f2521,f2520,f2519,f2518,f2517,f2515,f621,f3258,f3257,f3246,f3216,f3211,f3199,f3194,f3180,f3524,f3526,f3527,f3529,f3532,f3534,f3535,f3536,f3537,f3538,f3539,f3540,f3541,f3542,f3543,f3544,f3545,f3557,f3592,f3654,f3692,f3698,f3700,f3679,f3670,f3645,f3664,f3631,f2542,f2492,f2327,f2354,f3023,f2355,f619,f2460,f2464,f2466,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2475,f2476,f2477,f2480,f2502,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f2359,f2060,f299,f3029,f3027,f3002,f2992,f2345,f2323,f234,f384,f6170,f6172,f6173,f3715,f3711,f3710,f3690,f3680,f3678,f3677,f3671,f3662,f3648,f3644,f3632,f3628,f3614,f3264,f3263,f3203,f3187,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f2933,f2892,f6179,f6181,f6182,f6184,f6185,f6186,f6187,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6199,f6200,f6201,f6218,f6246,f6264,f6273,f6299,f6381,f6649,f6636,f6592,f6591,f6590,f6589,f6574,f6543,f6523,f6521,f6688,f6689,f6690,f6693,f6700,f6701,f6702,f6703,f6704,f6705,f6706,f6762,f6777,f6780,f6798,f6800,f6802,f6808,f6820,f6878,f6828,f6882,f6885,f6837,f6839,f6891,f6848,f6865,f6866,f6983,f7194,f7068,f7200,f7203,f7077,f7091,f7209,f7213,f7215,f7216,f7217,f7218,f7219,f7220,f7221,f7222,f7223,f7224,f7225,f7226,f7228,f7241,f7242,f7244,f7249,f7253,f7255,f7256,f7257,f7258,f7259,f7260,f7261,f7262,f7263,f7264,f7265,f7266,f7268,f7280,f7281,f7283,f7293,f7370,f7298,f7374,f7378,f7307,f7381,f7310,f7385,f7389,f7319,f7342,f7402,f7351,f7356,f7358,f7359,f7471,f7409,f7476,f7420,f7482,f7435,f7486,f7490,f7444,f7493,f7447,f7497,f7501,f7456,f7468,f7469,f7509,f7513,f7515,f7516,f7517,f7518,f7519,f7520,f7521,f7522,f7523,f7524,f7525,f7526,f7528,f7556,f7557,f7559,f7537,f7567,f7540,f7571,f7574,f7549,f7602,f7606,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7618,f7619,f7647,f7648,f7621,f7653,f7630,f7660,f7633,f7662,f7664,f7667,f7642,f8013,f8015,f7898,f8029,f8058,f8060,f7968,f8064,f8066,f8069,f8070,f8071,f8073,f8076,f8078,f8079,f8080,f8081,f8082,f8083,f8084,f8085,f8086,f8242,f8093,f8096,f8097,f8101,f8103,f8104,f8246,f8248,f8124,f8125,f8251,f8134,f8137,f8255,f8257,f8149,f8151,f8152,f8153,f8160,f8163,f8165,f8166,f8168,f8169,f8170,f8172,f8180,f8183,f8259,f8287,f8264,f8267,f8268,f8272,f8274,f8275,f8289,f8312,f8391])).
fof(f8391,plain,(
  s('type.integer.int',sK9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl230 | $spl236)),
  inference(forward_demodulation,[],[f8390,f6179])).
fof(f8390,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl236)),
  inference(forward_demodulation,[],[f8319,f2933])).
fof(f8319,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | $spl4),
  inference(superposition,[],[f3690,f384])).
fof(f8312,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3690,f293])).
fof(f8272,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X21,X22)),s('type.integer.int',X22))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X22),s('type.integer.int',X21)))) )),
  inference(superposition,[],[f3203,f906])).
fof(f8268,plain,(
  ( ! [X12,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X13))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X12)))) ) | $spl230),
  inference(superposition,[],[f3203,f6185])).
fof(f8267,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X11))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',X10))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(superposition,[],[f3203,f6179])).
fof(f8264,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2))))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) )),
  inference(superposition,[],[f3203,f293])).
fof(f8172,plain,(
  ( ! [X121,X122,X120,X119] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X121),s('type.integer.int',X122))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X120),s('type.integer.int',X120))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X121),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X119),s('type.integer.int',X119)))))) | s('type.integer.int',X120) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X119) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6273,f3187])).
fof(f8170,plain,(
  ( ! [X111,X109,X112,X110,X113] : (s('type.integer.int',X111) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X112),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X113),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X110),s('type.integer.int',X110))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X109),s('type.integer.int',X109))),s('type.integer.int',X113))),s('type.integer.int',X111)))) | s('type.integer.int',X110) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X109) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6264,f3187])).
fof(f8169,plain,(
  ( ! [X107,X105,X108,X106,X104] : (s('type.integer.int',X106) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X107),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X105),s('type.integer.int',X105))),s('type.integer.int',X108))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X108),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X104),s('type.integer.int',X104))))),s('type.integer.int',X106)))) | s('type.integer.int',X105) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X104) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6264,f3187])).
fof(f8168,plain,(
  ( ! [X103,X101,X99,X102,X100] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X100),s('type.integer.int',X100))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X101),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X102),s('type.integer.int',X103))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X103),s('type.integer.int',X102))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X99),s('type.integer.int',X99)))))) | s('type.integer.int',X100) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X99) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6264,f3187])).
fof(f8166,plain,(
  ( ! [X92,X90,X93,X91,X89] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X92),s('type.integer.int',X93))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X91),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X90),s('type.integer.int',X90))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X93),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X89),s('type.integer.int',X89))),s('type.integer.int',X91)))))) | s('type.integer.int',X90) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X89) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6246,f3187])).
fof(f8165,plain,(
  ( ! [X88,X87,X85,X86,X84] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X87),s('type.integer.int',X88))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X85),s('type.integer.int',X85))),s('type.integer.int',X86))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X88),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X86),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X84),s('type.integer.int',X84)))))))) | s('type.integer.int',X85) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X84) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6246,f3187])).
fof(f8163,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X78),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X77),s('type.integer.int',X77)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X76),s('type.integer.int',X76))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X78),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X76),s('type.integer.int',X76)),'const.integer.int_mul_2'(s('type.integer.int',X78),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X77) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X76) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6187,f3187])).
fof(f8160,plain,(
  ( ! [X68,X69,X67] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X69),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X68),s('type.integer.int',X68)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X67),s('type.integer.int',X67))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X69),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X67),s('type.integer.int',X67))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X69)))) | s('type.integer.int',X68) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X67) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6186,f3187])).
fof(f8153,plain,(
  ( ! [X52,X53,X51] : (s('type.integer.int',X53) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X53,'const.integer.int_div_2'(s('type.integer.int',X51),s('type.integer.int',X51)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X52),s('type.integer.int',X52))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X51),s('type.integer.int',X51))),s('type.integer.int',X53))) | s('type.integer.int',X52) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X51) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f906,f3187])).
fof(f8152,plain,(
  ( ! [X47,X50,X48,X49] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X48),s('type.integer.int',X48))),s('type.integer.int',X49))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X50),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X47),s('type.integer.int',X47))),s('type.integer.int',X49))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X50),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X47),s('type.integer.int',X47))))),s('type.integer.int',X49))) | s('type.integer.int',X49) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X48) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X47) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f328,f3187])).
fof(f8151,plain,(
  ( ! [X45,X43,X46,X44] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X46),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X43),s('type.integer.int',X43))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X46),s('type.integer.int',X45))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X43),s('type.integer.int',X43))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X43),s('type.integer.int',X43))) | s('type.integer.int',X44) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X43) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f328,f3187])).
fof(f8149,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X37),s('type.integer.int',X38))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X36),s('type.integer.int',X36))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X38),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35)))))) | s('type.integer.int',X36) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X35) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f299,f3187])).
fof(f8257,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25)),X27)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26)))))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f8146,f293])).
fof(f8146,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25)),X27)),s('type.integer.int',X27))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f298,f3187])).
fof(f8101,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X21,X22)),s('type.integer.int',X22))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X22),s('type.integer.int',X21)))) )),
  inference(superposition,[],[f3187,f906])).
fof(f8097,plain,(
  ( ! [X12,X13] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',X13))) | s('type.integer.int',X13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X12)))) ) | $spl230),
  inference(superposition,[],[f3187,f6185])).
fof(f8096,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',X10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(superposition,[],[f3187,f6179])).
fof(f8093,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) )),
  inference(superposition,[],[f3187,f293])).
fof(f8086,plain,(
  ( ! [X94,X95,X96] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X94),s('type.integer.int',X95)))) | s('type.integer.int',X95) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X96))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X94),s('type.integer.int',X94)))) ) | $spl230),
  inference(forward_demodulation,[],[f8002,f6179])).
fof(f8002,plain,(
  ( ! [X94,X95,X96] : (s('type.integer.int',X95) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X96))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X94),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',X95)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X94),s('type.integer.int',X94)))) ) | $spl230),
  inference(superposition,[],[f6273,f6299])).
fof(f8085,plain,(
  ( ! [X92,X93,X91] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X92),s('type.integer.int',X91)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X92),s('type.integer.int',X93))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X91),s('type.integer.int',X91)))) ) | $spl230),
  inference(forward_demodulation,[],[f8001,f6179])).
fof(f8001,plain,(
  ( ! [X92,X93,X91] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X92),s('type.integer.int',X93))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X92),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X91),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X91),s('type.integer.int',X91)))) ) | $spl230),
  inference(superposition,[],[f6273,f6299])).
fof(f8084,plain,(
  ( ! [X85,X83,X86,X84] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X83),s('type.integer.int',X86))),s('type.integer.int',X84)))) | s('type.integer.int',X84) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X85),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X86),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X83),s('type.integer.int',X83)))) ) | $spl230),
  inference(forward_demodulation,[],[f7999,f6179])).
fof(f7999,plain,(
  ( ! [X85,X83,X86,X84] : (s('type.integer.int',X84) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X85),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X86),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X83),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',X86))),s('type.integer.int',X84)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X83),s('type.integer.int',X83)))) ) | $spl230),
  inference(superposition,[],[f6264,f6299])).
fof(f8083,plain,(
  ( ! [X80,X81,X79,X82] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X82),s('type.integer.int',X79))),s('type.integer.int',X80)))) | s('type.integer.int',X80) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X81),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X82))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X79),s('type.integer.int',X79)))) ) | $spl230),
  inference(forward_demodulation,[],[f7998,f6179])).
fof(f7998,plain,(
  ( ! [X80,X81,X79,X82] : (s('type.integer.int',X80) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X81),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X82))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X82),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X79),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))),s('type.integer.int',X80)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X79),s('type.integer.int',X79)))) ) | $spl230),
  inference(superposition,[],[f6264,f6299])).
fof(f8082,plain,(
  ( ! [X78,X76,X77,X75] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X78),s('type.integer.int',X77))),s('type.integer.int',X75)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X76),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X77),s('type.integer.int',X78))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X75),s('type.integer.int',X75)))) ) | $spl230),
  inference(forward_demodulation,[],[f7997,f6179])).
fof(f7997,plain,(
  ( ! [X78,X76,X77,X75] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X76),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X77),s('type.integer.int',X78))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X78),s('type.integer.int',X77))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X75),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X75),s('type.integer.int',X75)))) ) | $spl230),
  inference(superposition,[],[f6264,f6299])).
fof(f8081,plain,(
  ( ! [X74,X72,X71,X73] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X71),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X73),s('type.integer.int',X72)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X72),s('type.integer.int',X73))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X74),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X71),s('type.integer.int',X71)))) ) | $spl230),
  inference(forward_demodulation,[],[f7996,f6179])).
fof(f7996,plain,(
  ( ! [X74,X72,X71,X73] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X72),s('type.integer.int',X73))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X74),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X71),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X73),s('type.integer.int',X72)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X71),s('type.integer.int',X71)))) ) | $spl230),
  inference(superposition,[],[f6246,f6299])).
fof(f8080,plain,(
  ( ! [X70,X68,X69,X67] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X70),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X67),s('type.integer.int',X68)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X69),s('type.integer.int',X70))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X68),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X67),s('type.integer.int',X67)))) ) | $spl230),
  inference(forward_demodulation,[],[f7995,f6179])).
fof(f7995,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X69),s('type.integer.int',X70))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X68),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X70),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X67),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',X68)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X67),s('type.integer.int',X67)))) ) | $spl230),
  inference(superposition,[],[f6246,f6299])).
fof(f8079,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X66),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X64),s('type.integer.int',X63)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X65),s('type.integer.int',X66))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X64))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X63),s('type.integer.int',X63)))) ) | $spl230),
  inference(forward_demodulation,[],[f7994,f6179])).
fof(f7994,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X65),s('type.integer.int',X66))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X64))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X66),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X64),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X63),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X63),s('type.integer.int',X63)))) ) | $spl230),
  inference(superposition,[],[f6246,f6299])).
fof(f8078,plain,(
  ( ! [X57,X58] : (s('type.integer.int',X57) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X58),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X57),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',X58),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X58),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X57),s('type.integer.int',X57)))) ) | $spl230),
  inference(forward_demodulation,[],[f7992,f6179])).
fof(f7992,plain,(
  ( ! [X57,X58] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X58),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X57),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X58),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X57),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',X58),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X57),s('type.integer.int',X57)))) ) | $spl230),
  inference(superposition,[],[f6187,f6299])).
fof(f8076,plain,(
  ( ! [X54,X53] : (s('type.integer.int',X54) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X53),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',X53),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X54)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X53),s('type.integer.int',X53)))) ) | $spl230),
  inference(forward_demodulation,[],[f7990,f6179])).
fof(f7990,plain,(
  ( ! [X54,X53] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X54)))) | s('type.integer.int',X54) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X53),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X54),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',X53),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X53),s('type.integer.int',X53)))) ) | $spl230),
  inference(superposition,[],[f6186,f6299])).
fof(f8070,plain,(
  ( ! [X43,X42] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X42),s('type.integer.int',X43))) | s('type.integer.int',X43) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X43,'const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X42)))) ) | $spl230),
  inference(forward_demodulation,[],[f7982,f6179])).
fof(f7982,plain,(
  ( ! [X43,X42] : (s('type.integer.int',X43) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X43,'const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',X43))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X42)))) ) | $spl230),
  inference(superposition,[],[f906,f6299])).
fof(f8069,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X39),s('type.integer.int',X40))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X39))),s('type.integer.int',X40))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X40))) | s('type.integer.int',X40) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X39),s('type.integer.int',X39)))) ) | $spl230),
  inference(forward_demodulation,[],[f7981,f6179])).
fof(f7981,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X40))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',X40))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))),s('type.integer.int',X40))) | s('type.integer.int',X40) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X39),s('type.integer.int',X39)))) ) | $spl230),
  inference(superposition,[],[f328,f6299])).
fof(f8066,plain,(
  ( ! [X26,X25] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int',sK13(X26,'const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X26)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25)))) ) | $spl230),
  inference(forward_demodulation,[],[f8065,f6179])).
fof(f8065,plain,(
  ( ! [X26,X25] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',sK13(X26,'const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X26)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25)))) ) | $spl230),
  inference(forward_demodulation,[],[f7976,f293])).
fof(f7976,plain,(
  ( ! [X26,X25] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X26)))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X26,'const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25)))) ) | $spl230),
  inference(superposition,[],[f298,f6299])).
fof(f8064,plain,(
  ( ! [X24,X23] : (s('type.integer.int',X23) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X24)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X23),s('type.integer.int',X23)))) ) | $spl230),
  inference(forward_demodulation,[],[f8063,f6179])).
fof(f8063,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X24)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X23),s('type.integer.int',X23)))) ) | $spl230),
  inference(forward_demodulation,[],[f7975,f293])).
fof(f7975,plain,(
  ( ! [X24,X23] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X24)),s('type.integer.int',X24))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X23),s('type.integer.int',X23)))) ) | $spl230),
  inference(superposition,[],[f298,f6299])).
fof(f7968,plain,(
  ( ! [X14,X15] : (s('type.integer.int',X15) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int',X15)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14)))) ) | $spl230),
  inference(superposition,[],[f6273,f6299])).
fof(f8060,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12)))) | s('type.integer.int',X12) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',X11)))) ) | $spl230),
  inference(forward_demodulation,[],[f7967,f6185])).
fof(f7967,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',X12) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X11))),s('type.integer.int',X12)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',X11)))) ) | $spl230),
  inference(superposition,[],[f6264,f6299])).
fof(f8058,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X5)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X7))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X5),s('type.integer.int',X5)))) ) | $spl230),
  inference(forward_demodulation,[],[f7965,f6185])).
fof(f7965,plain,(
  ( ! [X6,X7,X5] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X7))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X5)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X5),s('type.integer.int',X5)))) ) | $spl230),
  inference(superposition,[],[f6246,f6299])).
fof(f8029,plain,(
  ( ! [X12,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',sK13(X12,X13)))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',sK13(X12,X13)))))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | $spl230),
  inference(forward_demodulation,[],[f8028,f293])).
fof(f8028,plain,(
  ( ! [X12,X13] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | $spl230),
  inference(forward_demodulation,[],[f7910,f6179])).
fof(f7910,plain,(
  ( ! [X12,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | $spl230),
  inference(superposition,[],[f6299,f906])).
fof(f8013,plain,(
  ( ! [X12,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',sK13(X12,X13)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X12),s('type.integer.int',X12))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | $spl230),
  inference(forward_demodulation,[],[f7894,f293])).
fof(f7894,plain,(
  ( ! [X12,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X12),s('type.integer.int',X12))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | $spl230),
  inference(superposition,[],[f6299,f906])).
fof(f7642,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22)),'const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6187,f245])).
fof(f7667,plain,(
  ( ! [X21,X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)),'const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7641,f2892])).
fof(f7641,plain,(
  ( ! [X21,X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)),'const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6187,f246])).
fof(f7664,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',sK13(X16,X17)))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17)),'const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',X16)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | $spl230),
  inference(forward_demodulation,[],[f7639,f293])).
fof(f7639,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',X16)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17)),'const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | $spl230),
  inference(superposition,[],[f6187,f906])).
fof(f7662,plain,(
  ( ! [X10,X11] : (s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10)),'const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10))))) ) | $spl230),
  inference(forward_demodulation,[],[f7636,f6185])).
fof(f7636,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10)),'const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) | $spl230),
  inference(superposition,[],[f6187,f6185])).
fof(f7633,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3)),'const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) | $spl230),
  inference(superposition,[],[f6187,f293])).
fof(f7660,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7632,f2892])).
fof(f7632,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6187,f246])).
fof(f7630,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23)))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',sK13(X23,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6187,f245])).
fof(f7653,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',sK13(X16,X17)))),s('type.integer.int',sK13(X18,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',sK13(X16,X17)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X16),s('type.integer.int',X18)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | $spl230),
  inference(forward_demodulation,[],[f7627,f293])).
fof(f7627,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X16),s('type.integer.int',X18)))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17))),s('type.integer.int',sK13(X18,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | $spl230),
  inference(superposition,[],[f6187,f906])).
fof(f7621,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2))),s('type.integer.int',X4)))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))),s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) | $spl230),
  inference(superposition,[],[f6187,f293])).
fof(f7647,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int',sK13(X1,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7646,f6185])).
fof(f7646,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK13(X1,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7620,f2892])).
fof(f7620,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK13(X1,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6187,f246])).
fof(f7619,plain,(
  ( ! [X59,X57,X58,X56] : (s('type.integer.int',X56) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X57),s('type.integer.int',sK13(X56,'const.integer.int_mul_2'(s('type.integer.int',X57),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP7(X58,X59,'const.integer.int_divides_2'(s('type.integer.int',X57),s('type.integer.int',X56))) | s(bool,'F_0') = s(bool,X58)) ) | $spl230),
  inference(resolution,[],[f6187,f904])).
fof(f7618,plain,(
  ( ! [X54,X52,X55,X53] : (s('type.integer.int',X52) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X53),s('type.integer.int',sK13(X52,'const.integer.int_mul_2'(s('type.integer.int',X53),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP7(X54,'const.integer.int_divides_2'(s('type.integer.int',X53),s('type.integer.int',X52)),X55) | p(s(bool,X54)) | s(bool,'F_0') = s(bool,X55)) ) | $spl230),
  inference(resolution,[],[f6187,f903])).
fof(f7617,plain,(
  ( ! [X50,X48,X51,X49] : (s('type.integer.int',X48) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X49),s('type.integer.int',sK13(X48,'const.integer.int_mul_2'(s('type.integer.int',X49),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP7('const.integer.int_divides_2'(s('type.integer.int',X49),s('type.integer.int',X48)),X50,X51) | p(s(bool,X50)) | s(bool,'F_0') = s(bool,X51)) ) | $spl230),
  inference(resolution,[],[f6187,f903])).
fof(f7616,plain,(
  ( ! [X47,X45,X46] : (s('type.integer.int',X45) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X46),s('type.integer.int',sK13(X45,'const.integer.int_mul_2'(s('type.integer.int',X46),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP1('const.integer.int_divides_2'(s('type.integer.int',X46),s('type.integer.int',X45)),X47) | s(bool,'F_0') = s(bool,X47)) ) | $spl230),
  inference(resolution,[],[f6187,f893])).
fof(f7615,plain,(
  ( ! [X43,X44,X42] : (s('type.integer.int',X42) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,'const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP1(X44,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42))) | s(bool,'F_0') = s(bool,X44)) ) | $spl230),
  inference(resolution,[],[f6187,f892])).
fof(f7614,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X38) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,'const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP6('const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)),X40,X41)) ) | $spl230),
  inference(resolution,[],[f6187,f368])).
fof(f7613,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.integer.int',X34) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',sK13(X34,'const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP6(X36,X37,'const.integer.int_divides_2'(s('type.integer.int',X35),s('type.integer.int',X34)))) ) | $spl230),
  inference(resolution,[],[f6187,f366])).
fof(f7612,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.integer.int',X30) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13(X30,'const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP5('const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)),X32,X33) | s(bool,X32) = s(bool,X33)) ) | $spl230),
  inference(resolution,[],[f6187,f354])).
fof(f7611,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int',sK13(X26,'const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP3('const.integer.int_divides_2'(s('type.integer.int',X27),s('type.integer.int',X26)),X28,X29)) ) | $spl230),
  inference(resolution,[],[f6187,f349])).
fof(f7610,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',sK13(X22,'const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP3(X24,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int',X22)),X25)) ) | $spl230),
  inference(resolution,[],[f6187,f348])).
fof(f7609,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',sK13(X18,'const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP4('const.integer.int_divides_2'(s('type.integer.int',X19),s('type.integer.int',X18)),X20,X21)) ) | $spl230),
  inference(resolution,[],[f6187,f345])).
fof(f7608,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int',sK13(X14,'const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | sP4(X16,'const.integer.int_divides_2'(s('type.integer.int',X15),s('type.integer.int',X14)),X17)) ) | $spl230),
  inference(resolution,[],[f6187,f344])).
fof(f7606,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13(X8,'const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | p(s(bool,X10)) | s(bool,X10) = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) ) | $spl230),
  inference(resolution,[],[f6187,f294])).
fof(f7602,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13(X0,'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) | $spl230),
  inference(resolution,[],[f6187,f254])).
fof(f7549,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X23)))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6186,f245])).
fof(f7574,plain,(
  ( ! [X21,X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X21)))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7548,f2892])).
fof(f7548,plain,(
  ( ! [X21,X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X21)))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6186,f246])).
fof(f7571,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',sK13(X16,X17)))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',sK13(X16,X17)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X18)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',X16)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | $spl230),
  inference(forward_demodulation,[],[f7546,f293])).
fof(f7546,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',X16)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X18)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | $spl230),
  inference(superposition,[],[f6186,f906])).
fof(f7540,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X4))))) ) | $spl230),
  inference(superposition,[],[f6186,f293])).
fof(f7567,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X1)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7539,f2892])).
fof(f7539,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6186,f246])).
fof(f7537,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23)))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22)))))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6186,f245])).
fof(f7559,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',sK13(X16,X17)))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X16),s('type.integer.int',X18)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | $spl230),
  inference(forward_demodulation,[],[f7534,f293])).
fof(f7534,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X16),s('type.integer.int',X18)))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | $spl230),
  inference(superposition,[],[f6186,f906])).
fof(f7557,plain,(
  ( ! [X10,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X11))))) ) | $spl230),
  inference(forward_demodulation,[],[f7531,f6185])).
fof(f7531,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X11)))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10))))))) ) | $spl230),
  inference(superposition,[],[f6186,f6185])).
fof(f7556,plain,(
  ( ! [X8,X9] : (s('type.integer.int',X9) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) ) | $spl230),
  inference(forward_demodulation,[],[f7530,f6179])).
fof(f7530,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',X9)))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) | $spl230),
  inference(superposition,[],[f6186,f6179])).
fof(f7528,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2))),s('type.integer.int',X4)))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))) ) | $spl230),
  inference(superposition,[],[f6186,f293])).
fof(f7526,plain,(
  ( ! [X59,X57,X58,X56] : (s('type.integer.int',X56) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X57),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X56),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X57)))) | sP7(X58,X59,'const.integer.int_divides_2'(s('type.integer.int',X57),s('type.integer.int',X56))) | s(bool,'F_0') = s(bool,X58)) ) | $spl230),
  inference(resolution,[],[f6186,f904])).
fof(f7525,plain,(
  ( ! [X54,X52,X55,X53] : (s('type.integer.int',X52) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X53),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X52),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X53)))) | sP7(X54,'const.integer.int_divides_2'(s('type.integer.int',X53),s('type.integer.int',X52)),X55) | p(s(bool,X54)) | s(bool,'F_0') = s(bool,X55)) ) | $spl230),
  inference(resolution,[],[f6186,f903])).
fof(f7524,plain,(
  ( ! [X50,X48,X51,X49] : (s('type.integer.int',X48) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X49),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X49)))) | sP7('const.integer.int_divides_2'(s('type.integer.int',X49),s('type.integer.int',X48)),X50,X51) | p(s(bool,X50)) | s(bool,'F_0') = s(bool,X51)) ) | $spl230),
  inference(resolution,[],[f6186,f903])).
fof(f7523,plain,(
  ( ! [X47,X45,X46] : (s('type.integer.int',X45) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X46),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X46)))) | sP1('const.integer.int_divides_2'(s('type.integer.int',X46),s('type.integer.int',X45)),X47) | s(bool,'F_0') = s(bool,X47)) ) | $spl230),
  inference(resolution,[],[f6186,f893])).
fof(f7522,plain,(
  ( ! [X43,X44,X42] : (s('type.integer.int',X42) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X43)))) | sP1(X44,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42))) | s(bool,'F_0') = s(bool,X44)) ) | $spl230),
  inference(resolution,[],[f6186,f892])).
fof(f7521,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X38) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X38),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X39)))) | sP6('const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)),X40,X41)) ) | $spl230),
  inference(resolution,[],[f6186,f368])).
fof(f7520,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.integer.int',X34) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X34),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X35)))) | sP6(X36,X37,'const.integer.int_divides_2'(s('type.integer.int',X35),s('type.integer.int',X34)))) ) | $spl230),
  inference(resolution,[],[f6186,f366])).
fof(f7519,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.integer.int',X30) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X31)))) | sP5('const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)),X32,X33) | s(bool,X32) = s(bool,X33)) ) | $spl230),
  inference(resolution,[],[f6186,f354])).
fof(f7518,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X27)))) | sP3('const.integer.int_divides_2'(s('type.integer.int',X27),s('type.integer.int',X26)),X28,X29)) ) | $spl230),
  inference(resolution,[],[f6186,f349])).
fof(f7517,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X22),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X23)))) | sP3(X24,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int',X22)),X25)) ) | $spl230),
  inference(resolution,[],[f6186,f348])).
fof(f7516,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X19)))) | sP4('const.integer.int_divides_2'(s('type.integer.int',X19),s('type.integer.int',X18)),X20,X21)) ) | $spl230),
  inference(resolution,[],[f6186,f345])).
fof(f7515,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X15)))) | sP4(X16,'const.integer.int_divides_2'(s('type.integer.int',X15),s('type.integer.int',X14)),X17)) ) | $spl230),
  inference(resolution,[],[f6186,f344])).
fof(f7513,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X9)))) | p(s(bool,X10)) | s(bool,X10) = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) ) | $spl230),
  inference(resolution,[],[f6186,f294])).
fof(f7509,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),X1)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) | $spl230),
  inference(resolution,[],[f6186,f254])).
fof(f7469,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.integer.int',X11) != s('type.integer.int',X14) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X12))),s('type.integer.int',X14)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))),s('type.integer.int',X11)))) )),
  inference(superposition,[],[f6264,f906])).
fof(f7468,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int',X10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',X9))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X8))),s('type.integer.int',X10))))) ) | $spl230),
  inference(superposition,[],[f6264,f6185])).
fof(f7456,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int',X43) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X44),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X42))),s('type.integer.int',X45))),s('type.integer.int',X43)))) | s('type.integer.int',X42) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6264,f245])).
fof(f7501,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X39) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int',X41))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38))),s('type.integer.int',X41))),s('type.integer.int',X39)))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7500,f6179])).
fof(f7500,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X39) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38))),s('type.integer.int',X41))),s('type.integer.int',X39)))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7455,f2892])).
fof(f7455,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X39) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38))),s('type.integer.int',X41))),s('type.integer.int',X39)))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6264,f246])).
fof(f7497,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13(X30,X31)))),s('type.integer.int',X34))),s('type.integer.int',X32)))) | s('type.integer.int',X32) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X34),s('type.integer.int',X30))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(forward_demodulation,[],[f7453,f293])).
fof(f7453,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int',X32) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X34),s('type.integer.int',X30))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X30,X31)),s('type.integer.int',X31))),s('type.integer.int',X34))),s('type.integer.int',X32)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(superposition,[],[f6264,f906])).
fof(f7447,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.integer.int',X6) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',X4))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X5))),s('type.integer.int',X8))),s('type.integer.int',X6))))) )),
  inference(superposition,[],[f6264,f293])).
fof(f7493,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',X1)))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7492,f6185])).
fof(f7492,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X3))),s('type.integer.int',X1)))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7446,f2892])).
fof(f7446,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X3))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6264,f246])).
fof(f7444,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int',X43) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X44),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X45))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X42))))),s('type.integer.int',X43)))) | s('type.integer.int',X42) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6264,f245])).
fof(f7490,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X39) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int',X41))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38))))),s('type.integer.int',X39)))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7489,f6185])).
fof(f7489,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X39) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X41))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38))))),s('type.integer.int',X39)))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7443,f2892])).
fof(f7443,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X39) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X41))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38))))),s('type.integer.int',X39)))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6264,f246])).
fof(f7486,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X34),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13(X30,X31)))))),s('type.integer.int',X32)))) | s('type.integer.int',X32) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int',X34))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(forward_demodulation,[],[f7441,f293])).
fof(f7441,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int',X32) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int',X34))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X34),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X30,X31)),s('type.integer.int',X31))))),s('type.integer.int',X32)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(superposition,[],[f6264,f906])).
fof(f7435,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.integer.int',X6) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',X4))),s('type.integer.int',X8))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X5))))),s('type.integer.int',X6))))) )),
  inference(superposition,[],[f6264,f293])).
fof(f7482,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',X1)))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X3))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7481,f6179])).
fof(f7481,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',X1)))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X3))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7434,f2892])).
fof(f7434,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X3))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6264,f246])).
fof(f7420,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X44),s('type.integer.int',X45))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X42)))))) | s('type.integer.int',X42) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6264,f245])).
fof(f7476,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X34),s('type.integer.int',X33))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13(X30,X31))))))) | s('type.integer.int',X30) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',X34))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(forward_demodulation,[],[f7417,f293])).
fof(f7417,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int',X30) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',X34))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X34),s('type.integer.int',X33))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X30,X31)),s('type.integer.int',X31)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(superposition,[],[f6264,f906])).
fof(f7409,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X2))))))) )),
  inference(unit_resulting_resolution,[],[f293,f6264])).
fof(f7471,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))))) ) | $spl230),
  inference(forward_demodulation,[],[f7411,f6185])).
fof(f7411,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))))))) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6185,f6264])).
fof(f7359,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.integer.int',X20) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X22),s('type.integer.int',X23))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',X22)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X21),s('type.integer.int',X20)))) )),
  inference(superposition,[],[f6246,f906])).
fof(f7358,plain,(
  ( ! [X19,X18] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',X19))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',X18))))))) ) | $spl4),
  inference(superposition,[],[f6246,f384])).
fof(f7356,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',X11) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X12))))))) ) | $spl230),
  inference(superposition,[],[f6246,f6185])).
fof(f7351,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',X44))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X42))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X44),s('type.integer.int',X43)))))) | s('type.integer.int',X42) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6246,f245])).
fof(f7402,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13(X30,X31)))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',X32)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int',X33))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X34),s('type.integer.int',X30))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(forward_demodulation,[],[f7348,f293])).
fof(f7348,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int',X33))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X34),s('type.integer.int',X30))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X30,X31)),s('type.integer.int',X31))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',X32)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(superposition,[],[f6246,f906])).
fof(f7342,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X7))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',X4))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X6))))))) )),
  inference(superposition,[],[f6246,f293])).
fof(f7319,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X44),s('type.integer.int',X45))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X42))),s('type.integer.int',X43)))))) | s('type.integer.int',X42) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6246,f245])).
fof(f7389,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X39) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int',X41))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38))),s('type.integer.int',X39)))))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7388,f6179])).
fof(f7388,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int',X41))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38))),s('type.integer.int',X39)))))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7318,f2892])).
fof(f7318,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int',X41))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38))),s('type.integer.int',X39)))))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6246,f246])).
fof(f7385,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X34),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13(X30,X31)))),s('type.integer.int',X32)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int',X30))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',X34))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(forward_demodulation,[],[f7316,f293])).
fof(f7316,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int',X30))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',X34))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X34),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X30,X31)),s('type.integer.int',X31))),s('type.integer.int',X32)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(superposition,[],[f6246,f906])).
fof(f7310,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',X4))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X5))),s('type.integer.int',X6))))))) )),
  inference(superposition,[],[f6246,f293])).
fof(f7381,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7380,f6185])).
fof(f7380,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7309,f2892])).
fof(f7309,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1)))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6246,f246])).
fof(f7307,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X44),s('type.integer.int',X45))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X43))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X42)))))))) | s('type.integer.int',X42) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6246,f245])).
fof(f7378,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X39) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int',X41))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38)))))))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7377,f6185])).
fof(f7377,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int',X41))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X39))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38)))))))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7306,f2892])).
fof(f7306,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int',X41))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X39))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38)))))))) | s('type.integer.int',X38) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6246,f246])).
fof(f7374,plain,(
  ( ! [X30,X33,X31,X34,X32] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X34),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13(X30,X31))))))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int',X32))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',X34))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(forward_demodulation,[],[f7304,f293])).
fof(f7304,plain,(
  ( ! [X30,X33,X31,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int',X32))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',X34))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X34),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X32),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X30,X31)),s('type.integer.int',X31)))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)))) )),
  inference(superposition,[],[f6246,f906])).
fof(f7298,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X8))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',X4))),s('type.integer.int',X6))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X5))))))))) )),
  inference(superposition,[],[f6246,f293])).
fof(f7370,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7369,f6179])).
fof(f7369,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7297,f2892])).
fof(f7297,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6246,f246])).
fof(f7293,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6185,f6246])).
fof(f7283,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13(X9,X10)))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X9,X10)),s('type.integer.int',X10)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X9)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9)))) ) | $spl4),
  inference(forward_demodulation,[],[f7274,f293])).
fof(f7274,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X9)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X9,X10)),s('type.integer.int',X10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X9,X10)),s('type.integer.int',X10)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9)))) ) | $spl4),
  inference(superposition,[],[f6172,f906])).
fof(f7281,plain,(
  ( ! [X6] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X6)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X6))))) ) | ($spl4 | $spl230)),
  inference(forward_demodulation,[],[f7271,f6185])).
fof(f7271,plain,(
  ( ! [X6] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X6)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X6)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) ) | ($spl4 | $spl230)),
  inference(superposition,[],[f6172,f6185])).
fof(f7280,plain,(
  ( ! [X5] : (s('type.integer.int',X5) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X5))))) ) | ($spl4 | $spl230)),
  inference(forward_demodulation,[],[f7270,f6179])).
fof(f7270,plain,(
  ( ! [X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X5)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) ) | ($spl4 | $spl230)),
  inference(superposition,[],[f6172,f6179])).
fof(f7268,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) ) | $spl4),
  inference(superposition,[],[f6172,f293])).
fof(f7266,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int',X39) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X39,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP7(X40,X41,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X39))) | s(bool,'F_0') = s(bool,X40)) ) | $spl4),
  inference(resolution,[],[f6172,f904])).
fof(f7265,plain,(
  ( ! [X37,X38,X36] : (s('type.integer.int',X36) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X36,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP7(X37,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X36)),X38) | p(s(bool,X37)) | s(bool,'F_0') = s(bool,X38)) ) | $spl4),
  inference(resolution,[],[f6172,f903])).
fof(f7264,plain,(
  ( ! [X35,X33,X34] : (s('type.integer.int',X33) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X33,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP7('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X33)),X34,X35) | p(s(bool,X34)) | s(bool,'F_0') = s(bool,X35)) ) | $spl4),
  inference(resolution,[],[f6172,f903])).
fof(f7263,plain,(
  ( ! [X31,X32] : (s('type.integer.int',X31) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X31,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP1('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X31)),X32) | s(bool,'F_0') = s(bool,X32)) ) | $spl4),
  inference(resolution,[],[f6172,f893])).
fof(f7262,plain,(
  ( ! [X30,X29] : (s('type.integer.int',X29) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X29,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP1(X30,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X29))) | s(bool,'F_0') = s(bool,X30)) ) | $spl4),
  inference(resolution,[],[f6172,f892])).
fof(f7261,plain,(
  ( ! [X28,X26,X27] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X26,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP6('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X26)),X27,X28)) ) | $spl4),
  inference(resolution,[],[f6172,f368])).
fof(f7260,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int',X23) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X23,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP6(X24,X25,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X23)))) ) | $spl4),
  inference(resolution,[],[f6172,f366])).
fof(f7259,plain,(
  ( ! [X21,X22,X20] : (s('type.integer.int',X20) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X20,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP5('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X20)),X21,X22) | s(bool,X21) = s(bool,X22)) ) | $spl4),
  inference(resolution,[],[f6172,f354])).
fof(f7258,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int',X17) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X17,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP3('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X17)),X18,X19)) ) | $spl4),
  inference(resolution,[],[f6172,f349])).
fof(f7257,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X14,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP3(X15,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X14)),X16)) ) | $spl4),
  inference(resolution,[],[f6172,f348])).
fof(f7256,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X11,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP4('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X11)),X12,X13)) ) | $spl4),
  inference(resolution,[],[f6172,f345])).
fof(f7255,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X8,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP4(X9,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X8)),X10)) ) | $spl4),
  inference(resolution,[],[f6172,f344])).
fof(f7253,plain,(
  ( ! [X4,X5] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | p(s(bool,X5)) | s(bool,X5) = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4)))) ) | $spl4),
  inference(resolution,[],[f6172,f294])).
fof(f7249,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X0,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0)))) ) | $spl4),
  inference(resolution,[],[f6172,f254])).
fof(f7244,plain,(
  ( ! [X10,X9] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13(X9,X10)))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(X9,X10)),s('type.integer.int',X10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',sK10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9)))) ) | $spl4),
  inference(forward_demodulation,[],[f7234,f293])).
fof(f7234,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X9,X10)),s('type.integer.int',X10))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(X9,X10)),s('type.integer.int',X10)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9)))) ) | $spl4),
  inference(superposition,[],[f6170,f906])).
fof(f7242,plain,(
  ( ! [X6] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X6)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',sK10))))) ) | ($spl4 | $spl230)),
  inference(forward_demodulation,[],[f7231,f6185])).
fof(f7231,plain,(
  ( ! [X6] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X6))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X6))))))) ) | ($spl4 | $spl230)),
  inference(superposition,[],[f6170,f6185])).
fof(f7241,plain,(
  ( ! [X5] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int',sK10))))) ) | ($spl4 | $spl230)),
  inference(forward_demodulation,[],[f7230,f6179])).
fof(f7230,plain,(
  ( ! [X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) | ($spl4 | $spl230)),
  inference(superposition,[],[f6170,f6179])).
fof(f7228,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))))))) ) | $spl4),
  inference(superposition,[],[f6170,f293])).
fof(f7226,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X39)))) | sP7(X40,X41,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,X40)) ) | $spl4),
  inference(resolution,[],[f6170,f904])).
fof(f7225,plain,(
  ( ! [X37,X38,X36] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X36),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X36)))) | sP7(X37,'const.integer.int_divides_2'(s('type.integer.int',X36),s('type.integer.int',sK10)),X38) | p(s(bool,X37)) | s(bool,'F_0') = s(bool,X38)) ) | $spl4),
  inference(resolution,[],[f6170,f903])).
fof(f7224,plain,(
  ( ! [X35,X33,X34] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X33)))) | sP7('const.integer.int_divides_2'(s('type.integer.int',X33),s('type.integer.int',sK10)),X34,X35) | p(s(bool,X34)) | s(bool,'F_0') = s(bool,X35)) ) | $spl4),
  inference(resolution,[],[f6170,f903])).
fof(f7223,plain,(
  ( ! [X31,X32] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X31)))) | sP1('const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',sK10)),X32) | s(bool,'F_0') = s(bool,X32)) ) | $spl4),
  inference(resolution,[],[f6170,f893])).
fof(f7222,plain,(
  ( ! [X30,X29] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X29)))) | sP1(X30,'const.integer.int_divides_2'(s('type.integer.int',X29),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,X30)) ) | $spl4),
  inference(resolution,[],[f6170,f892])).
fof(f7221,plain,(
  ( ! [X28,X26,X27] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X26)))) | sP6('const.integer.int_divides_2'(s('type.integer.int',X26),s('type.integer.int',sK10)),X27,X28)) ) | $spl4),
  inference(resolution,[],[f6170,f368])).
fof(f7220,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X23)))) | sP6(X24,X25,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int',sK10)))) ) | $spl4),
  inference(resolution,[],[f6170,f366])).
fof(f7219,plain,(
  ( ! [X21,X22,X20] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X20),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X20)))) | sP5('const.integer.int_divides_2'(s('type.integer.int',X20),s('type.integer.int',sK10)),X21,X22) | s(bool,X21) = s(bool,X22)) ) | $spl4),
  inference(resolution,[],[f6170,f354])).
fof(f7218,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X17)))) | sP3('const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',sK10)),X18,X19)) ) | $spl4),
  inference(resolution,[],[f6170,f349])).
fof(f7217,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X14)))) | sP3(X15,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int',sK10)),X16)) ) | $spl4),
  inference(resolution,[],[f6170,f348])).
fof(f7216,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X11)))) | sP4('const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',sK10)),X12,X13)) ) | $spl4),
  inference(resolution,[],[f6170,f345])).
fof(f7215,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X8)))) | sP4(X9,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',sK10)),X10)) ) | $spl4),
  inference(resolution,[],[f6170,f344])).
fof(f7213,plain,(
  ( ! [X4,X5] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X4)))) | p(s(bool,X5)) | s(bool,X5) = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X4),s('type.integer.int',sK10)))) ) | $spl4),
  inference(resolution,[],[f6170,f294])).
fof(f7209,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X0)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',sK10)))) ) | $spl4),
  inference(resolution,[],[f6170,f254])).
fof(f7091,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(equality_resolution,[],[f3264])).
fof(f7200,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',sK13(X23,X24))))))) | s('type.integer.int',X23) != s('type.integer.int',X25) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int',X23)))) )),
  inference(forward_demodulation,[],[f7074,f293])).
fof(f7074,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.integer.int',X23) != s('type.integer.int',X25) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X23,X24)),s('type.integer.int',X24)))))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int',X23)))) )),
  inference(superposition,[],[f3264,f906])).
fof(f7068,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int',X5) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3264,f293])).
fof(f6983,plain,(
  ( ! [X28,X26,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X28),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X28),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f6469,f2892])).
fof(f6469,plain,(
  ( ! [X28,X26,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X28),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X28),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f328,f246])).
fof(f6866,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X14) != s('type.integer.int',X16) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK13(X14,X15)),s('type.integer.int',X16)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X15),s('type.integer.int',X14)))) )),
  inference(superposition,[],[f6273,f906])).
fof(f6865,plain,(
  ( ! [X13] : (s('type.integer.int',sK10) != s('type.integer.int',X13) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK9),s('type.integer.int',X13))))) ) | $spl4),
  inference(superposition,[],[f6273,f384])).
fof(f6848,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int',X33) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X32),s('type.integer.int',X32))),s('type.integer.int',X33)))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6273,f245])).
fof(f6891,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',sK13(X23,X24)))),s('type.integer.int',X25)))) | s('type.integer.int',X25) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',X26))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int',X23)))) )),
  inference(forward_demodulation,[],[f6845,f293])).
fof(f6845,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.integer.int',X25) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',X26))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X23,X24)),s('type.integer.int',X24))),s('type.integer.int',X25)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int',X23)))) )),
  inference(superposition,[],[f6273,f906])).
fof(f6839,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int',X5) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int',X6))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',X5))))) )),
  inference(superposition,[],[f6273,f293])).
fof(f6837,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',X34))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X32),s('type.integer.int',X32)))))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6273,f245])).
fof(f6885,plain,(
  ( ! [X30,X31,X29] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int',X31))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X30),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29)))))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f6836,f2892])).
fof(f6836,plain,(
  ( ! [X30,X31,X29] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int',X31))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X30),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29)))))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6273,f246])).
fof(f6882,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',sK13(X23,X24))))))) | s('type.integer.int',X23) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int',X26))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int',X23)))) )),
  inference(forward_demodulation,[],[f6834,f293])).
fof(f6834,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.integer.int',X23) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int',X26))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X23,X24)),s('type.integer.int',X24)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X24),s('type.integer.int',X23)))) )),
  inference(superposition,[],[f6273,f906])).
fof(f6828,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',X6))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))))) )),
  inference(superposition,[],[f6273,f293])).
fof(f6878,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f6827,f2892])).
fof(f6827,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f6273,f246])).
fof(f6808,plain,(
  ( ! [X30,X29] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X29),s('type.integer.int',X30))) | s('type.integer.int',X30) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X30,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X29)))),s('type.integer.int',X29)))) ) | $spl230),
  inference(forward_demodulation,[],[f6791,f6185])).
fof(f6791,plain,(
  ( ! [X30,X29] : (s('type.integer.int',X30) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X30,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X29)))),s('type.integer.int',X29))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X29))),s('type.integer.int',X30)))) ) | $spl230),
  inference(superposition,[],[f906,f6185])).
fof(f6802,plain,(
  ( ! [X12,X13] : (s('type.integer.int',X13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13(X13,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X12)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int',X13))))) ) | $spl230),
  inference(forward_demodulation,[],[f6801,f6185])).
fof(f6801,plain,(
  ( ! [X12,X13] : (s('type.integer.int',X13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X12))),s('type.integer.int',sK13(X13,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X12)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int',X13))))) ) | $spl230),
  inference(forward_demodulation,[],[f6785,f293])).
fof(f6785,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int',X13)))) | s('type.integer.int',X13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X13,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X12)))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X12)))))) ) | $spl230),
  inference(superposition,[],[f298,f6185])).
fof(f6800,plain,(
  ( ! [X10,X11] : (s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10)),X11)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10))))) ) | $spl230),
  inference(forward_demodulation,[],[f6799,f6185])).
fof(f6799,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10)),X11)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10))))) ) | $spl230),
  inference(forward_demodulation,[],[f6784,f293])).
fof(f6784,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X10)),X11)),s('type.integer.int',X11)))) ) | $spl230),
  inference(superposition,[],[f298,f6185])).
fof(f6798,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X5)))) ) | $spl230),
  inference(forward_demodulation,[],[f6781,f2892])).
fof(f6781,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X5)))) ) | $spl230),
  inference(superposition,[],[f246,f6185])).
fof(f6780,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X4)))) ) | $spl230),
  inference(superposition,[],[f245,f6185])).
fof(f6777,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int',X1) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) | $spl230),
  inference(superposition,[],[f299,f6185])).
fof(f6762,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6185,f299])).
fof(f6706,plain,(
  ( ! [X57,X58,X56] : (s(bool,'F_0') = s(bool,X56) | sP7(X56,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X57)),X58)) ) | $spl230),
  inference(resolution,[],[f6184,f905])).
fof(f6705,plain,(
  ( ! [X54,X55] : (s(bool,'F_0') = s(bool,X54) | ~sP1(X54,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X55)))) ) | $spl230),
  inference(resolution,[],[f6184,f896])).
fof(f6704,plain,(
  ( ! [X52,X53] : (s(bool,'F_0') = s(bool,X52) | ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X53)),X52)) ) | $spl230),
  inference(resolution,[],[f6184,f891])).
fof(f6703,plain,(
  ( ! [X50,X51] : (s(bool,'F_0') = s(bool,X50) | s(bool,X50) = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X51)))) ) | $spl230),
  inference(resolution,[],[f6184,f887])).
fof(f6702,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X48)),X47,X49)) ) | $spl230),
  inference(resolution,[],[f6184,f371])).
fof(f6701,plain,(
  ( ! [X45,X46,X44] : (p(s(bool,X44)) | sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X45)),X46,X44)) ) | $spl230),
  inference(resolution,[],[f6184,f370])).
fof(f6700,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,X41)) | sP7(X42,X41,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X43))) | p(s(bool,X42))) ) | $spl230),
  inference(resolution,[],[f6184,f369])).
fof(f6693,plain,(
  ( ! [X21,X22] : (~p(s(bool,X21)) | ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X22)),X21)) ) | $spl230),
  inference(resolution,[],[f6184,f325])).
fof(f6690,plain,(
  ( ! [X15,X16] : (p(s(bool,X15)) | sP1(X15,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X16)))) ) | $spl230),
  inference(resolution,[],[f6184,f322])).
fof(f6689,plain,(
  ( ! [X14,X13] : (p(s(bool,X13)) | sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X14)),X13)) ) | $spl230),
  inference(resolution,[],[f6184,f319])).
fof(f6688,plain,(
  ( ! [X12,X11] : (~p(s(bool,X11)) | ~sP1(X11,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X12)))) ) | $spl230),
  inference(resolution,[],[f6184,f318])).
fof(f6521,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1)))) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6184,f303])).
fof(f6523,plain,(
  ( ! [X0,X1] : (sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0)),X1)) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6184,f309])).
fof(f6543,plain,(
  ( ! [X0,X1] : (~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1)))) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6184,f6184,f325])).
fof(f6574,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X2)))) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6184,f343])).
fof(f6589,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X2)))) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6184,f347])).
fof(f6590,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X2)))) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6184,f351])).
fof(f6591,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1)),X2)) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6184,f352])).
fof(f6592,plain,(
  ( ! [X2,X0,X1] : (sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0)),X1,X2)) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6184,f353])).
fof(f6636,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1)),X2)) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6184,f367])).
fof(f6649,plain,(
  ( ! [X2,X0,X1] : (sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X0)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X1)),X2)) ) | $spl230),
  inference(unit_resulting_resolution,[],[f6184,f6184,f371])).
fof(f6173,plain,(
  ( ! [X5] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X5))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X5,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK10)))) ) | $spl4),
  inference(forward_demodulation,[],[f6147,f384])).
fof(f6147,plain,(
  ( ! [X5] : (s('type.integer.int',X5) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X5,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',X5)))) ) | $spl4),
  inference(superposition,[],[f906,f384])).
fof(f6172,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4)))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f6171,f384])).
fof(f6171,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4))))) ) | $spl4),
  inference(forward_demodulation,[],[f6146,f293])).
fof(f6146,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4)))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) ) | $spl4),
  inference(superposition,[],[f298,f384])).
fof(f6170,plain,(
  ( ! [X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X3))))) ) | $spl4),
  inference(forward_demodulation,[],[f6169,f384])).
fof(f6169,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X3)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10))))) ) | $spl4),
  inference(forward_demodulation,[],[f6145,f293])).
fof(f6145,plain,(
  ( ! [X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X3)),s('type.integer.int',X3)))) ) | $spl4),
  inference(superposition,[],[f298,f384])).
fof(f2060,plain,(
  ( ! [X2,X3] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))) ) | $spl4),
  inference(superposition,[],[f598,f293])).
fof(f2359,plain,(
  ( ! [X47,X46] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X47),s('type.integer.int',sK13(X46,X47))))))) | s('type.integer.int',sK10) != s('type.integer.int',X46) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X47),s('type.integer.int',X46)))) ) | $spl4),
  inference(forward_demodulation,[],[f2342,f293])).
fof(f2342,plain,(
  ( ! [X47,X46] : (s('type.integer.int',sK10) != s('type.integer.int',X46) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X46,X47)),s('type.integer.int',X47)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X47),s('type.integer.int',X46)))) ) | $spl4),
  inference(superposition,[],[f598,f906])).
fof(f2502,plain,(
  ( ! [X6,X7] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13(X6,X7)))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(X6,X7)),s('type.integer.int',X7)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',sK10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X6)))) ) | $spl4),
  inference(forward_demodulation,[],[f2484,f293])).
fof(f2484,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X6,X7)),s('type.integer.int',X7))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(X6,X7)),s('type.integer.int',X7)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X6)))) ) | $spl4),
  inference(superposition,[],[f619,f906])).
fof(f2480,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))) ) | $spl4),
  inference(superposition,[],[f619,f293])).
fof(f2477,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X39)))) | sP7(X40,X41,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,X40)) ) | $spl4),
  inference(resolution,[],[f619,f904])).
fof(f2476,plain,(
  ( ! [X37,X38,X36] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X36),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X36)))) | sP7(X37,'const.integer.int_divides_2'(s('type.integer.int',X36),s('type.integer.int',sK10)),X38) | p(s(bool,X37)) | s(bool,'F_0') = s(bool,X38)) ) | $spl4),
  inference(resolution,[],[f619,f903])).
fof(f2475,plain,(
  ( ! [X35,X33,X34] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X33)))) | sP7('const.integer.int_divides_2'(s('type.integer.int',X33),s('type.integer.int',sK10)),X34,X35) | p(s(bool,X34)) | s(bool,'F_0') = s(bool,X35)) ) | $spl4),
  inference(resolution,[],[f619,f903])).
fof(f2474,plain,(
  ( ! [X31,X32] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X31)))) | sP1('const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',sK10)),X32) | s(bool,'F_0') = s(bool,X32)) ) | $spl4),
  inference(resolution,[],[f619,f893])).
fof(f2473,plain,(
  ( ! [X30,X29] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X29)))) | sP1(X30,'const.integer.int_divides_2'(s('type.integer.int',X29),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,X30)) ) | $spl4),
  inference(resolution,[],[f619,f892])).
fof(f2472,plain,(
  ( ! [X28,X26,X27] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X26)))) | sP6('const.integer.int_divides_2'(s('type.integer.int',X26),s('type.integer.int',sK10)),X27,X28)) ) | $spl4),
  inference(resolution,[],[f619,f368])).
fof(f2471,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X23)))) | sP6(X24,X25,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int',sK10)))) ) | $spl4),
  inference(resolution,[],[f619,f366])).
fof(f2470,plain,(
  ( ! [X21,X22,X20] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X20),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X20)))) | sP5('const.integer.int_divides_2'(s('type.integer.int',X20),s('type.integer.int',sK10)),X21,X22) | s(bool,X21) = s(bool,X22)) ) | $spl4),
  inference(resolution,[],[f619,f354])).
fof(f2469,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X17)))) | sP3('const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',sK10)),X18,X19)) ) | $spl4),
  inference(resolution,[],[f619,f349])).
fof(f2468,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X14)))) | sP3(X15,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int',sK10)),X16)) ) | $spl4),
  inference(resolution,[],[f619,f348])).
fof(f2467,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X11)))) | sP4('const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',sK10)),X12,X13)) ) | $spl4),
  inference(resolution,[],[f619,f345])).
fof(f2466,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X8)))) | sP4(X9,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',sK10)),X10)) ) | $spl4),
  inference(resolution,[],[f619,f344])).
fof(f2464,plain,(
  ( ! [X4,X5] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X4)))) | p(s(bool,X5)) | s(bool,X5) = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X4),s('type.integer.int',sK10)))) ) | $spl4),
  inference(resolution,[],[f619,f294])).
fof(f2460,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X0)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',sK10)))) ) | $spl4),
  inference(resolution,[],[f619,f254])).
fof(f619,plain,(
  ( ! [X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X3))))) ) | $spl4),
  inference(forward_demodulation,[],[f618,f384])).
fof(f618,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X3)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10))))) ) | $spl4),
  inference(forward_demodulation,[],[f604,f293])).
fof(f604,plain,(
  ( ! [X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X3)),s('type.integer.int',X3)))) ) | $spl4),
  inference(superposition,[],[f298,f384])).
fof(f2492,plain,(
  ( ! [X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',sK10))))) ) | $spl4),
  inference(forward_demodulation,[],[f2479,f234])).
fof(f2479,plain,(
  ( ! [X1] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) ) | $spl4),
  inference(superposition,[],[f619,f234])).
fof(f2542,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1))))) ) | $spl4),
  inference(forward_demodulation,[],[f2530,f234])).
fof(f2530,plain,(
  ( ! [X1] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) ) | $spl4),
  inference(superposition,[],[f621,f234])).
fof(f3532,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1))))) ) | ($spl4 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2542])).
fof(f3529,plain,(
  ( ! [X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',sK10))))) ) | ($spl4 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2492])).
fof(f621,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4)))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) ) | $spl4),
  inference(forward_demodulation,[],[f620,f384])).
fof(f620,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4))))) ) | $spl4),
  inference(forward_demodulation,[],[f605,f293])).
fof(f605,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4)))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) ) | $spl4),
  inference(superposition,[],[f298,f384])).
fof(f2515,plain,(
  ( ! [X4,X5] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | p(s(bool,X5)) | s(bool,X5) = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4)))) ) | $spl4),
  inference(resolution,[],[f621,f294])).
fof(f2517,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X8,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP4(X9,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X8)),X10)) ) | $spl4),
  inference(resolution,[],[f621,f344])).
fof(f2518,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X11,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP4('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X11)),X12,X13)) ) | $spl4),
  inference(resolution,[],[f621,f345])).
fof(f2519,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X14,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP3(X15,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X14)),X16)) ) | $spl4),
  inference(resolution,[],[f621,f348])).
fof(f2520,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int',X17) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X17,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP3('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X17)),X18,X19)) ) | $spl4),
  inference(resolution,[],[f621,f349])).
fof(f2521,plain,(
  ( ! [X21,X22,X20] : (s('type.integer.int',X20) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X20,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP5('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X20)),X21,X22) | s(bool,X21) = s(bool,X22)) ) | $spl4),
  inference(resolution,[],[f621,f354])).
fof(f2522,plain,(
  ( ! [X24,X23,X25] : (s('type.integer.int',X23) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X23,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP6(X24,X25,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X23)))) ) | $spl4),
  inference(resolution,[],[f621,f366])).
fof(f2523,plain,(
  ( ! [X28,X26,X27] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X26,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP6('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X26)),X27,X28)) ) | $spl4),
  inference(resolution,[],[f621,f368])).
fof(f2524,plain,(
  ( ! [X30,X29] : (s('type.integer.int',X29) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X29,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP1(X30,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X29))) | s(bool,'F_0') = s(bool,X30)) ) | $spl4),
  inference(resolution,[],[f621,f892])).
fof(f2525,plain,(
  ( ! [X31,X32] : (s('type.integer.int',X31) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X31,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP1('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X31)),X32) | s(bool,'F_0') = s(bool,X32)) ) | $spl4),
  inference(resolution,[],[f621,f893])).
fof(f2526,plain,(
  ( ! [X35,X33,X34] : (s('type.integer.int',X33) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X33,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP7('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X33)),X34,X35) | p(s(bool,X34)) | s(bool,'F_0') = s(bool,X35)) ) | $spl4),
  inference(resolution,[],[f621,f903])).
fof(f2527,plain,(
  ( ! [X37,X38,X36] : (s('type.integer.int',X36) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X36,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP7(X37,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X36)),X38) | p(s(bool,X37)) | s(bool,'F_0') = s(bool,X38)) ) | $spl4),
  inference(resolution,[],[f621,f903])).
fof(f2528,plain,(
  ( ! [X39,X41,X40] : (s('type.integer.int',X39) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X39,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | sP7(X40,X41,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X39))) | s(bool,'F_0') = s(bool,X40)) ) | $spl4),
  inference(resolution,[],[f621,f904])).
fof(f2531,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X2)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) ) | $spl4),
  inference(superposition,[],[f621,f293])).
fof(f2543,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13(X6,X7)))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X6,X7)),s('type.integer.int',X7)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X6)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X6)))) ) | $spl4),
  inference(forward_demodulation,[],[f2535,f293])).
fof(f2535,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X6)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X6,X7)),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X6,X7)),s('type.integer.int',X7)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X6)))) ) | $spl4),
  inference(superposition,[],[f621,f906])).
fof(f2346,plain,(
  ( ! [X10] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X10))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK10)))) ) | $spl4),
  inference(forward_demodulation,[],[f2318,f384])).
fof(f2318,plain,(
  ( ! [X10] : (s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',X10)))) ) | $spl4),
  inference(superposition,[],[f906,f384])).
fof(f2511,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X0,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0)))) ) | $spl4),
  inference(resolution,[],[f621,f254])).
fof(f3100,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1))))) ) | ($spl4 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2542])).
fof(f3098,plain,(
  ( ! [X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',sK10))))) ) | ($spl4 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2492])).
fof(f2930,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1))))) ) | ($spl4 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2542])).
fof(f2927,plain,(
  ( ! [X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',sK10))))) ) | ($spl4 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2492])).
fof(f598,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',X0))))) ) | $spl4),
  inference(superposition,[],[f299,f384])).
fof(f8290,plain,(
  ( ! [X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X32))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl476),
  inference(cnf_transformation,[],[f8290_D])).
fof(f8290_D,plain,(
  ( ! [X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X32))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl476),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl476])])).
fof(f8289,plain,(
  ( ! [X31,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X32))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f8276,f2892])).
fof(f8276,plain,(
  ( ! [X31,X32] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X32))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num',X32) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3203,f246])).
fof(f8288,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl474),
  inference(cnf_transformation,[],[f8288_D])).
fof(f8288_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl474),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl474])])).
fof(f8275,plain,(
  ( ! [X30,X28,X29] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X30))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))))) | s('type.num.num',X30) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X28),s('type.integer.int',X28))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X28) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3203,f3187])).
fof(f8274,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X27))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3203,f3187])).
fof(f8287,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f8263,f2892])).
fof(f8263,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3203,f246])).
fof(f8256,plain,(
  ( ! [X18] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl472),
  inference(cnf_transformation,[],[f8256_D])).
fof(f8256_D,plain,(
  ( ! [X18] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl472),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl472])])).
fof(f8259,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f8189,f2892])).
fof(f8189,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f246,f3187])).
fof(f8254,plain,(
  ( ! [X4,X5] : (s('type.integer.int',X5) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))),s('type.integer.int',X5))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl470),
  inference(cnf_transformation,[],[f8254_D])).
fof(f8254_D,plain,(
  ( ! [X4,X5] : (s('type.integer.int',X5) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))),s('type.integer.int',X5))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl470),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl470])])).
fof(f8183,plain,(
  ( ! [X4,X5] : (s('type.integer.int',X5) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))),s('type.integer.int',X5))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6185,f3187])).
fof(f8253,plain,(
  ( ! [X3] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl468),
  inference(cnf_transformation,[],[f8253_D])).
fof(f8253_D,plain,(
  ( ! [X3] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl468),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl468])])).
fof(f8182,plain,(
  ( ! [X3] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl367),
  inference(superposition,[],[f6203,f3187])).
fof(f6203,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | $spl367),
  inference(cnf_transformation,[],[f6203_D])).
fof(f6203_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) <=> ~$spl367),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl367])])).
fof(f8252,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) ) | $spl466),
  inference(cnf_transformation,[],[f8252_D])).
fof(f8252_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) ) <=> ~$spl466),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl466])])).
fof(f8180,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6299,f3187])).
fof(f8255,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f8143,f2892])).
fof(f8143,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f246,f3187])).
fof(f8137,plain,(
  ( ! [X4,X5] : (s('type.integer.int',X5) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))),s('type.integer.int',X5))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6185,f3187])).
fof(f8136,plain,(
  ( ! [X3] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl367),
  inference(superposition,[],[f6203,f3187])).
fof(f8134,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6299,f3187])).
fof(f8247,plain,(
  ( ! [X32] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X32),s('type.integer.int',X32))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl464),
  inference(cnf_transformation,[],[f8247_D])).
fof(f8247_D,plain,(
  ( ! [X32] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X32),s('type.integer.int',X32))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl464),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl464])])).
fof(f8251,plain,(
  ( ! [X31,X32] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X32),s('type.integer.int',X32))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f8126,f2892])).
fof(f8126,plain,(
  ( ! [X31,X32] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X32),s('type.integer.int',X32))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3187,f246])).
fof(f8243,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl462),
  inference(cnf_transformation,[],[f8243_D])).
fof(f8243_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl462),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl462])])).
fof(f8125,plain,(
  ( ! [X30,X28,X29] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X30),s('type.integer.int',X30))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X28),s('type.integer.int',X28))) | s('type.integer.int',X30) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X28) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3187,f3187])).
fof(f8124,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))) | s('type.integer.int',X27) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3187,f3187])).
fof(f8248,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f8113,f2892])).
fof(f8113,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3187,f246])).
fof(f8246,plain,(
  ( ! [X31,X32] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X32),s('type.integer.int',X32))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f8105,f2892])).
fof(f8105,plain,(
  ( ! [X31,X32] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X32),s('type.integer.int',X32))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3187,f246])).
fof(f8104,plain,(
  ( ! [X30,X28,X29] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X30),s('type.integer.int',X30))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))))) | s('type.integer.int',X30) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X28),s('type.integer.int',X28))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X28) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3187,f3187])).
fof(f8103,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))) | s('type.integer.int',X27) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3187,f3187])).
fof(f8242,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f8092,f2892])).
fof(f8092,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3187,f246])).
fof(f2549,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl219),
  inference(cnf_transformation,[],[f2549_D])).
fof(f2549_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl219),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl219])])).
fof(f8074,plain,(
  ( ! [X48] : (s('type.integer.int',X48) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X48),s('type.integer.int',X48)))) ) | $spl460),
  inference(cnf_transformation,[],[f8074_D])).
fof(f8074_D,plain,(
  ( ! [X48] : (s('type.integer.int',X48) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X48),s('type.integer.int',X48)))) ) <=> ~$spl460),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl460])])).
fof(f8073,plain,(
  ( ! [X48] : (s('type.integer.int',X48) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X48),s('type.integer.int',X48)))) ) | ($spl4 | $spl230)),
  inference(forward_demodulation,[],[f7986,f6179])).
fof(f7986,plain,(
  ( ! [X48] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X48),s('type.integer.int',X48)))) ) | ($spl4 | $spl230)),
  inference(superposition,[],[f6172,f6299])).
fof(f2508,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) | $spl205),
  inference(cnf_transformation,[],[f2508_D])).
fof(f2508_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) <=> ~$spl205),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl205])])).
fof(f8072,plain,(
  ( ! [X47] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X47),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X47),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X47),s('type.integer.int',X47)))) ) | $spl458),
  inference(cnf_transformation,[],[f8072_D])).
fof(f8072_D,plain,(
  ( ! [X47] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X47),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X47),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X47),s('type.integer.int',X47)))) ) <=> ~$spl458),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl458])])).
fof(f8071,plain,(
  ( ! [X47] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X47),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X47),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X47),s('type.integer.int',X47)))) ) | ($spl4 | $spl230)),
  inference(forward_demodulation,[],[f7985,f6179])).
fof(f7985,plain,(
  ( ! [X47] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X47),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X47),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X47),s('type.integer.int',X47)))) ) | ($spl4 | $spl230)),
  inference(superposition,[],[f6170,f6299])).
fof(f8020,plain,(
  ( ! [X17] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl456),
  inference(cnf_transformation,[],[f8020_D])).
fof(f8020_D,plain,(
  ( ! [X17] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl456),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl456])])).
fof(f8017,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl452),
  inference(cnf_transformation,[],[f8017_D])).
fof(f8017_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl452),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl452])])).
fof(f7900,plain,(
  ( ! [X17] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl270)),
  inference(superposition,[],[f6299,f3245])).
fof(f8018,plain,(
  ( ! [X15] : (s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl454),
  inference(cnf_transformation,[],[f8018_D])).
fof(f8018_D,plain,(
  ( ! [X15] : (s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) <=> ~$spl454),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl454])])).
fof(f7898,plain,(
  ( ! [X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6299,f245])).
fof(f8015,plain,(
  ( ! [X15] : (s('type.integer.int',X15) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(forward_demodulation,[],[f7897,f6179])).
fof(f7897,plain,(
  ( ! [X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) ) | $spl230),
  inference(superposition,[],[f6299,f6299])).
fof(f7884,plain,(
  ( ! [X35] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X35) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl450),
  inference(cnf_transformation,[],[f7884_D])).
fof(f7884_D,plain,(
  ( ! [X35] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X35) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl450),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl450])])).
fof(f7848,plain,(
  ( ! [X35] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X35),s('type.integer.int',X35)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X35) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl4 | $spl270)),
  inference(superposition,[],[f6172,f3245])).
fof(f7883,plain,(
  ( ! [X34] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34)))))))) | s('type.integer.int',X34) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl448),
  inference(cnf_transformation,[],[f7883_D])).
fof(f7883_D,plain,(
  ( ! [X34] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34)))))))) | s('type.integer.int',X34) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl448),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl448])])).
fof(f7847,plain,(
  ( ! [X34] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34)))))))) | s('type.integer.int',X34) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl4 | $spl270)),
  inference(superposition,[],[f6170,f3245])).
fof(f7875,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl446),
  inference(cnf_transformation,[],[f7875_D])).
fof(f7875_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl446),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl446])])).
fof(f7874,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl270)),
  inference(forward_demodulation,[],[f7816,f2892])).
fof(f7816,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl270),
  inference(superposition,[],[f3245,f246])).
fof(f7806,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl444),
  inference(cnf_transformation,[],[f7806_D])).
fof(f7806_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl444),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl444])])).
fof(f3344,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | $spl282),
  inference(cnf_transformation,[],[f3344_D])).
fof(f3344_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f7805,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl250)),
  inference(forward_demodulation,[],[f7747,f2892])).
fof(f7747,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl250),
  inference(superposition,[],[f3079,f246])).
fof(f7803,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl442),
  inference(cnf_transformation,[],[f7803_D])).
fof(f7803_D,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl442),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl442])])).
fof(f7801,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl250 | $spl268 | $spl367)),
  inference(forward_demodulation,[],[f7746,f3233])).
fof(f7746,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) | ($spl250 | $spl367)),
  inference(unit_resulting_resolution,[],[f6203,f3079])).
fof(f6414,plain,(
  ( ! [X28,X27] : (s('type.integer.int',X28) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))))),s('type.integer.int',sK13(X28,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27)))))))) | s('type.integer.int',X27) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl390),
  inference(cnf_transformation,[],[f6414_D])).
fof(f6414_D,plain,(
  ( ! [X28,X27] : (s('type.integer.int',X28) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))))),s('type.integer.int',sK13(X28,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27)))))))) | s('type.integer.int',X27) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl390),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl390])])).
fof(f7733,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int',sK13(X1,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl392)),
  inference(forward_demodulation,[],[f7674,f2892])).
fof(f7674,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),s('type.integer.int',sK13(X1,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl392),
  inference(superposition,[],[f6726,f246])).
fof(f7670,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | $spl440),
  inference(cnf_transformation,[],[f7670_D])).
fof(f7670_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) <=> ~$spl440),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl440])])).
fof(f852,plain,(
  ~p(s(bool,'T_0')) | $spl105),
  inference(cnf_transformation,[],[f852_D])).
fof(f852_D,plain,(
  ~p(s(bool,'T_0')) <=> ~$spl105),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl105])])).
fof(f7644,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | ($spl58 | $spl230)),
  inference(superposition,[],[f6187,f593])).
fof(f7658,plain,(
  ( ! [X21,X20] : (s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',sK13(X21,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl438),
  inference(cnf_transformation,[],[f7658_D])).
fof(f7658_D,plain,(
  ( ! [X21,X20] : (s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',sK13(X21,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl438),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl438])])).
fof(f7657,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',sK13(X21,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl95 | $spl230)),
  inference(forward_demodulation,[],[f7656,f6670])).
fof(f7656,plain,(
  ( ! [X21,X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X21)))) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',sK13(X21,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7629,f2892])).
fof(f7629,plain,(
  ( ! [X21,X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X21)))) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',sK13(X21,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6187,f246])).
fof(f6976,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl406),
  inference(cnf_transformation,[],[f6976_D])).
fof(f6976_D,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl406),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl406])])).
fof(f7649,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int',sK13(X1,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) ) | $spl436),
  inference(cnf_transformation,[],[f7649_D])).
fof(f7649_D,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int',sK13(X1,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) ) <=> ~$spl436),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl436])])).
fof(f7648,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int',sK13(X1,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2919,f2922,f2923,f2924,f2925,f2321,f2314,f3093,f3094,f3095,f3096,f3097,f3102,f3103,f3104,f3105,f3124,f3157,f3220,f3224,f3226,f3227,f3231,f3235,f3237,f3238,f3240,f3244,f3247,f3250,f3251,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3258,f3257,f3246,f3216,f3211,f3199,f3194,f3180,f3524,f3526,f3527,f3534,f3535,f3536,f3537,f3538,f3539,f3540,f3541,f3542,f3543,f3544,f3545,f3557,f3592,f3654,f3692,f3698,f3700,f3679,f3670,f3645,f3664,f2327,f2354,f3023,f2355,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f299,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3711,f3710,f3690,f3680,f3678,f3677,f3671,f3662,f3648,f3644,f3632,f3628,f3614,f3264,f3263,f3203,f3187,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f2892,f6179,f6181,f6182,f6184,f6185,f6186,f6187,f6191,f6192,f6193,f6194,f6195,f6196,f6197,f6199,f6200,f6201,f6218,f6246,f6264,f6273,f6299,f6381,f6649,f6636,f6592,f6591,f6590,f6589,f6574,f6543,f6523,f6521,f6688,f6689,f6690,f6693,f6700,f6701,f6702,f6703,f6704,f6705,f6706,f6762,f6777,f6780,f6798,f6800,f6802,f6808,f6878,f6828,f6882,f6885,f6837,f6839,f6891,f6848,f6866,f6983,f7194,f7068,f7200,f7203,f7077,f7091,f7293,f7370,f7298,f7374,f7378,f7307,f7381,f7310,f7385,f7389,f7319,f7342,f7402,f7351,f7356,f7359,f7471,f7409,f7476,f7420,f7482,f7435,f7486,f7490,f7444,f7493,f7447,f7497,f7501,f7456,f7468,f7469,f7509,f7513,f7515,f7516,f7517,f7518,f7519,f7520,f7521,f7522,f7523,f7524,f7525,f7526,f7528,f7556,f7557,f7559,f7537,f7567,f7540,f7571,f7574,f7549,f7602,f7606,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7618,f7619,f7647])).
fof(f7577,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | $spl434),
  inference(cnf_transformation,[],[f7577_D])).
fof(f7577_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) <=> ~$spl434),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl434])])).
fof(f7551,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | ($spl58 | $spl230)),
  inference(superposition,[],[f6186,f593])).
fof(f7564,plain,(
  ( ! [X21,X20] : (s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl432),
  inference(cnf_transformation,[],[f7564_D])).
fof(f7564_D,plain,(
  ( ! [X21,X20] : (s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl432),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl432])])).
fof(f7563,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl95 | $spl230)),
  inference(forward_demodulation,[],[f7562,f6670])).
fof(f7562,plain,(
  ( ! [X21,X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',X21)))) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7536,f2892])).
fof(f7536,plain,(
  ( ! [X21,X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X21)))) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(superposition,[],[f6186,f246])).
fof(f7290,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl430),
  inference(cnf_transformation,[],[f7290_D])).
fof(f7290_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) <=> ~$spl430),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl430])])).
fof(f7288,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl4 | $spl268)),
  inference(forward_demodulation,[],[f7278,f3233])).
fof(f7278,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ($spl4 | $spl268)),
  inference(superposition,[],[f6172,f3233])).
fof(f2495,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | $spl193),
  inference(cnf_transformation,[],[f2495_D])).
fof(f2495_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) <=> ~$spl193),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl193])])).
fof(f7287,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl428),
  inference(cnf_transformation,[],[f7287_D])).
fof(f7287_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) <=> ~$spl428),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl428])])).
fof(f7285,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | ($spl4 | $spl92 | $spl178)),
  inference(forward_demodulation,[],[f7284,f2159])).
fof(f7284,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | ($spl4 | $spl92)),
  inference(forward_demodulation,[],[f7275,f293])).
fof(f7275,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ($spl4 | $spl92)),
  inference(superposition,[],[f6172,f787])).
fof(f7206,plain,(
  ( ! [X34,X32] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X32),s('type.integer.int',X32)))))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X34) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl424),
  inference(cnf_transformation,[],[f7206_D])).
fof(f7206_D,plain,(
  ( ! [X34,X32] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X32),s('type.integer.int',X32)))))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X34) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl424),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl424])])).
fof(f7207,plain,(
  ( ! [X33] : (s('type.integer.int',X33) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl426),
  inference(cnf_transformation,[],[f7207_D])).
fof(f7207_D,plain,(
  ( ! [X33] : (s('type.integer.int',X33) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl426),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl426])])).
fof(f7077,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int',X33) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X34),s('type.integer.int',X34))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X32),s('type.integer.int',X32)))))) | s('type.integer.int',X34) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X32) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3264,f245])).
fof(f7204,plain,(
  ( ! [X31,X29] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29)))))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl420),
  inference(cnf_transformation,[],[f7204_D])).
fof(f7204_D,plain,(
  ( ! [X31,X29] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29)))))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl420),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl420])])).
fof(f7205,plain,(
  ( ! [X30] : (s('type.integer.int',X30) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) ) | $spl422),
  inference(cnf_transformation,[],[f7205_D])).
fof(f7205_D,plain,(
  ( ! [X30] : (s('type.integer.int',X30) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) ) <=> ~$spl422),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl422])])).
fof(f7203,plain,(
  ( ! [X30,X31,X29] : (s('type.integer.int',X30) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29)))))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7076,f2892])).
fof(f7076,plain,(
  ( ! [X30,X31,X29] : (s('type.integer.int',X30) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29)))))) | s('type.integer.int',X31) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X29) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3264,f246])).
fof(f7195,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl416),
  inference(cnf_transformation,[],[f7195_D])).
fof(f7195_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl416),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl416])])).
fof(f7196,plain,(
  ( ! [X2] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl418),
  inference(cnf_transformation,[],[f7196_D])).
fof(f7196_D,plain,(
  ( ! [X2] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl418),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl418])])).
fof(f7194,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f7067,f2892])).
fof(f7067,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f3264,f246])).
fof(f7020,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13(X0,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) | $spl414),
  inference(cnf_transformation,[],[f7020_D])).
fof(f7020_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13(X0,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) <=> ~$spl414),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl414])])).
fof(f6992,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13(X0,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) ) | ($spl268 | $spl292)),
  inference(superposition,[],[f4159,f3233])).
fof(f3256,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl272),
  inference(cnf_transformation,[],[f3256_D])).
fof(f3256_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f6964,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl264),
  inference(duplicate_literal_removal,[],[f6943])).
fof(f6943,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl264),
  inference(superposition,[],[f246,f3228])).
fof(f6980,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl412),
  inference(cnf_transformation,[],[f6980_D])).
fof(f6980_D,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl412),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl412])])).
fof(f6942,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl264)),
  inference(superposition,[],[f6179,f3228])).
fof(f6965,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl263 | $spl264)),
  inference(trivial_inequality_removal,[],[f6941])).
fof(f6941,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl263 | $spl264)),
  inference(superposition,[],[f3222,f3228])).
fof(f3222,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | $spl263),
  inference(cnf_transformation,[],[f3222_D])).
fof(f3222_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) <=> ~$spl263),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl263])])).
fof(f6979,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) ) | $spl410),
  inference(cnf_transformation,[],[f6979_D])).
fof(f6979_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) ) <=> ~$spl410),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl410])])).
fof(f6940,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl264)),
  inference(superposition,[],[f6185,f3228])).
fof(f6978,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl409),
  inference(cnf_transformation,[],[f6978_D])).
fof(f6978_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl409),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl409])])).
fof(f6939,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl264 | $spl367)),
  inference(superposition,[],[f6203,f3228])).
fof(f6966,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl264),
  inference(duplicate_literal_removal,[],[f6938])).
fof(f6938,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl264),
  inference(superposition,[],[f3228,f246])).
fof(f6973,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl404),
  inference(cnf_transformation,[],[f6973_D])).
fof(f6973_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl404),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl404])])).
fof(f6972,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl264)),
  inference(forward_demodulation,[],[f6926,f2892])).
fof(f6926,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl264),
  inference(superposition,[],[f3228,f246])).
fof(f6971,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl402),
  inference(cnf_transformation,[],[f6971_D])).
fof(f6971_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl402),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl402])])).
fof(f6922,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | ($spl9 | $spl264)),
  inference(unit_resulting_resolution,[],[f393,f3228])).
fof(f6968,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | $spl400),
  inference(cnf_transformation,[],[f6968_D])).
fof(f6968_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) <=> ~$spl400),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl400])])).
fof(f6969,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | ($spl230 | $spl264 | $spl273)),
  inference(forward_demodulation,[],[f6923,f2892])).
fof(f6923,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl264 | $spl273)),
  inference(unit_resulting_resolution,[],[f3255,f3228])).
fof(f3255,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl273),
  inference(cnf_transformation,[],[f3255_D])).
fof(f3255_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl273),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl273])])).
fof(f6924,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | ($spl263 | $spl264)),
  inference(unit_resulting_resolution,[],[f3222,f3228])).
fof(f6925,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl263 | $spl264)),
  inference(unit_resulting_resolution,[],[f3222,f3228])).
fof(f6877,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int',sK10)))) | $spl398),
  inference(cnf_transformation,[],[f6877_D])).
fof(f6877_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int',sK10)))) <=> ~$spl398),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl398])])).
fof(f6819,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int',sK10)))) | $spl92),
  inference(unit_resulting_resolution,[],[f787,f6273])).
fof(f6875,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK9),s('type.integer.int',sK10)))) | $spl396),
  inference(cnf_transformation,[],[f6875_D])).
fof(f6875_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK9),s('type.integer.int',sK10)))) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f6820,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK9),s('type.integer.int',sK10)))) | $spl4),
  inference(unit_resulting_resolution,[],[f384,f6273])).
fof(f6818,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl395),
  inference(cnf_transformation,[],[f6818_D])).
fof(f6818_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl395),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl395])])).
fof(f6810,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl273),
  inference(unit_resulting_resolution,[],[f3255,f301])).
fof(f301,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f189])).
fof(f6811,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl273),
  inference(unit_resulting_resolution,[],[f3255,f301])).
fof(f6726,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl392),
  inference(cnf_transformation,[],[f6726_D])).
fof(f6726_D,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl392),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl392])])).
fof(f6721,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl95 | $spl230)),
  inference(backward_demodulation,[],[f6670,f6199])).
fof(f3233,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | $spl268),
  inference(cnf_transformation,[],[f3233_D])).
fof(f3233_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f6498,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | $spl263),
  inference(unit_resulting_resolution,[],[f3222,f245])).
fof(f6501,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))),
  introduced(theory_axiom,[])).
fof(f3230,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | $spl266),
  inference(cnf_transformation,[],[f3230_D])).
fof(f3230_D,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) <=> ~$spl266),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl266])])).
fof(f6500,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | ($spl230 | $spl263)),
  inference(forward_demodulation,[],[f6497,f2892])).
fof(f6497,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | $spl263),
  inference(unit_resulting_resolution,[],[f3222,f246])).
fof(f6499,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl263 | $spl366)),
  inference(forward_demodulation,[],[f6498,f6204])).
fof(f6415,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK10)))),
  introduced(theory_axiom,[])).
fof(f6413,plain,(
  ( ! [X28,X27] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int',X28) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))))),s('type.integer.int',sK13(X28,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27)))))))) | s('type.integer.int',X27) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl296)),
  inference(forward_demodulation,[],[f6375,f2892])).
fof(f6375,plain,(
  ( ! [X28,X27] : (s('type.integer.int',X28) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))))),s('type.integer.int',sK13(X28,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27)))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X27) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl296),
  inference(superposition,[],[f4169,f246])).
fof(f6412,plain,(
  ( ! [X26,X25] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',sK13(X26,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25)))))))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl388),
  inference(cnf_transformation,[],[f6412_D])).
fof(f6412_D,plain,(
  ( ! [X26,X25] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',sK13(X26,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25)))))))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl388),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl388])])).
fof(f6411,plain,(
  ( ! [X26,X25] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',sK13(X26,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25)))))))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl292)),
  inference(forward_demodulation,[],[f6374,f2892])).
fof(f6374,plain,(
  ( ! [X26,X25] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',sK13(X26,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25)))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl292),
  inference(superposition,[],[f4159,f246])).
fof(f6410,plain,(
  ( ! [X24] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl386),
  inference(cnf_transformation,[],[f6410_D])).
fof(f6410_D,plain,(
  ( ! [X24] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl386),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl386])])).
fof(f6409,plain,(
  ( ! [X24] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl258)),
  inference(forward_demodulation,[],[f6373,f2892])).
fof(f6373,plain,(
  ( ! [X24] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl258),
  inference(superposition,[],[f3091,f246])).
fof(f6393,plain,(
  ( ! [X23] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl378),
  inference(cnf_transformation,[],[f6393_D])).
fof(f6393_D,plain,(
  ( ! [X23] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f6400,plain,(
  ( ! [X27] : (s('type.integer.int',X27) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',sK13(X27,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) | $spl384),
  inference(cnf_transformation,[],[f6400_D])).
fof(f6400_D,plain,(
  ( ! [X27] : (s('type.integer.int',X27) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',sK13(X27,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) <=> ~$spl384),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl384])])).
fof(f6399,plain,(
  ( ! [X26,X27] : (s('type.integer.int',X27) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',sK13(X27,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl296)),
  inference(forward_demodulation,[],[f6358,f2892])).
fof(f6358,plain,(
  ( ! [X26,X27] : (s('type.integer.int',X27) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int',sK13(X27,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl296),
  inference(superposition,[],[f4169,f246])).
fof(f6398,plain,(
  ( ! [X25] : (s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X25,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) | $spl382),
  inference(cnf_transformation,[],[f6398_D])).
fof(f6398_D,plain,(
  ( ! [X25] : (s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X25,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))))) ) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f6397,plain,(
  ( ! [X24,X25] : (s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X25,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl292 | $spl366)),
  inference(forward_demodulation,[],[f6396,f6204])).
fof(f6396,plain,(
  ( ! [X24,X25] : (s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int',sK13(X25,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl292)),
  inference(forward_demodulation,[],[f6357,f2892])).
fof(f6357,plain,(
  ( ! [X24,X25] : (s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int',sK13(X25,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl292),
  inference(superposition,[],[f4159,f246])).
fof(f6395,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) | $spl380),
  inference(cnf_transformation,[],[f6395_D])).
fof(f6395_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) <=> ~$spl380),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl380])])).
fof(f6392,plain,(
  ( ! [X23] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl230 | $spl258)),
  inference(forward_demodulation,[],[f6356,f2892])).
fof(f6356,plain,(
  ( ! [X23] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl258),
  inference(superposition,[],[f3091,f246])).
fof(f6327,plain,(
  ( ! [X22] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl370),
  inference(cnf_transformation,[],[f6327_D])).
fof(f6327_D,plain,(
  ( ! [X22] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl370),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl370])])).
fof(f6331,plain,(
  ( ! [X26] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13(X26,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) ) | $spl376),
  inference(cnf_transformation,[],[f6331_D])).
fof(f6331_D,plain,(
  ( ! [X26] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13(X26,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) ) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f6320,plain,(
  ( ! [X26,X25] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13(X26,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl296),
  inference(superposition,[],[f4169,f245])).
fof(f6330,plain,(
  ( ! [X24] : (s('type.integer.int',X24) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13(X24,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) ) | $spl374),
  inference(cnf_transformation,[],[f6330_D])).
fof(f6330_D,plain,(
  ( ! [X24] : (s('type.integer.int',X24) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13(X24,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) ) <=> ~$spl374),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl374])])).
fof(f6319,plain,(
  ( ! [X24,X23] : (s('type.integer.int',X24) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13(X24,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X23),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl292),
  inference(superposition,[],[f4159,f245])).
fof(f6329,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl372),
  inference(cnf_transformation,[],[f6329_D])).
fof(f6329_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f6318,plain,(
  ( ! [X22] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X22),s('type.integer.int',X22))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl258),
  inference(superposition,[],[f3091,f245])).
fof(f6324,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl368),
  inference(cnf_transformation,[],[f6324_D])).
fof(f6324_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) <=> ~$spl368),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl368])])).
fof(f6309,plain,(
  ( ! [X2] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK10) = s('type.integer.int',X2) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X2)))) ) | $spl258),
  inference(superposition,[],[f3091,f245])).
fof(f6307,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl258),
  inference(superposition,[],[f245,f3091])).
fof(f3229,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | $spl267),
  inference(cnf_transformation,[],[f3229_D])).
fof(f3229_D,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) <=> ~$spl267),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl267])])).
fof(f6206,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | ($spl230 | $spl255)),
  inference(forward_demodulation,[],[f3081,f2892])).
fof(f3081,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl255),
  inference(cnf_transformation,[],[f3081_D])).
fof(f3081_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl255),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl255])])).
fof(f6204,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | $spl366),
  inference(cnf_transformation,[],[f6204_D])).
fof(f6204_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f6189,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | ($spl230 | $spl256)),
  inference(backward_demodulation,[],[f2892,f3087])).
fof(f6188,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | ($spl230 | $spl254)),
  inference(backward_demodulation,[],[f2892,f3082])).
fof(f2892,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl230),
  inference(cnf_transformation,[],[f2892_D])).
fof(f2892_D,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f6178,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl134 | $spl236)),
  inference(backward_demodulation,[],[f2933,f1164])).
fof(f6176,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f6175,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK10))))),
  introduced(theory_axiom,[])).
fof(f2910,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | $spl232),
  inference(cnf_transformation,[],[f2910_D])).
fof(f2910_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) <=> ~$spl232),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl232])])).
fof(f6168,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl134 | $spl174)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f598,f597,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2058,f2063,f2064,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2478,f2493,f2485,f2486,f2529,f2536,f2537,f2908,f2894,f2909,f2899,f2900,f2914,f2915,f2903,f2916,f2917,f2961,f2946,f2962,f2951,f2952,f2963,f2964,f2955,f2965,f2966,f2970,f2990,f2991,f2981,f2982,f3020,f3036,f3037,f3039,f3043,f3045,f3083,f3084,f3052,f3085,f3058,f3061,f3062,f3088,f3090,f3070,f3076,f2321,f2314,f3196,f3212,f3248,f3205,f3198,f3197,f3195,f3188,f3185,f3178,f3300,f3301,f3302,f3303,f3304,f3305,f3306,f3307,f3309,f3310,f3311,f3292,f3298,f3299,f2511,f2346,f2543,f2531,f2528,f2527,f2526,f2525,f2524,f2523,f2522,f2521,f2520,f2519,f2518,f2517,f2515,f621,f3308,f3297,f3296,f3295,f3294,f3293,f3291,f3290,f3288,f3276,f3268,f3430,f3448,f3469,f3512,f3492,f3498,f3499,f3500,f3501,f3511,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3631,f3628,f3710,f3711,f3614,f2542,f2492,f3715,f3771,f3773,f3760,f2327,f2354,f3023,f2355,f3743,f3748,f3759,f3763,f3765,f3772,f3774,f2081,f619,f2460,f2464,f2466,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2475,f2476,f2477,f3769,f2480,f2502,f3766,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5197,f5247,f5205,f5217,f5318,f5323,f5400,f5356,f2359,f3770,f2060,f3767,f3768,f3764,f3782,f3777,f3781,f5524,f5664,f5671,f5707,f5744,f5722,f5729,f6023,f6030,f6032,f6039,f6044,f6091,f6092,f6052,f6053,f6056,f6057,f6058,f6059,f6061,f6062,f5719,f299,f3747,f3902,f3784,f3779,f3761,f3754,f3753,f3752,f3751,f3750,f3749,f3730,f3721,f3029,f3027,f3002,f2992,f2345,f2323,f234,f6042,f6041,f5674,f5673,f5538,f5342,f5341,f5326,f5325,f1164,f384,f6167])).
fof(f6167,plain,(
  s('type.integer.int',sK9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl134 | $spl174)),
  inference(forward_demodulation,[],[f6166,f234])).
fof(f6166,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl134 | $spl174)),
  inference(forward_demodulation,[],[f6141,f1164])).
fof(f6141,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl174)),
  inference(superposition,[],[f3759,f384])).
fof(f5538,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X28),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X28),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int',X28))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X26),s('type.integer.int',X26))))) | s('type.integer.int',sK10) = s('type.integer.int',X26) | s('type.integer.int',sK10) = s('type.integer.int',X27)) ) | $spl174),
  inference(superposition,[],[f3764,f3774])).
fof(f3721,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f246])).
fof(f3730,plain,(
  ( ! [X12,X13] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2332])).
fof(f3749,plain,(
  ( ! [X4,X3] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3)))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3614])).
fof(f3750,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int',sK10) = s('type.integer.int',X12) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3628])).
fof(f3751,plain,(
  ( ! [X21,X20] : (s('type.integer.int',sK10) = s('type.integer.int',X20) | s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X21,'const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',X21)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3632])).
fof(f3752,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int',sK10) = s('type.integer.int',X16) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3644])).
fof(f3753,plain,(
  ( ! [X24,X25] : (s('type.integer.int',sK10) = s('type.integer.int',X24) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X25,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X25)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3648])).
fof(f3754,plain,(
  ( ! [X10,X9] : (s('type.integer.int',sK10) = s('type.integer.int',X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3662])).
fof(f3761,plain,(
  ( ! [X6,X5] : (s('type.integer.int',sK10) = s('type.integer.int',X5) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3711])).
fof(f3779,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int',sK10) = s('type.integer.int',X22) | s('type.integer.int',sK10) = s('type.integer.int',X23) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X23))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',X23))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int',X23)))) ) | $spl174),
  inference(forward_demodulation,[],[f3778,f2081])).
fof(f3778,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int',sK10) = s('type.integer.int',X23) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X23))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',X23))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int',X23))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(forward_demodulation,[],[f3756,f2081])).
fof(f3756,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X23))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',X23))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3677])).
fof(f3784,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1)))))) ) | $spl174),
  inference(forward_demodulation,[],[f3783,f2081])).
fof(f3783,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(forward_demodulation,[],[f3762,f2081])).
fof(f3762,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3715])).
fof(f3902,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X15) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int',sK10))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',X15)))) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) | $spl174),
  inference(superposition,[],[f299,f3763])).
fof(f3747,plain,(
  ( ! [X12,X11] : (s('type.integer.int',sK10) = s('type.integer.int',X11) | s('type.integer.int',X12) = s('type.integer.int',sK13(X12,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))),s('type.integer.int',X12))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3263])).
fof(f6062,plain,(
  ( ! [X43,X44,X42] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X43),s('type.integer.int',X43))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X43),s('type.integer.int',X43))))))) | s('type.integer.int',sK10) = s('type.integer.int',X44) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int',X43))),s('type.integer.int',X43))) | s('type.integer.int',sK10) = s('type.integer.int',X43)) ) | $spl174),
  inference(superposition,[],[f3774,f3759])).
fof(f6061,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X38),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X39),s('type.integer.int',X39))))))) | s('type.integer.int',sK10) = s('type.integer.int',X41) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X38),s('type.integer.int',X39))),s('type.integer.int',X39))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X41),s('type.integer.int',X41)))))) | s('type.integer.int',sK10) = s('type.integer.int',X39)) ) | $spl174),
  inference(superposition,[],[f3770,f3759])).
fof(f6059,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X31),s('type.integer.int',X31))))),s('type.integer.int',X32))) | s('type.integer.int',sK10) = s('type.integer.int',X32) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int',X31))),s('type.integer.int',X31))),s('type.integer.int',X32))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X33),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int',X31))),s('type.integer.int',X31))))),s('type.integer.int',X32))) | s('type.integer.int',sK10) = s('type.integer.int',X31)) ) | $spl174),
  inference(superposition,[],[f3764,f3759])).
fof(f6058,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X28),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X27))),s('type.integer.int',X27))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X28),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X27))),s('type.integer.int',X27))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int',X28))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X27))),s('type.integer.int',X27))))) | s('type.integer.int',sK10) = s('type.integer.int',X27)) ) | $spl174),
  inference(superposition,[],[f3764,f3759])).
fof(f6057,plain,(
  ( ! [X24,X25] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int',X25))),s('type.integer.int',X25))) | s('type.integer.int',sK10) = s('type.integer.int',X25)) ) | $spl174),
  inference(superposition,[],[f3763,f3759])).
fof(f6056,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int',X22))),s('type.integer.int',X22))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int',sK10) = s('type.integer.int',X22)) ) | $spl174),
  inference(superposition,[],[f3743,f3759])).
fof(f6053,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X16) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',X15))),s('type.integer.int',X15)))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',X15))),s('type.integer.int',X15))),s('type.integer.int',X16))) | s('type.integer.int',sK10) = s('type.integer.int',X15)) ) | $spl174),
  inference(superposition,[],[f906,f3759])).
fof(f6052,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',X13))))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))),s('type.integer.int',X13))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))),s('type.integer.int',X13)))))) | s('type.integer.int',sK10) = s('type.integer.int',X13)) ) | ($spl4 | $spl174)),
  inference(superposition,[],[f619,f3759])).
fof(f6092,plain,(
  ( ! [X10,X11,X9] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X10))),s('type.integer.int',X10))),s('type.integer.int',sK13(X11,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X10))),s('type.integer.int',X10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',X10))))),s('type.integer.int',X11)))) | s('type.integer.int',sK10) = s('type.integer.int',X10)) ) | $spl174),
  inference(forward_demodulation,[],[f6051,f293])).
fof(f6051,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',X10))))),s('type.integer.int',X11)))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X11,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X10))),s('type.integer.int',X10)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X10))),s('type.integer.int',X10))))) | s('type.integer.int',sK10) = s('type.integer.int',X10)) ) | $spl174),
  inference(superposition,[],[f298,f3759])).
fof(f6091,plain,(
  ( ! [X6,X8,X7] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X7)),X8)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) | $spl174),
  inference(forward_demodulation,[],[f6050,f293])).
fof(f6050,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X7)),X8)),s('type.integer.int',X8))) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) | $spl174),
  inference(superposition,[],[f298,f3759])).
fof(f6044,plain,(
  ( ! [X30,X31,X29] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X30),s('type.integer.int',X30))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X30),s('type.integer.int',X30))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X30),s('type.integer.int',X30))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X30),s('type.integer.int',X30))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X29),s('type.integer.int',X30))),s('type.integer.int',X30))) | s('type.integer.int',sK10) = s('type.integer.int',X30)) ) | $spl174),
  inference(superposition,[],[f3759,f3759])).
fof(f6039,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',X17))),s('type.integer.int',X17))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X17,X18)),s('type.integer.int',X18))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',X17)))) ) | $spl174),
  inference(superposition,[],[f3759,f906])).
fof(f6032,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl174),
  inference(superposition,[],[f3759,f293])).
fof(f6030,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',X11))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,X11)),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))))) | s('type.integer.int',sK10) = s('type.integer.int',X11) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) ) | $spl174),
  inference(superposition,[],[f3759,f906])).
fof(f6023,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int',X1)) ) | $spl174),
  inference(superposition,[],[f3759,f293])).
fof(f5729,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int',sK10) != s('type.integer.int',X17) | s('type.integer.int',sK10) = s('type.integer.int',X19) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X19),s('type.integer.int',X19)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',X17)))) ) | $spl174),
  inference(superposition,[],[f3770,f906])).
fof(f5722,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X2) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X2),s('type.integer.int',X2))))))) ) | $spl174),
  inference(superposition,[],[f3770,f293])).
fof(f5744,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int',sK13(X24,X25)))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X27),s('type.integer.int',X27)))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X24))) | s('type.integer.int',sK10) = s('type.integer.int',X27) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X25),s('type.integer.int',X24)))) ) | $spl174),
  inference(forward_demodulation,[],[f5714,f293])).
fof(f5714,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X24))) | s('type.integer.int',sK10) = s('type.integer.int',X27) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X24,X25)),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X27),s('type.integer.int',X27)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X25),s('type.integer.int',X24)))) ) | $spl174),
  inference(superposition,[],[f3770,f906])).
fof(f5707,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int',X3) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X3),s('type.integer.int',X3))))))) ) | $spl174),
  inference(superposition,[],[f3770,f293])).
fof(f5671,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X19))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X17,X18)),s('type.integer.int',X18))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',X17)))) ) | $spl174),
  inference(superposition,[],[f3743,f906])).
fof(f5664,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X2))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl174),
  inference(superposition,[],[f3743,f293])).
fof(f5524,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))),s('type.integer.int',X24))) | s('type.integer.int',sK10) = s('type.integer.int',X24) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',X24))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int',X24))) | s('type.integer.int',sK10) = s('type.integer.int',X23) | s('type.integer.int',sK10) = s('type.integer.int',X22)) ) | $spl174),
  inference(superposition,[],[f3764,f3774])).
fof(f3781,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int',sK10) = s('type.integer.int',X25) | s('type.integer.int',sK10) = s('type.integer.int',X26) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',X26))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int',X26))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',X26)))) ) | $spl174),
  inference(forward_demodulation,[],[f3780,f2081])).
fof(f3780,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int',sK10) = s('type.integer.int',X26) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',X26))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int',X26))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',X26))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(forward_demodulation,[],[f3757,f2081])).
fof(f3757,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',X26))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int',X26))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',X26))) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3678])).
fof(f3777,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int',sK10) = s('type.integer.int',X5) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int',X5))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',X5))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))),s('type.integer.int',X5)))) ) | $spl174),
  inference(forward_demodulation,[],[f3755,f2081])).
fof(f3755,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int',X5))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',X5))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))),s('type.integer.int',X5))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3671])).
fof(f3782,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))))) ) | $spl174),
  inference(forward_demodulation,[],[f3758,f2081])).
fof(f3758,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3680])).
fof(f3764,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1)))) ) | $spl174),
  inference(forward_demodulation,[],[f3722,f2081])).
fof(f3722,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f328])).
fof(f3768,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int',sK10) = s('type.integer.int',X44) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))),s('type.integer.int',X44))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))))),s('type.integer.int',X44))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42)))) ) | $spl174),
  inference(forward_demodulation,[],[f3732,f2081])).
fof(f3732,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))),s('type.integer.int',X44))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))))),s('type.integer.int',X44))) | s('type.integer.int',X44) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2358])).
fof(f3767,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) ) | $spl174),
  inference(forward_demodulation,[],[f3731,f2081])).
fof(f3731,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2357])).
fof(f3770,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))) | s('type.integer.int',sK10) = s('type.integer.int',X11) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',X11))))))) ) | $spl174),
  inference(forward_demodulation,[],[f3738,f2081])).
fof(f3738,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',X11)))))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3167])).
fof(f5356,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X18,'const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int',X18))) | s('type.integer.int',sK10) = s('type.integer.int',X16) | s('type.integer.int',sK10) = s('type.integer.int',X17)) ) | $spl174),
  inference(superposition,[],[f906,f3774])).
fof(f5400,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',X10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',X10)),X12)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11)))))) | s('type.integer.int',sK10) = s('type.integer.int',X10) | s('type.integer.int',sK10) = s('type.integer.int',X11)) ) | $spl174),
  inference(forward_demodulation,[],[f5354,f293])).
fof(f5354,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',X10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',X10)),X12)),s('type.integer.int',X12))) | s('type.integer.int',sK10) = s('type.integer.int',X10) | s('type.integer.int',sK10) = s('type.integer.int',X11)) ) | $spl174),
  inference(superposition,[],[f298,f3774])).
fof(f5323,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',X13))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X11,X12)),s('type.integer.int',X12))) | s('type.integer.int',sK10) = s('type.integer.int',X13) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int',X11)))) ) | $spl174),
  inference(superposition,[],[f3774,f906])).
fof(f5318,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int',X2)) ) | $spl174),
  inference(superposition,[],[f3774,f293])).
fof(f5217,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))))) ) | $spl174),
  inference(equality_resolution,[],[f3748])).
fof(f5247,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',sK13(X16,X17))))))) | s('type.integer.int',X16) != s('type.integer.int',X18) | s('type.integer.int',sK10) = s('type.integer.int',X19) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | $spl174),
  inference(forward_demodulation,[],[f5202,f293])).
fof(f5202,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.integer.int',X16) != s('type.integer.int',X18) | s('type.integer.int',sK10) = s('type.integer.int',X19) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | $spl174),
  inference(superposition,[],[f3748,f906])).
fof(f5197,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X3) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) ) | $spl174),
  inference(superposition,[],[f3748,f293])).
fof(f3766,plain,(
  ( ! [X10,X11] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X10),s('type.integer.int',X10))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,X11)),s('type.integer.int',X11))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) ) | $spl174),
  inference(forward_demodulation,[],[f3729,f2081])).
fof(f3729,plain,(
  ( ! [X10,X11] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,X11)),s('type.integer.int',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X10),s('type.integer.int',X10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2331])).
fof(f3769,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) ) | $spl174),
  inference(forward_demodulation,[],[f3737,f2081])).
fof(f3737,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3155])).
fof(f3774,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int',sK10) = s('type.integer.int',X1)) ) | $spl174),
  inference(forward_demodulation,[],[f3742,f2081])).
fof(f3742,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3187])).
fof(f3772,plain,(
  ( ! [X4,X5] : (s('type.integer.int',sK10) = s('type.integer.int',X4) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4)),X5))))) ) | $spl174),
  inference(forward_demodulation,[],[f3740,f2081])).
fof(f3740,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4)),X5)))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3176])).
fof(f3765,plain,(
  ( ! [X17,X18] : (s('type.integer.int',sK10) = s('type.integer.int',X17) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X18,'const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17)))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int',X18)))) ) | $spl174),
  inference(forward_demodulation,[],[f3728,f2081])).
fof(f3728,plain,(
  ( ! [X17,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X18,'const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17)))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int',X18))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2322])).
fof(f3763,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(forward_demodulation,[],[f3720,f2081])).
fof(f3720,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f245])).
fof(f3759,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3690])).
fof(f3748,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',X16) != s('type.integer.int',X17) | s('type.integer.int',sK10) = s('type.integer.int',X15) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3264])).
fof(f3743,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3203])).
fof(f3760,plain,(
  ( ! [X8,X7] : (s('type.integer.int',sK10) = s('type.integer.int',X7) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X8))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3710])).
fof(f3773,plain,(
  ( ! [X6,X7] : (s('type.integer.int',sK10) = s('type.integer.int',X6) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X7)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))))))) ) | $spl174),
  inference(forward_demodulation,[],[f3741,f2081])).
fof(f3741,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X7)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6)))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3177])).
fof(f3771,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',sK10) = s('type.integer.int',X14) | s('type.integer.int',X15) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int',sK10))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',X15))))) ) | $spl174),
  inference(forward_demodulation,[],[f3739,f2081])).
fof(f3739,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X15) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int',sK10))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',X15)))) | s('type.integer.int',X14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3168])).
fof(f3511,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))) ) | $spl174),
  inference(trivial_inequality_removal,[],[f3510])).
fof(f3510,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int',sK10) | s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))) ) | $spl174),
  inference(duplicate_literal_removal,[],[f3509])).
fof(f3509,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int',sK10) | s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(superposition,[],[f3301,f3300])).
fof(f3501,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))))) ) | $spl174),
  inference(superposition,[],[f3301,f293])).
fof(f3499,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',X26))) | s('type.integer.int',sK10) = s('type.integer.int',X26) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int',X26))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',X26))) | s('type.integer.int',sK10) = s('type.integer.int',X25)) ) | $spl174),
  inference(superposition,[],[f3301,f3300])).
fof(f3498,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X23))) | s('type.integer.int',sK10) = s('type.integer.int',X23) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',X23))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int',X23))) | s('type.integer.int',sK10) = s('type.integer.int',X22)) ) | $spl174),
  inference(superposition,[],[f3301,f3268])).
fof(f3492,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int',X5))) | s('type.integer.int',sK10) = s('type.integer.int',X5) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',X5))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))),s('type.integer.int',X5)))) ) | $spl174),
  inference(superposition,[],[f3301,f293])).
fof(f3512,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(forward_demodulation,[],[f3491,f234])).
fof(f3491,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(superposition,[],[f3301,f3268])).
fof(f3469,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(superposition,[],[f234,f3268])).
fof(f3448,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl174),
  inference(superposition,[],[f3268,f234])).
fof(f3430,plain,(
  ( ! [X26] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X26),s('type.integer.int',X26))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl174),
  inference(superposition,[],[f3300,f234])).
fof(f3268,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f246])).
fof(f3276,plain,(
  ( ! [X12,X13] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2332])).
fof(f3288,plain,(
  ( ! [X4,X3] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3)))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3180])).
fof(f3290,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int',sK10) = s('type.integer.int',X12) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3194])).
fof(f3291,plain,(
  ( ! [X21,X22] : (s('type.integer.int',sK10) = s('type.integer.int',X21) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X22,'const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))),s('type.integer.int',X22)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3199])).
fof(f3293,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int',sK10) = s('type.integer.int',X16) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3211])).
fof(f3294,plain,(
  ( ! [X26,X25] : (s('type.integer.int',sK10) = s('type.integer.int',X25) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X26,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X26)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3216])).
fof(f3295,plain,(
  ( ! [X10,X9] : (s('type.integer.int',sK10) = s('type.integer.int',X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3246])).
fof(f3296,plain,(
  ( ! [X8,X7] : (s('type.integer.int',sK10) = s('type.integer.int',X7) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X8))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3257])).
fof(f3297,plain,(
  ( ! [X6,X5] : (s('type.integer.int',sK10) = s('type.integer.int',X5) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3258])).
fof(f3308,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',sK10) = s('type.integer.int',X14) | s('type.integer.int',X15) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int',sK10))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',X15))))) ) | $spl174),
  inference(forward_demodulation,[],[f3285,f2081])).
fof(f3285,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X15) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int',sK10))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',X15)))) | s('type.integer.int',X14) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3168])).
fof(f3299,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',sK10) = s('type.integer.int',X15) | s('type.integer.int',X16) != s('type.integer.int',X17) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3264])).
fof(f3298,plain,(
  ( ! [X12,X11] : (s('type.integer.int',sK10) = s('type.integer.int',X11) | s('type.integer.int',X12) = s('type.integer.int',sK13(X12,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11))),s('type.integer.int',X12))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3263])).
fof(f3292,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3203])).
fof(f3311,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) ) | $spl174),
  inference(forward_demodulation,[],[f3289,f2081])).
fof(f3289,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3187])).
fof(f3310,plain,(
  ( ! [X6,X7] : (s('type.integer.int',sK10) = s('type.integer.int',X6) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X7)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))))))) ) | $spl174),
  inference(forward_demodulation,[],[f3287,f2081])).
fof(f3287,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X7)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6)))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3177])).
fof(f3309,plain,(
  ( ! [X4,X5] : (s('type.integer.int',sK10) = s('type.integer.int',X4) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4)),X5))))) ) | $spl174),
  inference(forward_demodulation,[],[f3286,f2081])).
fof(f3286,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4)),X5)))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3176])).
fof(f3307,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',sK10) = s('type.integer.int',X11) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',X11))))))) ) | $spl174),
  inference(forward_demodulation,[],[f3284,f2081])).
fof(f3284,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',X11)))))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3167])).
fof(f3306,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) ) | $spl174),
  inference(forward_demodulation,[],[f3283,f2081])).
fof(f3283,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f3155])).
fof(f3305,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int',sK10) = s('type.integer.int',X44) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))),s('type.integer.int',X44))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))))),s('type.integer.int',X44))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42)))) ) | $spl174),
  inference(forward_demodulation,[],[f3278,f2081])).
fof(f3278,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))),s('type.integer.int',X44))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))))),s('type.integer.int',X44))) | s('type.integer.int',X44) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2358])).
fof(f3304,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) ) | $spl174),
  inference(forward_demodulation,[],[f3277,f2081])).
fof(f3277,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2357])).
fof(f3303,plain,(
  ( ! [X10,X11] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X10),s('type.integer.int',X10))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,X11)),s('type.integer.int',X11))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) ) | $spl174),
  inference(forward_demodulation,[],[f3275,f2081])).
fof(f3275,plain,(
  ( ! [X10,X11] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,X11)),s('type.integer.int',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X10),s('type.integer.int',X10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2331])).
fof(f3302,plain,(
  ( ! [X17,X18] : (s('type.integer.int',sK10) = s('type.integer.int',X17) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X18,'const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17)))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int',X18)))) ) | $spl174),
  inference(forward_demodulation,[],[f3274,f2081])).
fof(f3274,plain,(
  ( ! [X17,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X18,'const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17)))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int',X18))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2322])).
fof(f3301,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1)))) ) | $spl174),
  inference(forward_demodulation,[],[f3269,f2081])).
fof(f3269,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f328])).
fof(f3300,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(forward_demodulation,[],[f3267,f2081])).
fof(f3267,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f245])).
fof(f3070,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',X20))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X20),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',sK10) = s('type.integer.int',X18)) ) | $spl174),
  inference(superposition,[],[f299,f2946])).
fof(f3090,plain,(
  ( ! [X14,X13] : (s('type.integer.int',X14) = s('type.integer.int',sK13(X14,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',X13))),s('type.integer.int',X14)))) | s('type.integer.int',sK10) = s('type.integer.int',X13)) ) | $spl174),
  inference(forward_demodulation,[],[f3089,f3002])).
fof(f3089,plain,(
  ( ! [X14,X13] : (s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK13(X14,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',X13))),s('type.integer.int',X14)))) | s('type.integer.int',sK10) = s('type.integer.int',X13)) ) | $spl174),
  inference(forward_demodulation,[],[f3068,f293])).
fof(f3068,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',X13))),s('type.integer.int',X14)))) | s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X14,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',sK10) = s('type.integer.int',X13)) ) | $spl174),
  inference(superposition,[],[f298,f2946])).
fof(f3088,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X12)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11)))))) | s('type.integer.int',sK10) = s('type.integer.int',X11)) ) | $spl174),
  inference(forward_demodulation,[],[f3067,f293])).
fof(f3067,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int',X11)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X12)),s('type.integer.int',X12))) | s('type.integer.int',sK10) = s('type.integer.int',X11)) ) | $spl174),
  inference(superposition,[],[f298,f2946])).
fof(f3062,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X2))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int',sK10) = s('type.integer.int',X2)) ) | $spl174),
  inference(superposition,[],[f300,f2946])).
fof(f3061,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(superposition,[],[f234,f2946])).
fof(f3085,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',X16) != s('type.integer.int',X17) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16)))) | s('type.integer.int',sK10) = s('type.integer.int',X15)) ) | $spl174),
  inference(forward_demodulation,[],[f3053,f234])).
fof(f3053,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',X16) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16)))) | s('type.integer.int',sK10) = s('type.integer.int',X15)) ) | $spl174),
  inference(superposition,[],[f299,f2946])).
fof(f3052,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12)))))) | s('type.integer.int',sK10) = s('type.integer.int',X12)) ) | $spl174),
  inference(superposition,[],[f299,f2946])).
fof(f3084,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X8)))) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) | $spl174),
  inference(forward_demodulation,[],[f3050,f293])).
fof(f3050,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X8)))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) | $spl174),
  inference(superposition,[],[f298,f2946])).
fof(f3083,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',sK10) = s('type.integer.int',X5)) ) | $spl174),
  inference(forward_demodulation,[],[f3049,f293])).
fof(f3049,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6)),s('type.integer.int',X6))) | s('type.integer.int',sK10) = s('type.integer.int',X5)) ) | $spl174),
  inference(superposition,[],[f298,f2946])).
fof(f3045,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1))) | s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(superposition,[],[f2946,f2946])).
fof(f3039,plain,(
  ( ! [X5] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl174),
  inference(superposition,[],[f2946,f234])).
fof(f3037,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) ) | $spl174),
  inference(superposition,[],[f2946,f293])).
fof(f3020,plain,(
  ( ! [X27] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X27),s('type.integer.int',X27))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl174),
  inference(superposition,[],[f2961,f234])).
fof(f2982,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X15) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int',sK10))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',X15)))) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) | $spl174),
  inference(superposition,[],[f299,f2961])).
fof(f2981,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',X11)))))) | s('type.integer.int',sK10) = s('type.integer.int',X11)) ) | $spl174),
  inference(superposition,[],[f299,f2961])).
fof(f2991,plain,(
  ( ! [X6,X7] : (s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X7)))) | s('type.integer.int',sK10) = s('type.integer.int',X6)) ) | $spl174),
  inference(forward_demodulation,[],[f2979,f293])).
fof(f2979,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X7)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6)))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))))) | s('type.integer.int',sK10) = s('type.integer.int',X6)) ) | $spl174),
  inference(superposition,[],[f298,f2961])).
fof(f2990,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4)),X5)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int',X4)) ) | $spl174),
  inference(forward_demodulation,[],[f2978,f293])).
fof(f2978,plain,(
  ( ! [X4,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X4),s('type.integer.int',X4)),X5)),s('type.integer.int',X5))) | s('type.integer.int',sK10) = s('type.integer.int',X4)) ) | $spl174),
  inference(superposition,[],[f298,f2961])).
fof(f2970,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl174),
  inference(superposition,[],[f2961,f293])).
fof(f2966,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int',sK10) = s('type.integer.int',X44) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))),s('type.integer.int',X44))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))))),s('type.integer.int',X44))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42)))) ) | $spl174),
  inference(forward_demodulation,[],[f2957,f2081])).
fof(f2957,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))),s('type.integer.int',X44))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))))),s('type.integer.int',X44))) | s('type.integer.int',X44) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2358])).
fof(f2965,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) ) | $spl174),
  inference(forward_demodulation,[],[f2956,f2081])).
fof(f2956,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2357])).
fof(f2955,plain,(
  ( ! [X12,X13] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2332])).
fof(f2964,plain,(
  ( ! [X10,X11] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X10),s('type.integer.int',X10))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,X11)),s('type.integer.int',X11))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) ) | $spl174),
  inference(forward_demodulation,[],[f2954,f2081])).
fof(f2954,plain,(
  ( ! [X10,X11] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,X11)),s('type.integer.int',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X10),s('type.integer.int',X10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2331])).
fof(f2963,plain,(
  ( ! [X17,X18] : (s('type.integer.int',sK10) = s('type.integer.int',X17) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X18,'const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17)))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int',X18)))) ) | $spl174),
  inference(forward_demodulation,[],[f2953,f2081])).
fof(f2953,plain,(
  ( ! [X17,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X18,'const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17)))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int',X18))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2322])).
fof(f2952,plain,(
  ( ! [X15,X16] : (s('type.integer.int',sK10) = s('type.integer.int',X15) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,'const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2321])).
fof(f2951,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X1,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2314])).
fof(f2962,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1)))) ) | $spl174),
  inference(forward_demodulation,[],[f2947,f2081])).
fof(f2947,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f328])).
fof(f2946,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f246])).
fof(f2961,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(forward_demodulation,[],[f2945,f2081])).
fof(f2945,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f245])).
fof(f2917,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int',sK10) = s('type.integer.int',X44) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))),s('type.integer.int',X44))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))))),s('type.integer.int',X44))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42)))) ) | $spl174),
  inference(forward_demodulation,[],[f2905,f2081])).
fof(f2905,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X42),s('type.integer.int',X44))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))),s('type.integer.int',X44))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,X43)))))),s('type.integer.int',X44))) | s('type.integer.int',X44) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2358])).
fof(f2916,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) ) | $spl174),
  inference(forward_demodulation,[],[f2904,f2081])).
fof(f2904,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X41),s('type.integer.int',X40))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,X39)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X40),s('type.integer.int',X38))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2357])).
fof(f2903,plain,(
  ( ! [X12,X13] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2332])).
fof(f2915,plain,(
  ( ! [X10,X11] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X10),s('type.integer.int',X10))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,X11)),s('type.integer.int',X11))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) ) | $spl174),
  inference(forward_demodulation,[],[f2902,f2081])).
fof(f2902,plain,(
  ( ! [X10,X11] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,X11)),s('type.integer.int',X11))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X10),s('type.integer.int',X10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X10)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2331])).
fof(f2914,plain,(
  ( ! [X17,X18] : (s('type.integer.int',sK10) = s('type.integer.int',X17) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X18,'const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17)))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int',X18)))) ) | $spl174),
  inference(forward_demodulation,[],[f2901,f2081])).
fof(f2901,plain,(
  ( ! [X17,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X18,'const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17)))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int',X18))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2322])).
fof(f2900,plain,(
  ( ! [X15,X16] : (s('type.integer.int',sK10) = s('type.integer.int',X15) | s('type.integer.int',X16) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,'const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))),s('type.integer.int',X16)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2321])).
fof(f2899,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X1,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',X1)))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f2314])).
fof(f2909,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1)))) ) | $spl174),
  inference(forward_demodulation,[],[f2895,f2081])).
fof(f2895,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f328])).
fof(f2894,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f246])).
fof(f2908,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) ) | $spl174),
  inference(forward_demodulation,[],[f2893,f2081])).
fof(f2893,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl174),
  inference(backward_demodulation,[],[f2081,f245])).
fof(f6136,plain,(
  s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | ($spl134 | $spl358)),
  inference(forward_demodulation,[],[f6135,f234])).
fof(f6135,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl134 | $spl358)),
  inference(forward_demodulation,[],[f6117,f1164])).
fof(f6131,plain,(
  s('type.integer.int',sK9) = s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) | $spl364),
  inference(cnf_transformation,[],[f6131_D])).
fof(f6131_D,plain,(
  s('type.integer.int',sK9) = s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f6137,plain,(
  s('type.integer.int',sK9) = s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) | ($spl2 | $spl134 | $spl358)),
  inference(forward_demodulation,[],[f6136,f382])).
fof(f6132,plain,(
  s('type.integer.int',sK9) != s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) | $spl365),
  inference(cnf_transformation,[],[f6132_D])).
fof(f6132_D,plain,(
  s('type.integer.int',sK9) != s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) <=> ~$spl365),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl365])])).
fof(f6130,plain,(
  s('type.integer.int',sK9) != s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) | ($spl2 | $spl343)),
  inference(backward_demodulation,[],[f382,f6086])).
fof(f2079,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl171),
  inference(cnf_transformation,[],[f2079_D])).
fof(f2079_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl171),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl171])])).
fof(f6129,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl209 | $spl280)),
  inference(forward_demodulation,[],[f2539,f3342])).
fof(f3342,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl280),
  inference(cnf_transformation,[],[f3342_D])).
fof(f3342_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f2539,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl209),
  inference(cnf_transformation,[],[f2539_D])).
fof(f2539_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) <=> ~$spl209),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl209])])).
fof(f6128,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl174 | $spl273)),
  inference(forward_demodulation,[],[f3255,f2081])).
fof(f6121,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK10)))) | $spl362),
  inference(cnf_transformation,[],[f6121_D])).
fof(f6121_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK10)))) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f5222,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK10)))) | ($spl92 | $spl174 | $spl178 | $spl233)),
  inference(forward_demodulation,[],[f5221,f2159])).
fof(f5221,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) | ($spl92 | $spl174 | $spl233)),
  inference(forward_demodulation,[],[f5195,f293])).
fof(f5195,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ($spl92 | $spl174 | $spl233)),
  inference(unit_resulting_resolution,[],[f787,f2911,f3748])).
fof(f5189,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK10)))) | ($spl92 | $spl174 | $spl233)),
  inference(unit_resulting_resolution,[],[f787,f2911,f3748])).
fof(f6119,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | $spl360),
  inference(cnf_transformation,[],[f6119_D])).
fof(f6119_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f5565,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | ($spl233 | $spl258)),
  inference(unit_resulting_resolution,[],[f2911,f3091])).
fof(f6117,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | $spl358),
  inference(cnf_transformation,[],[f6117_D])).
fof(f6117_D,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f6031,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl92 | $spl174)),
  inference(superposition,[],[f3759,f787])).
fof(f3080,plain,(
  ( ! [X8] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))) | s('type.integer.int',sK10) = s('type.integer.int',X8)) ) | $spl252),
  inference(cnf_transformation,[],[f3080_D])).
fof(f3080_D,plain,(
  ( ! [X8] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))) | s('type.integer.int',sK10) = s('type.integer.int',X8)) ) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f6115,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))) | s('type.integer.int',sK10) = s('type.integer.int',X19) | s('type.integer.int',sK10) = s('type.integer.int',X20)) ) | $spl356),
  inference(cnf_transformation,[],[f6115_D])).
fof(f6115_D,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))) | s('type.integer.int',sK10) = s('type.integer.int',X19) | s('type.integer.int',sK10) = s('type.integer.int',X20)) ) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f5325,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))) | s('type.integer.int',sK10) = s('type.integer.int',X17) | s('type.integer.int',sK10) = s('type.integer.int',X16) | s('type.integer.int',sK10) = s('type.integer.int',X15)) ) | $spl174),
  inference(superposition,[],[f3774,f3774])).
fof(f5326,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))) | s('type.integer.int',sK10) = s('type.integer.int',X20) | s('type.integer.int',sK10) = s('type.integer.int',X18) | s('type.integer.int',sK10) = s('type.integer.int',X19)) ) | $spl174),
  inference(superposition,[],[f3774,f3774])).
fof(f5341,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))))) | s('type.integer.int',sK10) = s('type.integer.int',X17) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X15),s('type.integer.int',X15))) | s('type.integer.int',sK10) = s('type.integer.int',X16) | s('type.integer.int',sK10) = s('type.integer.int',X15)) ) | $spl174),
  inference(superposition,[],[f3774,f3774])).
fof(f5342,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))) | s('type.integer.int',sK10) = s('type.integer.int',X20) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18))) | s('type.integer.int',sK10) = s('type.integer.int',X18) | s('type.integer.int',sK10) = s('type.integer.int',X19)) ) | $spl174),
  inference(superposition,[],[f3774,f3774])).
fof(f6114,plain,(
  ( ! [X22] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))))) | s('type.integer.int',sK10) = s('type.integer.int',X22)) ) | $spl354),
  inference(cnf_transformation,[],[f6114_D])).
fof(f6114_D,plain,(
  ( ! [X22] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))))) | s('type.integer.int',sK10) = s('type.integer.int',X22)) ) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f5358,plain,(
  ( ! [X21,X22] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))) | s('type.integer.int',sK10) = s('type.integer.int',X21) | s('type.integer.int',sK10) = s('type.integer.int',X22)) ) | ($spl174 | $spl258)),
  inference(superposition,[],[f3091,f3774])).
fof(f5376,plain,(
  ( ! [X21,X22] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))) | s('type.integer.int',sK10) = s('type.integer.int',X22) | s('type.integer.int',sK10) = s('type.integer.int',X21)) ) | ($spl174 | $spl258)),
  inference(superposition,[],[f3091,f3774])).
fof(f6113,plain,(
  ( ! [X26,X25] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',sK13(X26,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X25)) ) | $spl352),
  inference(cnf_transformation,[],[f6113_D])).
fof(f6113_D,plain,(
  ( ! [X26,X25] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',sK13(X26,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X25)) ) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f5627,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int',X23) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int',sK13(X23,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22)))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))) | s('type.integer.int',sK10) = s('type.integer.int',X22) | s('type.integer.int',sK10) = s('type.integer.int',X21)) ) | ($spl174 | $spl296)),
  inference(superposition,[],[f4169,f3774])).
fof(f5628,plain,(
  ( ! [X26,X24,X25] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int',sK13(X26,'const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25)))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))) | s('type.integer.int',sK10) = s('type.integer.int',X24) | s('type.integer.int',sK10) = s('type.integer.int',X25)) ) | ($spl174 | $spl296)),
  inference(superposition,[],[f4169,f3774])).
fof(f6112,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))) | s('type.integer.int',sK10) = s('type.integer.int',X25) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl350),
  inference(cnf_transformation,[],[f6112_D])).
fof(f6112_D,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))) | s('type.integer.int',sK10) = s('type.integer.int',X25) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl350),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl350])])).
fof(f5673,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X23))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int',sK10) = s('type.integer.int',X22) | s('type.integer.int',sK10) = s('type.integer.int',X21)) ) | $spl174),
  inference(superposition,[],[f3743,f3774])).
fof(f5674,plain,(
  ( ! [X26,X24,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X26))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))) | s('type.num.num',X26) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int',sK10) = s('type.integer.int',X24) | s('type.integer.int',sK10) = s('type.integer.int',X25)) ) | $spl174),
  inference(superposition,[],[f3743,f3774])).
fof(f6111,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))) | s('type.integer.int',sK10) = s('type.integer.int',X25)) ) | $spl348),
  inference(cnf_transformation,[],[f6111_D])).
fof(f6111_D,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))) | s('type.integer.int',sK10) = s('type.integer.int',X25)) ) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f6041,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))) | s('type.integer.int',sK10) = s('type.integer.int',X22) | s('type.integer.int',sK10) = s('type.integer.int',X21)) ) | $spl174),
  inference(superposition,[],[f3759,f3774])).
fof(f6042,plain,(
  ( ! [X26,X24,X25] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))) | s('type.integer.int',sK10) = s('type.integer.int',X24) | s('type.integer.int',sK10) = s('type.integer.int',X25)) ) | $spl174),
  inference(superposition,[],[f3759,f3774])).
fof(f2494,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | $spl192),
  inference(cnf_transformation,[],[f2494_D])).
fof(f2494_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f4718,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | ($spl174 | $spl204)),
  inference(backward_demodulation,[],[f2081,f2507])).
fof(f2507,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) | $spl204),
  inference(cnf_transformation,[],[f2507_D])).
fof(f2507_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f6098,plain,(
  ( ! [X43,X41] : (s('type.integer.int',sK10) = s('type.integer.int',X43) | s('type.integer.int',sK10) = s('type.integer.int',X41) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X41),s('type.integer.int',X41))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X43),s('type.integer.int',X43))))))) ) | $spl344),
  inference(cnf_transformation,[],[f6098_D])).
fof(f6098_D,plain,(
  ( ! [X43,X41] : (s('type.integer.int',sK10) = s('type.integer.int',X43) | s('type.integer.int',sK10) = s('type.integer.int',X41) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X41),s('type.integer.int',X41))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X43),s('type.integer.int',X43))))))) ) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f6099,plain,(
  ( ! [X42] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int',sK10)))) ) | $spl346),
  inference(cnf_transformation,[],[f6099_D])).
fof(f6099_D,plain,(
  ( ! [X42] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int',sK10)))) ) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f5719,plain,(
  ( ! [X43,X41,X42] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int',sK10))) | s('type.integer.int',sK10) = s('type.integer.int',X43) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X41),s('type.integer.int',X41))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X43),s('type.integer.int',X43)))))) | s('type.integer.int',sK10) = s('type.integer.int',X41)) ) | $spl174),
  inference(superposition,[],[f3770,f3763])).
fof(f6094,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),
  introduced(theory_axiom,[])).
fof(f6093,plain,(
  s('type.integer.int',sK9) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),
  introduced(theory_axiom,[])).
fof(f6085,plain,(
  s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl92 | $spl170 | $spl174 | $spl276)),
  inference(forward_demodulation,[],[f6084,f3785])).
fof(f3785,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK10)))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f234])).
fof(f6084,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int',sK10))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl92 | $spl174 | $spl276)),
  inference(forward_demodulation,[],[f6031,f3339])).
fof(f6083,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl170 | $spl174 | $spl276)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f598,f597,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2058,f2063,f2064,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2478,f2493,f2485,f2486,f2529,f2536,f2537,f2908,f2894,f2909,f2899,f2900,f2914,f2915,f2903,f2916,f2917,f2961,f2946,f2962,f2951,f2952,f2963,f2964,f2955,f2965,f2966,f2970,f2990,f2991,f2981,f2982,f3020,f3036,f3037,f3039,f3043,f3045,f3083,f3084,f3052,f3085,f3058,f3061,f3062,f3088,f3090,f3070,f3076,f2321,f2314,f3196,f3212,f3248,f3205,f3198,f3197,f3195,f3188,f3185,f3178,f3300,f3301,f3302,f3303,f3304,f3305,f3306,f3307,f3309,f3310,f3311,f3292,f3298,f3299,f3312,f3337,f3314,f3315,f3317,f3320,f3323,f3324,f3346,f3364,f3325,f3326,f3328,f3329,f3330,f3331,f3332,f3333,f3334,f3335,f3336,f2511,f2346,f2543,f2531,f2528,f2527,f2526,f2525,f2524,f2523,f2522,f2521,f2520,f2519,f2518,f2517,f2515,f621,f3308,f3297,f3296,f3295,f3294,f3293,f3291,f3290,f3288,f3276,f3268,f3430,f3448,f3469,f3512,f3492,f3498,f3499,f3500,f3501,f3511,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3631,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2542,f2492,f2345,f2323,f234,f3715,f3721,f3730,f3771,f3773,f3747,f3749,f3750,f3751,f3752,f3753,f3754,f3779,f3760,f3761,f3784,f3785,f3787,f3788,f3793,f3814,f3796,f3797,f3815,f3832,f3798,f3799,f3806,f3808,f3859,f4085,f4072,f4028,f4027,f4026,f4025,f4010,f3979,f3959,f3957,f4123,f4124,f4125,f4128,f4135,f4136,f4137,f4138,f4139,f4140,f4141,f4685,f4686,f4687,f4688,f4387,f4691,f4381,f4379,f4378,f4377,f4376,f4375,f4374,f4373,f4372,f4371,f4370,f4369,f4368,f4367,f4362,f4697,f4322,f4699,f4700,f4701,f4316,f4314,f4313,f4312,f4311,f4310,f4309,f4308,f4307,f4306,f4305,f4304,f4303,f4302,f4297,f4703,f4704,f4705,f4279,f4706,f4708,f4241,f4251,f2327,f2354,f3023,f2355,f4710,f4711,f3743,f3748,f3759,f3763,f3765,f3772,f3774,f3804,f3805,f3807,f3809,f3812,f2081,f2078,f619,f2460,f2464,f2466,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2475,f2476,f2477,f3790,f3802,f3769,f2480,f2502,f384,f3801,f3766,f3339,f4774,f4782,f4785,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f4841,f4840,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5197,f5247,f5205,f5217,f5254,f5277,f5274,f5318,f5323,f5330,f5400,f5356,f5362,f5365,f5441,f5452,f2359,f4707,f3803,f3770,f2060,f3767,f3768,f3764,f3782,f3777,f3811,f3810,f3781,f5524,f5664,f5671,f5678,f5707,f5744,f5722,f5728,f5729,f5772,f5809,f5787,f5793,f5794,f5835,f5885,f5850,f5856,f5857,f5859,f5895,f6023,f6082])).
fof(f6082,plain,(
  s('type.integer.int',sK9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl170 | $spl174 | $spl276)),
  inference(forward_demodulation,[],[f6081,f3785])).
fof(f6081,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl174 | $spl276)),
  inference(forward_demodulation,[],[f6028,f3339])).
fof(f6028,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl4 | $spl174)),
  inference(superposition,[],[f3759,f384])).
fof(f5895,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int',sK13(X24,X25)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X27))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X27),s('type.integer.int',sK10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X25),s('type.integer.int',X24)))) ) | ($spl170 | $spl174)),
  inference(forward_demodulation,[],[f5866,f293])).
fof(f5866,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X27))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X24,X25)),s('type.integer.int',X25))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X27),s('type.integer.int',sK10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X25),s('type.integer.int',X24)))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3805,f906])).
fof(f5859,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X3))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10))))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3805,f293])).
fof(f5857,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int',X17) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))) | s('type.integer.int',sK10) = s('type.integer.int',X19) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',sK10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',X17)))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3805,f906])).
fof(f5856,plain,(
  ( ! [X15,X16] : (s('type.integer.int',X15) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))) | s('type.integer.int',sK10) = s('type.integer.int',X16) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X15),s('type.integer.int',sK10))))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3805,f3797])).
fof(f5850,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X2))) | s('type.integer.int',sK10) = s('type.integer.int',X2) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',sK10))))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3805,f293])).
fof(f5885,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int',sK13(X24,X25)))),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X24))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))) | s('type.integer.int',sK10) = s('type.integer.int',X27) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X25),s('type.integer.int',X24)))) ) | ($spl170 | $spl174)),
  inference(forward_demodulation,[],[f5842,f293])).
fof(f5842,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X24))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))) | s('type.integer.int',sK10) = s('type.integer.int',X27) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X24,X25)),s('type.integer.int',X25))),s('type.integer.int',sK10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X25),s('type.integer.int',X24)))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3805,f906])).
fof(f5835,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int',X3) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',sK10))))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3805,f293])).
fof(f5794,plain,(
  ( ! [X19,X17,X18] : (s('type.integer.int',sK10) != s('type.integer.int',X17) | s('type.integer.int',sK10) = s('type.integer.int',X19) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',X17)))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3803,f906])).
fof(f5793,plain,(
  ( ! [X15,X16] : (s('type.integer.int',sK10) != s('type.integer.int',X15) | s('type.integer.int',sK10) = s('type.integer.int',X16) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X15),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))))))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3803,f3797])).
fof(f5787,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X2) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X2))))))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3803,f293])).
fof(f5809,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X25),s('type.integer.int',sK13(X24,X25)))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27)))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X24))) | s('type.integer.int',sK10) = s('type.integer.int',X27) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X25),s('type.integer.int',X24)))) ) | ($spl170 | $spl174)),
  inference(forward_demodulation,[],[f5779,f293])).
fof(f5779,plain,(
  ( ! [X26,X24,X27,X25] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',X24))) | s('type.integer.int',sK10) = s('type.integer.int',X27) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X24,X25)),s('type.integer.int',X25))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X25),s('type.integer.int',X24)))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3803,f906])).
fof(f5772,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int',X3) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X3))))))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3803,f293])).
fof(f5728,plain,(
  ( ! [X15,X16] : (s('type.integer.int',sK10) != s('type.integer.int',X15) | s('type.integer.int',sK10) = s('type.integer.int',X16) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X15),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X16))))))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3770,f3797])).
fof(f5678,plain,(
  ( ! [X33,X34] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X34))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X33),s('type.integer.int',X33))) | s('type.integer.int',sK10) = s('type.integer.int',sK13(X33,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | s('type.num.num',X34) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl4 | $spl170 | $spl174)),
  inference(superposition,[],[f3743,f3832])).
fof(f3810,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',X23))) | s('type.integer.int',sK10) = s('type.integer.int',X22) | s('type.integer.int',sK10) = s('type.integer.int',X23) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))),s('type.integer.int',X23))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X24),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))),s('type.integer.int',X23)))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3779])).
fof(f3811,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',X1))))) | s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int',sK10) = s('type.integer.int',X1) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1)))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3784])).
fof(f3803,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14))) | s('type.integer.int',sK10) = s('type.integer.int',X12) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3750])).
fof(f4707,plain,(
  ( ! [X21] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',X21)))) | s('type.integer.int',sK10) != s('type.integer.int',X21)) ) | ($spl4 | $spl170)),
  inference(forward_demodulation,[],[f4261,f3797])).
fof(f4261,plain,(
  ( ! [X21] : (s('type.integer.int',sK10) != s('type.integer.int',X21) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X21))))))) ) | ($spl4 | $spl170)),
  inference(superposition,[],[f598,f3797])).
fof(f5452,plain,(
  ( ! [X15] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),sK13(X15,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X15),s('type.integer.int',sK10))))) ) | ($spl4 | $spl170)),
  inference(forward_demodulation,[],[f5434,f3832])).
fof(f5434,plain,(
  ( ! [X15] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X15),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X15,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),sK13(X15,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))))) ) | ($spl4 | $spl170)),
  inference(superposition,[],[f619,f3832])).
fof(f5441,plain,(
  ( ! [X5] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X5)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int',sK10))))) ) | ($spl4 | $spl170)),
  inference(forward_demodulation,[],[f5426,f3797])).
fof(f5426,plain,(
  ( ! [X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X5))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X5))))))) ) | ($spl4 | $spl170)),
  inference(superposition,[],[f619,f3797])).
fof(f5365,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X40),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X39),s('type.integer.int',X39)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X38),s('type.integer.int',X38)),'const.integer.int_mul_2'(s('type.integer.int',X40),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X38) | s('type.integer.int',sK10) = s('type.integer.int',X39)) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3799,f3774])).
fof(f5362,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X30),s('type.integer.int',X30)))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))),s('type.integer.int',sK10)),X31)))) | s('type.integer.int',sK10) = s('type.integer.int',X29) | s('type.integer.int',sK10) = s('type.integer.int',X30)) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3798,f3774])).
fof(f5330,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X28),s('type.integer.int',X28))) | s('type.integer.int',sK10) = s('type.integer.int',sK13(X27,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | s('type.integer.int',sK10) = s('type.integer.int',X28)) ) | ($spl4 | $spl170 | $spl174)),
  inference(superposition,[],[f3774,f3832])).
fof(f5274,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',X1))))) ) | ($spl170 | $spl174)),
  inference(equality_resolution,[],[f3812])).
fof(f5277,plain,(
  ( ! [X19,X17,X18,X16] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',sK13(X16,X17))))))) | s('type.integer.int',X16) != s('type.integer.int',X18) | s('type.integer.int',sK10) = s('type.integer.int',X19) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | ($spl170 | $spl174)),
  inference(forward_demodulation,[],[f5259,f293])).
fof(f5259,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.integer.int',X16) != s('type.integer.int',X18) | s('type.integer.int',sK10) = s('type.integer.int',X19) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X16,X17)),s('type.integer.int',X17)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X17),s('type.integer.int',X16)))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3812,f906])).
fof(f5254,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',sK10) = s('type.integer.int',X3) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X3),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3812,f293])).
fof(f4840,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK10))))))) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3023,f3799])).
fof(f4841,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',sK10)),X1))))) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3023,f3798])).
fof(f4785,plain,(
  ( ! [X19,X18] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X19),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)),'const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X18)) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3799,f3763])).
fof(f4782,plain,(
  ( ! [X12,X13] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X12),s('type.integer.int',X12))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X12),s('type.integer.int',X12))),s('type.integer.int',sK10)),X13)))) | s('type.integer.int',sK10) = s('type.integer.int',X12)) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3798,f3763])).
fof(f4774,plain,(
  ( ! [X9] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9))) | s('type.integer.int',sK10) = s('type.integer.int',sK13(X9,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) ) | ($spl4 | $spl170 | $spl174)),
  inference(superposition,[],[f3763,f3832])).
fof(f3801,plain,(
  ( ! [X12,X13] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3730])).
fof(f3802,plain,(
  ( ! [X4,X3] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3749])).
fof(f3790,plain,(
  ( ! [X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',sK10))))) ) | ($spl4 | $spl170)),
  inference(backward_demodulation,[],[f2078,f2492])).
fof(f3812,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X15) != s('type.integer.int',X16) | s('type.integer.int',sK10) = s('type.integer.int',X14) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',X15))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f3785,f3771])).
fof(f3809,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int',X5) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3761])).
fof(f3807,plain,(
  ( ! [X10,X9] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)))) | s('type.integer.int',sK10) = s('type.integer.int',X9) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3754])).
fof(f3805,plain,(
  ( ! [X17,X18,X16] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16))) | s('type.integer.int',sK10) = s('type.integer.int',X16) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',sK10))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3752])).
fof(f3804,plain,(
  ( ! [X21,X20] : (s('type.integer.int',X21) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X21,'const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)))),s('type.integer.int',sK10))) | s('type.integer.int',sK10) = s('type.integer.int',X20) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))),s('type.integer.int',X21)))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3751])).
fof(f4711,plain,(
  ( ! [X8,X9] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X8)),X9)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8))))) ) | $spl170),
  inference(forward_demodulation,[],[f4269,f3797])).
fof(f4269,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X8)),X9)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8))))) ) | $spl170),
  inference(forward_demodulation,[],[f4256,f293])).
fof(f4256,plain,(
  ( ! [X8,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X8)),X9)),s('type.integer.int',X9)))) ) | $spl170),
  inference(superposition,[],[f298,f3797])).
fof(f4710,plain,(
  ( ! [X10,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13(X11,'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X11))))) ) | $spl170),
  inference(forward_demodulation,[],[f4271,f3797])).
fof(f4271,plain,(
  ( ! [X10,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X10))),s('type.integer.int',sK13(X11,'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X11))))) ) | $spl170),
  inference(forward_demodulation,[],[f4257,f293])).
fof(f4257,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X11)))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X11,'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X10)))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X10)))))) ) | $spl170),
  inference(superposition,[],[f298,f3797])).
fof(f4251,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int',X1) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) | $spl170),
  inference(superposition,[],[f299,f3797])).
fof(f4241,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3797,f299])).
fof(f4708,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',X19)))) | s('type.integer.int',X19) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X20),s('type.integer.int',X18)))) ) | $spl170),
  inference(forward_demodulation,[],[f4260,f3797])).
fof(f4260,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int',X19) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X20),s('type.integer.int',X18))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X18))),s('type.integer.int',X19))))) ) | $spl170),
  inference(superposition,[],[f299,f3797])).
fof(f4706,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X22),s('type.integer.int',X23))) | s('type.integer.int',X23) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X23,'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X22)))),s('type.integer.int',X22)))) ) | $spl170),
  inference(forward_demodulation,[],[f4262,f3797])).
fof(f4262,plain,(
  ( ! [X23,X22] : (s('type.integer.int',X23) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X23,'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X22)))),s('type.integer.int',X22))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X22))),s('type.integer.int',X23)))) ) | $spl170),
  inference(superposition,[],[f906,f3797])).
fof(f4279,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',X0)))) ) | ($spl4 | $spl170)),
  inference(superposition,[],[f906,f3832])).
fof(f4705,plain,(
  ( ! [X6,X5] : (s('type.integer.int',X5) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13(sK13(X5,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),X6)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',X5))))) ) | ($spl4 | $spl170)),
  inference(forward_demodulation,[],[f4290,f3832])).
fof(f4290,plain,(
  ( ! [X6,X5] : (s('type.integer.int',sK13(X5,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13(sK13(X5,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),X6)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',X5))))) ) | ($spl4 | $spl170)),
  inference(forward_demodulation,[],[f4282,f293])).
fof(f4282,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',X5)))) | s('type.integer.int',sK13(X5,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK13(X5,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),X6)),s('type.integer.int',X6)))) ) | ($spl4 | $spl170)),
  inference(superposition,[],[f298,f3832])).
fof(f4704,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13(X8,sK13(X7,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) ) | ($spl4 | $spl170)),
  inference(forward_demodulation,[],[f4292,f3832])).
fof(f4292,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X7,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK13(X8,sK13(X7,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) ) | ($spl4 | $spl170)),
  inference(forward_demodulation,[],[f4283,f293])).
fof(f4283,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X8)))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,sK13(X7,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))),s('type.integer.int',sK13(X7,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) ) | ($spl4 | $spl170)),
  inference(superposition,[],[f298,f3832])).
fof(f4703,plain,(
  ( ! [X10,X9] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X10))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,sK13(X9,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))),s('type.integer.int',X9)))) ) | ($spl4 | $spl170)),
  inference(forward_demodulation,[],[f4284,f3832])).
fof(f4284,plain,(
  ( ! [X10,X9] : (s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,sK13(X9,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))),s('type.integer.int',X9))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK13(X9,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',X10)))) ) | ($spl4 | $spl170)),
  inference(superposition,[],[f906,f3832])).
fof(f4297,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK10)),X1)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) | $spl170),
  inference(resolution,[],[f3798,f254])).
fof(f4302,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK10)),X12)))) | p(s(bool,X13)) | s(bool,X13) = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int',X11)))) ) | $spl170),
  inference(resolution,[],[f3798,f294])).
fof(f4303,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',sK10)),X15)))) | sP4(X16,'const.integer.int_divides_2'(s('type.integer.int',X15),s('type.integer.int',X14)),X17)) ) | $spl170),
  inference(resolution,[],[f3798,f344])).
fof(f4304,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',sK10)),X19)))) | sP4('const.integer.int_divides_2'(s('type.integer.int',X19),s('type.integer.int',X18)),X20,X21)) ) | $spl170),
  inference(resolution,[],[f3798,f345])).
fof(f4305,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X22),s('type.integer.int',sK10)),X23)))) | sP3(X24,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int',X22)),X25)) ) | $spl170),
  inference(resolution,[],[f3798,f348])).
fof(f4306,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X26),s('type.integer.int',sK10)),X27)))) | sP3('const.integer.int_divides_2'(s('type.integer.int',X27),s('type.integer.int',X26)),X28,X29)) ) | $spl170),
  inference(resolution,[],[f3798,f349])).
fof(f4307,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.integer.int',X30) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X30),s('type.integer.int',sK10)),X31)))) | sP5('const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)),X32,X33) | s(bool,X32) = s(bool,X33)) ) | $spl170),
  inference(resolution,[],[f3798,f354])).
fof(f4308,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.integer.int',X34) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X34),s('type.integer.int',sK10)),X35)))) | sP6(X36,X37,'const.integer.int_divides_2'(s('type.integer.int',X35),s('type.integer.int',X34)))) ) | $spl170),
  inference(resolution,[],[f3798,f366])).
fof(f4309,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X38) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X38),s('type.integer.int',sK10)),X39)))) | sP6('const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)),X40,X41)) ) | $spl170),
  inference(resolution,[],[f3798,f368])).
fof(f4310,plain,(
  ( ! [X43,X44,X42] : (s('type.integer.int',X42) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X42),s('type.integer.int',sK10)),X43)))) | sP1(X44,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42))) | s(bool,'F_0') = s(bool,X44)) ) | $spl170),
  inference(resolution,[],[f3798,f892])).
fof(f4311,plain,(
  ( ! [X47,X45,X46] : (s('type.integer.int',X45) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X46),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int',sK10)),X46)))) | sP1('const.integer.int_divides_2'(s('type.integer.int',X46),s('type.integer.int',X45)),X47) | s(bool,'F_0') = s(bool,X47)) ) | $spl170),
  inference(resolution,[],[f3798,f893])).
fof(f4312,plain,(
  ( ! [X50,X48,X51,X49] : (s('type.integer.int',X48) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X49),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X48),s('type.integer.int',sK10)),X49)))) | sP7('const.integer.int_divides_2'(s('type.integer.int',X49),s('type.integer.int',X48)),X50,X51) | p(s(bool,X50)) | s(bool,'F_0') = s(bool,X51)) ) | $spl170),
  inference(resolution,[],[f3798,f903])).
fof(f4313,plain,(
  ( ! [X54,X52,X55,X53] : (s('type.integer.int',X52) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X53),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X52),s('type.integer.int',sK10)),X53)))) | sP7(X54,'const.integer.int_divides_2'(s('type.integer.int',X53),s('type.integer.int',X52)),X55) | p(s(bool,X54)) | s(bool,'F_0') = s(bool,X55)) ) | $spl170),
  inference(resolution,[],[f3798,f903])).
fof(f4314,plain,(
  ( ! [X59,X57,X58,X56] : (s('type.integer.int',X56) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X57),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X56),s('type.integer.int',sK10)),X57)))) | sP7(X58,X59,'const.integer.int_divides_2'(s('type.integer.int',X57),s('type.integer.int',X56))) | s(bool,'F_0') = s(bool,X58)) ) | $spl170),
  inference(resolution,[],[f3798,f904])).
fof(f4316,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int',X5)))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK10)),'const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))))))) ) | $spl170),
  inference(superposition,[],[f3798,f293])).
fof(f4701,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13(X8,X9)))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK10)),'const.integer.int_mul_2'(s('type.integer.int',sK13(X8,X9)),s('type.integer.int',X9)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',X10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) ) | $spl170),
  inference(forward_demodulation,[],[f4318,f293])).
fof(f4318,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',X10)))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,X9)),s('type.integer.int',X9))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK10)),'const.integer.int_mul_2'(s('type.integer.int',sK13(X8,X9)),s('type.integer.int',X9)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) ) | $spl170),
  inference(superposition,[],[f3798,f906])).
fof(f4700,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK10)),'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X11)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12))))) ) | $spl170),
  inference(forward_demodulation,[],[f4319,f3797])).
fof(f4319,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X11))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK10)),'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X11))))))) ) | $spl170),
  inference(superposition,[],[f3798,f3797])).
fof(f4699,plain,(
  ( ! [X14,X13] : (s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',sK10)),sK13(X13,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X14))))) ) | ($spl4 | $spl170)),
  inference(forward_demodulation,[],[f4320,f3832])).
fof(f4320,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X14)))) | s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X13,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',sK10)),sK13(X13,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))))) ) | ($spl4 | $spl170)),
  inference(superposition,[],[f3798,f3832])).
fof(f4322,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',sK10)),X5))))) ) | $spl170),
  inference(superposition,[],[f3798,f293])).
fof(f4697,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13(X8,X9)))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13(X8,X9)))),s('type.integer.int',sK10)),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X8)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) ) | $spl170),
  inference(forward_demodulation,[],[f4324,f293])).
fof(f4324,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X8)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,X9)),s('type.integer.int',X9))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,X9)),s('type.integer.int',X9))),s('type.integer.int',sK10)),X10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) ) | $spl170),
  inference(superposition,[],[f3798,f906])).
fof(f4362,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13(X0,'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK10)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) | $spl170),
  inference(resolution,[],[f3799,f254])).
fof(f4367,plain,(
  ( ! [X12,X13,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13(X11,'const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK10)))))) | p(s(bool,X13)) | s(bool,X13) = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int',X11)))) ) | $spl170),
  inference(resolution,[],[f3799,f294])).
fof(f4368,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.integer.int',X14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int',sK13(X14,'const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int',sK10)))))) | sP4(X16,'const.integer.int_divides_2'(s('type.integer.int',X15),s('type.integer.int',X14)),X17)) ) | $spl170),
  inference(resolution,[],[f3799,f344])).
fof(f4369,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',sK13(X18,'const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int',sK10)))))) | sP4('const.integer.int_divides_2'(s('type.integer.int',X19),s('type.integer.int',X18)),X20,X21)) ) | $spl170),
  inference(resolution,[],[f3799,f345])).
fof(f4370,plain,(
  ( ! [X24,X23,X25,X22] : (s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',sK13(X22,'const.integer.int_mul_2'(s('type.integer.int',X23),s('type.integer.int',sK10)))))) | sP3(X24,'const.integer.int_divides_2'(s('type.integer.int',X23),s('type.integer.int',X22)),X25)) ) | $spl170),
  inference(resolution,[],[f3799,f348])).
fof(f4371,plain,(
  ( ! [X28,X26,X29,X27] : (s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int',sK13(X26,'const.integer.int_mul_2'(s('type.integer.int',X27),s('type.integer.int',sK10)))))) | sP3('const.integer.int_divides_2'(s('type.integer.int',X27),s('type.integer.int',X26)),X28,X29)) ) | $spl170),
  inference(resolution,[],[f3799,f349])).
fof(f4372,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.integer.int',X30) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK13(X30,'const.integer.int_mul_2'(s('type.integer.int',X31),s('type.integer.int',sK10)))))) | sP5('const.integer.int_divides_2'(s('type.integer.int',X31),s('type.integer.int',X30)),X32,X33) | s(bool,X32) = s(bool,X33)) ) | $spl170),
  inference(resolution,[],[f3799,f354])).
fof(f4373,plain,(
  ( ! [X37,X35,X36,X34] : (s('type.integer.int',X34) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',sK13(X34,'const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',sK10)))))) | sP6(X36,X37,'const.integer.int_divides_2'(s('type.integer.int',X35),s('type.integer.int',X34)))) ) | $spl170),
  inference(resolution,[],[f3799,f366])).
fof(f4374,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.integer.int',X38) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK13(X38,'const.integer.int_mul_2'(s('type.integer.int',X39),s('type.integer.int',sK10)))))) | sP6('const.integer.int_divides_2'(s('type.integer.int',X39),s('type.integer.int',X38)),X40,X41)) ) | $spl170),
  inference(resolution,[],[f3799,f368])).
fof(f4375,plain,(
  ( ! [X43,X44,X42] : (s('type.integer.int',X42) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK13(X42,'const.integer.int_mul_2'(s('type.integer.int',X43),s('type.integer.int',sK10)))))) | sP1(X44,'const.integer.int_divides_2'(s('type.integer.int',X43),s('type.integer.int',X42))) | s(bool,'F_0') = s(bool,X44)) ) | $spl170),
  inference(resolution,[],[f3799,f892])).
fof(f4376,plain,(
  ( ! [X47,X45,X46] : (s('type.integer.int',X45) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X46),s('type.integer.int',sK13(X45,'const.integer.int_mul_2'(s('type.integer.int',X46),s('type.integer.int',sK10)))))) | sP1('const.integer.int_divides_2'(s('type.integer.int',X46),s('type.integer.int',X45)),X47) | s(bool,'F_0') = s(bool,X47)) ) | $spl170),
  inference(resolution,[],[f3799,f893])).
fof(f4377,plain,(
  ( ! [X50,X48,X51,X49] : (s('type.integer.int',X48) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X49),s('type.integer.int',sK13(X48,'const.integer.int_mul_2'(s('type.integer.int',X49),s('type.integer.int',sK10)))))) | sP7('const.integer.int_divides_2'(s('type.integer.int',X49),s('type.integer.int',X48)),X50,X51) | p(s(bool,X50)) | s(bool,'F_0') = s(bool,X51)) ) | $spl170),
  inference(resolution,[],[f3799,f903])).
fof(f4378,plain,(
  ( ! [X54,X52,X55,X53] : (s('type.integer.int',X52) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X53),s('type.integer.int',sK13(X52,'const.integer.int_mul_2'(s('type.integer.int',X53),s('type.integer.int',sK10)))))) | sP7(X54,'const.integer.int_divides_2'(s('type.integer.int',X53),s('type.integer.int',X52)),X55) | p(s(bool,X54)) | s(bool,'F_0') = s(bool,X55)) ) | $spl170),
  inference(resolution,[],[f3799,f903])).
fof(f4379,plain,(
  ( ! [X59,X57,X58,X56] : (s('type.integer.int',X56) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X57),s('type.integer.int',sK13(X56,'const.integer.int_mul_2'(s('type.integer.int',X57),s('type.integer.int',sK10)))))) | sP7(X58,X59,'const.integer.int_divides_2'(s('type.integer.int',X57),s('type.integer.int',X56))) | s(bool,'F_0') = s(bool,X58)) ) | $spl170),
  inference(resolution,[],[f3799,f904])).
fof(f4381,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int',X5)))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',sK13(X5,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',sK10))))))) ) | $spl170),
  inference(superposition,[],[f3799,f293])).
fof(f4691,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13(X8,X9)))),s('type.integer.int',sK13(X10,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13(X8,X9)))),s('type.integer.int',sK10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',X10)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) ) | $spl170),
  inference(forward_demodulation,[],[f4383,f293])).
fof(f4383,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int',X10)))) | s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,X9)),s('type.integer.int',X9))),s('type.integer.int',sK13(X10,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,X9)),s('type.integer.int',X9))),s('type.integer.int',sK10)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) ) | $spl170),
  inference(superposition,[],[f3799,f906])).
fof(f4387,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)),'const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK10))))))) ) | $spl170),
  inference(superposition,[],[f3799,f293])).
fof(f4688,plain,(
  ( ! [X6,X7] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK10)),'const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X6))))) ) | $spl170),
  inference(forward_demodulation,[],[f4388,f3785])).
fof(f4388,plain,(
  ( ! [X6,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X6)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK10)),'const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK10))))))) ) | $spl170),
  inference(superposition,[],[f3799,f3785])).
fof(f4687,plain,(
  ( ! [X10,X8,X9] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13(X8,X9)))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X8,X9)),s('type.integer.int',X9)),'const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X8)))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) ) | $spl170),
  inference(forward_demodulation,[],[f4389,f293])).
fof(f4389,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X8)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,X9)),s('type.integer.int',X9))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(X8,X9)),s('type.integer.int',X9)),'const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK10)))))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X9),s('type.integer.int',X8)))) ) | $spl170),
  inference(superposition,[],[f3799,f906])).
fof(f4686,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X11)),'const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int',X11))))) ) | $spl170),
  inference(forward_demodulation,[],[f4390,f3797])).
fof(f4390,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X12),s('type.integer.int',X11)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X11))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X11)),'const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK10))))))) ) | $spl170),
  inference(superposition,[],[f3799,f3797])).
fof(f4685,plain,(
  ( ! [X14,X13] : (s('type.integer.int',X13) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',sK13(sK13(X13,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),'const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',sK10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int',X13))))) ) | ($spl4 | $spl170)),
  inference(forward_demodulation,[],[f4391,f3832])).
fof(f4391,plain,(
  ( ! [X14,X13] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int',X13)))) | s('type.integer.int',sK13(X13,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',sK13(sK13(X13,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),'const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int',sK10))))))) ) | ($spl4 | $spl170)),
  inference(superposition,[],[f3799,f3832])).
fof(f4141,plain,(
  ( ! [X57,X58,X56] : (s(bool,'F_0') = s(bool,X56) | sP7(X56,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X57)),X58)) ) | $spl170),
  inference(resolution,[],[f3796,f905])).
fof(f4140,plain,(
  ( ! [X54,X55] : (s(bool,'F_0') = s(bool,X54) | ~sP1(X54,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X55)))) ) | $spl170),
  inference(resolution,[],[f3796,f896])).
fof(f4139,plain,(
  ( ! [X52,X53] : (s(bool,'F_0') = s(bool,X52) | ~sP1('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X53)),X52)) ) | $spl170),
  inference(resolution,[],[f3796,f891])).
fof(f4138,plain,(
  ( ! [X50,X51] : (s(bool,'F_0') = s(bool,X50) | s(bool,X50) = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X51)))) ) | $spl170),
  inference(resolution,[],[f3796,f887])).
fof(f4137,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | sP7('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X48)),X47,X49)) ) | $spl170),
  inference(resolution,[],[f3796,f371])).
fof(f4136,plain,(
  ( ! [X45,X46,X44] : (p(s(bool,X44)) | sP7('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X45)),X46,X44)) ) | $spl170),
  inference(resolution,[],[f3796,f370])).
fof(f4135,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,X41)) | sP7(X42,X41,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X43))) | p(s(bool,X42))) ) | $spl170),
  inference(resolution,[],[f3796,f369])).
fof(f4128,plain,(
  ( ! [X21,X22] : (~p(s(bool,X21)) | ~sP1('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X22)),X21)) ) | $spl170),
  inference(resolution,[],[f3796,f325])).
fof(f4125,plain,(
  ( ! [X15,X16] : (p(s(bool,X15)) | sP1(X15,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X16)))) ) | $spl170),
  inference(resolution,[],[f3796,f322])).
fof(f4124,plain,(
  ( ! [X14,X13] : (p(s(bool,X13)) | sP1('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X14)),X13)) ) | $spl170),
  inference(resolution,[],[f3796,f319])).
fof(f4123,plain,(
  ( ! [X12,X11] : (~p(s(bool,X11)) | ~sP1(X11,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X12)))) ) | $spl170),
  inference(resolution,[],[f3796,f318])).
fof(f3957,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1)))) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3796,f303])).
fof(f3959,plain,(
  ( ! [X0,X1] : (sP0('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0)),X1)) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3796,f309])).
fof(f3979,plain,(
  ( ! [X0,X1] : (~sP1('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0)),'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1)))) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3796,f3796,f325])).
fof(f4010,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X2)))) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3796,f343])).
fof(f4025,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X2)))) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3796,f347])).
fof(f4026,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X2)))) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3796,f351])).
fof(f4027,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1)),X2)) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3796,f352])).
fof(f4028,plain,(
  ( ! [X2,X0,X1] : (sP2('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0)),X1,X2)) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3796,f353])).
fof(f4072,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1)),X2)) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3796,f367])).
fof(f4085,plain,(
  ( ! [X2,X0,X1] : (sP7('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0)),'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1)),X2)) ) | $spl170),
  inference(unit_resulting_resolution,[],[f3796,f3796,f371])).
fof(f3859,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int',sK13(X3,sK10)) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X3)))) ) | $spl170),
  inference(superposition,[],[f3785,f906])).
fof(f3808,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X8)))) | s('type.integer.int',sK10) = s('type.integer.int',X7) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3760])).
fof(f3806,plain,(
  ( ! [X24,X25] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X25))) | s('type.integer.int',sK10) = s('type.integer.int',X24) | s('type.integer.int',X25) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X25,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24)))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3753])).
fof(f3799,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13(X12,'const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK10))))))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f3029])).
fof(f3798,plain,(
  ( ! [X10,X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9)))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK10)),X10))))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f3027])).
fof(f3832,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) ) | ($spl4 | $spl170)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f384,f598,f619,f597,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2058,f2060,f2063,f2064,f2316,f2349,f2324,f2327,f2351,f2353,f2354,f2355,f2359,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2460,f2464,f2466,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2475,f2476,f2477,f2478,f2480,f2493,f2502,f2485,f2486,f2529,f2536,f2537,f3023,f2321,f2314,f3196,f3212,f3248,f3205,f3198,f3197,f3195,f3188,f3185,f3178,f3312,f3314,f3315,f3317,f3320,f3323,f3324,f3346,f3364,f3325,f3326,f2511,f2346,f2543,f2531,f2528,f2527,f2526,f2525,f2524,f2523,f2522,f2521,f2520,f2519,f2518,f2517,f2515,f621,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3631,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2542,f2492,f2345,f2323,f234,f3715,f2078,f3785,f3787,f3788,f3790,f3793,f3814,f3796,f3797,f3815])).
fof(f3815,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4))))) ) | ($spl4 | $spl170)),
  inference(backward_demodulation,[],[f3797,f621])).
fof(f3797,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X1)))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f3002])).
fof(f3796,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0))))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f2992])).
fof(f3814,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK10)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) ) | ($spl4 | $spl170)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f384,f598,f619,f597,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2058,f2060,f2063,f2064,f2316,f2349,f2324,f2327,f2351,f2353,f2354,f2355,f2359,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2460,f2464,f2466,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2475,f2476,f2477,f2478,f2480,f2493,f2502,f2485,f2486,f2529,f2536,f2537,f3023,f2321,f2314,f3196,f3212,f3248,f3205,f3198,f3197,f3195,f3188,f3185,f3178,f3312,f3314,f3315,f3317,f3320,f3323,f3324,f3346,f3364,f3325,f3326,f2511,f2346,f2543,f2531,f2528,f2527,f2526,f2525,f2524,f2523,f2522,f2521,f2520,f2519,f2518,f2517,f2515,f621,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3631,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2542,f2492,f2345,f2323,f234,f3715,f2078,f3785,f3787,f3788,f3790,f3793])).
fof(f3793,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK10)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1))))) ) | ($spl4 | $spl170)),
  inference(backward_demodulation,[],[f2078,f2542])).
fof(f3788,plain,(
  ( ! [X2,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X3,'const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK10)))),s('type.integer.int',X2))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f2345])).
fof(f3787,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f2323])).
fof(f3336,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int',X5) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)),X6))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3297])).
fof(f3335,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X8)))) | s('type.integer.int',sK10) = s('type.integer.int',X7) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3296])).
fof(f3334,plain,(
  ( ! [X10,X9] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X10)))) | s('type.integer.int',sK10) = s('type.integer.int',X9) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3295])).
fof(f3333,plain,(
  ( ! [X26,X25] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X26))) | s('type.integer.int',sK10) = s('type.integer.int',X25) | s('type.integer.int',X26) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X26,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X25),s('type.integer.int',X25)))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3294])).
fof(f3332,plain,(
  ( ! [X17,X18,X16] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X18),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int',X16) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X17),s('type.integer.int',X18))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int',X16)))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3293])).
fof(f3331,plain,(
  ( ! [X21,X22] : (s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X22,'const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21)))),s('type.integer.int',sK10))) | s('type.integer.int',sK10) = s('type.integer.int',X21) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))),s('type.integer.int',X22)))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3291])).
fof(f3330,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X14))) | s('type.integer.int',sK10) = s('type.integer.int',X12) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3290])).
fof(f3329,plain,(
  ( ! [X4,X3] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',X3))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X4)))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3288])).
fof(f3328,plain,(
  ( ! [X12,X13] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X12))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X12,X13)),s('type.integer.int',X13))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X13),s('type.integer.int',X12)))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f2078,f3276])).
fof(f3326,plain,(
  ( ! [X12,X11] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13(X12,'const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X11),s('type.integer.int',X12))))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f3029])).
fof(f3325,plain,(
  ( ! [X10,X9] : (s('type.integer.int',X9) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK10)),X10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X10),s('type.integer.int',X9))))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f3027])).
fof(f3364,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) ) | ($spl4 | $spl170)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f384,f598,f619,f621,f597,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2058,f2060,f2063,f2064,f2316,f2346,f2349,f2324,f2327,f2351,f2353,f2354,f2355,f2359,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2460,f2464,f2466,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2475,f2476,f2477,f2478,f2480,f2493,f2502,f2485,f2486,f2511,f2515,f2517,f2518,f2519,f2520,f2521,f2522,f2523,f2524,f2525,f2526,f2527,f2528,f2529,f2531,f2543,f2536,f2537,f3023,f2358,f2357,f2332,f2331,f2322,f2321,f2314,f328,f246,f245,f3155,f3176,f3177,f3167,f3168,f3187,f3203,f3196,f3216,f3212,f3211,f3248,f3246,f3205,f3199,f3198,f3197,f3195,f3194,f3257,f3258,f3188,f3185,f3180,f3178,f3029,f3027,f3002,f3263,f2992,f2542,f2492,f2345,f2323,f234,f3264,f2078,f3312,f3314,f3315,f3317,f3320,f3323,f3324,f3346])).
fof(f3346,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4))))) ) | ($spl4 | $spl170)),
  inference(backward_demodulation,[],[f3324,f621])).
fof(f3324,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',X1)))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f3002])).
fof(f3323,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0))))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f2992])).
fof(f3320,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK10)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X1))))) ) | ($spl4 | $spl170)),
  inference(backward_demodulation,[],[f2078,f2542])).
fof(f3317,plain,(
  ( ! [X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK10)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',sK10))))) ) | ($spl4 | $spl170)),
  inference(backward_demodulation,[],[f2078,f2492])).
fof(f3315,plain,(
  ( ! [X2,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X3,'const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK10)))),s('type.integer.int',X2))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f2345])).
fof(f3314,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f2323])).
fof(f3337,plain,(
  ( ! [X14,X15,X16] : (s('type.integer.int',X15) != s('type.integer.int',X16) | s('type.integer.int',sK10) = s('type.integer.int',X14) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',X15))))) ) | ($spl170 | $spl174)),
  inference(backward_demodulation,[],[f3312,f3308])).
fof(f3312,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK10)))) ) | $spl170),
  inference(backward_demodulation,[],[f2078,f234])).
fof(f4171,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl298),
  inference(cnf_transformation,[],[f4171_D])).
fof(f4171_D,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int',X0)) ) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f5997,plain,(
  ( ! [X4] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int',sK10) = s('type.integer.int',X4)) ) | ($spl250 | $spl252)),
  inference(duplicate_literal_removal,[],[f5951])).
fof(f5951,plain,(
  ( ! [X4] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int',sK10) = s('type.integer.int',X4) | s('type.integer.int',sK10) = s('type.integer.int',X4)) ) | ($spl250 | $spl252)),
  inference(superposition,[],[f3079,f3080])).
fof(f6000,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | ($spl233 | $spl250 | $spl276)),
  inference(forward_demodulation,[],[f5932,f3339])).
fof(f5932,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | ($spl233 | $spl250)),
  inference(unit_resulting_resolution,[],[f2911,f3079])).
fof(f5890,plain,(
  ( ! [X44] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int',X44)) ) | $spl338),
  inference(cnf_transformation,[],[f5890_D])).
fof(f5890_D,plain,(
  ( ! [X44] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int',X44)) ) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f5891,plain,(
  ( ! [X45,X46] : (s('type.integer.int',X45) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int',X46))) | s('type.integer.int',sK10) = s('type.integer.int',X46)) ) | $spl340),
  inference(cnf_transformation,[],[f5891_D])).
fof(f5891_D,plain,(
  ( ! [X45,X46] : (s('type.integer.int',X45) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int',X46))) | s('type.integer.int',sK10) = s('type.integer.int',X46)) ) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f5889,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int',X45) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int',X46))) | s('type.integer.int',sK10) = s('type.integer.int',X46) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int',X44)) ) | ($spl170 | $spl174 | $spl258)),
  inference(forward_demodulation,[],[f5848,f3785])).
fof(f5848,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int',X46))) | s('type.integer.int',sK10) = s('type.integer.int',X46) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int',X44)) ) | ($spl170 | $spl174 | $spl258)),
  inference(superposition,[],[f3805,f3091])).
fof(f5815,plain,(
  ( ! [X46,X44] : (s('type.integer.int',sK10) = s('type.integer.int',X46) | s('type.integer.int',sK10) = s('type.integer.int',X44) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int',X46))))))) ) | $spl336),
  inference(cnf_transformation,[],[f5815_D])).
fof(f5815_D,plain,(
  ( ! [X46,X44] : (s('type.integer.int',sK10) = s('type.integer.int',X46) | s('type.integer.int',sK10) = s('type.integer.int',X44) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int',X46))))))) ) <=> ~$spl336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl336])])).
fof(f5251,plain,(
  ( ! [X23] : (s('type.integer.int',sK10) != s('type.integer.int',X23)) ) | $spl320),
  inference(cnf_transformation,[],[f5251_D])).
fof(f5251_D,plain,(
  ( ! [X23] : (s('type.integer.int',sK10) != s('type.integer.int',X23)) ) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f5814,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int',sK10) != s('type.integer.int',X45) | s('type.integer.int',sK10) = s('type.integer.int',X46) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int',X46)))))) | s('type.integer.int',sK10) = s('type.integer.int',X44)) ) | ($spl170 | $spl174 | $spl258)),
  inference(forward_demodulation,[],[f5785,f3785])).
fof(f5785,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int',sK10))) | s('type.integer.int',sK10) = s('type.integer.int',X46) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X46),s('type.integer.int',X46)))))) | s('type.integer.int',sK10) = s('type.integer.int',X44)) ) | ($spl170 | $spl174 | $spl258)),
  inference(superposition,[],[f3803,f3091])).
fof(f5750,plain,(
  ( ! [X46,X44] : (s('type.integer.int',sK10) = s('type.integer.int',X46) | s('type.integer.int',sK10) = s('type.integer.int',X44) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X46),s('type.integer.int',X46))))))) ) | $spl334),
  inference(cnf_transformation,[],[f5750_D])).
fof(f5750_D,plain,(
  ( ! [X46,X44] : (s('type.integer.int',sK10) = s('type.integer.int',X46) | s('type.integer.int',sK10) = s('type.integer.int',X44) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X46),s('type.integer.int',X46))))))) ) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f5749,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int',sK10) != s('type.integer.int',X45) | s('type.integer.int',sK10) = s('type.integer.int',X46) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X46),s('type.integer.int',X46)))))) | s('type.integer.int',sK10) = s('type.integer.int',X44)) ) | ($spl170 | $spl174 | $spl258)),
  inference(forward_demodulation,[],[f5720,f3785])).
fof(f5720,plain,(
  ( ! [X45,X46,X44] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X45),s('type.integer.int',sK10))) | s('type.integer.int',sK10) = s('type.integer.int',X46) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X44),s('type.integer.int',X44))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X46),s('type.integer.int',X46)))))) | s('type.integer.int',sK10) = s('type.integer.int',X44)) ) | ($spl174 | $spl258)),
  inference(superposition,[],[f3770,f3091])).
fof(f5687,plain,(
  ( ! [X7] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl332),
  inference(cnf_transformation,[],[f5687_D])).
fof(f5687_D,plain,(
  ( ! [X7] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) <=> ~$spl332),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl332])])).
fof(f5682,plain,(
  ( ! [X6,X7] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) | s('type.integer.int',sK10) = s('type.integer.int',X6) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl174 | $spl252)),
  inference(duplicate_literal_removal,[],[f5681])).
fof(f5681,plain,(
  ( ! [X6,X7] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) | s('type.integer.int',sK10) = s('type.integer.int',X6) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.integer.int',sK10) = s('type.integer.int',X6)) ) | ($spl174 | $spl252)),
  inference(superposition,[],[f3743,f3080])).
fof(f5516,plain,(
  $false | ($spl258 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f2327,f2354,f3023,f2355,f3091,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5251,f5279,f5284,f5310,f5295,f5479,f5472,f5471,f5469,f5458,f5499])).
fof(f5499,plain,(
  ( ! [X14] : (s('type.integer.int',sK10) = s('type.integer.int',X14)) ) | ($spl258 | $spl320)),
  inference(trivial_inequality_removal,[],[f5496])).
fof(f5496,plain,(
  ( ! [X14] : (s('type.integer.int',sK10) != s('type.integer.int',sK10) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) | ($spl258 | $spl320)),
  inference(superposition,[],[f5251,f3091])).
fof(f5458,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))) ) | ($spl258 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f3091])).
fof(f5469,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | ($spl258 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f3091])).
fof(f5471,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',sK10)))) ) | $spl320),
  inference(unit_resulting_resolution,[],[f5251,f906])).
fof(f5472,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',sK10))))) ) | $spl320),
  inference(unit_resulting_resolution,[],[f5251,f298])).
fof(f5479,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | ($spl258 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f3091])).
fof(f5295,plain,(
  ( ! [X10,X9] : (s('type.integer.int',X10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X10,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X9),s('type.integer.int',X9))))),s('type.integer.int',X10))) | s('type.integer.int',sK10) = s('type.integer.int',X9)) ) | $spl258),
  inference(superposition,[],[f906,f3091])).
fof(f5310,plain,(
  ( ! [X6,X5] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)))),X6)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int',X5)) ) | $spl258),
  inference(forward_demodulation,[],[f5293,f293])).
fof(f5293,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',X5)))),X6)),s('type.integer.int',X6))) | s('type.integer.int',sK10) = s('type.integer.int',X5)) ) | $spl258),
  inference(superposition,[],[f298,f3091])).
fof(f5284,plain,(
  ( ! [X6,X7] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X6))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X6,X7)),s('type.integer.int',X7))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X6)))) ) | $spl258),
  inference(superposition,[],[f3091,f906])).
fof(f5279,plain,(
  ( ! [X0,X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) ) | $spl258),
  inference(superposition,[],[f3091,f293])).
fof(f5515,plain,(
  $false | ($spl174 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2908,f2894,f2909,f2899,f2900,f2914,f2915,f2903,f2916,f2917,f2961,f2946,f2962,f2951,f2952,f2963,f2964,f2955,f2965,f2966,f2970,f2990,f2991,f2981,f2982,f3020,f3036,f3037,f3039,f3043,f3045,f3083,f3084,f3052,f3085,f3058,f3061,f3062,f3088,f3090,f3070,f3076,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3300,f3301,f3302,f3303,f3304,f3305,f3306,f3307,f3309,f3310,f3311,f3292,f3298,f3299,f3308,f3297,f3296,f3295,f3294,f3293,f3291,f3290,f3288,f3276,f3268,f3430,f3448,f3469,f3512,f3492,f3498,f3499,f3500,f3501,f3511,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3721,f3730,f3771,f3773,f3747,f3749,f3750,f3751,f3752,f3753,f3754,f3779,f3760,f3761,f3784,f2327,f2354,f3023,f2355,f3743,f3748,f3759,f3763,f3764,f3765,f3768,f3770,f3772,f3774,f3777,f3781,f2081,f3767,f3782,f3769,f3766,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5197,f5247,f5205,f5217,f5251,f5318,f5323,f5400,f5356,f5477,f5475,f5472,f5471,f5467,f5462,f5457,f5456,f5455,f5454,f5500])).
fof(f5500,plain,(
  ( ! [X13] : (s('type.integer.int',sK10) = s('type.integer.int',X13)) ) | ($spl174 | $spl320)),
  inference(trivial_inequality_removal,[],[f5495])).
fof(f5495,plain,(
  ( ! [X13] : (s('type.integer.int',sK10) != s('type.integer.int',sK10) | s('type.integer.int',sK10) = s('type.integer.int',X13)) ) | ($spl174 | $spl320)),
  inference(superposition,[],[f5251,f3763])).
fof(f5454,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) ) | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3774])).
fof(f5455,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) ) | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3774])).
fof(f5456,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X1)))) ) | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3774])).
fof(f5457,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) ) | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3774])).
fof(f5462,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) ) | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f3763])).
fof(f5467,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f3763])).
fof(f5475,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) ) | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3774])).
fof(f5477,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) ) | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3774])).
fof(f5514,plain,(
  $false | ($spl252 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f2327,f2354,f3023,f2355,f3080,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5251,f5481,f5472,f5471,f5465,f5460,f5501])).
fof(f5501,plain,(
  ( ! [X12] : (s('type.integer.int',sK10) = s('type.integer.int',X12)) ) | ($spl252 | $spl320)),
  inference(trivial_inequality_removal,[],[f5494])).
fof(f5494,plain,(
  ( ! [X12] : (s('type.integer.int',sK10) != s('type.integer.int',sK10) | s('type.integer.int',sK10) = s('type.integer.int',X12)) ) | ($spl252 | $spl320)),
  inference(superposition,[],[f5251,f3080])).
fof(f5460,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))) ) | ($spl252 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f3080])).
fof(f5465,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | ($spl252 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f3080])).
fof(f5481,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | ($spl252 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f3080])).
fof(f5513,plain,(
  $false | ($spl174 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2908,f2894,f2909,f2899,f2900,f2914,f2915,f2903,f2916,f2917,f2961,f2946,f2962,f2951,f2952,f2963,f2964,f2955,f2965,f2966,f2970,f2990,f2991,f2981,f2982,f3020,f3036,f3037,f3039,f3043,f3045,f3083,f3084,f3052,f3085,f3058,f3061,f3062,f3088,f3090,f3070,f3076,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3300,f3301,f3302,f3303,f3304,f3305,f3306,f3307,f3309,f3310,f3311,f3292,f3298,f3299,f3308,f3297,f3296,f3295,f3294,f3293,f3291,f3290,f3288,f3276,f3268,f3430,f3448,f3469,f3512,f3492,f3498,f3499,f3500,f3501,f3511,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3721,f3730,f3771,f3773,f3747,f3749,f3750,f3751,f3752,f3753,f3754,f3779,f3760,f3761,f3784,f2327,f2354,f3023,f2355,f3743,f3748,f3759,f3763,f3764,f3765,f3768,f3770,f3772,f3774,f3777,f3781,f2081,f3767,f3782,f3769,f3766,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5197,f5247,f5205,f5217,f5251,f5318,f5323,f5400,f5356,f5477,f5475,f5472,f5471,f5467,f5462,f5457,f5456,f5455,f5454])).
fof(f5512,plain,(
  $false | ($spl174 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2908,f2894,f2909,f2899,f2900,f2914,f2915,f2903,f2916,f2917,f2961,f2946,f2962,f2951,f2952,f2963,f2964,f2955,f2965,f2966,f2970,f2990,f2991,f2981,f2982,f3020,f3036,f3037,f3039,f3043,f3045,f3083,f3084,f3052,f3085,f3058,f3061,f3062,f3088,f3090,f3070,f3076,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3300,f3301,f3302,f3303,f3304,f3305,f3306,f3307,f3309,f3310,f3311,f3292,f3298,f3299,f3308,f3297,f3296,f3295,f3294,f3293,f3291,f3290,f3288,f3276,f3268,f3430,f3448,f3469,f3512,f3492,f3498,f3499,f3500,f3501,f3511,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3721,f3730,f3771,f3773,f3747,f3749,f3750,f3751,f3752,f3753,f3754,f3779,f3760,f3761,f3784,f2327,f2354,f3023,f2355,f3743,f3748,f3759,f3763,f3764,f3765,f3768,f3770,f3772,f3774,f3777,f3781,f2081,f3767,f3782,f3769,f3766,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5197,f5247,f5205,f5217,f5251,f5318,f5323,f5400,f5356,f5477,f5475,f5472,f5471,f5467,f5462,f5457,f5456,f5455])).
fof(f5511,plain,(
  $false | ($spl174 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2908,f2894,f2909,f2899,f2900,f2914,f2915,f2903,f2916,f2917,f2961,f2946,f2962,f2951,f2952,f2963,f2964,f2955,f2965,f2966,f2970,f2990,f2991,f2981,f2982,f3020,f3036,f3037,f3039,f3043,f3045,f3083,f3084,f3052,f3085,f3058,f3061,f3062,f3088,f3090,f3070,f3076,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3300,f3301,f3302,f3303,f3304,f3305,f3306,f3307,f3309,f3310,f3311,f3292,f3298,f3299,f3308,f3297,f3296,f3295,f3294,f3293,f3291,f3290,f3288,f3276,f3268,f3430,f3448,f3469,f3512,f3492,f3498,f3499,f3500,f3501,f3511,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3721,f3730,f3771,f3773,f3747,f3749,f3750,f3751,f3752,f3753,f3754,f3779,f3760,f3761,f3784,f2327,f2354,f3023,f2355,f3743,f3748,f3759,f3763,f3764,f3765,f3768,f3770,f3772,f3774,f3777,f3781,f2081,f3767,f3782,f3769,f3766,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5197,f5247,f5205,f5217,f5251,f5318,f5323,f5400,f5356,f5477,f5475,f5472,f5471,f5467,f5462,f5457,f5456])).
fof(f5510,plain,(
  $false | ($spl174 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2908,f2894,f2909,f2899,f2900,f2914,f2915,f2903,f2916,f2917,f2961,f2946,f2962,f2951,f2952,f2963,f2964,f2955,f2965,f2966,f2970,f2990,f2991,f2981,f2982,f3020,f3036,f3037,f3039,f3043,f3045,f3083,f3084,f3052,f3085,f3058,f3061,f3062,f3088,f3090,f3070,f3076,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3300,f3301,f3302,f3303,f3304,f3305,f3306,f3307,f3309,f3310,f3311,f3292,f3298,f3299,f3308,f3297,f3296,f3295,f3294,f3293,f3291,f3290,f3288,f3276,f3268,f3430,f3448,f3469,f3512,f3492,f3498,f3499,f3500,f3501,f3511,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3721,f3730,f3771,f3773,f3747,f3749,f3750,f3751,f3752,f3753,f3754,f3779,f3760,f3761,f3784,f2327,f2354,f3023,f2355,f3743,f3748,f3759,f3763,f3764,f3765,f3768,f3770,f3772,f3774,f3777,f3781,f2081,f3767,f3782,f3769,f3766,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5197,f5247,f5205,f5217,f5251,f5318,f5323,f5400,f5356,f5477,f5475,f5472,f5471,f5467,f5462,f5457])).
fof(f5509,plain,(
  $false | ($spl258 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f2327,f2354,f3023,f2355,f3091,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5251,f5279,f5284,f5310,f5295,f5479,f5472,f5471,f5469,f5458])).
fof(f5508,plain,(
  $false | ($spl252 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f2327,f2354,f3023,f2355,f3080,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5251,f5481,f5472,f5471,f5465,f5460])).
fof(f5507,plain,(
  $false | ($spl174 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2908,f2894,f2909,f2899,f2900,f2914,f2915,f2903,f2916,f2917,f2961,f2946,f2962,f2951,f2952,f2963,f2964,f2955,f2965,f2966,f2970,f2990,f2991,f2981,f2982,f3020,f3036,f3037,f3039,f3043,f3045,f3083,f3084,f3052,f3085,f3058,f3061,f3062,f3088,f3090,f3070,f3076,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3300,f3301,f3302,f3303,f3304,f3305,f3306,f3307,f3309,f3310,f3311,f3292,f3298,f3299,f3308,f3297,f3296,f3295,f3294,f3293,f3291,f3290,f3288,f3276,f3268,f3430,f3448,f3469,f3512,f3492,f3498,f3499,f3500,f3501,f3511,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3721,f3730,f3771,f3773,f3747,f3749,f3750,f3751,f3752,f3753,f3754,f3779,f3760,f3761,f3784,f2327,f2354,f3023,f2355,f3743,f3748,f3759,f3763,f3764,f3765,f3768,f3770,f3772,f3774,f3777,f3781,f2081,f3767,f3782,f3769,f3766,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5197,f5247,f5205,f5217,f5251,f5318,f5323,f5400,f5356,f5477,f5475,f5472,f5471,f5467,f5462])).
fof(f5506,plain,(
  $false | ($spl252 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f2327,f2354,f3023,f2355,f3080,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5251,f5481,f5472,f5471,f5465])).
fof(f5505,plain,(
  $false | ($spl174 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2908,f2894,f2909,f2899,f2900,f2914,f2915,f2903,f2916,f2917,f2961,f2946,f2962,f2951,f2952,f2963,f2964,f2955,f2965,f2966,f2970,f2990,f2991,f2981,f2982,f3020,f3036,f3037,f3039,f3043,f3045,f3083,f3084,f3052,f3085,f3058,f3061,f3062,f3088,f3090,f3070,f3076,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3300,f3301,f3302,f3303,f3304,f3305,f3306,f3307,f3309,f3310,f3311,f3292,f3298,f3299,f3308,f3297,f3296,f3295,f3294,f3293,f3291,f3290,f3288,f3276,f3268,f3430,f3448,f3469,f3512,f3492,f3498,f3499,f3500,f3501,f3511,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f3721,f3730,f3771,f3773,f3747,f3749,f3750,f3751,f3752,f3753,f3754,f3779,f3760,f3761,f3784,f2327,f2354,f3023,f2355,f3743,f3748,f3759,f3763,f3764,f3765,f3768,f3770,f3772,f3774,f3777,f3781,f2081,f3767,f3782,f3769,f3766,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5197,f5247,f5205,f5217,f5251,f5318,f5323,f5400,f5356,f5477,f5475,f5472,f5471,f5467])).
fof(f5504,plain,(
  $false | ($spl258 | $spl320)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2351,f2353,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f2327,f2354,f3023,f2355,f3091,f4986,f4973,f4929,f4928,f4927,f4926,f4911,f4880,f4860,f4858,f4842,f5025,f5026,f5027,f5030,f5037,f5038,f5039,f5040,f5041,f5042,f5043,f5060,f5251,f5279,f5284,f5310,f5295,f5479,f5472,f5471,f5469])).
fof(f5484,plain,(
  $false | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3763])).
fof(f5482,plain,(
  $false | ($spl252 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3080])).
fof(f5480,plain,(
  $false | ($spl258 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3091])).
fof(f5470,plain,(
  $false | ($spl258 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3091])).
fof(f5468,plain,(
  $false | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3763])).
fof(f5466,plain,(
  $false | ($spl252 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3080])).
fof(f5463,plain,(
  $false | ($spl174 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3763])).
fof(f5461,plain,(
  $false | ($spl252 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3080])).
fof(f5459,plain,(
  $false | ($spl258 | $spl320)),
  inference(unit_resulting_resolution,[],[f5251,f5251,f3091])).
fof(f5453,plain,(
  $false | ($spl4 | $spl320)),
  inference(unit_resulting_resolution,[],[f384,f5251])).
fof(f5503,plain,(
  $false | ($spl4 | $spl320)),
  inference(trivial_inequality_removal,[],[f5488])).
fof(f5488,plain,(
  s('type.integer.int',sK10) != s('type.integer.int',sK10) | ($spl4 | $spl320)),
  inference(superposition,[],[f5251,f384])).
fof(f5502,plain,(
  $false | ($spl92 | $spl320)),
  inference(trivial_inequality_removal,[],[f5491])).
fof(f5491,plain,(
  s('type.integer.int',sK10) != s('type.integer.int',sK10) | ($spl92 | $spl320)),
  inference(superposition,[],[f5251,f787])).
fof(f5498,plain,(
  $false | $spl320),
  inference(equality_resolution,[],[f5251])).
fof(f5451,plain,(
  ( ! [X14] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) | $spl330),
  inference(cnf_transformation,[],[f5451_D])).
fof(f5451_D,plain,(
  ( ! [X14] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f5450,plain,(
  ( ! [X14] : (~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) | ($spl4 | $spl95 | $spl170 | $spl258)),
  inference(forward_demodulation,[],[f5433,f4106])).
fof(f4106,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0)))) ) | ($spl95 | $spl170)),
  inference(unit_resulting_resolution,[],[f793,f3796,f887])).
fof(f5433,plain,(
  ( ! [X14] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X14),s('type.integer.int',X14)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) | ($spl4 | $spl258)),
  inference(superposition,[],[f619,f3091])).
fof(f5317,plain,(
  ( ! [X19,X20] : (s('type.integer.int',X20) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))),s('type.integer.int',sK13(X20,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X19)) ) | $spl328),
  inference(cnf_transformation,[],[f5317_D])).
fof(f5317_D,plain,(
  ( ! [X19,X20] : (s('type.integer.int',X20) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))),s('type.integer.int',sK13(X20,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X19)) ) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f5316,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))),s('type.integer.int',sK13(X20,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X19)) ) | ($spl95 | $spl170 | $spl258)),
  inference(forward_demodulation,[],[f5302,f4106])).
fof(f5302,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X20)))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))),s('type.integer.int',sK13(X20,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X19)) ) | ($spl170 | $spl258)),
  inference(superposition,[],[f3799,f3091])).
fof(f5315,plain,(
  ( ! [X17,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',sK10)),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X17)) ) | $spl326),
  inference(cnf_transformation,[],[f5315_D])).
fof(f5315_D,plain,(
  ( ! [X17,X18] : (s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',sK10)),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X17)) ) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f5314,plain,(
  ( ! [X17,X18] : (~p(s(bool,'T_0')) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',sK10)),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X17)) ) | ($spl95 | $spl170 | $spl258)),
  inference(forward_demodulation,[],[f5301,f4106])).
fof(f5301,plain,(
  ( ! [X17,X18] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X18)))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X18),s('type.integer.int',sK10)),'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X17)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X17)) ) | ($spl170 | $spl258)),
  inference(superposition,[],[f3798,f3091])).
fof(f5313,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))),s('type.integer.int',sK13(X8,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) | $spl324),
  inference(cnf_transformation,[],[f5313_D])).
fof(f5313_D,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))),s('type.integer.int',sK13(X8,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))))) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f5312,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))),s('type.integer.int',sK13(X8,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))))) | ~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) | ($spl95 | $spl170 | $spl258)),
  inference(forward_demodulation,[],[f5311,f293])).
fof(f5311,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))))) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) | ($spl95 | $spl170 | $spl258)),
  inference(forward_demodulation,[],[f5294,f4106])).
fof(f5294,plain,(
  ( ! [X8,X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X8)))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X8,'const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))))) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) | $spl258),
  inference(superposition,[],[f298,f3091])).
fof(f5252,plain,(
  ( ! [X27,X25] : (s('type.integer.int',sK10) = s('type.integer.int',X27) | s('type.integer.int',sK10) = s('type.integer.int',X25) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))))))) ) | $spl322),
  inference(cnf_transformation,[],[f5252_D])).
fof(f5252_D,plain,(
  ( ! [X27,X25] : (s('type.integer.int',sK10) = s('type.integer.int',X27) | s('type.integer.int',sK10) = s('type.integer.int',X25) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25))))))) ) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f5205,plain,(
  ( ! [X26,X27,X25] : (s('type.integer.int',sK10) != s('type.integer.int',X26) | s('type.integer.int',sK10) = s('type.integer.int',X27) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X27),s('type.integer.int',X27))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X25),s('type.integer.int',X25)))))) | s('type.integer.int',sK10) = s('type.integer.int',X25)) ) | $spl174),
  inference(superposition,[],[f3748,f3763])).
fof(f5250,plain,(
  ( ! [X24,X22] : (s('type.integer.int',sK10) = s('type.integer.int',X24) | s('type.integer.int',sK10) = s('type.integer.int',X22) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))))) ) | $spl318),
  inference(cnf_transformation,[],[f5250_D])).
fof(f5250_D,plain,(
  ( ! [X24,X22] : (s('type.integer.int',sK10) = s('type.integer.int',X24) | s('type.integer.int',sK10) = s('type.integer.int',X22) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22))))))) ) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f5204,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int',sK10) != s('type.integer.int',X23) | s('type.integer.int',sK10) = s('type.integer.int',X24) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X24),s('type.integer.int',X24))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X22)))))) | s('type.integer.int',sK10) = s('type.integer.int',X22)) ) | ($spl174 | $spl252)),
  inference(superposition,[],[f3748,f3080])).
fof(f5137,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),
  introduced(theory_axiom,[])).
fof(f5136,plain,(
  ( ! [X24,X23] : (s('type.integer.int',X24) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))),s('type.integer.int',sK13(X24,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X23)) ) | $spl316),
  inference(cnf_transformation,[],[f5136_D])).
fof(f5136_D,plain,(
  ( ! [X24,X23] : (s('type.integer.int',X24) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))),s('type.integer.int',sK13(X24,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X23)) ) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f5135,plain,(
  ( ! [X24,X23] : (~p(s(bool,'T_0')) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))),s('type.integer.int',sK13(X24,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X23)) ) | ($spl95 | $spl170 | $spl252)),
  inference(forward_demodulation,[],[f5124,f4106])).
fof(f5124,plain,(
  ( ! [X24,X23] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X24)))) | s('type.integer.int',X24) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))),s('type.integer.int',sK13(X24,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X23)) ) | ($spl170 | $spl252)),
  inference(superposition,[],[f3799,f3080])).
fof(f5134,plain,(
  ( ! [X21,X22] : (s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X22),s('type.integer.int',sK10)),'const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21)))))) | s('type.integer.int',sK10) = s('type.integer.int',X21)) ) | $spl314),
  inference(cnf_transformation,[],[f5134_D])).
fof(f5134_D,plain,(
  ( ! [X21,X22] : (s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X22),s('type.integer.int',sK10)),'const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21)))))) | s('type.integer.int',sK10) = s('type.integer.int',X21)) ) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f5133,plain,(
  ( ! [X21,X22] : (~p(s(bool,'T_0')) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X22),s('type.integer.int',sK10)),'const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21)))))) | s('type.integer.int',sK10) = s('type.integer.int',X21)) ) | ($spl95 | $spl170 | $spl252)),
  inference(forward_demodulation,[],[f5123,f4106])).
fof(f5123,plain,(
  ( ! [X21,X22] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X22)))) | s('type.integer.int',X22) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X22),s('type.integer.int',sK10)),'const.integer.int_div_2'(s('type.integer.int',X21),s('type.integer.int',X21)))))) | s('type.integer.int',sK10) = s('type.integer.int',X21)) ) | ($spl170 | $spl252)),
  inference(superposition,[],[f3798,f3080])).
fof(f4796,plain,(
  ( ! [X17,X16] : (s('type.integer.int',X17) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int',sK13(X17,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X16)) ) | $spl312),
  inference(cnf_transformation,[],[f4796_D])).
fof(f4796_D,plain,(
  ( ! [X17,X16] : (s('type.integer.int',X17) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int',sK13(X17,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X16)) ) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f4795,plain,(
  ( ! [X17,X16] : (~p(s(bool,'T_0')) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int',sK13(X17,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X16)) ) | ($spl95 | $spl170 | $spl174)),
  inference(forward_demodulation,[],[f4784,f4106])).
fof(f4784,plain,(
  ( ! [X17,X16] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X17)))) | s('type.integer.int',X17) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int',sK13(X17,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X16),s('type.integer.int',X16))),s('type.integer.int',sK10)))))) | s('type.integer.int',sK10) = s('type.integer.int',X16)) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3799,f3763])).
fof(f4794,plain,(
  ( ! [X14,X15] : (s('type.integer.int',X15) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int',sK10)),'const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14)))))) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) | $spl310),
  inference(cnf_transformation,[],[f4794_D])).
fof(f4794_D,plain,(
  ( ! [X14,X15] : (s('type.integer.int',X15) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int',sK10)),'const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14)))))) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f4793,plain,(
  ( ! [X14,X15] : (~p(s(bool,'T_0')) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int',sK10)),'const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14)))))) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) | ($spl95 | $spl170 | $spl174)),
  inference(forward_demodulation,[],[f4783,f4106])).
fof(f4783,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X15)))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int',sK10)),'const.integer.int_mod_2'(s('type.integer.int',X14),s('type.integer.int',X14)))))) | s('type.integer.int',sK10) = s('type.integer.int',X14)) ) | ($spl170 | $spl174)),
  inference(superposition,[],[f3798,f3763])).
fof(f4764,plain,(
  ( ! [X7] : (s('type.integer.int',X7) = s('type.integer.int',sK13(X7,'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) ) | $spl308),
  inference(cnf_transformation,[],[f4764_D])).
fof(f4764_D,plain,(
  ( ! [X7] : (s('type.integer.int',X7) = s('type.integer.int',sK13(X7,'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) ) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f4763,plain,(
  ( ! [X7] : (s('type.integer.int',X7) = s('type.integer.int',sK13(X7,'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | ~p(s(bool,'T_0'))) ) | ($spl4 | $spl95 | $spl170)),
  inference(forward_demodulation,[],[f4762,f3797])).
fof(f4762,plain,(
  ( ! [X7] : (s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X7,'const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | ~p(s(bool,'T_0'))) ) | ($spl4 | $spl95 | $spl170)),
  inference(forward_demodulation,[],[f4761,f384])).
fof(f4761,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK13(X7,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK10))))))) ) | ($spl4 | $spl95 | $spl170)),
  inference(forward_demodulation,[],[f4745,f4106])).
fof(f4745,plain,(
  ( ! [X7] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X7)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK13(X7,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK10))))))) ) | ($spl4 | $spl170)),
  inference(superposition,[],[f3799,f384])).
fof(f3840,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | $spl291),
  inference(cnf_transformation,[],[f3840_D])).
fof(f3840_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) <=> ~$spl291),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl291])])).
fof(f4163,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | ($spl4 | $spl95 | $spl170 | $spl279)),
  inference(forward_demodulation,[],[f4161,f384])).
fof(f4161,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | ($spl95 | $spl170 | $spl279)),
  inference(backward_demodulation,[],[f4160,f3341])).
fof(f4160,plain,(
  ( ! [X2] : (s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | ($spl95 | $spl170)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f809,f808,f807,f806,f800,f799,f798,f797,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f793,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1068,f1072,f1075,f1077,f1079,f1080,f1082,f1084,f1086,f1092,f1094,f1525,f1524,f1523,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1722,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2316,f2349,f2324,f2327,f2351,f2353,f2354,f2355,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f2738,f2742,f2740,f2764,f2761,f2758,f2843,f3023,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3312,f3314,f3315,f3323,f3324,f3325,f3326,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f2078,f3785,f3787,f3788,f3796,f3797,f3798,f3799,f3859,f4109,f4108,f4107,f4106,f4151])).
fof(f4151,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,'F_0') | s('type.integer.int',X2) = s('type.integer.int',sK13(X2,'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) ) | ($spl95 | $spl170)),
  inference(backward_demodulation,[],[f4106,f3787])).
fof(f4107,plain,(
  ( ! [X0] : (~sP1('const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0)),'T_0')) ) | ($spl95 | $spl170)),
  inference(unit_resulting_resolution,[],[f793,f3796,f891])).
fof(f4108,plain,(
  ( ! [X0] : (~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0)))) ) | ($spl95 | $spl170)),
  inference(unit_resulting_resolution,[],[f793,f3796,f896])).
fof(f4109,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X0)),X1)) ) | ($spl95 | $spl170)),
  inference(unit_resulting_resolution,[],[f793,f3796,f905])).
fof(f4729,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))),
  introduced(theory_axiom,[])).
fof(f4715,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | ($spl92 | $spl170 | $spl178 | $spl196)),
  inference(forward_demodulation,[],[f2501,f3845])).
fof(f3845,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) ) | ($spl92 | $spl170 | $spl178)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f787,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2133,f2134,f2136,f2137,f2163,f2165,f2166,f2167,f2169,f2173,f2159,f2180,f2316,f2349,f2324,f2327,f2351,f2353,f2354,f2355,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f3023,f2321,f2314,f3212,f3248,f3205,f3195,f3188,f3185,f3178,f3312,f3314,f3315,f3323,f3324,f3360,f3370,f3325,f3326,f2348,f2179,f3264,f3263,f3258,f3257,f3246,f3216,f3211,f3203,f3199,f3194,f3187,f3180,f3177,f3176,f3168,f3167,f3155,f2358,f2357,f2332,f2331,f2322,f328,f246,f245,f3671,f3678,f3680,f3690,f3679,f3677,f3670,f3648,f3645,f3644,f3664,f3662,f3632,f3628,f3710,f3711,f3614,f3029,f3027,f3002,f2992,f2345,f2323,f234,f3715,f2078,f3785,f3787,f3788,f3796,f3797,f3831])).
fof(f3831,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4))))) ) | ($spl92 | $spl170 | $spl178)),
  inference(backward_demodulation,[],[f3797,f2179])).
fof(f2179,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4))))) ) | ($spl92 | $spl178)),
  inference(backward_demodulation,[],[f2159,f2165])).
fof(f2348,plain,(
  ( ! [X11] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X11))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X11,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK10)))) ) | ($spl92 | $spl178)),
  inference(forward_demodulation,[],[f2347,f2159])).
fof(f2347,plain,(
  ( ! [X11] : (s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',X11))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X11,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK10)))) ) | $spl92),
  inference(forward_demodulation,[],[f2319,f293])).
fof(f2319,plain,(
  ( ! [X11] : (s('type.integer.int',X11) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X11,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK10))) | s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',X11)))) ) | $spl92),
  inference(superposition,[],[f906,f787])).
fof(f3370,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) ) | ($spl92 | $spl170 | $spl178)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f787,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1526,f1530,f1532,f1533,f1534,f1535,f1536,f1537,f1538,f1539,f1552,f1558,f1559,f1560,f1562,f1563,f1564,f1567,f1568,f1569,f1570,f1571,f1572,f1573,f1574,f1575,f1576,f1577,f1592,f1580,f1581,f1597,f1603,f1604,f1605,f1607,f1608,f1609,f1612,f1613,f1614,f1615,f1616,f1617,f1618,f1619,f1620,f1621,f1622,f1637,f1625,f1626,f1650,f1652,f1653,f1654,f1655,f1656,f1657,f1658,f1659,f1660,f1661,f1681,f1687,f1688,f1689,f1691,f1692,f1693,f1696,f1697,f1698,f1699,f1700,f1701,f1702,f1703,f1704,f1705,f1706,f1707,f1718,f1710,f1711,f1723,f1727,f1729,f1730,f1731,f1732,f1733,f1734,f1735,f1736,f1737,f1738,f1739,f1922,f1926,f1928,f1929,f1930,f1931,f1932,f1933,f1934,f1935,f1936,f1937,f1972,f1978,f1979,f1980,f1982,f1983,f1984,f1987,f1988,f1989,f1990,f1991,f1992,f1993,f1994,f1995,f1996,f1997,f1998,f1999,f2000,f2054,f2003,f2004,f2005,f2011,f2012,f2013,f2015,f2016,f2017,f2020,f2021,f2022,f2023,f2024,f2025,f2026,f2027,f2028,f2029,f2030,f2031,f2032,f2033,f2055,f2036,f2037,f2038,f2133,f2134,f2136,f2137,f2163,f2165,f2166,f2167,f2169,f2173,f2159,f2179,f2180,f2316,f2348,f2349,f2324,f2327,f2351,f2353,f2354,f2355,f2373,f2379,f2380,f2381,f2383,f2384,f2385,f2388,f2389,f2390,f2391,f2392,f2393,f2394,f2395,f2396,f2397,f2398,f2399,f2400,f2401,f2402,f2406,f2412,f2413,f2414,f2416,f2417,f2418,f2421,f2422,f2423,f2424,f2425,f2426,f2427,f2428,f2429,f2430,f2431,f2432,f2433,f2434,f2435,f3023,f2358,f2357,f2332,f2331,f2322,f2321,f2314,f328,f246,f245,f3155,f3176,f3177,f3167,f3168,f3187,f3203,f3216,f3212,f3211,f3248,f3246,f3205,f3199,f3195,f3194,f3257,f3258,f3188,f3185,f3180,f3178,f3029,f3027,f3002,f3263,f2992,f2345,f2323,f234,f3264,f2078,f3312,f3314,f3315,f3323,f3324,f3360])).
fof(f3360,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4))))) ) | ($spl92 | $spl170 | $spl178)),
  inference(backward_demodulation,[],[f3324,f2179])).
fof(f2180,plain,(
  ( ! [X3] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X3)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10))))) ) | ($spl92 | $spl178)),
  inference(backward_demodulation,[],[f2159,f2163])).
fof(f2173,plain,(
  ( ! [X14,X13] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',X13))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))))),s('type.integer.int',X13))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',X13))) | s('type.integer.int',X13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl92),
  inference(forward_demodulation,[],[f2149,f293])).
fof(f2149,plain,(
  ( ! [X14,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',X13))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',X13))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))),s('type.integer.int',X13))) | s('type.integer.int',X13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl92),
  inference(superposition,[],[f328,f787])).
fof(f2167,plain,(
  ( ! [X10,X9] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',X9)))) | s('type.integer.int',X9) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK10)))) ) | $spl92),
  inference(forward_demodulation,[],[f2147,f293])).
fof(f2147,plain,(
  ( ! [X10,X9] : (s('type.integer.int',X9) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK10))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',X9))))) ) | $spl92),
  inference(superposition,[],[f299,f787])).
fof(f2166,plain,(
  ( ! [X8,X7] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X8)))) ) | $spl92),
  inference(forward_demodulation,[],[f2146,f293])).
fof(f2146,plain,(
  ( ! [X8,X7] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X8))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) ) | $spl92),
  inference(superposition,[],[f299,f787])).
fof(f2165,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4))))) ) | $spl92),
  inference(forward_demodulation,[],[f2164,f293])).
fof(f2164,plain,(
  ( ! [X4] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4))))) ) | $spl92),
  inference(forward_demodulation,[],[f2144,f293])).
fof(f2144,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',X4)))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) ) | $spl92),
  inference(superposition,[],[f298,f787])).
fof(f2163,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X3)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10))))) ) | $spl92),
  inference(forward_demodulation,[],[f2162,f293])).
fof(f2162,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X3)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10))))) ) | $spl92),
  inference(forward_demodulation,[],[f2143,f293])).
fof(f2143,plain,(
  ( ! [X3] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X3),s('type.integer.int',sK10)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),X3)),s('type.integer.int',X3)))) ) | $spl92),
  inference(superposition,[],[f298,f787])).
fof(f4712,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | ($spl4 | $spl170 | $spl194)),
  inference(forward_demodulation,[],[f2497,f3832])).
fof(f4694,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)),'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | $spl304),
  inference(cnf_transformation,[],[f4694_D])).
fof(f4694_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)),'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f4327,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)),'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | ($spl58 | $spl170)),
  inference(superposition,[],[f3798,f593])).
fof(f4684,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))))) | $spl302),
  inference(cnf_transformation,[],[f4684_D])).
fof(f4684_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))))) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f4392,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))))) | ($spl58 | $spl170)),
  inference(superposition,[],[f3799,f593])).
fof(f4680,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))),
  introduced(theory_axiom,[])).
fof(f4427,plain,(
  $false | ($spl233 | $spl298)),
  inference(unit_resulting_resolution,[],[f2911,f4171])).
fof(f4614,plain,(
  $false | ($spl233 | $spl298)),
  inference(trivial_inequality_removal,[],[f4552])).
fof(f4552,plain,(
  s('type.integer.int',sK10) != s('type.integer.int',sK10) | ($spl233 | $spl298)),
  inference(superposition,[],[f2911,f4171])).
fof(f4207,plain,(
  ( ! [X18] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',sK10) = s('type.integer.int',X18)) ) | $spl300),
  inference(cnf_transformation,[],[f4207_D])).
fof(f4207_D,plain,(
  ( ! [X18] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',sK10) = s('type.integer.int',X18)) ) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f4217,plain,(
  ( ! [X18] : (s('type.integer.int',sK10) = s('type.integer.int',X18) | ~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))))))) ) | ($spl4 | $spl95 | $spl170 | $spl174)),
  inference(forward_demodulation,[],[f4216,f2081])).
fof(f4216,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl4 | $spl95 | $spl170 | $spl174)),
  inference(forward_demodulation,[],[f4215,f4106])).
fof(f4215,plain,(
  ( ! [X18] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl4 | $spl174)),
  inference(forward_demodulation,[],[f3170,f2081])).
fof(f3170,plain,(
  ( ! [X18] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f619,f245])).
fof(f4214,plain,(
  ( ! [X18] : (s('type.integer.int',sK10) = s('type.integer.int',X18) | ~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))))))) ) | ($spl4 | $spl95 | $spl170 | $spl174)),
  inference(forward_demodulation,[],[f4213,f2081])).
fof(f4213,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl4 | $spl95 | $spl170 | $spl174)),
  inference(forward_demodulation,[],[f4212,f4106])).
fof(f4212,plain,(
  ( ! [X18] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl4 | $spl174)),
  inference(forward_demodulation,[],[f3605,f2081])).
fof(f3605,plain,(
  ( ! [X18] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f619,f245])).
fof(f4206,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',sK10) = s('type.integer.int',X18)) ) | ($spl4 | $spl95 | $spl170 | $spl174)),
  inference(forward_demodulation,[],[f3904,f4106])).
fof(f3904,plain,(
  ( ! [X18] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',sK10) = s('type.integer.int',X18)) ) | ($spl4 | $spl174)),
  inference(superposition,[],[f619,f3763])).
fof(f4205,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),
  introduced(theory_axiom,[])).
fof(f4204,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),
  introduced(theory_axiom,[])).
fof(f4203,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),
  introduced(theory_axiom,[])).
fof(f4202,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK10)))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))),
  introduced(theory_axiom,[])).
fof(f4201,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),
  introduced(theory_axiom,[])).
fof(f4158,plain,(
  ~p(s(bool,'T_0')) | ($spl95 | $spl170 | $spl193)),
  inference(backward_demodulation,[],[f4106,f2495])).
fof(f4157,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | ($spl95 | $spl170 | $spl174 | $spl210)),
  inference(backward_demodulation,[],[f4106,f3735])).
fof(f3735,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) = s('type.integer.int',X0) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))))) ) | ($spl174 | $spl210)),
  inference(backward_demodulation,[],[f2081,f2541])).
fof(f4156,plain,(
  ~p(s(bool,'T_0')) | ($spl95 | $spl170 | $spl247)),
  inference(backward_demodulation,[],[f4106,f2943])).
fof(f4169,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) | $spl296),
  inference(cnf_transformation,[],[f4169_D])).
fof(f4169_D,plain,(
  ( ! [X8,X7] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | s('type.integer.int',sK10) = s('type.integer.int',X7)) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f4154,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int',X7) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))),s('type.integer.int',sK13(X8,'const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X7))))))) ) | ($spl95 | $spl170 | $spl174)),
  inference(backward_demodulation,[],[f4106,f3808])).
fof(f4166,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK10))) | $spl295),
  inference(cnf_transformation,[],[f4166_D])).
fof(f4166_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK10))) <=> ~$spl295),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl295])])).
fof(f4164,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK10))) | ($spl4 | $spl95 | $spl170 | $spl241)),
  inference(forward_demodulation,[],[f4162,f384])).
fof(f4162,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | ($spl95 | $spl170 | $spl241)),
  inference(backward_demodulation,[],[f4160,f2936])).
fof(f4159,plain,(
  ( ! [X6,X7] : (s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6)))))) | s('type.integer.int',sK10) = s('type.integer.int',X6)) ) | $spl292),
  inference(cnf_transformation,[],[f4159_D])).
fof(f4159_D,plain,(
  ( ! [X6,X7] : (s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6)))))) | s('type.integer.int',sK10) = s('type.integer.int',X6)) ) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f4150,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int',X6) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))),s('type.integer.int',sK13(X7,'const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X6))))))) ) | ($spl95 | $spl170 | $spl174)),
  inference(backward_demodulation,[],[f4106,f3773])).
fof(f3838,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | ($spl4 | $spl170 | $spl281)),
  inference(forward_demodulation,[],[f3835,f2078])).
fof(f3835,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl170 | $spl281)),
  inference(backward_demodulation,[],[f3832,f3343])).
fof(f3719,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl132 | $spl234)),
  inference(backward_demodulation,[],[f2913,f1162])).
fof(f3717,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl228 | $spl248)),
  inference(backward_demodulation,[],[f2968,f2890])).
fof(f2078,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl170),
  inference(cnf_transformation,[],[f2078_D])).
fof(f2078_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f3716,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl134 | $spl276)),
  inference(backward_demodulation,[],[f3339,f1164])).
fof(f2503,plain,(
  ( ! [X8] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8)))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl198),
  inference(cnf_transformation,[],[f2503_D])).
fof(f2503_D,plain,(
  ( ! [X8] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8)))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f2505,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK10)))) | $spl201),
  inference(cnf_transformation,[],[f2505_D])).
fof(f2505_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK10)))) <=> ~$spl201),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl201])])).
fof(f3631,plain,(
  ( ! [X19] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19)))))) | s('type.integer.int',X19) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f619,f246])).
fof(f3709,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl288),
  inference(cnf_transformation,[],[f3709_D])).
fof(f3709_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f3679,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f328,f246])).
fof(f3701,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))) ) | $spl286),
  inference(cnf_transformation,[],[f3701_D])).
fof(f3701_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f3700,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3699,f2892])).
fof(f3699,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3679,f2892])).
fof(f3523,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl134 | $spl236)),
  inference(backward_demodulation,[],[f2933,f1164])).
fof(f3518,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl284),
  inference(cnf_transformation,[],[f3518_D])).
fof(f3518_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f3500,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(superposition,[],[f3301,f3268])).
fof(f3345,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | $spl283),
  inference(cnf_transformation,[],[f3345_D])).
fof(f3345_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) <=> ~$spl283),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl283])])).
fof(f3369,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | ($spl4 | $spl170 | $spl245)),
  inference(forward_demodulation,[],[f3368,f3312])).
fof(f3368,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | ($spl4 | $spl170 | $spl245)),
  inference(forward_demodulation,[],[f3367,f2078])).
fof(f3367,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl4 | $spl170 | $spl245)),
  inference(backward_demodulation,[],[f3364,f2940])).
fof(f3322,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | ($spl170 | $spl231)),
  inference(backward_demodulation,[],[f2078,f2891])).
fof(f2891,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl231),
  inference(cnf_transformation,[],[f2891_D])).
fof(f2891_D,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl231),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl231])])).
fof(f3343,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl281),
  inference(cnf_transformation,[],[f3343_D])).
fof(f3343_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) <=> ~$spl281),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl281])])).
fof(f3319,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ($spl170 | $spl209)),
  inference(backward_demodulation,[],[f2078,f2539])).
fof(f3341,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl279),
  inference(cnf_transformation,[],[f3341_D])).
fof(f3341_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl279),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl279])])).
fof(f3316,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ($spl170 | $spl189)),
  inference(backward_demodulation,[],[f2078,f2489])).
fof(f2489,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl189),
  inference(cnf_transformation,[],[f2489_D])).
fof(f2489_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl189),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl189])])).
fof(f3339,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl276),
  inference(cnf_transformation,[],[f3339_D])).
fof(f3339_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f3313,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | ($spl134 | $spl170)),
  inference(backward_demodulation,[],[f2078,f1164])).
fof(f3266,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl132 | $spl234)),
  inference(backward_demodulation,[],[f2913,f1162])).
fof(f3265,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl228 | $spl248)),
  inference(backward_demodulation,[],[f2968,f2890])).
fof(f3221,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl260),
  inference(cnf_transformation,[],[f3221_D])).
fof(f3221_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f3178,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f246,f246])).
fof(f3082,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl254),
  inference(cnf_transformation,[],[f3082_D])).
fof(f3082_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f3185,plain,(
  ( ! [X8] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f246,f246])).
fof(f3260,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl274),
  inference(cnf_transformation,[],[f3260_D])).
fof(f3260_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f3188,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f245,f246])).
fof(f3197,plain,(
  ( ! [X19] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_div_2'(s('type.integer.int',X19),s('type.integer.int',X19)))))) | s('type.integer.int',X19) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f619,f246])).
fof(f2544,plain,(
  ( ! [X8] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl212),
  inference(cnf_transformation,[],[f2544_D])).
fof(f2544_D,plain,(
  ( ! [X8] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f2546,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl215),
  inference(cnf_transformation,[],[f2546_D])).
fof(f2546_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl215),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl215])])).
fof(f3198,plain,(
  ( ! [X20] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int',X20)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X20) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f621,f246])).
fof(f3245,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl270),
  inference(cnf_transformation,[],[f3245_D])).
fof(f3245_D,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f3205,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f245,f246])).
fof(f2077,plain,(
  ( ! [X6] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X6)))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl168),
  inference(cnf_transformation,[],[f2077_D])).
fof(f2077_D,plain,(
  ( ! [X6] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X6)))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f3196,plain,(
  ( ! [X18] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X18),s('type.integer.int',X18)))))) | s('type.integer.int',X18) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f598,f246])).
fof(f3254,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  introduced(theory_axiom,[])).
fof(f3244,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',X4))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3205,f2892])).
fof(f3231,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3188,f2892])).
fof(f3227,plain,(
  ( ! [X8] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3185,f2892])).
fof(f3220,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl230),
  inference(forward_demodulation,[],[f3178,f2892])).
fof(f2934,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | $spl239),
  inference(cnf_transformation,[],[f2934_D])).
fof(f2934_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) <=> ~$spl239),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl239])])).
fof(f3108,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | ($spl165 | $spl230)),
  inference(forward_demodulation,[],[f2071,f2892])).
fof(f2071,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl165),
  inference(cnf_transformation,[],[f2071_D])).
fof(f2071_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl165),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl165])])).
fof(f2936,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl241),
  inference(cnf_transformation,[],[f2936_D])).
fof(f2936_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl241),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl241])])).
fof(f3107,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ($spl189 | $spl230)),
  inference(forward_demodulation,[],[f2489,f2892])).
fof(f2940,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl245),
  inference(cnf_transformation,[],[f2940_D])).
fof(f2940_D,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) <=> ~$spl245),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl245])])).
fof(f3106,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ($spl209 | $spl230)),
  inference(forward_demodulation,[],[f2539,f2892])).
fof(f3092,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl134 | $spl236)),
  inference(backward_demodulation,[],[f2933,f1164])).
fof(f3091,plain,(
  ( ! [X29] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))))) | s('type.integer.int',sK10) = s('type.integer.int',X29)) ) | $spl258),
  inference(cnf_transformation,[],[f3091_D])).
fof(f3091_D,plain,(
  ( ! [X29] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))))) | s('type.integer.int',sK10) = s('type.integer.int',X29)) ) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f3076,plain,(
  ( ! [X29] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X29),s('type.integer.int',X29))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) = s('type.integer.int',X29)) ) | $spl174),
  inference(superposition,[],[f2961,f2946])).
fof(f3087,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl256),
  inference(cnf_transformation,[],[f3087_D])).
fof(f3087_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f3058,plain,(
  ( ! [X23] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X23),s('type.integer.int',X23))) | s('type.integer.int',sK10) = s('type.integer.int',X23)) ) | $spl174),
  inference(superposition,[],[f2961,f2946])).
fof(f3043,plain,(
  ( ! [X8] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))) | s('type.integer.int',sK10) = s('type.integer.int',X8)) ) | $spl174),
  inference(superposition,[],[f2946,f2946])).
fof(f3079,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl250),
  inference(cnf_transformation,[],[f3079_D])).
fof(f3079_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f3036,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int',sK10) = s('type.integer.int',X0)) ) | $spl174),
  inference(superposition,[],[f2946,f2946])).
fof(f2967,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | $spl249),
  inference(cnf_transformation,[],[f2967_D])).
fof(f2967_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) <=> ~$spl249),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl249])])).
fof(f2969,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | ($spl174 | $spl229)),
  inference(forward_demodulation,[],[f2889,f2081])).
fof(f2889,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | $spl229),
  inference(cnf_transformation,[],[f2889_D])).
fof(f2889_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) <=> ~$spl229),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl229])])).
fof(f2968,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | $spl248),
  inference(cnf_transformation,[],[f2968_D])).
fof(f2968_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f2960,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | ($spl174 | $spl228)),
  inference(backward_demodulation,[],[f2081,f2890])).
fof(f2944,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl132 | $spl234)),
  inference(backward_demodulation,[],[f2913,f1162])).
fof(f2943,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | $spl247),
  inference(cnf_transformation,[],[f2943_D])).
fof(f2943_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) <=> ~$spl247),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl247])])).
fof(f2931,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | ($spl215 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2546])).
fof(f2941,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl244),
  inference(cnf_transformation,[],[f2941_D])).
fof(f2941_D,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f2929,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ($spl208 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2540])).
fof(f2939,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK10)))) | $spl243),
  inference(cnf_transformation,[],[f2939_D])).
fof(f2939_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK10)))) <=> ~$spl243),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl243])])).
fof(f2928,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK10)))) | ($spl201 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2505])).
fof(f2937,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl240),
  inference(cnf_transformation,[],[f2937_D])).
fof(f2937_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f2926,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ($spl188 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2490])).
fof(f2935,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | $spl238),
  inference(cnf_transformation,[],[f2935_D])).
fof(f2935_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f2921,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))))) | ($spl164 | $spl230)),
  inference(backward_demodulation,[],[f2892,f2072])).
fof(f2933,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl236),
  inference(cnf_transformation,[],[f2933_D])).
fof(f2933_D,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl236),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl236])])).
fof(f2920,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | ($spl134 | $spl230)),
  inference(backward_demodulation,[],[f2892,f1164])).
fof(f2913,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl234),
  inference(cnf_transformation,[],[f2913_D])).
fof(f2913_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f2897,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | ($spl132 | $spl174)),
  inference(backward_demodulation,[],[f2081,f1162])).
fof(f2911,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | $spl233),
  inference(cnf_transformation,[],[f2911_D])).
fof(f2911_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) <=> ~$spl233),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl233])])).
fof(f2896,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | ($spl9 | $spl174)),
  inference(backward_demodulation,[],[f2081,f393])).
fof(f2887,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl175),
  inference(unit_resulting_resolution,[],[f2082,f246])).
fof(f2890,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | $spl228),
  inference(cnf_transformation,[],[f2890_D])).
fof(f2890_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f2888,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK10),s('type.integer.int',sK10))) | $spl175),
  inference(unit_resulting_resolution,[],[f2082,f245])).
fof(f2779,plain,(
  sP5('T_0','T_0','T_0') | $spl226),
  inference(cnf_transformation,[],[f2779_D])).
fof(f2779_D,plain,(
  sP5('T_0','T_0','T_0') <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f2758,plain,(
  sP5('T_0','T_0','T_0') | $spl95),
  inference(unit_resulting_resolution,[],[f1075,f1080,f377,f1082,f339])).
fof(f2761,plain,(
  sP5('T_0','T_0','T_0') | $spl95),
  inference(unit_resulting_resolution,[],[f1075,f1080,f228,f1082,f339])).
fof(f228,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.int_arith.elim_eq_coeffs',aHL_TRUTH)).
fof(f2764,plain,(
  sP5('T_0','T_0','T_0') | $spl95),
  inference(unit_resulting_resolution,[],[f1075,f1080,f227,f1082,f339])).
fof(f2776,plain,(
  sP5('T_0','F_0','F_0') | $spl224),
  inference(cnf_transformation,[],[f2776_D])).
fof(f2776_D,plain,(
  sP5('T_0','F_0','F_0') <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f2768,plain,(
  sP5('T_0','F_0','F_0') | ($spl61 | $spl95)),
  inference(unit_resulting_resolution,[],[f953,f965,f614,f1082,f340])).
fof(f340,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | p(s(bool,X1)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f205])).
fof(f965,plain,(
  ( ! [X0,X1] : (sP3('F_0',X0,X1)) ) | $spl61),
  inference(unit_resulting_resolution,[],[f614,f349])).
fof(f953,plain,(
  ( ! [X0,X1] : (sP4(X0,'F_0',X1)) ) | $spl61),
  inference(unit_resulting_resolution,[],[f614,f344])).
fof(f2769,plain,(
  sP5('T_0','F_0','F_0') | ($spl61 | $spl95)),
  inference(unit_resulting_resolution,[],[f953,f1080,f614,f1082,f340])).
fof(f2770,plain,(
  sP5('T_0','F_0','F_0') | ($spl61 | $spl95)),
  inference(unit_resulting_resolution,[],[f953,f964,f614,f1082,f340])).
fof(f964,plain,(
  ( ! [X0,X1] : (sP3(X0,'F_0',X1)) ) | $spl61),
  inference(unit_resulting_resolution,[],[f614,f348])).
fof(f1261,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','T_0') | $spl142),
  inference(cnf_transformation,[],[f1261_D])).
fof(f1261_D,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','T_0') <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f2732,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','T_0') | ($spl0 | $spl95)),
  inference(unit_resulting_resolution,[],[f696,f695,f377,f1075,f339])).
fof(f695,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f347])).
fof(f696,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f351])).
fof(f2733,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','T_0') | ($spl0 | $spl95)),
  inference(unit_resulting_resolution,[],[f696,f695,f228,f1075,f339])).
fof(f2734,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','T_0') | ($spl0 | $spl95)),
  inference(unit_resulting_resolution,[],[f696,f695,f227,f1075,f339])).
fof(f2719,plain,(
  ~sP5('F_0','T_0','T_0') | $spl223),
  inference(cnf_transformation,[],[f2719_D])).
fof(f2719_D,plain,(
  ~sP5('F_0','T_0','T_0') <=> ~$spl223),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl223])])).
fof(f2714,plain,(
  ~sP5('F_0','T_0','T_0') | $spl123),
  inference(unit_resulting_resolution,[],[f1036,f336])).
fof(f336,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP3(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f205])).
fof(f2709,plain,(
  ~sP5('F_0','F_0','F_0') | $spl221),
  inference(cnf_transformation,[],[f2709_D])).
fof(f2709_D,plain,(
  ~sP5('F_0','F_0','F_0') <=> ~$spl221),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl221])])).
fof(f2698,plain,(
  ~sP5('F_0','F_0','F_0') | $spl121),
  inference(unit_resulting_resolution,[],[f1034,f335])).
fof(f335,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f205])).
fof(f1250,plain,(
  sP5('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl140),
  inference(cnf_transformation,[],[f1250_D])).
fof(f1250_D,plain,(
  sP5('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f2593,plain,(
  sP5('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | ($spl0 | $spl61)),
  inference(unit_resulting_resolution,[],[f698,f954,f614,f965,f340])).
fof(f954,plain,(
  ( ! [X0,X1] : (sP4('F_0',X0,X1)) ) | $spl61),
  inference(unit_resulting_resolution,[],[f614,f345])).
fof(f698,plain,(
  ( ! [X0,X1] : (sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X0,X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f353])).
fof(f2594,plain,(
  sP5('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | ($spl0 | $spl61)),
  inference(unit_resulting_resolution,[],[f698,f954,f614,f965,f341])).
fof(f1229,plain,(
  sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl138),
  inference(cnf_transformation,[],[f1229_D])).
fof(f1229_D,plain,(
  sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f2583,plain,(
  sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | ($spl0 | $spl61)),
  inference(unit_resulting_resolution,[],[f697,f954,f614,f964,f341])).
fof(f697,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f352])).
fof(f2584,plain,(
  sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | ($spl0 | $spl61)),
  inference(unit_resulting_resolution,[],[f697,f953,f614,f964,f341])).
fof(f2585,plain,(
  sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | ($spl0 | $spl61)),
  inference(unit_resulting_resolution,[],[f697,f686,f614,f964,f341])).
fof(f686,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f343])).
fof(f1214,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','F_0') | $spl136),
  inference(cnf_transformation,[],[f1214_D])).
fof(f1214_D,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','F_0') <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f2555,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','F_0') | ($spl0 | $spl61)),
  inference(unit_resulting_resolution,[],[f696,f695,f614,f953,f340])).
fof(f2547,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl216),
  inference(cnf_transformation,[],[f2547_D])).
fof(f2547_D,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f2537,plain,(
  ( ! [X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f621,f245])).
fof(f2536,plain,(
  ( ! [X8] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8)),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f621,f246])).
fof(f2540,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl208),
  inference(cnf_transformation,[],[f2540_D])).
fof(f2540_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f2541,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl210),
  inference(cnf_transformation,[],[f2541_D])).
fof(f2541_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f2529,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f621,f246])).
fof(f2510,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | $spl206),
  inference(cnf_transformation,[],[f2510_D])).
fof(f2510_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f2487,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | ($spl4 | $spl58)),
  inference(superposition,[],[f619,f593])).
fof(f2506,plain,(
  ( ! [X9] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl202),
  inference(cnf_transformation,[],[f2506_D])).
fof(f2506_D,plain,(
  ( ! [X9] : (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f2486,plain,(
  ( ! [X9] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mod_2'(s('type.integer.int',X9),s('type.integer.int',X9)))))) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f619,f245])).
fof(f2485,plain,(
  ( ! [X8] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X8)))))) | s('type.integer.int',X8) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f619,f246])).
fof(f2501,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl196),
  inference(cnf_transformation,[],[f2501_D])).
fof(f2501_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f2499,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | ($spl4 | $spl92 | $spl178)),
  inference(forward_demodulation,[],[f2498,f2159])).
fof(f2498,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | ($spl4 | $spl92)),
  inference(forward_demodulation,[],[f2483,f293])).
fof(f2483,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ($spl4 | $spl92)),
  inference(superposition,[],[f619,f787])).
fof(f2497,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl194),
  inference(cnf_transformation,[],[f2497_D])).
fof(f2497_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f2493,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK10),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | $spl4),
  inference(forward_demodulation,[],[f2482,f384])).
fof(f2482,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK10),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | $spl4),
  inference(superposition,[],[f619,f384])).
fof(f2490,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl188),
  inference(cnf_transformation,[],[f2490_D])).
fof(f2490_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f2491,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',sK10)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl190),
  inference(cnf_transformation,[],[f2491_D])).
fof(f2491_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',sK10)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f2478,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int',sK13('const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))),'const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f619,f246])).
fof(f2437,plain,(
  $false | ($spl0 | $spl21)),
  inference(unit_resulting_resolution,[],[f698,f556])).
fof(f2445,plain,(
  $false | ($spl0 | $spl21)),
  inference(resolution,[],[f556,f698])).
fof(f2446,plain,(
  $false | ($spl0 | $spl21)),
  inference(resolution,[],[f556,f697])).
fof(f2447,plain,(
  $false | ($spl0 | $spl21)),
  inference(resolution,[],[f556,f696])).
fof(f2303,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl187),
  inference(cnf_transformation,[],[f2303_D])).
fof(f2303_D,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl187),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl187])])).
fof(f2298,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl81),
  inference(unit_resulting_resolution,[],[f775,f337])).
fof(f337,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP4(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f205])).
fof(f2289,plain,(
  ~sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl185),
  inference(cnf_transformation,[],[f2289_D])).
fof(f2289_D,plain,(
  ~sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl185),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl185])])).
fof(f2284,plain,(
  ~sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl75),
  inference(unit_resulting_resolution,[],[f769,f336])).
fof(f2224,plain,(
  $false | ($spl0 | $spl29)),
  inference(unit_resulting_resolution,[],[f698,f564])).
fof(f2232,plain,(
  $false | ($spl0 | $spl29)),
  inference(resolution,[],[f564,f698])).
fof(f2233,plain,(
  $false | ($spl0 | $spl29)),
  inference(resolution,[],[f564,f697])).
fof(f2202,plain,(
  $false | ($spl0 | $spl25)),
  inference(unit_resulting_resolution,[],[f698,f560])).
fof(f2210,plain,(
  $false | ($spl0 | $spl25)),
  inference(resolution,[],[f560,f698])).
fof(f2211,plain,(
  $false | ($spl0 | $spl25)),
  inference(resolution,[],[f560,f696])).
fof(f2183,plain,(
  $false | ($spl0 | $spl23)),
  inference(unit_resulting_resolution,[],[f697,f558])).
fof(f2191,plain,(
  $false | ($spl0 | $spl23)),
  inference(resolution,[],[f558,f697])).
fof(f2192,plain,(
  $false | ($spl0 | $spl23)),
  inference(resolution,[],[f558,f696])).
fof(f2157,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) | $spl176),
  inference(cnf_transformation,[],[f2157_D])).
fof(f2157_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f2174,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) | ($spl4 | $spl92)),
  inference(forward_demodulation,[],[f2153,f293])).
fof(f2153,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ($spl4 | $spl92)),
  inference(trivial_inequality_removal,[],[f2150])).
fof(f2150,plain,(
  s('type.integer.int',sK10) != s('type.integer.int',sK10) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ($spl4 | $spl92)),
  inference(superposition,[],[f598,f787])).
fof(f2170,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X11))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',sK10)))) ) | $spl180),
  inference(cnf_transformation,[],[f2170_D])).
fof(f2170_D,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X11))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',sK10)))) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f2172,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | $spl182),
  inference(cnf_transformation,[],[f2172_D])).
fof(f2172_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f2169,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X11))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',sK10)))) ) | $spl92),
  inference(forward_demodulation,[],[f2168,f293])).
fof(f2168,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X11))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) ) | $spl92),
  inference(forward_demodulation,[],[f2148,f293])).
fof(f2148,plain,(
  ( ! [X12,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X11),s('type.integer.int',sK10))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X11))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))) ) | $spl92),
  inference(superposition,[],[f328,f787])).
fof(f2159,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | $spl178),
  inference(cnf_transformation,[],[f2159_D])).
fof(f2159_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f2137,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | $spl92),
  inference(superposition,[],[f293,f787])).
fof(f2136,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | $spl92),
  inference(superposition,[],[f293,f787])).
fof(f2134,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | $spl92),
  inference(superposition,[],[f787,f293])).
fof(f2133,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))))) | $spl92),
  inference(superposition,[],[f787,f293])).
fof(f2155,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8))))))))) | ($spl4 | $spl92)),
  inference(forward_demodulation,[],[f2131,f293])).
fof(f2131,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))))) | ($spl4 | $spl92)),
  inference(unit_resulting_resolution,[],[f787,f598])).
fof(f2094,plain,(
  $false | ($spl0 | $spl51)),
  inference(unit_resulting_resolution,[],[f649,f586])).
fof(f649,plain,(
  ( ! [X0] : (sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f309])).
fof(f2100,plain,(
  $false | ($spl0 | $spl51)),
  inference(resolution,[],[f586,f649])).
fof(f2101,plain,(
  $false | ($spl0 | $spl51)),
  inference(resolution,[],[f586,f648])).
fof(f648,plain,(
  ( ! [X0] : (sP0(X0,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f380,f308])).
fof(f308,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,'F_0')) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f193])).
fof(f2080,plain,(
  ( ! [X7] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl172),
  inference(cnf_transformation,[],[f2080_D])).
fof(f2080_D,plain,(
  ( ! [X7] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f2082,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl175),
  inference(cnf_transformation,[],[f2082_D])).
fof(f2082_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl175),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl175])])).
fof(f2064,plain,(
  ( ! [X7] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X7)))))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f598,f245])).
fof(f2063,plain,(
  ( ! [X6] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X6)))))) | s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f598,f246])).
fof(f2072,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl164),
  inference(cnf_transformation,[],[f2072_D])).
fof(f2072_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f2073,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl166),
  inference(cnf_transformation,[],[f2073_D])).
fof(f2073_D,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f2058,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(superposition,[],[f598,f246])).
fof(f1826,plain,(
  ( ! [X59,X58] : (s(bool,'F_0') = s(bool,X58) | sP7(X58,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X59)) ) | $spl162),
  inference(cnf_transformation,[],[f1826_D])).
fof(f1826_D,plain,(
  ( ! [X59,X58] : (s(bool,'F_0') = s(bool,X58) | sP7(X58,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X59)) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f1811,plain,(
  ( ! [X59,X58] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,X58) | sP7(X58,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X59)) ) | $spl58),
  inference(superposition,[],[f905,f593])).
fof(f1825,plain,(
  ( ! [X55] : (s(bool,'F_0') = s(bool,X55) | ~sP1(X55,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) ) | $spl160),
  inference(cnf_transformation,[],[f1825_D])).
fof(f1825_D,plain,(
  ( ! [X55] : (s(bool,'F_0') = s(bool,X55) | ~sP1(X55,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f1809,plain,(
  ( ! [X55] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,X55) | ~sP1(X55,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) ) | $spl58),
  inference(superposition,[],[f896,f593])).
fof(f1824,plain,(
  ( ! [X52] : (s(bool,'F_0') = s(bool,X52) | ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X52)) ) | $spl158),
  inference(cnf_transformation,[],[f1824_D])).
fof(f1824_D,plain,(
  ( ! [X52] : (s(bool,'F_0') = s(bool,X52) | ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X52)) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f1806,plain,(
  ( ! [X52] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,X52) | ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X52)) ) | $spl58),
  inference(superposition,[],[f891,f593])).
fof(f1274,plain,(
  sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl144),
  inference(cnf_transformation,[],[f1274_D])).
fof(f1274_D,plain,(
  sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f1749,plain,(
  sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl58),
  inference(unit_resulting_resolution,[],[f377,f593,f355])).
fof(f355,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,X1) | sP5(X2,X1,X0) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f214])).
fof(f1750,plain,(
  sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl58),
  inference(unit_resulting_resolution,[],[f228,f593,f355])).
fof(f1751,plain,(
  sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl58),
  inference(unit_resulting_resolution,[],[f227,f593,f355])).
fof(f1548,plain,(
  ~sP1('T_0','T_0') | $spl157),
  inference(cnf_transformation,[],[f1548_D])).
fof(f1548_D,plain,(
  ~sP1('T_0','T_0') <=> ~$spl157),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl157])])).
fof(f1523,plain,(
  ~sP1('T_0','T_0') | $spl95),
  inference(unit_resulting_resolution,[],[f377,f793,f891])).
fof(f1524,plain,(
  ~sP1('T_0','T_0') | $spl95),
  inference(unit_resulting_resolution,[],[f228,f793,f891])).
fof(f1525,plain,(
  ~sP1('T_0','T_0') | $spl95),
  inference(unit_resulting_resolution,[],[f227,f793,f891])).
fof(f1506,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl155),
  inference(cnf_transformation,[],[f1506_D])).
fof(f1506_D,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') <=> ~$spl155),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl155])])).
fof(f1501,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl85),
  inference(unit_resulting_resolution,[],[f779,f337])).
fof(f1494,plain,(
  ~sP5('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl153),
  inference(cnf_transformation,[],[f1494_D])).
fof(f1494_D,plain,(
  ~sP5('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl153),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl153])])).
fof(f1489,plain,(
  ~sP5('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl83),
  inference(unit_resulting_resolution,[],[f777,f337])).
fof(f1482,plain,(
  ~sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl151),
  inference(cnf_transformation,[],[f1482_D])).
fof(f1482_D,plain,(
  ~sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') <=> ~$spl151),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl151])])).
fof(f1477,plain,(
  ~sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl79),
  inference(unit_resulting_resolution,[],[f773,f336])).
fof(f1470,plain,(
  ~sP5('F_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl149),
  inference(cnf_transformation,[],[f1470_D])).
fof(f1470_D,plain,(
  ~sP5('F_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl149),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl149])])).
fof(f1465,plain,(
  ~sP5('F_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl77),
  inference(unit_resulting_resolution,[],[f771,f336])).
fof(f1321,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl146),
  inference(cnf_transformation,[],[f1321_D])).
fof(f1321_D,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f1316,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f377,f686,f695,f696,f339])).
fof(f1317,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f228,f686,f695,f696,f339])).
fof(f1318,plain,(
  sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f227,f686,f695,f696,f339])).
fof(f594,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl59),
  inference(cnf_transformation,[],[f594_D])).
fof(f594_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f1279,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl39),
  inference(unit_resulting_resolution,[],[f377,f574,f355])).
fof(f792,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl94),
  inference(cnf_transformation,[],[f792_D])).
fof(f792_D,plain,(
  s(bool,'T_0') = s(bool,'F_0') <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f1278,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl37 | $spl58)),
  inference(forward_demodulation,[],[f1271,f593])).
fof(f1271,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl37),
  inference(resolution,[],[f572,f897])).
fof(f1277,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl37 | $spl58)),
  inference(forward_demodulation,[],[f1266,f593])).
fof(f1266,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl37),
  inference(unit_resulting_resolution,[],[f572,f897])).
fof(f1276,plain,(
  ~p(s(bool,'T_0')) | ($spl37 | $spl58)),
  inference(forward_demodulation,[],[f1267,f593])).
fof(f1267,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl37),
  inference(unit_resulting_resolution,[],[f572,f343])).
fof(f1275,plain,(
  ~sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl145),
  inference(cnf_transformation,[],[f1275_D])).
fof(f1275_D,plain,(
  ~sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') <=> ~$spl145),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl145])])).
fof(f1270,plain,(
  ~sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl37),
  inference(unit_resulting_resolution,[],[f572,f337])).
fof(f1265,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl35 | $spl58)),
  inference(forward_demodulation,[],[f1258,f593])).
fof(f1258,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl35),
  inference(resolution,[],[f570,f898])).
fof(f1264,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl35 | $spl58)),
  inference(forward_demodulation,[],[f1253,f593])).
fof(f1253,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl35),
  inference(unit_resulting_resolution,[],[f570,f898])).
fof(f1263,plain,(
  ~p(s(bool,'T_0')) | ($spl35 | $spl58)),
  inference(forward_demodulation,[],[f1254,f593])).
fof(f1254,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl35),
  inference(unit_resulting_resolution,[],[f570,f347])).
fof(f1262,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','T_0') | $spl143),
  inference(cnf_transformation,[],[f1262_D])).
fof(f1262_D,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','T_0') <=> ~$spl143),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl143])])).
fof(f1257,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','T_0') | $spl35),
  inference(unit_resulting_resolution,[],[f570,f336])).
fof(f1252,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl33 | $spl58)),
  inference(forward_demodulation,[],[f1245,f593])).
fof(f1245,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl33),
  inference(resolution,[],[f568,f901])).
fof(f1251,plain,(
  ~sP5('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl141),
  inference(cnf_transformation,[],[f1251_D])).
fof(f1251_D,plain,(
  ~sP5('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl141),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl141])])).
fof(f1238,plain,(
  ~sP5('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl33),
  inference(unit_resulting_resolution,[],[f568,f335])).
fof(f1249,plain,(
  ~p(s(bool,'T_0')) | ($spl33 | $spl58)),
  inference(forward_demodulation,[],[f1241,f593])).
fof(f1241,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl33),
  inference(unit_resulting_resolution,[],[f568,f353])).
fof(f1248,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl33 | $spl58)),
  inference(forward_demodulation,[],[f1244,f593])).
fof(f1244,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl33),
  inference(unit_resulting_resolution,[],[f568,f901])).
fof(f1231,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl31 | $spl58)),
  inference(forward_demodulation,[],[f1225,f593])).
fof(f1225,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl31),
  inference(resolution,[],[f566,f900])).
fof(f1230,plain,(
  ~sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl139),
  inference(cnf_transformation,[],[f1230_D])).
fof(f1230_D,plain,(
  ~sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl139),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl139])])).
fof(f1217,plain,(
  ~sP5('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl31),
  inference(unit_resulting_resolution,[],[f566,f335])).
fof(f1228,plain,(
  ~p(s(bool,'T_0')) | ($spl31 | $spl58)),
  inference(forward_demodulation,[],[f1219,f593])).
fof(f1219,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl31),
  inference(unit_resulting_resolution,[],[f566,f352])).
fof(f1227,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl31 | $spl58)),
  inference(forward_demodulation,[],[f1222,f593])).
fof(f1222,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl31),
  inference(unit_resulting_resolution,[],[f566,f900])).
fof(f1216,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl27 | $spl58)),
  inference(forward_demodulation,[],[f1211,f593])).
fof(f1211,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl27),
  inference(resolution,[],[f562,f899])).
fof(f1215,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','F_0') | $spl137),
  inference(cnf_transformation,[],[f1215_D])).
fof(f1215_D,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','F_0') <=> ~$spl137),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl137])])).
fof(f1202,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','F_0') | $spl27),
  inference(unit_resulting_resolution,[],[f562,f335])).
fof(f1213,plain,(
  ~p(s(bool,'T_0')) | ($spl27 | $spl58)),
  inference(forward_demodulation,[],[f1203,f593])).
fof(f1203,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl27),
  inference(unit_resulting_resolution,[],[f562,f351])).
fof(f1212,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl27 | $spl58)),
  inference(forward_demodulation,[],[f1206,f593])).
fof(f1206,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl27),
  inference(unit_resulting_resolution,[],[f562,f899])).
fof(f1201,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl19 | $spl58)),
  inference(forward_demodulation,[],[f1196,f593])).
fof(f1196,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl19),
  inference(resolution,[],[f554,f902])).
fof(f1200,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl19 | $spl58)),
  inference(forward_demodulation,[],[f1191,f593])).
fof(f1191,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl19),
  inference(unit_resulting_resolution,[],[f554,f902])).
fof(f1199,plain,(
  ~p(s(bool,'T_0')) | ($spl19 | $spl58)),
  inference(forward_demodulation,[],[f1193,f593])).
fof(f1193,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl19),
  inference(unit_resulting_resolution,[],[f554,f367])).
fof(f546,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl11),
  inference(cnf_transformation,[],[f546_D])).
fof(f546_D,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f1195,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl19),
  inference(unit_resulting_resolution,[],[f554,f360])).
fof(f360,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f217])).
fof(f1190,plain,(
  ~p(s(bool,'T_0')) | ($spl16 | $spl58)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f552,f593,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1187,f1188,f1189])).
fof(f1189,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0')) | ($spl16 | $spl58)),
  inference(forward_demodulation,[],[f1183,f593])).
fof(f1183,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl16),
  inference(resolution,[],[f552,f359])).
fof(f359,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f217])).
fof(f1187,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0')) | ($spl16 | $spl58)),
  inference(forward_demodulation,[],[f1181,f593])).
fof(f1181,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | p(s(bool,'F_0')) | $spl16),
  inference(resolution,[],[f552,f374])).
fof(f374,plain,(
  ( ! [X2,X0,X1] : (~sP7(X2,X0,X1) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f222])).
fof(f1188,plain,(
  ~p(s(bool,'T_0')) | ($spl16 | $spl58)),
  inference(global_subsumption,[],[f379,f386,f387,f223,f552,f593,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230,f868,f302,f870,f874,f887,f888,f889,f891,f892,f893,f896,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f907,f908,f1077,f1079,f1094,f1187])).
fof(f1186,plain,(
  ~p(s(bool,'T_0')) | ($spl16 | $spl58 | $spl61)),
  inference(forward_demodulation,[],[f1175,f593])).
fof(f1175,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | ($spl16 | $spl61)),
  inference(unit_resulting_resolution,[],[f614,f552,f374])).
fof(f1185,plain,(
  ~p(s(bool,'T_0')) | ($spl16 | $spl58 | $spl61)),
  inference(forward_demodulation,[],[f1177,f593])).
fof(f1177,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | ($spl16 | $spl61)),
  inference(unit_resulting_resolution,[],[f614,f552,f359])).
fof(f1170,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | p(s(bool,'T_0'))),
  introduced(theory_axiom,[])).
fof(f1169,plain,(
  ~p(s(bool,'T_0')) | ($spl11 | $spl58)),
  inference(forward_demodulation,[],[f1167,f593])).
fof(f1167,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl11),
  inference(unit_resulting_resolution,[],[f377,f546,f371])).
fof(f1164,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl134),
  inference(cnf_transformation,[],[f1164_D])).
fof(f1164_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f1159,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl9),
  inference(unit_resulting_resolution,[],[f393,f246])).
fof(f1162,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl132),
  inference(cnf_transformation,[],[f1162_D])).
fof(f1162_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f1160,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl9),
  inference(unit_resulting_resolution,[],[f393,f245])).
fof(f1142,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl55 | $spl58)),
  inference(forward_demodulation,[],[f1137,f593])).
fof(f1137,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl55),
  inference(resolution,[],[f590,f889])).
fof(f1141,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl55 | $spl58)),
  inference(forward_demodulation,[],[f1132,f593])).
fof(f1132,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl55),
  inference(unit_resulting_resolution,[],[f590,f889])).
fof(f1140,plain,(
  ~p(s(bool,'T_0')) | ($spl55 | $spl58)),
  inference(forward_demodulation,[],[f1134,f593])).
fof(f1134,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl55),
  inference(unit_resulting_resolution,[],[f590,f309])).
fof(f1139,plain,(
  ~p(s(bool,'T_0')) | ($spl55 | $spl58)),
  inference(forward_demodulation,[],[f1136,f593])).
fof(f1136,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl55),
  inference(unit_resulting_resolution,[],[f590,f304])).
fof(f1131,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl53 | $spl58)),
  inference(forward_demodulation,[],[f1128,f593])).
fof(f1128,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl53),
  inference(resolution,[],[f588,f888])).
fof(f1130,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl53 | $spl58)),
  inference(forward_demodulation,[],[f1123,f593])).
fof(f1123,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl53),
  inference(unit_resulting_resolution,[],[f588,f888])).
fof(f1129,plain,(
  ~p(s(bool,'T_0')) | ($spl53 | $spl58)),
  inference(forward_demodulation,[],[f1125,f593])).
fof(f1125,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl53),
  inference(unit_resulting_resolution,[],[f588,f303])).
fof(f1040,plain,(
  ~sP1('F_0','F_0') | $spl127),
  inference(cnf_transformation,[],[f1040_D])).
fof(f1040_D,plain,(
  ~sP1('F_0','F_0') <=> ~$spl127),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl127])])).
fof(f919,plain,(
  ~sP1('F_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f614,f317])).
fof(f317,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f198])).
fof(f920,plain,(
  ~sP1('F_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f614,f317])).
fof(f1042,plain,(
  sP1('T_0','F_0') | $spl128),
  inference(cnf_transformation,[],[f1042_D])).
fof(f1042_D,plain,(
  sP1('T_0','F_0') <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f921,plain,(
  sP1('T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f614,f319])).
fof(f922,plain,(
  sP1('T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f614,f319])).
fof(f923,plain,(
  sP1('T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f614,f319])).
fof(f1044,plain,(
  sP1('F_0','T_0') | $spl130),
  inference(cnf_transformation,[],[f1044_D])).
fof(f1044_D,plain,(
  sP1('F_0','T_0') <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f924,plain,(
  sP1('F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f614,f322])).
fof(f925,plain,(
  sP1('F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f614,f322])).
fof(f926,plain,(
  sP1('F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f614,f322])).
fof(f927,plain,(
  sP1('F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f614,f323])).
fof(f323,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP1(X1,X0) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f199])).
fof(f928,plain,(
  sP1('F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f614,f323])).
fof(f929,plain,(
  sP1('F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f614,f323])).
fof(f930,plain,(
  sP1('T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f614,f324])).
fof(f324,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X1,X0)) )),
  inference(cnf_transformation,[],[f199])).
fof(f931,plain,(
  sP1('T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f614,f324])).
fof(f932,plain,(
  sP1('T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f614,f324])).
fof(f933,plain,(
  ~sP1('F_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f614,f326])).
fof(f326,plain,(
  ( ! [X0,X1] : (~sP1(X1,X0) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f199])).
fof(f934,plain,(
  ~sP1('F_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f614,f326])).
fof(f1038,plain,(
  ~sP4('T_0','T_0','F_0') | $spl125),
  inference(cnf_transformation,[],[f1038_D])).
fof(f1038_D,plain,(
  ~sP4('T_0','T_0','F_0') <=> ~$spl125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl125])])).
fof(f944,plain,(
  ~sP4('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f377,f614,f342])).
fof(f342,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f208])).
fof(f945,plain,(
  ~sP4('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f377,f614,f342])).
fof(f946,plain,(
  ~sP4('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f377,f614,f342])).
fof(f947,plain,(
  ~sP4('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f228,f614,f342])).
fof(f948,plain,(
  ~sP4('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f228,f614,f342])).
fof(f949,plain,(
  ~sP4('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f228,f614,f342])).
fof(f950,plain,(
  ~sP4('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f227,f614,f342])).
fof(f951,plain,(
  ~sP4('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f227,f614,f342])).
fof(f952,plain,(
  ~sP4('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f227,f614,f342])).
fof(f1036,plain,(
  ~sP3('T_0','T_0','F_0') | $spl123),
  inference(cnf_transformation,[],[f1036_D])).
fof(f1036_D,plain,(
  ~sP3('T_0','T_0','F_0') <=> ~$spl123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl123])])).
fof(f955,plain,(
  ~sP3('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f377,f614,f346])).
fof(f346,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f211])).
fof(f956,plain,(
  ~sP3('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f377,f614,f346])).
fof(f957,plain,(
  ~sP3('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f377,f614,f346])).
fof(f958,plain,(
  ~sP3('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f228,f614,f346])).
fof(f959,plain,(
  ~sP3('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f228,f614,f346])).
fof(f960,plain,(
  ~sP3('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f228,f614,f346])).
fof(f961,plain,(
  ~sP3('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f227,f614,f346])).
fof(f962,plain,(
  ~sP3('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f227,f614,f346])).
fof(f963,plain,(
  ~sP3('T_0','T_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f227,f614,f346])).
fof(f1034,plain,(
  ~sP2('F_0','F_0','F_0') | $spl121),
  inference(cnf_transformation,[],[f1034_D])).
fof(f1034_D,plain,(
  ~sP2('F_0','F_0','F_0') <=> ~$spl121),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl121])])).
fof(f966,plain,(
  ~sP2('F_0','F_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f614,f614,f350])).
fof(f350,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f213])).
fof(f967,plain,(
  ~sP2('F_0','F_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f614,f614,f350])).
fof(f968,plain,(
  ~sP2('F_0','F_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f614,f614,f350])).
fof(f1032,plain,(
  ~sP6('T_0','F_0','T_0') | $spl119),
  inference(cnf_transformation,[],[f1032_D])).
fof(f1032_D,plain,(
  ~sP6('T_0','F_0','T_0') <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f974,plain,(
  ~sP6('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f377,f614,f365])).
fof(f365,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f220])).
fof(f975,plain,(
  ~sP6('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f377,f614,f365])).
fof(f976,plain,(
  ~sP6('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f377,f614,f365])).
fof(f977,plain,(
  ~sP6('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f228,f614,f365])).
fof(f978,plain,(
  ~sP6('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f228,f614,f365])).
fof(f979,plain,(
  ~sP6('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f228,f614,f365])).
fof(f980,plain,(
  ~sP6('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f227,f614,f365])).
fof(f981,plain,(
  ~sP6('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f227,f614,f365])).
fof(f982,plain,(
  ~sP6('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f227,f614,f365])).
fof(f1030,plain,(
  sP7('F_0','F_0','T_0') | $spl116),
  inference(cnf_transformation,[],[f1030_D])).
fof(f1030_D,plain,(
  sP7('F_0','F_0','T_0') <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f985,plain,(
  sP7('F_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f377,f614,f369])).
fof(f986,plain,(
  sP7('F_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f228,f614,f369])).
fof(f987,plain,(
  sP7('F_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f227,f614,f369])).
fof(f988,plain,(
  sP7('F_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f614,f614,f369])).
fof(f989,plain,(
  sP7('F_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f614,f614,f369])).
fof(f990,plain,(
  sP7('F_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f614,f614,f369])).
fof(f1028,plain,(
  ~sP7('T_0','F_0','T_0') | $spl115),
  inference(cnf_transformation,[],[f1028_D])).
fof(f1028_D,plain,(
  ~sP7('T_0','F_0','T_0') <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f994,plain,(
  ~sP7('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f377,f614,f372])).
fof(f372,plain,(
  ( ! [X2,X0,X1] : (~sP7(X2,X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f222])).
fof(f995,plain,(
  ~sP7('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f377,f614,f372])).
fof(f996,plain,(
  ~sP7('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f377,f614,f372])).
fof(f997,plain,(
  ~sP7('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f228,f614,f372])).
fof(f998,plain,(
  ~sP7('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f228,f614,f372])).
fof(f999,plain,(
  ~sP7('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f228,f614,f372])).
fof(f1000,plain,(
  ~sP7('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f377,f227,f614,f372])).
fof(f1001,plain,(
  ~sP7('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f228,f227,f614,f372])).
fof(f1002,plain,(
  ~sP7('T_0','F_0','T_0') | $spl61),
  inference(unit_resulting_resolution,[],[f227,f227,f614,f372])).
fof(f1026,plain,(
  ~sP0('F_0','F_0') | $spl113),
  inference(cnf_transformation,[],[f1026_D])).
fof(f1026_D,plain,(
  ~sP0('F_0','F_0') <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f1008,plain,(
  ~sP0('F_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f614,f870])).
fof(f1009,plain,(
  ~sP0('F_0','F_0') | $spl61),
  inference(unit_resulting_resolution,[],[f614,f614,f870])).
fof(f614,plain,(
  ~p(s(bool,'F_0')) | $spl61),
  inference(cnf_transformation,[],[f614_D])).
fof(f614_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f868,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232,f867,f230])).
fof(f867,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f379,f386,f387,f223,f310,f305,f283,f275,f268,f263,f254,f253,f239,f236,f233,f232])).
fof(f233,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.int_arith.elim_eq_coeffs',aHL_FALSITY)).
fof(f866,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl110),
  inference(cnf_transformation,[],[f866_D])).
fof(f866_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f236,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0)))),
  inference(ennf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : (p(s(bool,'F_0')) => p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X11] : (p(s(bool,'F_0')) => p(s(bool,X11)))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.FALSITY')).
fof(f865,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl108),
  inference(cnf_transformation,[],[f865_D])).
fof(f865_D,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f239,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0] : ((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) => ~p(s(bool,X0)))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) => ~p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X11] : ((p(s(bool,X11)) => p(s(bool,'F_0'))) => ~p(s(bool,X11)))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.IMP_F')).
fof(f263,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | ~p(s(bool,X0)) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f164])).
fof(f164,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) | ~p(s(bool,X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : ((p(s(bool,'F_0')) & p(s(bool,X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X11] : ((p(s(bool,'F_0')) & p(s(bool,X11))) <=> p(s(bool,'F_0')))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.AND_CLAUSES|split|2')).
fof(f268,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'F_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(flattening,[],[f168])).
fof(f168,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'F_0'))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X11] : ((p(s(bool,X11)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.AND_CLAUSES|split|3')).
fof(f275,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0)) | ~p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f172])).
fof(f172,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X11] : ((p(s(bool,'F_0')) => p(s(bool,X11))) <=> p(s(bool,'T_0')))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.IMP_CLAUSES|split|2')).
fof(f283,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f178])).
fof(f178,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X11] : ((p(s(bool,X11)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X11)))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.IMP_CLAUSES|split|4')).
fof(f864,plain,(
  ( ! [X0,X1] : (sP0(X0,X1)) ) | $spl106),
  inference(cnf_transformation,[],[f864_D])).
fof(f864_D,plain,(
  ( ! [X0,X1] : (sP0(X0,X1)) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f305,plain,(
  ( ! [X0,X1] : (~p(s(bool,'F_0')) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f191])).
fof(f310,plain,(
  ( ! [X0,X1] : (~p(s(bool,'F_0')) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f193])).
fof(f863,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | s(bool,'F_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | s(bool,'T_0') = s(bool,'F_0')),
  introduced(theory_axiom,[])).
fof(f860,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(global_subsumption,[],[f379,f386,f387,f223,f792,f849,f847,f828,f829,f853,f830,f854,f831,f832,f835,f855,f836,f856,f845,f857,f839,f858,f841,f859,f844])).
fof(f844,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | sP0(X0,X1)) ) | $spl94),
  inference(backward_demodulation,[],[f792,f310])).
fof(f841,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | sP0(X0,X1)) ) | $spl94),
  inference(backward_demodulation,[],[f792,f305])).
fof(f839,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,X0))) ) | $spl94),
  inference(backward_demodulation,[],[f792,f283])).
fof(f845,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0))) ) | $spl94),
  inference(duplicate_literal_removal,[],[f838])).
fof(f838,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~p(s(bool,'T_0'))) ) | $spl94),
  inference(backward_demodulation,[],[f792,f275])).
fof(f836,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0))) ) | $spl94),
  inference(backward_demodulation,[],[f792,f268])).
fof(f835,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0))) ) | $spl94),
  inference(backward_demodulation,[],[f792,f263])).
fof(f832,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X0))) ) | $spl94),
  inference(backward_demodulation,[],[f792,f252])).
fof(f252,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.EQ_CLAUSES|split|3')).
fof(f831,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl94),
  inference(backward_demodulation,[],[f792,f251])).
fof(f251,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f158])).
fof(f830,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,X0))) ) | $spl94),
  inference(backward_demodulation,[],[f792,f239])).
fof(f829,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0))) ) | $spl94),
  inference(backward_demodulation,[],[f792,f236])).
fof(f859,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(global_subsumption,[],[f379,f386,f387,f223,f792,f849,f847,f828,f829,f853,f830,f854,f831,f832,f835,f855,f836,f856,f845,f857,f839,f858,f841])).
fof(f858,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(global_subsumption,[],[f379,f386,f387,f223,f792,f849,f847,f828,f829,f853,f830,f854,f831,f832,f835,f855,f836,f856,f845,f857,f839])).
fof(f857,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(global_subsumption,[],[f379,f386,f387,f223,f792,f849,f847,f828,f829,f853,f830,f854,f831,f832,f835,f855,f836,f856,f845])).
fof(f856,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(global_subsumption,[],[f379,f386,f387,f223,f792,f849,f847,f828,f829,f853,f830,f854,f831,f832,f835,f855,f836])).
fof(f855,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(global_subsumption,[],[f379,f386,f387,f223,f792,f849,f847,f828,f829,f853,f830,f854,f831,f832,f835])).
fof(f854,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(global_subsumption,[],[f379,f386,f387,f223,f792,f849,f847,f828,f829,f853,f830])).
fof(f853,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(global_subsumption,[],[f379,f386,f387,f223,f792,f849,f847,f828,f829])).
fof(f828,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(backward_demodulation,[],[f792,f233])).
fof(f847,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(duplicate_literal_removal,[],[f827])).
fof(f827,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'T_0')) | $spl94),
  inference(backward_demodulation,[],[f792,f232])).
fof(f849,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(duplicate_literal_removal,[],[f825])).
fof(f825,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'T_0')) | $spl94),
  inference(backward_demodulation,[],[f792,f230])).
fof(f793,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl95),
  inference(cnf_transformation,[],[f793_D])).
fof(f793_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f823,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl0 | $spl58)),
  inference(forward_demodulation,[],[f632,f593])).
fof(f632,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f253])).
fof(f822,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl0 | $spl58)),
  inference(forward_demodulation,[],[f631,f593])).
fof(f631,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f251])).
fof(f821,plain,(
  sP5('F_0','F_0','T_0') | $spl102),
  inference(cnf_transformation,[],[f821_D])).
fof(f821_D,plain,(
  sP5('F_0','F_0','T_0') <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f797,plain,(
  sP5('F_0','F_0','T_0') | $spl95),
  inference(unit_resulting_resolution,[],[f233,f793,f354])).
fof(f819,plain,(
  ~sP5('T_0','F_0','T_0') | $spl101),
  inference(cnf_transformation,[],[f819_D])).
fof(f819_D,plain,(
  ~sP5('T_0','F_0','T_0') <=> ~$spl101),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl101])])).
fof(f798,plain,(
  ~sP5('T_0','F_0','T_0') | $spl95),
  inference(unit_resulting_resolution,[],[f377,f793,f356])).
fof(f799,plain,(
  ~sP5('T_0','F_0','T_0') | $spl95),
  inference(unit_resulting_resolution,[],[f228,f793,f356])).
fof(f800,plain,(
  ~sP5('T_0','F_0','T_0') | $spl95),
  inference(unit_resulting_resolution,[],[f227,f793,f356])).
fof(f817,plain,(
  sP5('F_0','T_0','F_0') | $spl98),
  inference(cnf_transformation,[],[f817_D])).
fof(f817_D,plain,(
  sP5('F_0','T_0','F_0') <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f806,plain,(
  sP5('F_0','T_0','F_0') | $spl95),
  inference(unit_resulting_resolution,[],[f233,f793,f354])).
fof(f815,plain,(
  ~sP5('T_0','T_0','F_0') | $spl97),
  inference(cnf_transformation,[],[f815_D])).
fof(f815_D,plain,(
  ~sP5('T_0','T_0','F_0') <=> ~$spl97),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl97])])).
fof(f807,plain,(
  ~sP5('T_0','T_0','F_0') | $spl95),
  inference(unit_resulting_resolution,[],[f377,f793,f356])).
fof(f808,plain,(
  ~sP5('T_0','T_0','F_0') | $spl95),
  inference(unit_resulting_resolution,[],[f228,f793,f356])).
fof(f809,plain,(
  ~sP5('T_0','T_0','F_0') | $spl95),
  inference(unit_resulting_resolution,[],[f227,f793,f356])).
fof(f791,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl57 | $spl58)),
  inference(backward_demodulation,[],[f593,f591])).
fof(f591,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl57),
  inference(cnf_transformation,[],[f591_D])).
fof(f591_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f593,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl58),
  inference(cnf_transformation,[],[f593_D])).
fof(f593_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f788,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(global_subsumption,[],[f379,f386,f387,f223,f380,f727,f726,f725,f724,f723,f722,f721,f720,f719,f718,f717,f713,f710,f709,f708,f707,f706,f705,f704,f703,f702,f701,f700,f698,f697,f696,f695,f694,f693,f692,f691,f690,f689,f688,f687,f686,f685,f684,f683,f682,f681,f680,f679,f678,f677,f676,f675,f674,f673,f672,f671,f670,f668,f667,f666,f664,f663,f662,f661,f660,f659,f658,f656,f655,f654,f652,f651,f650,f649,f648,f644,f643,f642,f640,f639,f638,f630,f629,f627,f728,f729,f730,f735,f740,f741,f742,f745,f752,f753,f754,f755])).
fof(f755,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(superposition,[],[f380,f235])).
fof(f754,plain,(
  ( ! [X28,X27] : (sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X27,X28) | ~p(s(bool,X27))) ) | $spl0),
  inference(resolution,[],[f380,f371])).
fof(f753,plain,(
  ( ! [X26,X25] : (sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X26,X25) | p(s(bool,X25))) ) | $spl0),
  inference(resolution,[],[f380,f370])).
fof(f752,plain,(
  ( ! [X24,X23] : (sP7(X24,X23,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | p(s(bool,X23)) | p(s(bool,X24))) ) | $spl0),
  inference(resolution,[],[f380,f369])).
fof(f745,plain,(
  ( ! [X10] : (~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X10) | ~p(s(bool,X10))) ) | $spl0),
  inference(resolution,[],[f380,f325])).
fof(f742,plain,(
  ( ! [X7] : (sP1(X7,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | p(s(bool,X7))) ) | $spl0),
  inference(resolution,[],[f380,f322])).
fof(f741,plain,(
  ( ! [X6] : (sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X6) | p(s(bool,X6))) ) | $spl0),
  inference(resolution,[],[f380,f319])).
fof(f740,plain,(
  ( ! [X5] : (~sP1(X5,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | ~p(s(bool,X5))) ) | $spl0),
  inference(resolution,[],[f380,f318])).
fof(f735,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,X0) = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) ) | $spl0),
  inference(resolution,[],[f380,f297])).
fof(f708,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f367])).
fof(f710,plain,(
  ( ! [X0] : (sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X0,'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f380,f370])).
fof(f713,plain,(
  ( ! [X0] : (sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f227,f380,f371])).
fof(f717,plain,(
  ( ! [X0] : (sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f227,f380,f371])).
fof(f718,plain,(
  ( ! [X0] : (sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f380,f371])).
fof(f727,plain,(
  ( ! [X0] : (~sP7('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f380,f374])).
fof(f730,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(resolution,[],[f380,f250])).
fof(f250,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.int_arith.elim_eq_coeffs','thm.bool.EQ_CLAUSES|split|1')).
fof(f729,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(resolution,[],[f380,f248])).
fof(f787,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl92),
  inference(cnf_transformation,[],[f787_D])).
fof(f787_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f728,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl0),
  inference(resolution,[],[f380,f298])).
fof(f627,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13(sK10,'const.integer.int_of_num_1'(s('type.num.num',sK8)))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f298])).
fof(f629,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f248])).
fof(f630,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f250])).
fof(f638,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f377,f380,f297])).
fof(f639,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f228,f380,f297])).
fof(f640,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f227,f380,f297])).
fof(f642,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f377,f380,f297])).
fof(f643,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f228,f380,f297])).
fof(f644,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f227,f380,f297])).
fof(f583,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl49),
  inference(cnf_transformation,[],[f583_D])).
fof(f583_D,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f650,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f377,f380,f318])).
fof(f651,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f228,f380,f318])).
fof(f652,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f227,f380,f318])).
fof(f581,plain,(
  ~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl47),
  inference(cnf_transformation,[],[f581_D])).
fof(f581_D,plain,(
  ~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f654,plain,(
  ~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f377,f380,f318])).
fof(f655,plain,(
  ~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f228,f380,f318])).
fof(f656,plain,(
  ~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f227,f380,f318])).
fof(f577,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl42),
  inference(cnf_transformation,[],[f577_D])).
fof(f577_D,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f658,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f233,f380,f319])).
fof(f579,plain,(
  sP1('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl44),
  inference(cnf_transformation,[],[f579_D])).
fof(f579_D,plain,(
  sP1('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f659,plain,(
  sP1('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f380,f322])).
fof(f660,plain,(
  sP1('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f380,f323])).
fof(f661,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f233,f380,f324])).
fof(f662,plain,(
  ~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f377,f380,f325])).
fof(f663,plain,(
  ~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f228,f380,f325])).
fof(f664,plain,(
  ~sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f227,f380,f325])).
fof(f666,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f377,f380,f325])).
fof(f667,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f228,f380,f325])).
fof(f668,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f227,f380,f325])).
fof(f785,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl91),
  inference(cnf_transformation,[],[f785_D])).
fof(f785_D,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f670,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f377,f233,f380,f338])).
fof(f338,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f205])).
fof(f671,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f228,f233,f380,f338])).
fof(f672,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f227,f233,f380,f338])).
fof(f781,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl87),
  inference(cnf_transformation,[],[f781_D])).
fof(f781_D,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl87),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl87])])).
fof(f673,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f380,f233,f380,f338])).
fof(f783,plain,(
  ~sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl89),
  inference(cnf_transformation,[],[f783_D])).
fof(f783_D,plain,(
  ~sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f674,plain,(
  ~sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f377,f233,f380,f338])).
fof(f675,plain,(
  ~sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f228,f233,f380,f338])).
fof(f676,plain,(
  ~sP5('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f227,f233,f380,f338])).
fof(f677,plain,(
  ~sP5('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f380,f233,f380,f338])).
fof(f779,plain,(
  ~sP4('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl85),
  inference(cnf_transformation,[],[f779_D])).
fof(f779_D,plain,(
  ~sP4('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f678,plain,(
  ~sP4('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f377,f233,f380,f342])).
fof(f679,plain,(
  ~sP4('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f228,f233,f380,f342])).
fof(f680,plain,(
  ~sP4('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f227,f233,f380,f342])).
fof(f775,plain,(
  ~sP4('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl81),
  inference(cnf_transformation,[],[f775_D])).
fof(f775_D,plain,(
  ~sP4('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f681,plain,(
  ~sP4('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f380,f233,f380,f342])).
fof(f777,plain,(
  ~sP4('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl83),
  inference(cnf_transformation,[],[f777_D])).
fof(f777_D,plain,(
  ~sP4('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f682,plain,(
  ~sP4('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f377,f233,f380,f342])).
fof(f683,plain,(
  ~sP4('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f228,f233,f380,f342])).
fof(f684,plain,(
  ~sP4('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f227,f233,f380,f342])).
fof(f685,plain,(
  ~sP4('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f380,f233,f380,f342])).
fof(f773,plain,(
  ~sP3('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl79),
  inference(cnf_transformation,[],[f773_D])).
fof(f773_D,plain,(
  ~sP3('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f687,plain,(
  ~sP3('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f377,f233,f380,f346])).
fof(f688,plain,(
  ~sP3('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f228,f233,f380,f346])).
fof(f689,plain,(
  ~sP3('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f227,f233,f380,f346])).
fof(f769,plain,(
  ~sP3('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl75),
  inference(cnf_transformation,[],[f769_D])).
fof(f769_D,plain,(
  ~sP3('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl75),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl75])])).
fof(f690,plain,(
  ~sP3('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f380,f233,f380,f346])).
fof(f771,plain,(
  ~sP3('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl77),
  inference(cnf_transformation,[],[f771_D])).
fof(f771_D,plain,(
  ~sP3('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f691,plain,(
  ~sP3('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f377,f233,f380,f346])).
fof(f692,plain,(
  ~sP3('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f228,f233,f380,f346])).
fof(f693,plain,(
  ~sP3('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f227,f233,f380,f346])).
fof(f694,plain,(
  ~sP3('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f380,f233,f380,f346])).
fof(f767,plain,(
  ~sP6('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl73),
  inference(cnf_transformation,[],[f767_D])).
fof(f767_D,plain,(
  ~sP6('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') <=> ~$spl73),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl73])])).
fof(f700,plain,(
  ~sP6('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f233,f377,f380,f365])).
fof(f701,plain,(
  ~sP6('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f233,f228,f380,f365])).
fof(f702,plain,(
  ~sP6('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f233,f227,f380,f365])).
fof(f763,plain,(
  ~sP6('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl69),
  inference(cnf_transformation,[],[f763_D])).
fof(f763_D,plain,(
  ~sP6('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl69),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl69])])).
fof(f703,plain,(
  ~sP6('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f380,f380,f365])).
fof(f765,plain,(
  ~sP6('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl71),
  inference(cnf_transformation,[],[f765_D])).
fof(f765_D,plain,(
  ~sP6('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl71),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl71])])).
fof(f704,plain,(
  ~sP6('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f377,f233,f380,f365])).
fof(f705,plain,(
  ~sP6('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f228,f233,f380,f365])).
fof(f706,plain,(
  ~sP6('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f227,f233,f380,f365])).
fof(f707,plain,(
  ~sP6('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f380,f233,f380,f365])).
fof(f761,plain,(
  sP7('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl66),
  inference(cnf_transformation,[],[f761_D])).
fof(f761_D,plain,(
  sP7('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f709,plain,(
  sP7('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f233,f380,f369])).
fof(f759,plain,(
  ~sP7('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl65),
  inference(cnf_transformation,[],[f759_D])).
fof(f759_D,plain,(
  ~sP7('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f719,plain,(
  ~sP7('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f377,f380,f372])).
fof(f720,plain,(
  ~sP7('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f228,f380,f372])).
fof(f721,plain,(
  ~sP7('T_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f227,f380,f372])).
fof(f757,plain,(
  ~sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl63),
  inference(cnf_transformation,[],[f757_D])).
fof(f757_D,plain,(
  ~sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f722,plain,(
  ~sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f380,f380,f372])).
fof(f549,plain,(
  ~sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl15),
  inference(cnf_transformation,[],[f549_D])).
fof(f549_D,plain,(
  ~sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f723,plain,(
  ~sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f233,f377,f380,f372])).
fof(f724,plain,(
  ~sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f233,f228,f380,f372])).
fof(f725,plain,(
  ~sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f233,f227,f380,f372])).
fof(f726,plain,(
  ~sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl0),
  inference(unit_resulting_resolution,[],[f233,f380,f380,f372])).
fof(f380,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl0),
  inference(cnf_transformation,[],[f380_D])).
fof(f380_D,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f597,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl4),
  inference(unit_resulting_resolution,[],[f384,f299])).
fof(f615,plain,(
  p(s(bool,'F_0')) | $spl60),
  inference(cnf_transformation,[],[f615_D])).
fof(f615_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f613,plain,(
  p(s(bool,'F_0')) | ($spl4 | $spl56)),
  inference(forward_demodulation,[],[f597,f592])).
fof(f592,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl56),
  inference(cnf_transformation,[],[f592_D])).
fof(f592_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f531,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(resolution,[],[f381,f254])).
fof(f530,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(resolution,[],[f381,f252])).
fof(f396,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f247])).
fof(f247,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f156])).
fof(f397,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f249])).
fof(f249,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f157])).
fof(f398,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f252])).
fof(f399,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f254])).
fof(f406,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f233,f381,f294])).
fof(f408,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f233,f381,f294])).
fof(f590,plain,(
  ~sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl55),
  inference(cnf_transformation,[],[f590_D])).
fof(f590_D,plain,(
  ~sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f410,plain,(
  ~sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f233,f233,f381,f302])).
fof(f586,plain,(
  ~sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl51),
  inference(cnf_transformation,[],[f586_D])).
fof(f586_D,plain,(
  ~sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f411,plain,(
  ~sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f233,f381,f302])).
fof(f588,plain,(
  ~sP0('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl53),
  inference(cnf_transformation,[],[f588_D])).
fof(f588_D,plain,(
  ~sP0('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f412,plain,(
  ~sP0('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f233,f233,f381,f302])).
fof(f413,plain,(
  ~sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f233,f381,f302])).
fof(f414,plain,(
  ~sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f233,f233,f381,f306])).
fof(f306,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f193])).
fof(f415,plain,(
  ~sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f233,f381,f306])).
fof(f416,plain,(
  ~sP0('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f233,f233,f381,f306])).
fof(f417,plain,(
  ~sP0('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f233,f381,f306])).
fof(f578,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl43),
  inference(cnf_transformation,[],[f578_D])).
fof(f578_D,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f418,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f233,f381,f317])).
fof(f576,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl41),
  inference(cnf_transformation,[],[f576_D])).
fof(f576_D,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f419,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f381,f317])).
fof(f580,plain,(
  ~sP1('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl45),
  inference(cnf_transformation,[],[f580_D])).
fof(f580_D,plain,(
  ~sP1('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f420,plain,(
  ~sP1('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f233,f381,f317])).
fof(f421,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f381,f317])).
fof(f582,plain,(
  sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl46),
  inference(cnf_transformation,[],[f582_D])).
fof(f582_D,plain,(
  sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f422,plain,(
  sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f381,f319])).
fof(f423,plain,(
  sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f381,f319])).
fof(f424,plain,(
  sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f381,f319])).
fof(f584,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl48),
  inference(cnf_transformation,[],[f584_D])).
fof(f584_D,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f425,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f377,f381,f322])).
fof(f426,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f228,f381,f322])).
fof(f427,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f227,f381,f322])).
fof(f428,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f377,f381,f323])).
fof(f429,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f228,f381,f323])).
fof(f430,plain,(
  sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f227,f381,f323])).
fof(f431,plain,(
  sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f381,f324])).
fof(f432,plain,(
  sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f381,f324])).
fof(f433,plain,(
  sP1('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f381,f324])).
fof(f434,plain,(
  ~sP1('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f233,f381,f326])).
fof(f435,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f381,f326])).
fof(f436,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f233,f381,f326])).
fof(f437,plain,(
  ~sP1('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f381,f326])).
fof(f574,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl39),
  inference(cnf_transformation,[],[f574_D])).
fof(f574_D,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f438,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f377,f381,f338])).
fof(f439,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f377,f381,f338])).
fof(f440,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f377,f381,f338])).
fof(f441,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f228,f381,f338])).
fof(f442,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f228,f381,f338])).
fof(f443,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f228,f381,f338])).
fof(f444,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f227,f381,f338])).
fof(f445,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f227,f381,f338])).
fof(f446,plain,(
  ~sP5('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f227,f381,f338])).
fof(f572,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl37),
  inference(cnf_transformation,[],[f572_D])).
fof(f572_D,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f447,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f377,f381,f342])).
fof(f448,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f377,f381,f342])).
fof(f449,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f377,f381,f342])).
fof(f450,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f228,f381,f342])).
fof(f451,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f228,f381,f342])).
fof(f452,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f228,f381,f342])).
fof(f453,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f227,f381,f342])).
fof(f454,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f227,f381,f342])).
fof(f455,plain,(
  ~sP4('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f227,f381,f342])).
fof(f570,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl35),
  inference(cnf_transformation,[],[f570_D])).
fof(f570_D,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f458,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f377,f381,f346])).
fof(f459,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f377,f381,f346])).
fof(f460,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f377,f381,f346])).
fof(f461,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f228,f381,f346])).
fof(f462,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f228,f381,f346])).
fof(f463,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f228,f381,f346])).
fof(f464,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f377,f227,f381,f346])).
fof(f465,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f228,f227,f381,f346])).
fof(f466,plain,(
  ~sP3('T_0','T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f227,f227,f381,f346])).
fof(f568,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','F_0') | $spl33),
  inference(cnf_transformation,[],[f568_D])).
fof(f568_D,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','F_0') <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f469,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f233,f233,f381,f350])).
fof(f564,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl29),
  inference(cnf_transformation,[],[f564_D])).
fof(f564_D,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f470,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f381,f233,f381,f350])).
fof(f560,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl25),
  inference(cnf_transformation,[],[f560_D])).
fof(f560_D,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f471,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f233,f381,f381,f350])).
fof(f556,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl21),
  inference(cnf_transformation,[],[f556_D])).
fof(f556_D,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f472,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f381,f381,f350])).
fof(f566,plain,(
  ~sP2('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl31),
  inference(cnf_transformation,[],[f566_D])).
fof(f566_D,plain,(
  ~sP2('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f473,plain,(
  ~sP2('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f233,f233,f381,f350])).
fof(f474,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f381,f233,f381,f350])).
fof(f558,plain,(
  ~sP2('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl23),
  inference(cnf_transformation,[],[f558_D])).
fof(f558_D,plain,(
  ~sP2('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f475,plain,(
  ~sP2('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f233,f381,f381,f350])).
fof(f476,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f381,f381,f350])).
fof(f562,plain,(
  ~sP2('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl27),
  inference(cnf_transformation,[],[f562_D])).
fof(f562_D,plain,(
  ~sP2('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f477,plain,(
  ~sP2('F_0','F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f233,f233,f381,f350])).
fof(f478,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f233,f381,f350])).
fof(f479,plain,(
  ~sP2('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f233,f381,f381,f350])).
fof(f480,plain,(
  ~sP2('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))) | $spl1),
  inference(unit_resulting_resolution,[],[f381,f381,f381,f350])).
fof(f554,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl19),
  inference(cnf_transformation,[],[f554_D])).
fof(f554_D,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f488,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f377,f377,f381,f365])).
fof(f489,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f228,f377,f381,f365])).
fof(f490,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f227,f377,f381,f365])).
fof(f491,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f377,f228,f381,f365])).
fof(f492,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f228,f228,f381,f365])).
fof(f493,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f227,f228,f381,f365])).
fof(f494,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f377,f227,f381,f365])).
fof(f495,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f228,f227,f381,f365])).
fof(f496,plain,(
  ~sP6('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f227,f227,f381,f365])).
fof(f552,plain,(
  sP7('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl16),
  inference(cnf_transformation,[],[f552_D])).
fof(f552_D,plain,(
  sP7('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f499,plain,(
  sP7('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f233,f377,f381,f369])).
fof(f548,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl12),
  inference(cnf_transformation,[],[f548_D])).
fof(f548_D,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f500,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f381,f377,f381,f369])).
fof(f501,plain,(
  sP7('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f233,f228,f381,f369])).
fof(f502,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f381,f228,f381,f369])).
fof(f503,plain,(
  sP7('F_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f233,f227,f381,f369])).
fof(f504,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f381,f227,f381,f369])).
fof(f550,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl14),
  inference(cnf_transformation,[],[f550_D])).
fof(f550_D,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f505,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f377,f233,f381,f369])).
fof(f506,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f228,f233,f381,f369])).
fof(f507,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'F_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f227,f233,f381,f369])).
fof(f508,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f377,f381,f381,f369])).
fof(f509,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f228,f381,f381,f369])).
fof(f510,plain,(
  sP7('const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f227,f381,f381,f369])).
fof(f514,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f377,f377,f381,f372])).
fof(f515,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f228,f377,f381,f372])).
fof(f516,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f227,f377,f381,f372])).
fof(f517,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f377,f228,f381,f372])).
fof(f518,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f228,f228,f381,f372])).
fof(f519,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f227,f228,f381,f372])).
fof(f520,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f377,f227,f381,f372])).
fof(f521,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f228,f227,f381,f372])).
fof(f522,plain,(
  ~sP7('T_0','const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f227,f227,f381,f372])).
fof(f393,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | $spl9),
  inference(cnf_transformation,[],[f393_D])).
fof(f393_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f390,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | $spl7),
  inference(unit_resulting_resolution,[],[f389,f300])).
fof(f391,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))) | $spl7),
  inference(unit_resulting_resolution,[],[f389,f300])).
fof(f389,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK8) | $spl7),
  inference(cnf_transformation,[],[f389_D])).
fof(f389_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK8) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f223,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK8)),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK8) & (s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK9))) | (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) & s('type.integer.int',sK9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))) & (s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK9))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | s('type.integer.int',sK9) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9,sK10])],[f152])).
fof(f152,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X1))) | (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X2)))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))))) & (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X1))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X2)))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))))),
  inference(flattening,[],[f151])).
fof(f151,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & ((s('type.integer.int',X2) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X1))) | (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X2)))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))))) & (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X1))) | (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X2)))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0)))))))))),
  inference(nnf_transformation,[],[f110])).
fof(f110,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) & (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X1))) <~> (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X2)))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))))))),
  inference(ennf_transformation,[],[f48])).
fof(f48,plain,(
  ~! [X0,X1,X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) => (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X1))) <=> (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X2)))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))))))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ~! [X0,X1,X2] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) => (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X1))) <=> (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int',X2)))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) => (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))),s('type.integer.int',X7))) <=> (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))),s('type.integer.int',X8)))) & s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (~s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) => (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))),s('type.integer.int',X7))) <=> (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))),s('type.integer.int',X8)))) & s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))))))))),
  file('thm.int_arith.elim_eq_coeffs','thm.int_arith.elim_eq_coeffs')).
fof(f384,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl4),
  inference(cnf_transformation,[],[f384_D])).
fof(f384_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f387,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))))),
  inference(forward_demodulation,[],[f224,f293])).
fof(f224,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK9)))),
  inference(cnf_transformation,[],[f153])).
fof(f382,plain,(
  s('type.integer.int',sK9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl2),
  inference(cnf_transformation,[],[f382_D])).
fof(f382_D,plain,(
  s('type.integer.int',sK9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f386,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8)))))),
  inference(forward_demodulation,[],[f225,f293])).
fof(f225,plain,(
  s('type.integer.int',sK9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK9)))),
  inference(cnf_transformation,[],[f153])).
fof(f381,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | $spl1),
  inference(cnf_transformation,[],[f381_D])).
fof(f381_D,plain,(
  ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f383,plain,(
  s('type.integer.int',sK9) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl3),
  inference(cnf_transformation,[],[f383_D])).
fof(f383_D,plain,(
  s('type.integer.int',sK9) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f385,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | $spl5),
  inference(cnf_transformation,[],[f385_D])).
fof(f385_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f379,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | s('type.integer.int',sK9) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10))))),
  inference(forward_demodulation,[],[f226,f293])).
fof(f226,plain,(
  s('type.integer.int',sK9) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))))) | ~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK10)))) | s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK8))),s('type.integer.int',sK9)))),
  inference(cnf_transformation,[],[f153])).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 318
% Passive clauses: 2064
% Generated clauses: 8537
% Final active clauses: 213
% Final passive clauses: 787
% Input formulas: 45
% Initial clauses: 152
% 
% Duplicate literals: 95
% Trivial inequalities: 32
% Fw demodulations: 1668
% Bw demodulations: 359
% Global subsumptions: 48
% 
% Simple tautologies: 90
% Equational tautologies: 120
% Forward subsumptions: 3798
% Backward subsumptions: 121
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 1078
% Unit resulting resolution: 1688
% Factoring: 1
% Forward superposition: 1293
% Backward superposition: 1294
% Self superposition: 68
% Equality resolution: 11
% 
% Split clauses: 150
% Split components: 302
% SAT solver clauses: 3365
% SAT solver unit clauses: 39
% SAT solver binary clauses: 1171
% 
% Sat splits: 150
% Sat splitting refutations: 44
% 
% Memory used [KB]: 8315
% Time elapsed: 0.451 s
% ------------------------------
% ------------------------------
% Success in time 18.712 s
