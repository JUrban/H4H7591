Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f4755,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4754,f224,f404,f402,f400,f4691,f4725])).
fof(f4725,plain,(
  $false | $spl2),
  inference(subsumption_resolution,[],[f402,f227])).
fof(f227,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) != s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),X4),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,X5),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,X6),s('type.list.list'(sK13),X7))),s('type.list.list'(sK14),'const.list.NIL_0')))))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK16),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK17),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.NIL_0'),s('type.list.list'(sK14),sK18))))))) | s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK19),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK20),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,sK21),s('type.list.list'(sK13),sK22))),s('type.list.list'(sK14),'const.list.NIL_0'))))))) | s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK23),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK24),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,sK25),s('type.list.list'(sK13),sK26))),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK27),s('type.list.list'(sK14),sK28)))))))))) & ! [X11,X12,X13,X14,X15,X16] : s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) != s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),X11),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,X12),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,X13),s('type.list.list'(sK13),X14))),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X15),s('type.list.list'(sK14),X16))))))))) & ! [X8,X9,X10] : s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) != s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),X8),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,X9),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.NIL_0'),s('type.list.list'(sK14),X10))))))) & ! [X4,X5,X6,X7] : s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) != s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),X4),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,X5),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,X6),s('type.list.list'(sK13),X7))),s('type.list.list'(sK14),'const.list.NIL_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28])],[f138])).
fof(f138,plain,(
  ? [X0,X1,X2,X3] : ((? [X27,X28,X29] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X27),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X28),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X2),X29))))))) | ? [X23,X24,X25,X26] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X23),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X24),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X25),s('type.list.list'(X1),X26))),s('type.list.list'(X2),'const.list.NIL_0'))))))) | ? [X17,X18,X19,X20,X21,X22] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X17),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X18),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X19),s('type.list.list'(X1),X20))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X21),s('type.list.list'(X2),X22)))))))))) & ! [X11,X12,X13,X14,X15,X16] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) != s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X11),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X12),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X13),s('type.list.list'(X1),X14))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X15),s('type.list.list'(X2),X16))))))))) & ! [X8,X9,X10] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) != s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X8),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X9),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X2),X10))))))) & ! [X4,X5,X6,X7] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) != s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X4),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X5),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X7))),s('type.list.list'(X2),'const.list.NIL_0'))))))))),
  inference(rectify,[],[f98])).
fof(f98,plain,(
  ? [X0,X1,X2,X3] : ((? [X14,X15,X16] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X14),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X15),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X2),X16))))))) | ? [X10,X11,X12,X13] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X10),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X11),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X12),s('type.list.list'(X1),X13))),s('type.list.list'(X2),'const.list.NIL_0'))))))) | ? [X4,X5,X6,X7,X8,X9] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X4),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X5),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X7))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X8),s('type.list.list'(X2),X9)))))))))) & ! [X24,X25,X26,X27,X28,X29] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) != s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X24),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X25),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X26),s('type.list.list'(X1),X27))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X28),s('type.list.list'(X2),X29))))))))) & ! [X21,X22,X23] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) != s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X21),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X22),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X2),X23))))))) & ! [X17,X18,X19,X20] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) != s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X17),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X18),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X19),s('type.list.list'(X1),X20))),s('type.list.list'(X2),'const.list.NIL_0'))))))))),
  inference(flattening,[],[f97])).
fof(f97,plain,(
  ? [X0,X1,X2,X3] : ((? [X14,X15,X16] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X14),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X15),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X2),X16))))))) | ? [X10,X11,X12,X13] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X10),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X11),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X12),s('type.list.list'(X1),X13))),s('type.list.list'(X2),'const.list.NIL_0'))))))) | ? [X4,X5,X6,X7,X8,X9] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X4),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X5),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X7))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X8),s('type.list.list'(X2),X9)))))))))) & (! [X24,X25,X26,X27,X28,X29] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) != s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X24),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X25),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X26),s('type.list.list'(X1),X27))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X28),s('type.list.list'(X2),X29))))))))) & ! [X21,X22,X23] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) != s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X21),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X22),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X2),X23))))))) & ! [X17,X18,X19,X20] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) != s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X17),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X18),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X19),s('type.list.list'(X1),X20))),s('type.list.list'(X2),'const.list.NIL_0')))))))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2,X3] : ((? [X14,X15,X16] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X14),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X15),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X2),X16))))))) | ? [X10,X11,X12,X13] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X10),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X11),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X12),s('type.list.list'(X1),X13))),s('type.list.list'(X2),'const.list.NIL_0'))))))) | ? [X4,X5,X6,X7,X8,X9] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X4),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X5),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X7))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X8),s('type.list.list'(X2),X9)))))))))) => (? [X24,X25,X26,X27,X28,X29] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X24),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X25),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X26),s('type.list.list'(X1),X27))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X28),s('type.list.list'(X2),X29))))))))) | ? [X21,X22,X23] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X21),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X22),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X2),X23))))))) | ? [X17,X18,X19,X20] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X17),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X18),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X19),s('type.list.list'(X1),X20))),s('type.list.list'(X2),'const.list.NIL_0')))))))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1,X2] : ! [X3] : ((? [X14,X15,X16] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X14),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X15),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X2),X16))))))) | ? [X10,X11,X12,X13] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X10),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X11),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X12),s('type.list.list'(X1),X13))),s('type.list.list'(X2),'const.list.NIL_0'))))))) | ? [X4,X5,X6,X7,X8,X9] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X4),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X5),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X7))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X8),s('type.list.list'(X2),X9)))))))))) => (? [X24,X25,X26,X27,X28,X29] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X24),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X25),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X26),s('type.list.list'(X1),X27))),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X28),s('type.list.list'(X2),X29))))))))) | ? [X21,X22,X23] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X21),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X22),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X2),X23))))))) | ? [X17,X18,X19,X20] : s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),X3) = s('type.pair.prod'(fun(X0,fun(X1,fun(X2,X0))),'type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)))),'const.pair.,_2'(s(fun(X0,fun(X1,fun(X2,X0))),X17),s('type.pair.prod'(X0,'type.pair.prod'('type.list.list'(X1),'type.list.list'(X2))),'const.pair.,_2'(s(X0,X18),s('type.pair.prod'('type.list.list'(X1),'type.list.list'(X2)),'const.pair.,_2'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X19),s('type.list.list'(X1),X20))),s('type.list.list'(X2),'const.list.NIL_0')))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9] : ((? [X10,X11,X12] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.NIL_0'),s('type.list.list'(X8),X12))))))) | ? [X10,X11,X13,X14] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X13),s('type.list.list'(X7),X14))),s('type.list.list'(X8),'const.list.NIL_0'))))))) | ? [X10,X11,X15,X16,X17,X12] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X15),s('type.list.list'(X7),X16))),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X17),s('type.list.list'(X8),X12)))))))))) => (? [X10,X11,X15,X16,X17,X12] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X15),s('type.list.list'(X7),X16))),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X17),s('type.list.list'(X8),X12))))))))) | ? [X10,X11,X12] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.NIL_0'),s('type.list.list'(X8),X12))))))) | ? [X10,X11,X13,X14] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X13),s('type.list.list'(X7),X14))),s('type.list.list'(X8),'const.list.NIL_0')))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9] : ((? [X10,X11,X12] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.NIL_0'),s('type.list.list'(X8),X12))))))) | ? [X10,X11,X13,X14] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X13),s('type.list.list'(X7),X14))),s('type.list.list'(X8),'const.list.NIL_0'))))))) | ? [X10,X11,X15,X16,X17,X12] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X15),s('type.list.list'(X7),X16))),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X17),s('type.list.list'(X8),X12)))))))))) => (? [X10,X11,X15,X16,X17,X12] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X15),s('type.list.list'(X7),X16))),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X17),s('type.list.list'(X8),X12))))))))) | ? [X10,X11,X12] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.NIL_0'),s('type.list.list'(X8),X12))))))) | ? [X10,X11,X13,X14] : s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),X9) = s('type.pair.prod'(fun(X6,fun(X7,fun(X8,X6))),'type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)))),'const.pair.,_2'(s(fun(X6,fun(X7,fun(X8,X6))),X10),s('type.pair.prod'(X6,'type.pair.prod'('type.list.list'(X7),'type.list.list'(X8))),'const.pair.,_2'(s(X6,X11),s('type.pair.prod'('type.list.list'(X7),'type.list.list'(X8)),'const.pair.,_2'(s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X13),s('type.list.list'(X7),X14))),s('type.list.list'(X8),'const.list.NIL_0')))))))))),
  file('thm.list.list_2|49||48|_prove_ltb','thm.list.list_2|49||48|_prove_ltb')).
fof(f4691,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f400,f226])).
fof(f226,plain,(
  ( ! [X10,X8,X9] : (s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) != s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),X8),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,X9),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.NIL_0'),s('type.list.list'(sK14),X10)))))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f400,plain,(
  s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK16),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK17),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.NIL_0'),s('type.list.list'(sK14),sK18))))))) | $spl0),
  inference(cnf_transformation,[],[f400_D])).
fof(f400_D,plain,(
  s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK16),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK17),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.NIL_0'),s('type.list.list'(sK14),sK18))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f402,plain,(
  s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK19),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK20),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,sK21),s('type.list.list'(sK13),sK22))),s('type.list.list'(sK14),'const.list.NIL_0'))))))) | $spl2),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK19),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK20),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,sK21),s('type.list.list'(sK13),sK22))),s('type.list.list'(sK14),'const.list.NIL_0'))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f404,plain,(
  s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK23),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK24),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,sK25),s('type.list.list'(sK13),sK26))),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK27),s('type.list.list'(sK14),sK28))))))))) | $spl4),
  inference(cnf_transformation,[],[f404_D])).
fof(f404_D,plain,(
  s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK23),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK24),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,sK25),s('type.list.list'(sK13),sK26))),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK27),s('type.list.list'(sK14),sK28))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f224,plain,(
  s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK23),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK24),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,sK25),s('type.list.list'(sK13),sK26))),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,sK27),s('type.list.list'(sK14),sK28))))))))) | s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK19),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK20),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,sK21),s('type.list.list'(sK13),sK22))),s('type.list.list'(sK14),'const.list.NIL_0'))))))) | s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) = s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),sK16),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,sK17),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.NIL_0'),s('type.list.list'(sK14),sK18)))))))),
  inference(cnf_transformation,[],[f139])).
fof(f4754,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f404,f225])).
fof(f225,plain,(
  ( ! [X14,X12,X15,X13,X11,X16] : (s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),sK15) != s('type.pair.prod'(fun(sK12,fun(sK13,fun(sK14,sK12))),'type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)))),'const.pair.,_2'(s(fun(sK12,fun(sK13,fun(sK14,sK12))),X11),s('type.pair.prod'(sK12,'type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14))),'const.pair.,_2'(s(sK12,X12),s('type.pair.prod'('type.list.list'(sK13),'type.list.list'(sK14)),'const.pair.,_2'(s('type.list.list'(sK13),'const.list.CONS_2'(s(sK13,X13),s('type.list.list'(sK13),X14))),s('type.list.list'(sK14),'const.list.CONS_2'(s(sK14,X15),s('type.list.list'(sK14),X16)))))))))) )),
  inference(cnf_transformation,[],[f139])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 374
% Passive clauses: 1551
% Generated clauses: 4524
% Final active clauses: 374
% Final passive clauses: 989
% Input formulas: 37
% Initial clauses: 171
% 
% Duplicate literals: 153
% Trivial inequalities: 29
% Fw subsumption resolutions: 293
% 
% Simple tautologies: 145
% Equational tautologies: 30
% Forward subsumptions: 2328
% 
% Binary resolution: 2810
% Factoring: 772
% Forward superposition: 174
% Backward superposition: 59
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 101
% Split components: 204
% SAT solver clauses: 193
% SAT solver unit clauses: 9
% SAT solver binary clauses: 44
% SAT solver learnt clauses: 1
% 
% Sat splits: 101
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 192
% TWLsolver calls for satisfiability: 164
% 
% Memory used [KB]: 2558
% Time elapsed: 0.111 s
% ------------------------------
% ------------------------------
% Success in time 0.113 s
