Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.real
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.real
% SZS output start Proof for thm.real
fof(f1089,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1088,f265,f479,f477,f1007,f264,f478,f476])).
fof(f476,plain,(
  s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK13))) | $spl0),
  inference(cnf_transformation,[],[f476_D])).
fof(f476_D,plain,(
  s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f478,plain,(
  s('type.realax.real',sK12) = s('type.realax.real',sK13) | $spl2),
  inference(cnf_transformation,[],[f478_D])).
fof(f478_D,plain,(
  s('type.realax.real',sK12) = s('type.realax.real',sK13) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f264,plain,(
  s('type.realax.real',sK12) = s('type.realax.real',sK13) | s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK13)))),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  (s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK13))) | s('type.realax.real',sK12) = s('type.realax.real',sK13)) & (s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))) != s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK13))) | s('type.realax.real',sK12) != s('type.realax.real',sK13))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f166])).
fof(f166,plain,(
  ? [X0,X1] : ((s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X0))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X1))) | s('type.realax.real',X0) = s('type.realax.real',X1)) & (s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X0))) != s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X1))) | s('type.realax.real',X0) != s('type.realax.real',X1)))),
  inference(nnf_transformation,[],[f123])).
fof(f123,plain,(
  ? [X0,X1] : (s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X0))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X1))) <~> s('type.realax.real',X0) = s('type.realax.real',X1))),
  inference(ennf_transformation,[],[f53])).
fof(f53,plain,(
  ~! [X0,X1] : (s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X0))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X1))) <=> s('type.realax.real',X0) = s('type.realax.real',X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X6))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X7))) <=> s('type.realax.real',X6) = s('type.realax.real',X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X6))) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X7))) <=> s('type.realax.real',X6) = s('type.realax.real',X7))),
  file('thm.real.REAL_INV_INJ','thm.real.REAL_INV_INJ')).
fof(f1007,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f1006,f479])).
fof(f1006,plain,(
  s('type.realax.real',sK12) = s('type.realax.real',sK13) | $spl0),
  inference(forward_demodulation,[],[f1005,f273])).
fof(f273,plain,(
  ( ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X0)))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : s('type.realax.real',X0) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X0)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6] : s('type.realax.real',X6) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.realax.inv_1'(s('type.realax.real',X6)))))),
  file('thm.real.REAL_INV_INJ','thm.real.REAL_INV_INV')).
fof(f1005,plain,(
  s('type.realax.real',sK13) = s('type.realax.real','const.realax.inv_1'(s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))))) | $spl0),
  inference(superposition,[],[f273,f476])).
fof(f477,plain,(
  s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))) != s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK13))) | $spl1),
  inference(cnf_transformation,[],[f477_D])).
fof(f477_D,plain,(
  s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))) != s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK13))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f479,plain,(
  s('type.realax.real',sK12) != s('type.realax.real',sK13) | $spl3),
  inference(cnf_transformation,[],[f479_D])).
fof(f479_D,plain,(
  s('type.realax.real',sK12) != s('type.realax.real',sK13) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f265,plain,(
  s('type.realax.real',sK12) != s('type.realax.real',sK13) | s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))) != s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK13)))),
  inference(cnf_transformation,[],[f167])).
fof(f1088,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f1087])).
fof(f1087,plain,(
  s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))) != s('type.realax.real','const.realax.inv_1'(s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f477,f478])).
% SZS output end Proof for thm.real
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 127
% Passive clauses: 257
% Generated clauses: 820
% Final active clauses: 125
% Final passive clauses: 103
% Input formulas: 51
% Initial clauses: 205
% 
% Duplicate literals: 23
% Trivial inequalities: 2
% Fw subsumption resolutions: 39
% Fw demodulations: 2
% 
% Simple tautologies: 96
% Equational tautologies: 3
% Forward subsumptions: 371
% 
% Binary resolution: 434
% Factoring: 92
% Forward superposition: 2
% Backward superposition: 1
% Self superposition: 1
% Equality resolution: 3
% 
% Split clauses: 45
% Split components: 91
% SAT solver clauses: 56
% SAT solver unit clauses: 6
% SAT solver binary clauses: 30
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 45
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 54
% TWLsolver calls for satisfiability: 23
% 
% Memory used [KB]: 895
% Time elapsed: 0.024 s
% ------------------------------
% ------------------------------
% Success in time 0.027 s
