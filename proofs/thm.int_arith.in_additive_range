Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f19030,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f19029,f81,f129,f128,f126,f77,f75,f125,f2200,f2177,f2800,f123,f141,f2203,f80,f131,f76,f135,f2827,f2829,f2887,f138,f2889,f142,f84,f137,f78,f133,f127])).
fof(f127,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) | $spl2),
  inference(cnf_transformation,[],[f127_D])).
fof(f127_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f133,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | $spl8),
  inference(cnf_transformation,[],[f133_D])).
fof(f133_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f78,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | (s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) | ! [X3] : (s('type.integer.int',sK2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',sK1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f57])).
fof(f57,plain,(
  ? [X0,X1,X2] : (((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ? [X4] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X4))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X4),s('type.integer.int',X1)))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) | ! [X3] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))))),
  inference(rectify,[],[f56])).
fof(f56,plain,(
  ? [X0,X1,X2] : (((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ? [X3] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) | ! [X3] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ? [X0,X1,X2] : (((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ? [X3] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ! [X3] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))))),
  inference(nnf_transformation,[],[f51])).
fof(f51,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) <~> ? [X3] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) <=> ? [X3] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X3))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X8)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))) <=> ? [X9] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X9))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int',X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X8)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))) <=> ? [X9] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X9))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X9),s('type.integer.int',X7))))))),
  file('thm.int_arith.in_additive_range','thm.int_arith.in_additive_range')).
fof(f137,plain,(
  ~p(s(bool,'F_0')) | $spl13),
  inference(cnf_transformation,[],[f137_D])).
fof(f137_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f84,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.int_arith.in_additive_range',aHL_FALSITY)).
fof(f142,plain,(
  $false | ($spl13 | $spl14)),
  inference(resolution,[],[f138,f137])).
fof(f2889,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | $spl66),
  inference(cnf_transformation,[],[f2889_D])).
fof(f2889_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f138,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl14),
  inference(cnf_transformation,[],[f138_D])).
fof(f138_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2887,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) ) | $spl2),
  inference(subsumption_resolution,[],[f2877,f87])).
fof(f87,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.int_arith.in_additive_range','thm.bool.EQ_CLAUSES|split|0')).
fof(f2877,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) ) | $spl2),
  inference(superposition,[],[f127,f156])).
fof(f156,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f86,f86])).
fof(f86,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.int_arith.in_additive_range',aHL_BOOL_CASES)).
fof(f2829,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) | $spl62),
  inference(cnf_transformation,[],[f2829_D])).
fof(f2829_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f2827,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) ) | $spl0),
  inference(subsumption_resolution,[],[f2819,f87])).
fof(f2819,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) ) | $spl0),
  inference(superposition,[],[f125,f156])).
fof(f135,plain,(
  s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) | $spl10),
  inference(cnf_transformation,[],[f135_D])).
fof(f135_D,plain,(
  s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f76,plain,(
  s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))),
  inference(cnf_transformation,[],[f58])).
fof(f131,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) | $spl6),
  inference(cnf_transformation,[],[f131_D])).
fof(f131_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f80,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))),
  inference(cnf_transformation,[],[f58])).
fof(f2203,plain,(
  $false | ($spl1 | $spl8 | $spl10 | $spl18)),
  inference(subsumption_resolution,[],[f2202,f141])).
fof(f2202,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f126,f348])).
fof(f348,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) | ($spl8 | $spl10)),
  inference(forward_demodulation,[],[f331,f150])).
fof(f150,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3))) | $spl8),
  inference(resolution,[],[f133,f88])).
fof(f88,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f59])).
fof(f331,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3))) | $spl10),
  inference(superposition,[],[f114,f135])).
fof(f114,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X8,X14] : s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X14)))))),
  file('thm.int_arith.in_additive_range','thm.integer.INT_LT_ADDR')).
fof(f141,plain,(
  p(s(bool,'T_0')) | $spl18),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f123,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f110])).
fof(f110,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X13] : ! [X8] : (s(X13,X8) = s(X13,X8) <=> p(s(bool,'T_0')))),
  file('thm.int_arith.in_additive_range','thm.bool.REFL_CLAUSE')).
fof(f2800,plain,(
  $false | ($spl4 | $spl6 | $spl8 | $spl10 | $spl18)),
  inference(subsumption_resolution,[],[f2799,f141])).
fof(f2799,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl6 | $spl8 | $spl10 | $spl18)),
  inference(forward_demodulation,[],[f2798,f150])).
fof(f2798,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | ($spl4 | $spl6 | $spl10 | $spl18)),
  inference(subsumption_resolution,[],[f2797,f141])).
fof(f2797,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | ($spl4 | $spl6 | $spl10)),
  inference(forward_demodulation,[],[f2785,f145])).
fof(f145,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))) | $spl6),
  inference(resolution,[],[f88,f131])).
fof(f2785,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | ($spl4 | $spl10)),
  inference(trivial_inequality_removal,[],[f2780])).
fof(f2780,plain,(
  s('type.integer.int',sK2) != s('type.integer.int',sK2) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | ($spl4 | $spl10)),
  inference(superposition,[],[f129,f135])).
fof(f2177,plain,(
  $false | ($spl3 | $spl6 | $spl10)),
  inference(subsumption_resolution,[],[f2137,f145])).
fof(f2137,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1))) | ($spl3 | $spl10)),
  inference(superposition,[],[f208,f435])).
fof(f435,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',X0))) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',X0)))))) ) | $spl10),
  inference(superposition,[],[f120,f135])).
fof(f120,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X8,X14,X15] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X14),s('type.integer.int',X15))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X14))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X15)))))),
  file('thm.int_arith.in_additive_range','thm.integer.INT_LE_LADD')).
fof(f208,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))) | $spl3),
  inference(resolution,[],[f128,f87])).
fof(f2200,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))) | ($spl2 | $spl10)),
  inference(forward_demodulation,[],[f127,f435])).
fof(f125,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) | $spl0),
  inference(cnf_transformation,[],[f125_D])).
fof(f125_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f75,plain,(
  s('type.integer.int',sK2) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))))),
  inference(cnf_transformation,[],[f58])).
fof(f77,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))))),
  inference(cnf_transformation,[],[f58])).
fof(f126,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) | $spl1),
  inference(cnf_transformation,[],[f126_D])).
fof(f126_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f128,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) | $spl3),
  inference(cnf_transformation,[],[f128_D])).
fof(f128_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f129,plain,(
  ( ! [X3] : (s('type.integer.int',sK2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) | $spl4),
  inference(cnf_transformation,[],[f129_D])).
fof(f129_D,plain,(
  ( ! [X3] : (s('type.integer.int',sK2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f81,plain,(
  ( ! [X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | s('type.integer.int',sK2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f19029,plain,(
  $false | ($spl4 | $spl18 | $spl62 | $spl66)),
  inference(subsumption_resolution,[],[f19028,f141])).
fof(f19028,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl18 | $spl62 | $spl66)),
  inference(forward_demodulation,[],[f19027,f2829])).
fof(f19027,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) | ($spl4 | $spl18 | $spl66)),
  inference(subsumption_resolution,[],[f19026,f141])).
fof(f19026,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) | ($spl4 | $spl66)),
  inference(forward_demodulation,[],[f19009,f2889])).
fof(f19009,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK2)))) | $spl4),
  inference(equality_resolution,[],[f18667])).
fof(f18667,plain,(
  ( ! [X2] : (s('type.integer.int',sK2) != s('type.integer.int',X2) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',X2))))) ) | $spl4),
  inference(forward_demodulation,[],[f2808,f335])).
fof(f335,plain,(
  ( ! [X6,X7] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X6)))))) )),
  inference(superposition,[],[f114,f113])).
fof(f113,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X8,X14] : s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X14)))))),
  file('thm.int_arith.in_additive_range','thm.integer.INT_SUB_ADD2')).
fof(f2808,plain,(
  ( ! [X2] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))) | s('type.integer.int',sK2) != s('type.integer.int',X2) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',sK0))))))) ) | $spl4),
  inference(forward_demodulation,[],[f2807,f112])).
fof(f112,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X14,X8] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X14))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X14),s('type.integer.int',X8)))),
  file('thm.int_arith.in_additive_range','thm.integer.INT_ADD_SYM')).
fof(f2807,plain,(
  ( ! [X2] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK0)))))) | s('type.integer.int',sK2) != s('type.integer.int',X2) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',sK0))))))) ) | $spl4),
  inference(forward_demodulation,[],[f2784,f122])).
fof(f122,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X8,X14,X15] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X15),s('type.integer.int',X14))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X14))),s('type.integer.int',X15)))),
  file('thm.int_arith.in_additive_range','thm.integer.INT_LE_SUB_RADD')).
fof(f2784,plain,(
  ( ! [X2] : (s('type.integer.int',sK2) != s('type.integer.int',X2) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',sK0))),s('type.integer.int',sK1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',sK0))))))) ) | $spl4),
  inference(superposition,[],[f129,f113])).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 173
% Passive clauses: 2546
% Generated clauses: 18724
% Final active clauses: 129
% Final passive clauses: 2047
% Input formulas: 24
% Initial clauses: 48
% 
% Duplicate literals: 767
% Trivial inequalities: 235
% Fw subsumption resolutions: 2288
% Fw demodulations: 3344
% Bw demodulations: 29
% 
% Simple tautologies: 385
% Equational tautologies: 42
% Forward subsumptions: 8609
% Fw demodulations to eq. taut.: 13
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 336
% Factoring: 2
% Forward superposition: 6885
% Backward superposition: 4510
% Self superposition: 101
% Equality factoring: 76
% Equality resolution: 25
% 
% Split clauses: 284
% Split components: 581
% SAT solver clauses: 685
% SAT solver unit clauses: 10
% SAT solver binary clauses: 166
% SAT solver learnt clauses: 4
% SAT solver learnt literals: 6
% 
% Sat splits: 284
% Sat splitting refutations: 49
% 
% TWLsolver clauses: 676
% TWLsolver calls for satisfiability: 135
% 
% Memory used [KB]: 8059
% Time elapsed: 0.354 s
% ------------------------------
% ------------------------------
% Success in time 0.36 s
