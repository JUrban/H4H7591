Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (101326)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 699
% Passive clauses: 10012
% Generated clauses: 22465
% Final active clauses: 696
% Final passive clauses: 8938
% Input formulas: 69
% Initial clauses: 232
% 
% Duplicate literals: 379
% Trivial inequalities: 41
% Fw subsumption resolutions: 2066
% Fw demodulations: 779
% Bw demodulations: 3
% 
% Simple tautologies: 268
% Equational tautologies: 60
% Forward subsumptions: 8551
% 
% Binary resolution: 10657
% Factoring: 1278
% Forward superposition: 3335
% Backward superposition: 3432
% Self superposition: 41
% Equality factoring: 26
% Equality resolution: 20
% 
% Split clauses: 378
% Split components: 782
% SAT solver clauses: 693
% SAT solver unit clauses: 18
% SAT solver binary clauses: 141
% 
% Sat splits: 378
% 
% TWLsolver clauses: 693
% TWLsolver calls for satisfiability: 383
% 
% Memory used [KB]: 11385
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f4152,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4150,f340,f599,f746,f749,f338,f597,f358,f610,f3173,f3187,f420,f636,f4033,f4034,f600,f602,f427,f644,f758,f763,f339,f595,f362,f612])).
fof(f612,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f612_D])).
fof(f612_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f362,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f236])).
fof(f236,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X17] : (s(bool,'F_0') = s(bool,X17) <=> ~p(s(bool,X17)))),
  file('thm.rich_list.IS_PREFIX_APPEND|49|','thm.bool.EQ_CLAUSES|split|3')).
fof(f595,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15)))) | $spl1),
  inference(cnf_transformation,[],[f595_D])).
fof(f595_D,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f339,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))),
  inference(cnf_transformation,[],[f231])).
fof(f231,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK14))),s('type.list.list'(sK12),sK15)))) & ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f179])).
fof(f179,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3)))) & ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3)))) => p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2,X3] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3)))) => p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)))) => p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),X9)))) => p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X9)))))),
  file('thm.rich_list.IS_PREFIX_APPEND|49|','thm.rich_list.IS_PREFIX_APPEND|49|')).
fof(f763,plain,(
  s(bool,'F_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))) | $spl250),
  inference(cnf_transformation,[],[f763_D])).
fof(f763_D,plain,(
  s(bool,'F_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f758,plain,(
  s(bool,'F_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK15))) | ($spl1 | $spl18)),
  inference(resolution,[],[f612,f595])).
fof(f644,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) ) | $spl66),
  inference(cnf_transformation,[],[f644_D])).
fof(f644_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f427,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) )),
  inference(cnf_transformation,[],[f197])).
fof(f197,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2)))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f196])).
fof(f196,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2))))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1)))))),
  inference(ennf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2))))) => p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f144])).
fof(f144,plain,(
  ! [X0] : ! [X1,X2,X3] : ((p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X2))))) => p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X13,X14,X16] : ((p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X14),s('type.list.list'(X6),X13)))) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X14))))) => p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X13)))))),
  file('thm.rich_list.IS_PREFIX_APPEND|49|','thm.rich_list.IS_PREFIX_TRANS')).
fof(f602,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f602_D])).
fof(f602_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f600,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f343,f340])).
fof(f343,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f232])).
fof(f232,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f27])).
fof(f27,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.rich_list.IS_PREFIX_APPEND|49|','thm.bool.NOT_CLAUSES|split|2')).
fof(f4034,plain,(
  ( ! [X1] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),X1),s('type.list.list'(sK12),sK15))))) ) | $spl1792),
  inference(cnf_transformation,[],[f4034_D])).
fof(f4034_D,plain,(
  ( ! [X1] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),X1),s('type.list.list'(sK12),sK15))))) ) <=> ~$spl1792),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1792])])).
fof(f4033,plain,(
  ( ! [X1] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),X1),s('type.list.list'(sK12),sK15))))) ) | ($spl7 | $spl66 | $spl250)),
  inference(subsumption_resolution,[],[f4000,f602])).
fof(f4000,plain,(
  ( ! [X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),X1),s('type.list.list'(sK12),sK15))))) ) | ($spl66 | $spl250)),
  inference(superposition,[],[f644,f763])).
fof(f636,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) ) | $spl50),
  inference(cnf_transformation,[],[f636_D])).
fof(f636_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f420,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))) )),
  inference(cnf_transformation,[],[f272])).
fof(f272,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),sK22(X2,X1,X0))))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK22])],[f271])).
fof(f271,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ? [X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4)))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(rectify,[],[f270])).
fof(f270,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(nnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) <=> ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) <=> ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X10,X11] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X10)))) <=> ? [X12] : s('type.list.list'(X6),X10) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X11),s('type.list.list'(X6),X12))))),
  file('thm.rich_list.IS_PREFIX_APPEND|49|','thm.rich_list.IS_PREFIX_APPEND')).
fof(f3187,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))) ) | $spl1292),
  inference(cnf_transformation,[],[f3187_D])).
fof(f3187_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))) ) <=> ~$spl1292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1292])])).
fof(f3173,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))) ) | $spl50),
  inference(equality_resolution,[],[f636])).
fof(f610,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f610_D])).
fof(f610_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f358,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f234])).
fof(f234,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X17] : (s(bool,'T_0') = s(bool,X17) <=> p(s(bool,X17)))),
  file('thm.rich_list.IS_PREFIX_APPEND|49|','thm.bool.EQ_CLAUSES|split|0')).
fof(f597,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK14))),s('type.list.list'(sK12),sK15)))) | $spl2),
  inference(cnf_transformation,[],[f597_D])).
fof(f597_D,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK14))),s('type.list.list'(sK12),sK15)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f338,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK14))),s('type.list.list'(sK12),sK15))))),
  inference(cnf_transformation,[],[f231])).
fof(f749,plain,(
  s(bool,'T_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK14))),s('type.list.list'(sK12),sK15))) | $spl246),
  inference(cnf_transformation,[],[f749_D])).
fof(f749_D,plain,(
  s(bool,'T_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK14))),s('type.list.list'(sK12),sK15))) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f746,plain,(
  s(bool,'T_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK14))),s('type.list.list'(sK12),sK15))) | ($spl2 | $spl14)),
  inference(resolution,[],[f610,f597])).
fof(f599,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f599_D])).
fof(f599_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f340,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.IS_PREFIX_APPEND|49|',aHL_TRUTH)).
fof(f4150,plain,(
  $false | ($spl4 | $spl246 | $spl1292 | $spl1792)),
  inference(subsumption_resolution,[],[f4149,f3187])).
fof(f4149,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK14)))))) | ($spl4 | $spl246 | $spl1792)),
  inference(subsumption_resolution,[],[f4094,f599])).
fof(f4094,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK13),s('type.list.list'(sK12),sK14)))))) | ($spl246 | $spl1792)),
  inference(superposition,[],[f4034,f749])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 249
% Passive clauses: 888
% Generated clauses: 3756
% Final active clauses: 245
% Final passive clauses: 637
% Input formulas: 69
% Initial clauses: 232
% 
% Duplicate literals: 80
% Trivial inequalities: 4
% Fw subsumption resolutions: 242
% Fw demodulations: 170
% Bw demodulations: 6
% Condensations: 40
% Global subsumptions: 18
% 
% Simple tautologies: 192
% Equational tautologies: 8
% Forward subsumptions: 1068
% 
% Binary resolution: 1180
% Factoring: 58
% Forward superposition: 575
% Backward superposition: 245
% Self superposition: 9
% Equality factoring: 2
% Equality resolution: 4
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 1305
% SAT solver unit clauses: 240
% SAT solver binary clauses: 73
% SAT solver learnt clauses: 37
% SAT solver learnt literals: 10
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1232
% TWLsolver calls for satisfiability: 1809
% 
% Memory used [KB]: 4605
% Time elapsed: 0.114 s
% ------------------------------
% ------------------------------
% Success in time 0.722 s
