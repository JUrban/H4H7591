Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.list
% (94750)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 158
% Passive clauses: 3165
% Generated clauses: 14126
% Final active clauses: 152
% Final passive clauses: 2883
% Input formulas: 21
% Initial clauses: 49
% 
% Duplicate literals: 586
% Trivial inequalities: 333
% Fw subsumption resolutions: 1688
% Fw demodulations: 2302
% Bw demodulations: 2
% 
% Simple tautologies: 345
% Equational tautologies: 22
% Forward subsumptions: 4949
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 340
% Forward superposition: 5503
% Backward superposition: 2984
% Self superposition: 108
% Equality factoring: 46
% Equality resolution: 46
% 
% Split clauses: 450
% Split components: 910
% SAT solver clauses: 843
% SAT solver unit clauses: 23
% SAT solver binary clauses: 218
% 
% Sat splits: 450
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 843
% TWLsolver calls for satisfiability: 176
% 
% Memory used [KB]: 11513
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (94771)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 96
% Passive clauses: 913
% Generated clauses: 9818
% Final active clauses: 91
% Final passive clauses: 809
% Input formulas: 21
% Initial clauses: 49
% 
% Duplicate literals: 357
% Trivial inequalities: 94
% Fw subsumption resolutions: 836
% Fw demodulations: 1597
% Bw demodulations: 10
% Condensations: 964
% 
% Simple tautologies: 156
% Equational tautologies: 19
% Forward subsumptions: 3403
% Fw demodulations to eq. taut.: 4
% 
% Binary resolution: 76
% Forward superposition: 3318
% Backward superposition: 1430
% Self superposition: 106
% Equality factoring: 40
% Equality resolution: 28
% 
% Split clauses: 45
% Split components: 99
% SAT solver clauses: 1453
% SAT solver unit clauses: 47
% SAT solver binary clauses: 32
% 
% Sat splits: 45
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1453
% TWLsolver calls for satisfiability: 414
% 
% Memory used [KB]: 12025
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% (94786)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 693
% Passive clauses: 12825
% Generated clauses: 70721
% Final active clauses: 161
% Final passive clauses: 540
% Input formulas: 21
% Initial clauses: 49
% Discarded non-redundant clauses: 14094
% 
% Duplicate literals: 3127
% Trivial inequalities: 296
% Fw subsumption resolutions: 2141
% Fw demodulations: 11199
% Bw demodulations: 3070
% Condensations: 4439
% Global subsumptions: 561
% 
% Simple tautologies: 324
% Equational tautologies: 475
% Forward subsumptions: 32425
% Fw demodulations to eq. taut.: 9
% Bw demodulations to eq. taut.: 145
% 
% Unit resulting resolution: 7086
% Forward superposition: 18829
% Backward superposition: 16536
% Self superposition: 334
% Equality factoring: 163
% Equality resolution: 50
% 
% Split clauses: 149
% Split components: 319
% SAT solver clauses: 14521
% SAT solver unit clauses: 1412
% SAT solver binary clauses: 5020
% 
% Sat splits: 149
% Sat splitting refutations: 834
% 
% Memory used [KB]: 124987
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.list
% (95027)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1467
% Passive clauses: 29549
% Generated clauses: 107277
% Final active clauses: 1386
% Final passive clauses: 24614
% Input formulas: 21
% Initial clauses: 48
% 
% Selected by SInE selection: 20
% SInE iterations: 1
% 
% Duplicate literals: 2436
% Trivial inequalities: 3063
% Fw subsumption resolutions: 9675
% Fw demodulations: 4878
% Bw demodulations: 53
% 
% Simple tautologies: 3533
% Equational tautologies: 3766
% Forward subsumptions: 45269
% 
% Binary resolution: 50089
% Factoring: 1
% Forward superposition: 24951
% Backward superposition: 8409
% Self superposition: 73
% Equality factoring: 26
% Equality resolution: 294
% 
% Split clauses: 7243
% Split components: 15756
% SAT solver clauses: 7362
% SAT solver unit clauses: 7
% SAT solver binary clauses: 2777
% 
% Sat splits: 7243
% Sat splitting refutations: 13
% 
% Memory used [KB]: 44007
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.list
% (95162)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 154
% Passive clauses: 3272
% Generated clauses: 12064
% Final active clauses: 148
% Final passive clauses: 3064
% Input formulas: 21
% Initial clauses: 49
% 
% Duplicate literals: 195
% Trivial inequalities: 448
% Fw subsumption resolutions: 750
% Fw demodulations: 408
% Bw demodulations: 20
% Global subsumptions: 16
% 
% Simple tautologies: 130
% Equational tautologies: 60
% Forward subsumptions: 6295
% Fw demodulations to eq. taut.: 4
% 
% Unit resulting resolution: 1411
% Factoring: 14
% Forward superposition: 4682
% Backward superposition: 3894
% Self superposition: 90
% Equality factoring: 14
% Equality resolution: 37
% 
% Split clauses: 21
% Split components: 43
% SAT solver clauses: 3555
% SAT solver unit clauses: 469
% SAT solver binary clauses: 363
% 
% Sat splits: 21
% Sat splitting refutations: 243
% 
% Memory used [KB]: 14967
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.list
% (95201)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 445
% Passive clauses: 4123
% Generated clauses: 21252
% Final active clauses: 311
% Final passive clauses: 2520
% Input formulas: 21
% Initial clauses: 49
% 
% Duplicate literals: 466
% Trivial inequalities: 441
% Fw subsumption resolutions: 1519
% Bw subsumption resolutions: 84
% Fw demodulations: 2054
% Bw demodulations: 13
% Condensations: 1723
% 
% Simple tautologies: 885
% Equational tautologies: 41
% Forward subsumptions: 10024
% Backward subsumptions: 968
% 
% Binary resolution: 7842
% Factoring: 4
% Forward superposition: 5846
% Backward superposition: 1192
% Self superposition: 20
% Equality resolution: 54
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 4128
% SAT solver unit clauses: 1
% SAT solver binary clauses: 28
% 
% Sat splits: 3
% 
% Memory used [KB]: 19829
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 119 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.list
% (95234)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 139
% Passive clauses: 2202
% Generated clauses: 7757
% Final active clauses: 91
% Final passive clauses: 1889
% Input formulas: 21
% Initial clauses: 49
% 
% Duplicate literals: 92
% Trivial inequalities: 226
% Fw demodulations: 1115
% Bw demodulations: 15
% Global subsumptions: 340
% 
% Simple tautologies: 111
% Equational tautologies: 45
% Forward subsumptions: 2927
% Backward subsumptions: 163
% 
% Binary resolution: 131
% Unit resulting resolution: 1549
% Forward superposition: 2669
% Backward superposition: 1359
% Self superposition: 56
% Equality factoring: 26
% Equality resolution: 38
% 
% Split clauses: 72
% Split components: 153
% SAT solver clauses: 3390
% SAT solver unit clauses: 400
% SAT solver binary clauses: 943
% 
% Sat splits: 72
% Sat splitting refutations: 461
% 
% Memory used [KB]: 22387
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% remaining time: 109 next slice time: 85
lrs+1_5:4_cond=on:fsr=off:fde=none:gs=on:gsem=on:lwlo=on:nm=64:nwc=1:stl=60:sos=all:spl=off_80 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f36169,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f36122])).
fof(f36122,plain,(
  s(bool,'F_0') != s(bool,'F_0')),
  inference(resolution,[],[f35899,f92])).
fof(f92,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X15] : (s(bool,'F_0') = s(bool,X15) <=> ~p(s(bool,X15)))),
  file('thm.list.LIST_REL_MAP2','thm.bool.EQ_CLAUSES|split|2')).
fof(f35899,plain,(
  p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f35898,f707])).
fof(f707,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(global_subsumption,[],[f697,f651,f257,f179,f196])).
fof(f196,plain,(
  s(bool,'T_0') != s(bool,'F_0') | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))))),
  inference(global_subsumption,[],[f189,f195])).
fof(f195,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))))),
  inference(trivial_inequality_removal,[],[f187])).
fof(f187,plain,(
  s(bool,'F_0') != s(bool,'F_0') | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))))),
  inference(superposition,[],[f177,f93])).
fof(f93,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f67])).
fof(f177,plain,(
  s(bool,'F_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))))),
  inference(superposition,[],[f81,f93])).
fof(f81,plain,(
  s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f53])).
fof(f53,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X0,bool)),X6),s('type.list.list'(X1),X4),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X5),s('type.list.list'(X2),X3))))) != s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X2,bool)),'_dst_x00x10x01_3'(s(fun(X1,fun(X0,bool)),X6),s(fun(X1,X1),'_i_0_0'),s(fun(X2,X0),X5))),s('type.list.list'(X1),X4),s('type.list.list'(X2),X3)))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X0,bool)),X6),s('type.list.list'(X1),X4),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X5),s('type.list.list'(X2),X3))))) = s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X2,bool)),'_dst_x00x10x01_3'(s(fun(X1,fun(X0,bool)),X6),s(fun(X1,X1),'_i_0_0'),s(fun(X2,X0),X5))),s('type.list.list'(X1),X4),s('type.list.list'(X2),X3)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6] : s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X0,bool)),X6),s('type.list.list'(X1),X4),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X2,X0),X5),s('type.list.list'(X2),X3))))) = s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X2,bool)),'_dst_x00x10x01_3'(s(fun(X1,fun(X0,bool)),X6),s(fun(X1,X1),'_i_0_0'),s(fun(X2,X0),X5))),s('type.list.list'(X1),X4),s('type.list.list'(X2),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12] : s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X12),s('type.list.list'(X7),X10),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X8,X6),X11),s('type.list.list'(X8),X9))))) = s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X8,bool)),'_dst_x00x10x01_3'(s(fun(X7,fun(X6,bool)),X12),s(fun(X7,X7),'_i_0_0'),s(fun(X8,X6),X11))),s('type.list.list'(X7),X10),s('type.list.list'(X8),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12] : s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X12),s('type.list.list'(X7),X10),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X8,X6),X11),s('type.list.list'(X8),X9))))) = s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X8,bool)),'_dst_x00x10x01_3'(s(fun(X7,fun(X6,bool)),X12),s(fun(X7,X7),'_i_0_0'),s(fun(X8,X6),X11))),s('type.list.list'(X7),X10),s('type.list.list'(X8),X9)))),
  file('thm.list.LIST_REL_MAP2','thm.list.LIST_REL_MAP2')).
fof(f189,plain,(
  s(bool,'T_0') != s(bool,'F_0') | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))))),
  inference(superposition,[],[f177,f89])).
fof(f89,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X15] : (s(bool,'T_0') = s(bool,X15) <=> p(s(bool,X15)))),
  file('thm.list.LIST_REL_MAP2','thm.bool.EQ_CLAUSES|split|1')).
fof(f179,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(superposition,[],[f81,f89])).
fof(f257,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(global_subsumption,[],[f253,f179,f196])).
fof(f253,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(superposition,[],[f181,f85])).
fof(f85,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.list.LIST_REL_MAP2',aHL_BOOL_CASES)).
fof(f181,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f81,f85])).
fof(f651,plain,(
  s(bool,'F_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(resolution,[],[f193,f90])).
fof(f90,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X15] : (s(bool,'F_0') = s(bool,X15) <=> ~p(s(bool,X15)))),
  file('thm.list.LIST_REL_MAP2','thm.bool.EQ_CLAUSES|split|3')).
fof(f193,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(trivial_inequality_removal,[],[f192])).
fof(f192,plain,(
  s(bool,'F_0') != s(bool,'F_0') | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(superposition,[],[f177,f85])).
fof(f697,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'F_0') | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(sK2,bool)),X1),s('type.list.list'(X0),X2),s('type.list.list'(sK2),sK3))))) )),
  inference(superposition,[],[f552,f93])).
fof(f552,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(sK2,bool)),X8),s('type.list.list'(X6),X7),s('type.list.list'(sK2),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))) )),
  inference(resolution,[],[f495,f86])).
fof(f86,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X15] : (s(bool,'T_0') = s(bool,X15) <=> p(s(bool,X15)))),
  file('thm.list.LIST_REL_MAP2','thm.bool.EQ_CLAUSES|split|0')).
fof(f495,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(sK2,bool)),X2),s('type.list.list'(X0),X1),s('type.list.list'(sK2),sK3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(superposition,[],[f469,f102])).
fof(f102,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X1),X4))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.list.list'(X1),X4))))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8])],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X1),X4))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | ? [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4))))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(rectify,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | ? [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4))))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4))))))))) & ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | ? [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4)))))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(nnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4)))))))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) => p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4)))))))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) => p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4)))))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X7,X6] : ! [X12,X10,X9] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X6,bool)),X12),s('type.list.list'(X7),X10),s('type.list.list'(X6),X9)))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) & ! [X26] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10)))))) => p(s(bool,happ(s(fun(X6,bool),happ(s(fun(X7,fun(X6,bool)),X12),s(X7,'const.list.EL_2'(s('type.num.num',X26),s('type.list.list'(X7),X10))))),s(X6,'const.list.EL_2'(s('type.num.num',X26),s('type.list.list'(X6),X9)))))))))),
  file('thm.list.LIST_REL_MAP2','thm.list.LIST_REL_EL_EQN')).
fof(f469,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(duplicate_literal_removal,[],[f447])).
fof(f447,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f394,f99])).
fof(f99,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3] : s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X7] : ! [X25,X11] : s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X25))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X11),s('type.list.list'(X7),X25)))))),
  file('thm.list.LIST_REL_MAP2','thm.list.LENGTH_MAP')).
fof(f394,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f337,f102])).
fof(f337,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f195,f102])).
fof(f35898,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'F_0')),
  inference(forward_demodulation,[],[f35897,f35514])).
fof(f35514,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))),
  inference(trivial_inequality_removal,[],[f32921])).
fof(f32921,plain,(
  s(bool,'T_0') != s(bool,'T_0') | s(bool,'F_0') = s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))),
  inference(backward_demodulation,[],[f32611,f7930])).
fof(f7930,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | s(bool,'F_0') = s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))),
  inference(resolution,[],[f472,f91])).
fof(f91,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f66])).
fof(f472,plain,(
  ~p(s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(trivial_inequality_removal,[],[f471])).
fof(f471,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) | ~p(s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(backward_demodulation,[],[f469,f232])).
fof(f232,plain,(
  ~p(s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(forward_demodulation,[],[f231,f94])).
fof(f94,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f32])).
fof(f32,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X27] : ! [X28] : s(X27,X28) = s(X27,happ(s(fun(X27,X27),'_i_0_0'),s(X27,X28)))),
  file('thm.list.LIST_REL_MAP2','_i0_ax')).
fof(f231,plain,(
  ~p(s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,happ(s(fun(sK1,sK1),'_i_0_0'),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(forward_demodulation,[],[f198,f137])).
fof(f137,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(fun(X3,X0),'_dst_x0x0x1_3'(s(fun(X1,fun(X4,X0)),X5),s(X1,happ(s(fun(X2,X1),X6),s(X2,X8))),s(fun(X3,X4),X7))) = s(fun(X3,X0),happ(s(fun(X2,fun(X3,X0)),'_dst_x00x10x01_3'(s(fun(X1,fun(X4,X0)),X5),s(fun(X2,X1),X6),s(fun(X3,X4),X7))),s(X2,X8)))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : s(fun(X3,X0),'_dst_x0x0x1_3'(s(fun(X1,fun(X4,X0)),X5),s(X1,happ(s(fun(X2,X1),X6),s(X2,X8))),s(fun(X3,X4),X7))) = s(fun(X3,X0),happ(s(fun(X2,fun(X3,X0)),'_dst_x00x10x01_3'(s(fun(X1,fun(X4,X0)),X5),s(fun(X2,X1),X6),s(fun(X3,X4),X7))),s(X2,X8)))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3,X4] : ! [X5,X6,X7,X8] : s(fun(X3,X0),'_dst_x0x0x1_3'(s(fun(X1,fun(X4,X0)),X5),s(X1,happ(s(fun(X2,X1),X6),s(X2,X8))),s(fun(X3,X4),X7))) = s(fun(X3,X0),happ(s(fun(X2,fun(X3,X0)),'_dst_x00x10x01_3'(s(fun(X1,fun(X4,X0)),X5),s(fun(X2,X1),X6),s(fun(X3,X4),X7))),s(X2,X8)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X29,X31,X27,X30,X35] : ! [X32,X28,X33,X34] : s(fun(X30,X29),'_dst_x0x0x1_3'(s(fun(X31,fun(X35,X29)),X32),s(X31,happ(s(fun(X27,X31),X28),s(X27,X34))),s(fun(X30,X35),X33))) = s(fun(X30,X29),happ(s(fun(X27,fun(X30,X29)),'_dst_x00x10x01_3'(s(fun(X31,fun(X35,X29)),X32),s(fun(X27,X31),X28),s(fun(X30,X35),X33))),s(X27,X34)))),
  file('thm.list.LIST_REL_MAP2','_dst_x00x10x01_ax')).
fof(f198,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | ~p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f179,f105])).
fof(f105,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.list.list'(X1),X4)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f32611,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(global_subsumption,[],[f32073,f651,f32065])).
fof(f32065,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(global_subsumption,[],[f32064,f16501,f18044])).
fof(f18044,plain,(
  p(s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(global_subsumption,[],[f17991,f256])).
fof(f256,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f250])).
fof(f250,plain,(
  s(bool,'T_0') != s(bool,'T_0') | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))))),
  inference(superposition,[],[f181,f89])).
fof(f17991,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))) | p(s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f372,f740])).
fof(f740,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f739])).
fof(f739,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))),
  inference(forward_demodulation,[],[f738,f469])).
fof(f738,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))),
  inference(forward_demodulation,[],[f708,f99])).
fof(f708,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(resolution,[],[f256,f104])).
fof(f104,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f372,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))) | p(s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK2),sK3))))))) )),
  inference(forward_demodulation,[],[f371,f94])).
fof(f371,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,happ(s(fun(sK1,sK1),'_i_0_0'),s(sK1,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK1),sK4))))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK2),sK3)))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))) )),
  inference(forward_demodulation,[],[f338,f137])).
fof(f338,plain,(
  ( ! [X0] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))) | p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s(sK1,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK2),sK3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))) )),
  inference(resolution,[],[f195,f103])).
fof(f103,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X1),X4)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))) )),
  inference(cnf_transformation,[],[f74])).
fof(f16501,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))),
  inference(resolution,[],[f740,f90])).
fof(f32064,plain,(
  ~p(s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))),
  inference(forward_demodulation,[],[f32056,f136])).
fof(f136,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,happ(s(fun(X3,X0),'_dst_x0x0x1_3'(s(fun(X1,fun(X2,X0)),X4),s(X1,X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,X5))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x0x1_3'(s(fun(X1,fun(X2,X0)),X4),s(X1,X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,X5))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x0x1_3'(s(fun(X1,fun(X2,X0)),X4),s(X1,X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,X5))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X29,X30,X31,X27] : ! [X32,X28,X33,X34] : s(X29,happ(s(fun(X27,X29),'_dst_x0x0x1_3'(s(fun(X30,fun(X31,X29)),X32),s(X30,X28),s(fun(X27,X31),X33))),s(X27,X34))) = s(X29,happ(s(fun(X31,X29),happ(s(fun(X30,fun(X31,X29)),X32),s(X30,X28))),s(X31,happ(s(fun(X27,X31),X33),s(X27,X34)))))),
  file('thm.list.LIST_REL_MAP2','_dst_x0x0x1_ax')).
fof(f32056,plain,(
  ~p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK1),sK4))))),s(sK0,happ(s(fun(sK2,sK0),sK5),s(sK2,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK2),sK3)))))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))),
  inference(superposition,[],[f743,f15199])).
fof(f15199,plain,(
  ( ! [X12,X13,X11] : (s(X11,happ(s(fun(sK2,X11),X12),s(sK2,'const.list.EL_2'(s('type.num.num',X13),s('type.list.list'(sK2),sK3))))) = s(X11,'const.list.EL_2'(s('type.num.num',X13),s('type.list.list'(X11),'const.list.MAP_2'(s(fun(sK2,X11),X12),s('type.list.list'(sK2),sK3))))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) )),
  inference(resolution,[],[f497,f91])).
fof(f497,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(X1,happ(s(fun(sK2,X1),X2),s(sK2,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK2),sK3))))) = s(X1,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(X1),'const.list.MAP_2'(s(fun(sK2,X1),X2),s('type.list.list'(sK2),sK3)))))) )),
  inference(superposition,[],[f100,f469])).
fof(f100,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3))))))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3)))))) | ! [X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3)))))) => ! [X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3)))))) => ! [X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6,X7] : ! [X26,X25] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X25)))))) => ! [X11] : s(X6,happ(s(fun(X7,X6),X11),s(X7,'const.list.EL_2'(s('type.num.num',X26),s('type.list.list'(X7),X25))))) = s(X6,'const.list.EL_2'(s('type.num.num',X26),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X11),s('type.list.list'(X7),X25))))))),
  file('thm.list.LIST_REL_MAP2','thm.list.EL_MAP')).
fof(f743,plain,(
  ~p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK1),sK4))))),s(sK0,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f742])).
fof(f742,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | ~p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK1),sK4))))),s(sK0,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))))))),
  inference(forward_demodulation,[],[f741,f469])).
fof(f741,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | ~p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK1),sK4))))),s(sK0,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))))))),
  inference(forward_demodulation,[],[f709,f99])).
fof(f709,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | ~p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK1),sK4))))),s(sK0,'const.list.EL_2'(s('type.num.num',sK8('const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)),sK4,sK6,sK0,sK1)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(resolution,[],[f256,f105])).
fof(f32073,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(backward_demodulation,[],[f32065,f193])).
fof(f35897,plain,(
  p(s(bool,happ(s(fun(sK2,bool),'_dst_x0x0x1_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))),s(fun(sK2,sK0),sK5))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') = s(bool,'F_0')),
  inference(forward_demodulation,[],[f35896,f136])).
fof(f35896,plain,(
  p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK0,happ(s(fun(sK2,sK0),sK5),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))))) | s(bool,'T_0') = s(bool,'F_0')),
  inference(forward_demodulation,[],[f34361,f35684])).
fof(f35684,plain,(
  ( ! [X0,X1] : (s(X0,happ(s(fun(sK2,X0),X1),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3))))) = s(X0,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(sK2,X0),X1),s('type.list.list'(sK2),sK3)))))) )),
  inference(global_subsumption,[],[f33776,f16613,f177,f179,f651,f32065])).
fof(f16613,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | s(X0,happ(s(fun(sK2,X0),X1),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3))))) = s(X0,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(sK2,X0),X1),s('type.list.list'(sK2),sK3)))))) )),
  inference(resolution,[],[f797,f497])).
fof(f797,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(trivial_inequality_removal,[],[f795])).
fof(f795,plain,(
  s(bool,'T_0') != s(bool,'T_0') | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(superposition,[],[f473,f85])).
fof(f473,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))),
  inference(trivial_inequality_removal,[],[f470])).
fof(f470,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))),
  inference(backward_demodulation,[],[f469,f197])).
fof(f197,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f179,f104])).
fof(f33776,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'F_0') | s(X0,happ(s(fun(sK2,X0),X1),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3))))) = s(X0,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(sK2,X0),X1),s('type.list.list'(sK2),sK3)))))) )),
  inference(backward_demodulation,[],[f32611,f16613])).
fof(f34361,plain,(
  s(bool,'T_0') = s(bool,'F_0') | p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK0,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))))))),
  inference(backward_demodulation,[],[f32611,f26221])).
fof(f26221,plain,(
  p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK0,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(global_subsumption,[],[f26165,f1072])).
fof(f1072,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(global_subsumption,[],[f991,f969,f707,f193,f199])).
fof(f199,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(resolution,[],[f179,f86])).
fof(f969,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))))),
  inference(superposition,[],[f254,f89])).
fof(f254,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(trivial_inequality_removal,[],[f252])).
fof(f252,plain,(
  s(bool,'T_0') != s(bool,'T_0') | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(superposition,[],[f181,f85])).
fof(f991,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(superposition,[],[f86,f254])).
fof(f26165,plain,(
  p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK0,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))),
  inference(resolution,[],[f757,f797])).
fof(f757,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | p(s(bool,happ(s(fun(sK0,bool),happ(s(fun(sK1,fun(sK0,bool)),sK6),s(sK1,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK1),sK4))))),s(sK0,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) )),
  inference(resolution,[],[f281,f103])).
fof(f281,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f273])).
fof(f273,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))))),
  inference(superposition,[],[f182,f93])).
fof(f182,plain,(
  s(bool,'F_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK0,bool)),sK6),s('type.list.list'(sK1),sK4),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK2,sK0),sK5),s('type.list.list'(sK2),sK3))))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'_dst_x00x10x01_3'(s(fun(sK1,fun(sK0,bool)),sK6),s(fun(sK1,sK1),'_i_0_0'),s(fun(sK2,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f81,f85])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 644
% Passive clauses: 10984
% Generated clauses: 35569
% Final active clauses: 438
% Final passive clauses: 6599
% Input formulas: 21
% Initial clauses: 57
% Discarded non-redundant clauses: 894
% 
% Duplicate literals: 748
% Trivial inequalities: 1982
% Fw demodulations: 2875
% Bw demodulations: 2855
% Condensations: 2139
% Global subsumptions: 305
% 
% Simple tautologies: 994
% Equational tautologies: 9
% Forward subsumptions: 15543
% Bw demodulations to eq. taut.: 235
% 
% Binary resolution: 4708
% Forward superposition: 16257
% Backward superposition: 3592
% Self superposition: 20
% Equality factoring: 1
% Equality resolution: 123
% 
% SAT solver clauses: 12473
% SAT solver unit clauses: 725
% SAT solver binary clauses: 1372
% SAT solver learnt clauses: 623
% SAT solver learnt literals: 1345
% 
% TWLsolver clauses: 11289
% TWLsolver calls for satisfiability: 278742
% 
% Memory used [KB]: 70361
% Time elapsed: 5.701 s
% ------------------------------
% ------------------------------
% Success in time 24.714 s
