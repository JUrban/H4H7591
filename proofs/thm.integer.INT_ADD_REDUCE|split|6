Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.integer
% (50755)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1313
% Passive clauses: 8798
% Generated clauses: 38175
% Final active clauses: 1188
% Final passive clauses: 6917
% Input formulas: 261
% Initial clauses: 547
% 
% Duplicate literals: 324
% Trivial inequalities: 62
% Fw subsumption resolutions: 2532
% Fw demodulations: 4450
% Bw demodulations: 119
% 
% Simple tautologies: 377
% Equational tautologies: 33
% Forward subsumptions: 21155
% Fw demodulations to eq. taut.: 7
% 
% Binary resolution: 9779
% Factoring: 1688
% Forward superposition: 9980
% Backward superposition: 8298
% Self superposition: 49
% Equality factoring: 2
% Equality resolution: 16
% 
% Split clauses: 554
% Split components: 1110
% SAT solver clauses: 829
% SAT solver unit clauses: 18
% SAT solver binary clauses: 87
% 
% Sat splits: 554
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 826
% TWLsolver calls for satisfiability: 570
% 
% Memory used [KB]: 15735
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f2056,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2055,f879,f1452,f902,f1491,f1155,f1670])).
fof(f1670,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))))))) ) | $spl366),
  inference(cnf_transformation,[],[f1670_D])).
fof(f1670_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))))))) ) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f1155,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f468])).
fof(f468,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num',X6))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7)))))))))),
  file('thm.integer.INT_ADD_REDUCE|split|6','thm.integer.INT_ADD_CALCULATE|split|4')).
fof(f1491,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl38),
  inference(cnf_transformation,[],[f1491_D])).
fof(f1491_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f902,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f271])).
fof(f271,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f109])).
fof(f109,axiom,(
  ! [X18] : s('type.num.num',X18) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))),
  file('thm.integer.INT_ADD_REDUCE|split|6','thm.arithmetic.NUMERAL_DEF')).
fof(f1452,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK16))))))) != s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK15),s('type.num.num',sK16))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK16),s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK15),s('type.num.num',sK16))))))))))) | $spl1),
  inference(cnf_transformation,[],[f1452_D])).
fof(f1452_D,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK16))))))) != s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK15),s('type.num.num',sK16))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK16),s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK15),s('type.num.num',sK16))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f879,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK16))))))) != s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK15),s('type.num.num',sK16))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK16),s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK15),s('type.num.num',sK16)))))))))))),
  inference(cnf_transformation,[],[f669])).
fof(f669,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK16))))))) != s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK15),s('type.num.num',sK16))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK16),s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK15),s('type.num.num',sK16)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16])],[f579])).
fof(f579,plain,(
  ? [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))) != s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))))))))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ~! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num',X6))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))))))) = s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num',X6))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7)))))))))))),
  file('thm.integer.INT_ADD_REDUCE|split|6','thm.integer.INT_ADD_REDUCE|split|6')).
fof(f2055,plain,(
  $false | ($spl1 | $spl38 | $spl366)),
  inference(trivial_inequality_removal,[],[f2054])).
fof(f2054,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16))))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16))))) | ($spl1 | $spl38 | $spl366)),
  inference(forward_demodulation,[],[f2053,f1491])).
fof(f2053,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16))))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16))))) | ($spl1 | $spl38 | $spl366)),
  inference(forward_demodulation,[],[f2052,f1491])).
fof(f2052,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK15))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK16))))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK16))))))) | ($spl1 | $spl38 | $spl366)),
  inference(forward_demodulation,[],[f2051,f1670])).
fof(f2051,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK16))))))) != s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK15),s('type.num.num',sK16))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK16),s('type.num.num',sK15))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK15),s('type.num.num',sK16))))))))) | ($spl1 | $spl38)),
  inference(forward_demodulation,[],[f2050,f1491])).
fof(f2050,plain,(
  s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK16))))))) != s('type.integer.int','const.bool.COND_3'(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK15),s('type.num.num',sK16))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK16),s('type.num.num',sK15))))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK15),s('type.num.num',sK16))))))))) | ($spl1 | $spl38)),
  inference(forward_demodulation,[],[f1452,f1491])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Passive clauses: 351
% Generated clauses: 1090
% Final passive clauses: 272
% Input formulas: 261
% Initial clauses: 547
% 
% Duplicate literals: 8
% Trivial inequalities: 2
% Fw subsumption resolutions: 5
% Fw demodulations: 42
% Bw demodulations: 77
% Condensations: 16
% Global subsumptions: 25
% 
% Simple tautologies: 102
% Equational tautologies: 1
% Forward subsumptions: 16
% Fw demodulations to eq. taut.: 6
% Bw demodulations to eq. taut.: 2
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 1086
% SAT solver unit clauses: 668
% SAT solver binary clauses: 142
% SAT solver learnt clauses: 51
% SAT solver learnt literals: 14
% 
% Sat splits: 3
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 985
% TWLsolver calls for satisfiability: 3653
% 
% Memory used [KB]: 3070
% Time elapsed: 0.033 s
% ------------------------------
% ------------------------------
% Success in time 0.646 s
