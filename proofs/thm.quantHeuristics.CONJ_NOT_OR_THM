Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f89,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f80,f84,f82,f78,f81,f79,f83])).
fof(f83,plain,(
  p(s(bool,sK1)) | $spl2),
  inference(cnf_transformation,[],[f83_D])).
fof(f83_D,plain,(
  p(s(bool,sK1)) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f79,plain,(
  p(s(bool,sK1))),
  inference(duplicate_literal_removal,[],[f52])).
fof(f52,plain,(
  p(s(bool,sK1)) | p(s(bool,sK1))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ((p(s(bool,sK0)) & p(s(bool,sK1))) | (p(s(bool,sK0)) & p(s(bool,sK1)))) & (~p(s(bool,sK0)) | ~p(s(bool,sK1)) | ~p(s(bool,sK0)) | ~p(s(bool,sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f36])).
fof(f36,plain,(
  ? [X0,X1] : (((p(s(bool,X0)) & p(s(bool,X1))) | (p(s(bool,X0)) & p(s(bool,X1)))) & (~p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ? [X0,X1] : (((p(s(bool,X0)) & p(s(bool,X1))) | (p(s(bool,X0)) & p(s(bool,X1)))) & ((~p(s(bool,X0)) | ~p(s(bool,X1))) | (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ? [X0,X1] : ((p(s(bool,X0)) & p(s(bool,X1))) <~> (p(s(bool,X0)) & p(s(bool,X1))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0,X1] : ((p(s(bool,X0)) & p(s(bool,X1))) <=> ~(~p(s(bool,X0)) | ~p(s(bool,X1))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1] : ((p(s(bool,X0)) & p(s(bool,X1))) <=> ~(~p(s(bool,X0)) | ~p(s(bool,X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ((p(s(bool,X6)) & p(s(bool,X7))) <=> ~(~p(s(bool,X6)) | ~p(s(bool,X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ((p(s(bool,X6)) & p(s(bool,X7))) <=> ~(~p(s(bool,X6)) | ~p(s(bool,X7))))),
  file('thm.quantHeuristics.CONJ_NOT_OR_THM','thm.quantHeuristics.CONJ_NOT_OR_THM')).
fof(f81,plain,(
  p(s(bool,sK0)) | $spl0),
  inference(cnf_transformation,[],[f81_D])).
fof(f81_D,plain,(
  p(s(bool,sK0)) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f78,plain,(
  p(s(bool,sK0))),
  inference(duplicate_literal_removal,[],[f49])).
fof(f49,plain,(
  p(s(bool,sK0)) | p(s(bool,sK0))),
  inference(cnf_transformation,[],[f37])).
fof(f82,plain,(
  ~p(s(bool,sK0)) | $spl1),
  inference(cnf_transformation,[],[f82_D])).
fof(f82_D,plain,(
  ~p(s(bool,sK0)) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f84,plain,(
  ~p(s(bool,sK1)) | $spl3),
  inference(cnf_transformation,[],[f84_D])).
fof(f84_D,plain,(
  ~p(s(bool,sK1)) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f80,plain,(
  ~p(s(bool,sK1)) | ~p(s(bool,sK0))),
  inference(duplicate_literal_removal,[],[f53])).
fof(f53,plain,(
  ~p(s(bool,sK1)) | ~p(s(bool,sK0)) | ~p(s(bool,sK1)) | ~p(s(bool,sK0))),
  inference(cnf_transformation,[],[f37])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Passive clauses: 4
% Generated clauses: 32
% Final passive clauses: 4
% Input formulas: 13
% Initial clauses: 28
% 
% Duplicate literals: 4
% Trivial inequalities: 1
% 
% Simple tautologies: 12
% Equational tautologies: 1
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 12
% SAT solver unit clauses: 4
% SAT solver binary clauses: 7
% SAT solver learnt clauses: 1
% 
% Sat splits: 7
% 
% TWLsolver clauses: 11
% TWLsolver calls for satisfiability: 1
% 
% Memory used [KB]: 511
% Time elapsed: 0.012 s
% ------------------------------
% ------------------------------
% Success in time 0.027 s
