Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f1319,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f183,f298,f296,f645,f237,f301,f303,f190,f304,f1253,f1238,f1318,f182,f300,f297,f295,f294])).
fof(f294,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl0),
  inference(cnf_transformation,[],[f294_D])).
fof(f294_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f295,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl2),
  inference(cnf_transformation,[],[f295_D])).
fof(f295_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f297,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl4),
  inference(cnf_transformation,[],[f297_D])).
fof(f297_D,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f300,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.num.num',sK0)))) | $spl6),
  inference(cnf_transformation,[],[f300_D])).
fof(f300_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.num.num',sK0)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f182,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.num.num',sK0)))) | s('type.num.num',sK0) = s('type.num.num',sK1) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.num.num',sK0) = s('type.num.num',sK1)) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.num.num',sK0) != s('type.num.num',sK1))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.num.num',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f130])).
fof(f130,plain,(
  ? [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f107])).
fof(f107,plain,(
  ? [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) <~> s('type.num.num',X0) = s('type.num.num',X1)) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))))),
  inference(ennf_transformation,[],[f51])).
fof(f51,plain,(
  ~! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) => (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) <=> s('type.num.num',X0) = s('type.num.num',X1)) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ~! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) => (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) <=> s('type.num.num',X0) = s('type.num.num',X1)) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) => (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) <=> s('type.num.num',X6) = s('type.num.num',X7)) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) => (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) <=> s('type.num.num',X6) = s('type.num.num',X7)) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))))))),
  file('thm.numeral.numeral_24_prove_ltb|split|1','thm.numeral.numeral_24_prove_ltb|split|1')).
fof(f1318,plain,(
  $false | ($spl3 | $spl4 | $spl8)),
  inference(subsumption_resolution,[],[f1317,f301])).
fof(f1317,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl4)),
  inference(forward_demodulation,[],[f1316,f313])).
fof(f313,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(resolution,[],[f197,f191])).
fof(f191,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X7))))),
  file('thm.numeral.numeral_24_prove_ltb|split|1','thm.arithmetic.LESS_EQ_REFL')).
fof(f197,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.numeral.numeral_24_prove_ltb|split|1','thm.bool.EQ_CLAUSES|split|1')).
fof(f1316,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK0)))) | ($spl3 | $spl4)),
  inference(forward_demodulation,[],[f296,f297])).
fof(f1238,plain,(
  $false | ($spl2 | $spl5 | $spl8)),
  inference(subsumption_resolution,[],[f1237,f301])).
fof(f1237,plain,(
  ~p(s(bool,'T_0')) | ($spl2 | $spl5 | $spl8)),
  inference(forward_demodulation,[],[f1236,f532])).
fof(f532,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | $spl2),
  inference(resolution,[],[f295,f197])).
fof(f1236,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | ($spl5 | $spl8)),
  inference(subsumption_resolution,[],[f1235,f298])).
fof(f1235,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.num.num',sK0) = s('type.num.num',sK1) | $spl8),
  inference(subsumption_resolution,[],[f1217,f301])).
fof(f1217,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.num.num',sK0) = s('type.num.num',sK1)),
  inference(superposition,[],[f260,f312])).
fof(f312,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),
  inference(resolution,[],[f197,f181])).
fof(f181,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f131])).
fof(f260,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1))),
  inference(flattening,[],[f116])).
fof(f116,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1))),
  inference(ennf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) => s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6,X7] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6))))) => s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.numeral.numeral_24_prove_ltb|split|1','thm.arithmetic.LESS_EQUAL_ANTISYM')).
fof(f1253,plain,(
  $false | ($spl1 | $spl6 | $spl11)),
  inference(subsumption_resolution,[],[f1252,f304])).
fof(f1252,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl6)),
  inference(forward_demodulation,[],[f1251,f651])).
fof(f651,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | $spl1),
  inference(resolution,[],[f293,f201])).
fof(f201,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f60])).
fof(f60,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.numeral.numeral_24_prove_ltb|split|1','thm.bool.EQ_CLAUSES|split|3')).
fof(f293,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl1),
  inference(cnf_transformation,[],[f293_D])).
fof(f293_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f1251,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl6),
  inference(forward_demodulation,[],[f300,f258])).
fof(f258,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7,X6] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6)))),
  file('thm.numeral.numeral_24_prove_ltb|split|1','thm.arithmetic.LESS_EQ')).
fof(f304,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f304_D])).
fof(f304_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f190,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.numeral.numeral_24_prove_ltb|split|1',aHL_FALSITY)).
fof(f303,plain,(
  p(s(bool,'F_0')) | $spl10),
  inference(cnf_transformation,[],[f303_D])).
fof(f303_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f301,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f301_D])).
fof(f301_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f237,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f162])).
fof(f162,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X11] : ((p(s(bool,'F_0')) => p(s(bool,X11))) <=> p(s(bool,'T_0')))),
  file('thm.numeral.numeral_24_prove_ltb|split|1','thm.bool.IMP_CLAUSES|split|2')).
fof(f645,plain,(
  $false | ($spl0 | $spl8)),
  inference(subsumption_resolution,[],[f644,f301])).
fof(f644,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl8)),
  inference(forward_demodulation,[],[f643,f312])).
fof(f643,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | ($spl0 | $spl8)),
  inference(subsumption_resolution,[],[f639,f301])).
fof(f639,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl0),
  inference(superposition,[],[f269,f314])).
fof(f314,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | $spl0),
  inference(resolution,[],[f197,f294])).
fof(f269,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X7,X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.numeral.numeral_24_prove_ltb|split|1','thm.arithmetic.NOT_LESS')).
fof(f296,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl3),
  inference(cnf_transformation,[],[f296_D])).
fof(f296_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f298,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | $spl5),
  inference(cnf_transformation,[],[f298_D])).
fof(f298_D,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f183,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))),s('type.num.num',sK0)))) | s('type.num.num',sK0) != s('type.num.num',sK1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f131])).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 60
% Passive clauses: 287
% Generated clauses: 1133
% Final active clauses: 40
% Final passive clauses: 189
% Input formulas: 48
% Initial clauses: 108
% 
% Duplicate literals: 9
% Trivial inequalities: 20
% Fw subsumption resolutions: 126
% Fw demodulations: 173
% Bw demodulations: 17
% 
% Simple tautologies: 55
% Equational tautologies: 7
% Forward subsumptions: 441
% 
% Binary resolution: 162
% Factoring: 2
% Forward superposition: 168
% Backward superposition: 319
% Self superposition: 4
% Equality factoring: 4
% Equality resolution: 4
% 
% Split clauses: 34
% Split components: 75
% SAT solver clauses: 50
% SAT solver unit clauses: 5
% SAT solver binary clauses: 29
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 3
% 
% Sat splits: 34
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 47
% TWLsolver calls for satisfiability: 10
% 
% Memory used [KB]: 1151
% Time elapsed: 0.029 s
% ------------------------------
% ------------------------------
% Success in time 0.031 s
