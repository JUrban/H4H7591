Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f7595,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7577,f131,f195,f264,f140,f192,f194,f238,f240,f239])).
fof(f239,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f239_D])).
fof(f239_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f240,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl20),
  inference(cnf_transformation,[],[f240_D])).
fof(f240_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f238,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(subsumption_resolution,[],[f234,f203])).
fof(f203,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(superposition,[],[f195,f132])).
fof(f132,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.GUESS_RULES_TRIVIAL_FORALL_POINT',aHL_BOOL_CASES)).
fof(f234,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f155,f132])).
fof(f155,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X9,X10] : ((p(s(bool,X9)) => p(s(bool,X10))) => ((p(s(bool,X10)) => p(s(bool,X9))) => s(bool,X9) = s(bool,X10)))),
  file('thm.quantHeuristics.GUESS_RULES_TRIVIAL_FORALL_POINT','thm.bool.IMP_ANTISYM_AX')).
fof(f194,plain,(
  p(s(bool,'F_0')) | $spl2),
  inference(cnf_transformation,[],[f194_D])).
fof(f194_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f192,plain,(
  p(s(bool,'T_0')) | $spl0),
  inference(cnf_transformation,[],[f192_D])).
fof(f192_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f140,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X11] : ((p(s(bool,'F_0')) => p(s(bool,X11))) <=> p(s(bool,'T_0')))),
  file('thm.quantHeuristics.GUESS_RULES_TRIVIAL_FORALL_POINT','thm.bool.IMP_CLAUSES|split|2')).
fof(f264,plain,(
  $false | ($spl0 | $spl3 | $spl18)),
  inference(subsumption_resolution,[],[f244,f192])).
fof(f244,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl18)),
  inference(backward_demodulation,[],[f239,f195])).
fof(f195,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f195_D])).
fof(f195_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f131,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.GUESS_RULES_TRIVIAL_FORALL_POINT',aHL_FALSITY)).
fof(f7577,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | ($spl3 | $spl20)),
  inference(subsumption_resolution,[],[f7576,f195])).
fof(f7576,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X0)) ) | ($spl3 | $spl20)),
  inference(forward_demodulation,[],[f7575,f274])).
fof(f274,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK1))) | $spl20),
  inference(resolution,[],[f123,f240])).
fof(f123,plain,(
  ~p(s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK1))))),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ~p(s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK1)))) & ~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.one.one',sK0),'_dst_x0_1'(s(sK0,sK1))),s(fun(sK0,bool),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f65])).
fof(f65,plain,(
  ? [X0,X1,X2] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X1)))) & ~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.one.one',X0),'_dst_x0_1'(s(X0,X1))),s(fun(X0,bool),X2)))))),
  inference(ennf_transformation,[],[f30])).
fof(f30,plain,(
  ~! [X0,X1,X2] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X1)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.one.one',X0),'_dst_x0_1'(s(X0,X1))),s(fun(X0,bool),X2)))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ~! [X0] : ! [X1,X2] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X1)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.one.one',X0),'_dst_x0_1'(s(X0,X1))),s(fun(X0,bool),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (~p(s(bool,happ(s(fun(X6,bool),X8),s(X6,X7)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.one.one',X6),'_dst_x0_1'(s(X6,X7))),s(fun(X6,bool),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (~p(s(bool,happ(s(fun(X6,bool),X8),s(X6,X7)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.one.one',X6),'_dst_x0_1'(s(X6,X7))),s(fun(X6,bool),X8)))))),
  file('thm.quantHeuristics.GUESS_RULES_TRIVIAL_FORALL_POINT','thm.quantHeuristics.GUESS_RULES_TRIVIAL_FORALL_POINT')).
fof(f7575,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK1)))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(subsumption_resolution,[],[f7530,f203])).
fof(f7530,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,happ(s(fun(sK0,bool),sK2),s(sK0,sK1)))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(superposition,[],[f3199,f338])).
fof(f338,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.one.one',sK0),'_dst_x0_1'(s(sK0,sK1))),s(fun(sK0,bool),sK2))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(resolution,[],[f241,f124])).
fof(f124,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.one.one',sK0),'_dst_x0_1'(s(sK0,sK1))),s(fun(sK0,bool),sK2))))),
  inference(cnf_transformation,[],[f83])).
fof(f241,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) ) | $spl3),
  inference(subsumption_resolution,[],[f235,f195])).
fof(f235,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f155,f132])).
fof(f3199,plain,(
  ( ! [X39,X41,X38,X40] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X39,X38),'_dst_x0_1'(s(X38,X40))),s(fun(X38,bool),X41)))) | p(s(bool,happ(s(fun(X38,bool),X41),s(X38,X40))))) )),
  inference(superposition,[],[f176,f159])).
fof(f159,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X22,X23] : ! [X24,X25] : s(X23,X24) = s(X23,happ(s(fun(X22,X23),'_dst_x0_1'(s(X23,X24))),s(X22,X25)))),
  file('thm.quantHeuristics.GUESS_RULES_TRIVIAL_FORALL_POINT','_dst_x0_ax')).
fof(f176,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK13(X3,X2,X1,X0))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK13(X3,X2,X1,X0))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f117])).
fof(f117,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (? [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f116])).
fof(f116,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))) & (? [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X17,X6] : ! [X20,X21] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X17),X20),s(fun(X17,bool),X21)))) <=> ! [X19] : ~p(s(bool,happ(s(fun(X17,bool),X21),s(X17,happ(s(fun(X6,X17),X20),s(X6,X19)))))))),
  file('thm.quantHeuristics.GUESS_RULES_TRIVIAL_FORALL_POINT','thm.quantHeuristics.GUESS_REWRITES|split|3')).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 109
% Passive clauses: 1502
% Generated clauses: 7355
% Final active clauses: 92
% Final passive clauses: 1288
% Input formulas: 27
% Initial clauses: 68
% 
% Duplicate literals: 306
% Trivial inequalities: 82
% Fw subsumption resolutions: 1020
% Fw demodulations: 926
% Bw demodulations: 15
% 
% Simple tautologies: 150
% Equational tautologies: 34
% Forward subsumptions: 2994
% 
% Binary resolution: 594
% Factoring: 1
% Forward superposition: 2303
% Backward superposition: 1785
% Self superposition: 74
% Equality factoring: 62
% Equality resolution: 11
% 
% Split clauses: 207
% Split components: 420
% SAT solver clauses: 443
% SAT solver unit clauses: 3
% SAT solver binary clauses: 52
% SAT solver learnt clauses: 1
% 
% Sat splits: 207
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 437
% TWLsolver calls for satisfiability: 119
% 
% Memory used [KB]: 5117
% Time elapsed: 0.208 s
% ------------------------------
% ------------------------------
% Success in time 0.21 s
