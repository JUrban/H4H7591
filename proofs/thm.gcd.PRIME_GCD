Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.gcd
% (83435)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 817
% Passive clauses: 9172
% Generated clauses: 23174
% Final active clauses: 761
% Final passive clauses: 7797
% Input formulas: 40
% Initial clauses: 175
% 
% Duplicate literals: 474
% Trivial inequalities: 156
% Fw subsumption resolutions: 2647
% Fw demodulations: 746
% Bw demodulations: 54
% 
% Simple tautologies: 276
% Equational tautologies: 63
% Forward subsumptions: 8897
% 
% Binary resolution: 11341
% Factoring: 1495
% Forward superposition: 3054
% Backward superposition: 2607
% Self superposition: 30
% Equality factoring: 32
% Equality resolution: 41
% 
% Split clauses: 683
% Split components: 1373
% SAT solver clauses: 1254
% SAT solver unit clauses: 19
% SAT solver binary clauses: 197
% 
% Sat splits: 683
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1252
% TWLsolver calls for satisfiability: 469
% 
% Memory used [KB]: 9210
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.gcd
% (83455)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 394
% Passive clauses: 2677
% Generated clauses: 12072
% Final active clauses: 344
% Final passive clauses: 1667
% Input formulas: 40
% Initial clauses: 175
% 
% Duplicate literals: 198
% Trivial inequalities: 32
% Fw subsumption resolutions: 1003
% Fw demodulations: 660
% Bw demodulations: 644
% Condensations: 321
% Global subsumptions: 13
% 
% Simple tautologies: 227
% Equational tautologies: 21
% Forward subsumptions: 4312
% 
% Binary resolution: 3591
% Factoring: 197
% Forward superposition: 1153
% Backward superposition: 1212
% Self superposition: 28
% Equality factoring: 30
% Equality resolution: 6
% 
% Split clauses: 73
% Split components: 153
% SAT solver clauses: 2753
% SAT solver unit clauses: 176
% SAT solver binary clauses: 69
% SAT solver learnt clauses: 26
% SAT solver learnt literals: 10
% 
% Sat splits: 73
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2701
% TWLsolver calls for satisfiability: 1665
% 
% Memory used [KB]: 10874
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.gcd
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.gcd
% SZS output start Proof for thm.gcd
fof(f2274,plain,(
  $false),
  inference(subsumption_resolution,[],[f2273,f227])).
fof(f227,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.gcd.PRIME_GCD',aHL_TRUTH)).
fof(f2273,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f2269,f1097])).
fof(f1097,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f227,f274,f279])).
fof(f279,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8,X9] : ((p(s(bool,X8)) => p(s(bool,X9))) => ((p(s(bool,X9)) => p(s(bool,X8))) => s(bool,X8) = s(bool,X9)))),
  file('thm.gcd.PRIME_GCD','thm.bool.IMP_ANTISYM_AX')).
fof(f274,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X17,X7] : p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num',X7),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X17),s('type.num.num',X7))))))),
  file('thm.gcd.PRIME_GCD','thm.gcd.GCD_IS_GCD')).
fof(f2269,plain,(
  ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK12),s('type.num.num',sK13))))))),
  inference(unit_resulting_resolution,[],[f226,f2106])).
fof(f2106,plain,(
  ( ! [X0] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(subsumption_resolution,[],[f2073,f227])).
fof(f2073,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f398,f2059])).
fof(f2059,plain,(
  s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(condensation,[],[f2058])).
fof(f2058,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f2054,f244])).
fof(f244,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.gcd.PRIME_GCD','thm.bool.EQ_CLAUSES|split|0')).
fof(f2054,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2053,f1519])).
fof(f1519,plain,(
  ( ! [X5] : (s(bool,X5) = s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f1517,f408])).
fof(f408,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f230,f227])).
fof(f230,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f43])).
fof(f43,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f18])).
fof(f18,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.gcd.PRIME_GCD','thm.bool.NOT_CLAUSES|split|2')).
fof(f1517,plain,(
  ( ! [X5] : (p(s(bool,'F_0')) | s(bool,X5) = s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f691,f471])).
fof(f471,plain,(
  s(bool,'F_0') = s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13)))),
  inference(unit_resulting_resolution,[],[f225,f248])).
fof(f248,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f152])).
fof(f152,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.gcd.PRIME_GCD','thm.bool.EQ_CLAUSES|split|3')).
fof(f225,plain,(
  ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13))))),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  p(s(bool,'const.divides.prime_1'(s('type.num.num',sK12)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) & s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK12),s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f101])).
fof(f101,plain,(
  ? [X0,X1] : (p(s(bool,'const.divides.prime_1'(s('type.num.num',X0)))) & ~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1))))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ? [X0,X1] : (p(s(bool,'const.divides.prime_1'(s('type.num.num',X0)))) & (~p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f42])).
fof(f42,plain,(
  ~! [X0,X1] : (p(s(bool,'const.divides.prime_1'(s('type.num.num',X0)))) => (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.divides.prime_1'(s('type.num.num',X6)))) => (p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.divides.prime_1'(s('type.num.num',X6)))) => (p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.gcd.gcd_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.gcd.PRIME_GCD','thm.gcd.PRIME_GCD')).
fof(f691,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f683,f408])).
fof(f683,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f276,f234])).
fof(f234,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.gcd.PRIME_GCD',aHL_BOOL_CASES)).
fof(f276,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f118])).
fof(f2053,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(subsumption_resolution,[],[f2052,f408])).
fof(f2052,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f2050,f471])).
fof(f2050,plain,(
  ( ! [X0] : (p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f1496,f1519])).
fof(f1496,plain,(
  ( ! [X0] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',X0))))) )),
  inference(subsumption_resolution,[],[f1494,f227])).
fof(f1494,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.divides.divides_2'(s('type.num.num',sK12),s('type.num.num',X0)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(superposition,[],[f275,f453])).
fof(f453,plain,(
  s(bool,'T_0') = s(bool,'const.divides.prime_1'(s('type.num.num',sK12)))),
  inference(unit_resulting_resolution,[],[f224,f244])).
fof(f224,plain,(
  p(s(bool,'const.divides.prime_1'(s('type.num.num',sK12))))),
  inference(cnf_transformation,[],[f147])).
fof(f275,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.divides.prime_1'(s('type.num.num',X0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(cnf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0,X1] : (~p(s(bool,'const.divides.prime_1'(s('type.num.num',X0)))) | p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(flattening,[],[f115])).
fof(f115,plain,(
  ! [X0,X1] : (~p(s(bool,'const.divides.prime_1'(s('type.num.num',X0)))) | (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(ennf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : (p(s(bool,'const.divides.prime_1'(s('type.num.num',X0)))) => (p(s(bool,'const.divides.divides_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6,X7] : (p(s(bool,'const.divides.prime_1'(s('type.num.num',X6)))) => (p(s(bool,'const.divides.divides_2'(s('type.num.num',X6),s('type.num.num',X7)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  file('thm.gcd.PRIME_GCD','thm.gcd.PRIME_IS_GCD')).
fof(f398,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X3)))) | s('type.num.num',X2) = s('type.num.num',X3)) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X3)))) | s('type.num.num',X2) = s('type.num.num',X3))),
  inference(flattening,[],[f127])).
fof(f127,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X3))))) | s('type.num.num',X2) = s('type.num.num',X3))),
  inference(ennf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) & p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X3))))) => s('type.num.num',X2) = s('type.num.num',X3))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X17,X7,X18,X19] : ((p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num',X7),s('type.num.num',X18)))) & p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X17),s('type.num.num',X7),s('type.num.num',X19))))) => s('type.num.num',X18) = s('type.num.num',X19))),
  file('thm.gcd.PRIME_GCD','thm.gcd.IS_GCD_UNIQUE')).
fof(f226,plain,(
  s('type.num.num','const.gcd.gcd_2'(s('type.num.num',sK12),s('type.num.num',sK13))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f147])).
% SZS output end Proof for thm.gcd
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 345
% Passive clauses: 404
% Generated clauses: 2049
% Final active clauses: 342
% Final passive clauses: 58
% Input formulas: 40
% Initial clauses: 175
% 
% Duplicate literals: 8
% Trivial inequalities: 3
% Fw subsumption resolutions: 62
% Fw demodulations: 294
% Bw demodulations: 4
% Condensations: 10
% 
% Simple tautologies: 55
% Equational tautologies: 18
% Forward subsumptions: 1192
% 
% Unit resulting resolution: 1239
% Factoring: 1
% Forward superposition: 98
% Backward superposition: 146
% Self superposition: 4
% Equality factoring: 4
% Equality resolution: 1
% 
% SAT solver clauses: 406
% SAT solver unit clauses: 272
% SAT solver binary clauses: 57
% 
% Memory used [KB]: 1663
% Time elapsed: 0.050 s
% ------------------------------
% ------------------------------
% Success in time 1.367 s
