Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.quotient_option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quotient_option
% SZS output start Proof for thm.quotient_option
fof(f4709,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4706,f74,f205])).
fof(f205,plain,(
  s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK0,fun(sK0,bool)),sK2),s(fun(sK0,sK1),sK3),s(fun(sK1,sK0),sK4))) | $spl4),
  inference(cnf_transformation,[],[f205_D])).
fof(f205_D,plain,(
  s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK0,fun(sK0,bool)),sK2),s(fun(sK0,sK1),sK3),s(fun(sK1,sK0),sK4))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f74,plain,(
  s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK0,fun(sK0,bool)),sK2),s(fun(sK0,sK1),sK3),s(fun(sK1,sK0),sK4)))),
  inference(subsumption_resolution,[],[f73,f35])).
fof(f35,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quotient_option.SOME_PRS',aHL_FALSITY)).
fof(f73,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK0,fun(sK0,bool)),sK2),s(fun(sK0,sK1),sK3),s(fun(sK1,sK0),sK4)))),
  inference(superposition,[],[f31,f36])).
fof(f36,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quotient_option.SOME_PRS',aHL_BOOL_CASES)).
fof(f31,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK0,fun(sK0,bool)),sK2),s(fun(sK0,sK1),sK3),s(fun(sK1,sK0),sK4))))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK0,fun(sK0,bool)),sK2),s(fun(sK0,sK1),sK3),s(fun(sK1,sK0),sK4)))) & s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK5))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK4),s(sK1,sK5)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f25])).
fof(f25,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) & ? [X5] : s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X5))) != s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X5))) = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))))),
  inference(flattening,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X5))) = s('type.option.option'(X1),'const.option.OPTION_MAP_2'(s(fun(X0,X1),X3),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X8),s(fun(X6,X7),X9),s(fun(X7,X6),X10)))) => ! [X11] : s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X11))) = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X9),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun(X7,X6),X10),s(X7,X11))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X8),s(fun(X6,X7),X9),s(fun(X7,X6),X10)))) => ! [X11] : s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X11))) = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X9),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,happ(s(fun(X7,X6),X10),s(X7,X11))))))))),
  file('thm.quotient_option.SOME_PRS','thm.quotient_option.SOME_PRS')).
fof(f4706,plain,(
  $false | $spl4),
  inference(trivial_inequality_removal,[],[f4701])).
fof(f4701,plain,(
  s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK5))) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK5))) | $spl4),
  inference(backward_demodulation,[],[f1450,f246])).
fof(f246,plain,(
  s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK5))) != s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,happ(s(fun(sK1,sK0),sK4),s(sK1,sK5)))))))),
  inference(superposition,[],[f32,f40])).
fof(f40,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))))) = s('type.option.option'(X0),'const.option.OPTION_MAP_2'(s(fun(X1,X0),X2),s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X3)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X7,X6] : ! [X12,X11] : s('type.option.option'(X7),'const.option.SOME_1'(s(X7,happ(s(fun(X6,X7),X12),s(X6,X11))))) = s('type.option.option'(X7),'const.option.OPTION_MAP_2'(s(fun(X6,X7),X12),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X11)))))),
  file('thm.quotient_option.SOME_PRS','thm.option.OPTION_MAP_DEF|split|0')).
fof(f32,plain,(
  s('type.option.option'(sK1),'const.option.SOME_1'(s(sK1,sK5))) != s('type.option.option'(sK1),'const.option.OPTION_MAP_2'(s(fun(sK0,sK1),sK3),s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,happ(s(fun(sK1,sK0),sK4),s(sK1,sK5)))))))),
  inference(cnf_transformation,[],[f28])).
fof(f1450,plain,(
  ( ! [X0] : (s(sK1,X0) = s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,happ(s(fun(sK1,sK0),sK4),s(sK1,X0)))))) ) | $spl4),
  inference(subsumption_resolution,[],[f1429,f33])).
fof(f33,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quotient_option.SOME_PRS',aHL_TRUTH)).
fof(f1429,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(sK1,X0) = s(sK1,happ(s(fun(sK0,sK1),sK3),s(sK0,happ(s(fun(sK1,sK0),sK4),s(sK1,X0)))))) ) | $spl4),
  inference(superposition,[],[f42,f205])).
fof(f42,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5)))))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X0,X1),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X8),s(fun(X6,X7),X9),s(fun(X7,X6),X10)))) => ! [X13] : s(X7,X13) = s(X7,happ(s(fun(X6,X7),X9),s(X6,happ(s(fun(X7,X6),X10),s(X7,X13))))))),
  file('thm.quotient_option.SOME_PRS','thm.quotient.QUOTIENT_ABS_REP')).
% SZS output end Proof for thm.quotient_option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 39
% Passive clauses: 837
% Generated clauses: 4494
% Final active clauses: 34
% Final passive clauses: 756
% Input formulas: 10
% Initial clauses: 12
% 
% Duplicate literals: 498
% Trivial inequalities: 49
% Fw subsumption resolutions: 320
% Fw demodulations: 56
% Bw demodulations: 2
% 
% Simple tautologies: 117
% Equational tautologies: 84
% Forward subsumptions: 1874
% 
% Binary resolution: 15
% Forward superposition: 1556
% Backward superposition: 1480
% Self superposition: 248
% Equality factoring: 214
% Equality resolution: 1
% 
% Split clauses: 249
% Split components: 499
% SAT solver clauses: 688
% SAT solver unit clauses: 64
% SAT solver binary clauses: 313
% SAT solver learnt clauses: 1
% 
% Sat splits: 249
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 687
% TWLsolver calls for satisfiability: 36
% 
% Memory used [KB]: 2558
% Time elapsed: 0.124 s
% ------------------------------
% ------------------------------
% Success in time 0.126 s
