Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f1081,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1079,f211,f91,f145,f92,f147,f143,f1062,f1050,f93,f148,f146,f144])).
fof(f144,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),sK1))) | $spl1),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f146,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK2) | $spl3),
  inference(cnf_transformation,[],[f146_D])).
fof(f146_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK2) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f148,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK1) | $spl5),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK1) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f93,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK1) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK2) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),sK1)))),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),sK1))) | (s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK2) & s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK1))) & (s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),sK1))) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK2) | s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),sK1))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f68])).
fof(f68,plain,(
  ? [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),X2),s('type.option.option'(X0),X1))) | (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X2) & s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1))) & (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),X2),s('type.option.option'(X0),X1))) | s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X2) | s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X1)))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ? [X0,X1,X2] : ((s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),X2),s('type.option.option'(X0),X1))) | (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X2) & s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1))) & (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),X2),s('type.option.option'(X0),X1))) | (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X2) | s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),X1))))),
  inference(nnf_transformation,[],[f62])).
fof(f62,plain,(
  ? [X0,X1,X2] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),X2),s('type.option.option'(X0),X1))) <~> (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X2) & s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1,X2] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),X2),s('type.option.option'(X0),X1))) <=> (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X2) & s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),X2),s('type.option.option'(X0),X1))) <=> (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X2) & s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X6),X8),s('type.option.option'(X6),X7))) <=> (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X8) & s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X6),X8),s('type.option.option'(X6),X7))) <=> (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X8) & s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X7)))),
  file('thm.option.OPTION_CHOICE_EQ_NONE','thm.option.OPTION_CHOICE_EQ_NONE')).
fof(f1050,plain,(
  $false | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f1049,f146])).
fof(f1049,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK2) | ($spl0 | $spl4)),
  inference(duplicate_literal_removal,[],[f1040])).
fof(f1040,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK2) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK2) | ($spl0 | $spl4)),
  inference(superposition,[],[f253,f212])).
fof(f212,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f143,f147])).
fof(f253,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),X1),s('type.option.option'(X0),X2))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f133,f129])).
fof(f129,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK3(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK3(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f50])).
fof(f50,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X6] : ! [X14] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X14) | ? [X12] : s('type.option.option'(X6),X14) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X12))))),
  file('thm.option.OPTION_CHOICE_EQ_NONE','thm.option.option_nchotomy')).
fof(f133,plain,(
  ( ! [X2,X0,X1] : (s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1,X2] : s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))) = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),X2)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6] : ! [X12,X7] : s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X12))) = s('type.option.option'(X6),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X12))),s('type.option.option'(X6),X7)))),
  file('thm.option.OPTION_CHOICE_EQ_NONE','thm.option.OPTION_CHOICE_def|split|1')).
fof(f1062,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f1061,f146])).
fof(f1061,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK2) | $spl0),
  inference(duplicate_literal_removal,[],[f1052])).
fof(f1052,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK2) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK2) | $spl0),
  inference(superposition,[],[f143,f253])).
fof(f143,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),sK1))) | $spl0),
  inference(cnf_transformation,[],[f143_D])).
fof(f143_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f147,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK1) | $spl4),
  inference(cnf_transformation,[],[f147_D])).
fof(f147_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK1) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f92,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK1) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),sK1)))),
  inference(cnf_transformation,[],[f69])).
fof(f145,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK2) | $spl2),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK2) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f91,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK2) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),sK1)))),
  inference(cnf_transformation,[],[f69])).
fof(f211,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(trivial_inequality_removal,[],[f209])).
fof(f209,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.NONE_0') | ($spl1 | $spl2 | $spl4)),
  inference(superposition,[],[f205,f128])).
fof(f128,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),X1)))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),X1)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : ! [X1] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),X1)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : ! [X7] : s('type.option.option'(X6),X7) = s('type.option.option'(X6),'const.option.OPTION_CHOICE_2'(s('type.option.option'(X6),'const.option.NONE_0'),s('type.option.option'(X6),X7)))),
  file('thm.option.OPTION_CHOICE_EQ_NONE','thm.option.OPTION_CHOICE_def|split|0')).
fof(f205,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f204,f145])).
fof(f204,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') != s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),sK2),s('type.option.option'(sK0),'const.option.NONE_0'))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f144,f147])).
fof(f1079,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f1071,f148])).
fof(f1071,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK1) | ($spl0 | $spl2)),
  inference(superposition,[],[f1064,f128])).
fof(f1064,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),'const.option.OPTION_CHOICE_2'(s('type.option.option'(sK0),'const.option.NONE_0'),s('type.option.option'(sK0),sK1))) | ($spl0 | $spl2)),
  inference(backward_demodulation,[],[f145,f143])).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 37
% Passive clauses: 184
% Generated clauses: 943
% Final active clauses: 31
% Final passive clauses: 130
% Input formulas: 26
% Initial clauses: 50
% 
% Duplicate literals: 95
% Trivial inequalities: 22
% Fw subsumption resolutions: 112
% Fw demodulations: 3
% Bw demodulations: 1
% 
% Simple tautologies: 72
% Equational tautologies: 29
% Forward subsumptions: 403
% 
% Binary resolution: 48
% Factoring: 1
% Forward superposition: 190
% Backward superposition: 303
% Self superposition: 47
% Equality factoring: 50
% Equality resolution: 5
% 
% Split clauses: 22
% Split components: 45
% SAT solver clauses: 43
% SAT solver unit clauses: 7
% SAT solver binary clauses: 29
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 2
% 
% Sat splits: 22
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 39
% TWLsolver calls for satisfiability: 13
% 
% Memory used [KB]: 1023
% Time elapsed: 0.027 s
% ------------------------------
% ------------------------------
% Success in time 0.029 s
