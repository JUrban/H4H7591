Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.complex
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.complex
% SZS output start Proof for thm.complex
fof(f249,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f248,f30,f47,f45,f239,f29,f46,f44])).
fof(f44,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) | $spl0),
  inference(cnf_transformation,[],[f44_D])).
fof(f44_D,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f46,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(cnf_transformation,[],[f46_D])).
fof(f46_D,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f29,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0)))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) | s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) | s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f22])).
fof(f22,plain,(
  ? [X0] : ((s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) | s('type.pair.prod'('type.realax.real','type.realax.real'),X0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) | s('type.pair.prod'('type.realax.real','type.realax.real'),X0) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ? [X0] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) <~> s('type.pair.prod'('type.realax.real','type.realax.real'),X0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) <=> s('type.pair.prod'('type.realax.real','type.realax.real'),X0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6))) <=> s('type.pair.prod'('type.realax.real','type.realax.real'),X6) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6))) <=> s('type.pair.prod'('type.realax.real','type.realax.real'),X6) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.complex.COMPLEX_NEG_EQ|48|','thm.complex.COMPLEX_NEG_EQ|48|')).
fof(f239,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f233,f47])).
fof(f233,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(backward_demodulation,[],[f227,f33])).
fof(f33,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(cnf_transformation,[],[f11])).
fof(f11,axiom,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.complex.COMPLEX_NEG_EQ|48|','thm.complex.COMPLEX_NEG_|48|')).
fof(f227,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl0),
  inference(superposition,[],[f218,f44])).
fof(f218,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.realax.real','type.realax.real'),X0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0)))))) )),
  inference(equality_resolution,[],[f40])).
fof(f40,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.realax.real','type.realax.real'),X1) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) | s('type.pair.prod'('type.realax.real','type.realax.real'),X0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X1)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : ((s('type.pair.prod'('type.realax.real','type.realax.real'),X1) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) | s('type.pair.prod'('type.realax.real','type.realax.real'),X0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X1)))) & (s('type.pair.prod'('type.realax.real','type.realax.real'),X0) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X1))) | s('type.pair.prod'('type.realax.real','type.realax.real'),X1) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0)))))),
  inference(nnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.realax.real','type.realax.real'),X1) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) <=> s('type.pair.prod'('type.realax.real','type.realax.real'),X0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X1))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X10] : (s('type.pair.prod'('type.realax.real','type.realax.real'),X10) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6))) <=> s('type.pair.prod'('type.realax.real','type.realax.real'),X6) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),X10))))),
  file('thm.complex.COMPLEX_NEG_EQ|48|','thm.complex.COMPLEX_NEG_EQ')).
fof(f45,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) | $spl1),
  inference(cnf_transformation,[],[f45_D])).
fof(f45_D,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f47,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl3),
  inference(cnf_transformation,[],[f47_D])).
fof(f47_D,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f30,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0)))),
  inference(cnf_transformation,[],[f23])).
fof(f248,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f247,f246])).
fof(f246,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f45,f46])).
fof(f247,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),sK0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_neg_1'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) | $spl2),
  inference(forward_demodulation,[],[f33,f46])).
% SZS output end Proof for thm.complex
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 17
% Passive clauses: 38
% Generated clauses: 208
% Final active clauses: 11
% Final passive clauses: 9
% Input formulas: 10
% Initial clauses: 14
% 
% Duplicate literals: 37
% Trivial inequalities: 3
% Fw subsumption resolutions: 2
% Fw demodulations: 12
% Bw demodulations: 1
% 
% Simple tautologies: 18
% Equational tautologies: 15
% Forward subsumptions: 83
% 
% Binary resolution: 4
% Forward superposition: 36
% Backward superposition: 40
% Self superposition: 25
% Equality factoring: 26
% Equality resolution: 1
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 8
% SAT solver unit clauses: 2
% SAT solver binary clauses: 5
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 3
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 6
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 639
% Time elapsed: 0.028 s
% ------------------------------
% ------------------------------
% Success in time 0.031 s
