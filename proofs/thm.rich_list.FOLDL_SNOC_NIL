Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f4459,plain,(
  $false),
  inference(subsumption_resolution,[],[f4443,f123])).
fof(f123,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X20] : ! [X7] : s('type.list.list'(X20),X7) = s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),'const.list.NIL_0'),s('type.list.list'(X20),X7)))),
  file('thm.rich_list.FOLDL_SNOC_NIL','thm.rich_list.APPEND_NIL|split|1')).
fof(f4443,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK1)))),
  inference(superposition,[],[f114,f136])).
fof(f136,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDL_3'(s(fun('type.list.list'(X0),fun(X0,'type.list.list'(X0))),'_dst_x01x10_2'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.SNOC_0'),s(fun('type.list.list'(X0),'type.list.list'(X0)),'_i_0_0'))),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDL_3'(s(fun('type.list.list'(X0),fun(X0,'type.list.list'(X0))),'_dst_x01x10_2'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.SNOC_0'),s(fun('type.list.list'(X0),'type.list.list'(X0)),'_i_0_0'))),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.list.FOLDL_3'(s(fun('type.list.list'(X0),fun(X0,'type.list.list'(X0))),'_dst_x01x10_2'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.SNOC_0'),s(fun('type.list.list'(X0),'type.list.list'(X0)),'_i_0_0'))),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X8,X9] : s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.FOLDL_3'(s(fun('type.list.list'(X6),fun(X6,'type.list.list'(X6))),'_dst_x01x10_2'(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.SNOC_0'),s(fun('type.list.list'(X6),'type.list.list'(X6)),'_i_0_0'))),s('type.list.list'(X6),X8),s('type.list.list'(X6),X9)))),
  file('thm.rich_list.FOLDL_SNOC_NIL','thm.rich_list.APPEND_FOLDL')).
fof(f114,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.FOLDL_3'(s(fun('type.list.list'(sK0),fun(sK0,'type.list.list'(sK0))),'_dst_x01x10_2'(s(fun(sK0,fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.SNOC_0'),s(fun('type.list.list'(sK0),'type.list.list'(sK0)),'_i_0_0'))),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK1)))),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.FOLDL_3'(s(fun('type.list.list'(sK0),fun(sK0,'type.list.list'(sK0))),'_dst_x01x10_2'(s(fun(sK0,fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.SNOC_0'),s(fun('type.list.list'(sK0),'type.list.list'(sK0)),'_i_0_0'))),s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f103])).
fof(f103,plain,(
  ? [X0,X1] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.FOLDL_3'(s(fun('type.list.list'(X0),fun(X0,'type.list.list'(X0))),'_dst_x01x10_2'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.SNOC_0'),s(fun('type.list.list'(X0),'type.list.list'(X0)),'_i_0_0'))),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.FOLDL_3'(s(fun('type.list.list'(X0),fun(X0,'type.list.list'(X0))),'_dst_x01x10_2'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.SNOC_0'),s(fun('type.list.list'(X0),'type.list.list'(X0)),'_i_0_0'))),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.FOLDL_3'(s(fun('type.list.list'(X0),fun(X0,'type.list.list'(X0))),'_dst_x01x10_2'(s(fun(X0,fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.SNOC_0'),s(fun('type.list.list'(X0),'type.list.list'(X0)),'_i_0_0'))),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.FOLDL_3'(s(fun('type.list.list'(X6),fun(X6,'type.list.list'(X6))),'_dst_x01x10_2'(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.SNOC_0'),s(fun('type.list.list'(X6),'type.list.list'(X6)),'_i_0_0'))),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.FOLDL_3'(s(fun('type.list.list'(X6),fun(X6,'type.list.list'(X6))),'_dst_x01x10_2'(s(fun(X6,fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.SNOC_0'),s(fun('type.list.list'(X6),'type.list.list'(X6)),'_i_0_0'))),s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X7)))),
  file('thm.rich_list.FOLDL_SNOC_NIL','thm.rich_list.FOLDL_SNOC_NIL')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 64
% Passive clauses: 476
% Generated clauses: 4243
% Final active clauses: 60
% Final passive clauses: 367
% Input formulas: 37
% Initial clauses: 40
% 
% Duplicate literals: 310
% Trivial inequalities: 69
% Fw subsumption resolutions: 322
% Fw demodulations: 303
% Bw demodulations: 2
% 
% Simple tautologies: 104
% Equational tautologies: 21
% Forward subsumptions: 2484
% 
% Binary resolution: 7
% Forward superposition: 1828
% Backward superposition: 1159
% Self superposition: 104
% Equality factoring: 47
% Equality resolution: 10
% 
% Split clauses: 93
% Split components: 194
% SAT solver clauses: 180
% SAT solver unit clauses: 8
% SAT solver binary clauses: 51
% 
% Sat splits: 93
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 180
% TWLsolver calls for satisfiability: 32
% 
% Memory used [KB]: 3965
% Time elapsed: 0.117 s
% ------------------------------
% ------------------------------
% Success in time 0.113 s
