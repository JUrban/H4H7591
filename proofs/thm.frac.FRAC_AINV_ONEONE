Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.frac
% (101788)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 158
% Passive clauses: 2068
% Generated clauses: 18375
% Final active clauses: 152
% Final passive clauses: 1800
% Input formulas: 28
% Initial clauses: 61
% 
% Duplicate literals: 981
% Trivial inequalities: 256
% Fw subsumption resolutions: 3046
% Fw demodulations: 2281
% Bw demodulations: 6
% 
% Simple tautologies: 330
% Equational tautologies: 62
% Forward subsumptions: 7585
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 406
% Forward superposition: 4767
% Backward superposition: 5988
% Self superposition: 199
% Equality factoring: 159
% Equality resolution: 34
% 
% Split clauses: 1190
% Split components: 2433
% SAT solver clauses: 1858
% SAT solver unit clauses: 26
% SAT solver binary clauses: 212
% 
% Sat splits: 1190
% 
% TWLsolver clauses: 1845
% TWLsolver calls for satisfiability: 157
% 
% Memory used [KB]: 9083
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.frac
% (101811)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 178
% Passive clauses: 811
% Generated clauses: 17987
% Final active clauses: 173
% Final passive clauses: 607
% Input formulas: 28
% Initial clauses: 61
% 
% Duplicate literals: 1169
% Trivial inequalities: 253
% Fw subsumption resolutions: 1648
% Fw demodulations: 2669
% Bw demodulations: 29
% Condensations: 1065
% Global subsumptions: 4
% 
% Simple tautologies: 345
% Equational tautologies: 26
% Forward subsumptions: 8349
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 217
% Forward superposition: 6861
% Backward superposition: 3004
% Self superposition: 96
% Equality factoring: 34
% Equality resolution: 61
% 
% Split clauses: 55
% Split components: 124
% SAT solver clauses: 1395
% SAT solver unit clauses: 69
% SAT solver binary clauses: 41
% SAT solver learnt clauses: 8
% 
% Sat splits: 55
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1379
% TWLsolver calls for satisfiability: 452
% 
% Memory used [KB]: 11513
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 285 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.frac
% (101845)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 671
% Passive clauses: 5844
% Generated clauses: 148263
% Final active clauses: 136
% Final passive clauses: 670
% Input formulas: 28
% Initial clauses: 61
% 
% Duplicate literals: 7157
% Trivial inequalities: 1088
% Fw subsumption resolutions: 8917
% Fw demodulations: 27712
% Bw demodulations: 3770
% Condensations: 12013
% Global subsumptions: 1117
% 
% Simple tautologies: 1205
% Equational tautologies: 4005
% Forward subsumptions: 77785
% Fw demodulations to eq. taut.: 92
% Bw demodulations to eq. taut.: 288
% 
% Unit resulting resolution: 27447
% Forward superposition: 27529
% Backward superposition: 18935
% Self superposition: 688
% Equality factoring: 400
% Equality resolution: 128
% 
% Split clauses: 445
% Split components: 903
% SAT solver clauses: 8967
% SAT solver unit clauses: 65
% SAT solver binary clauses: 783
% 
% Sat splits: 445
% Sat splitting refutations: 1114
% 
% Memory used [KB]: 61917
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 181 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.frac
% (102131)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 737
% Passive clauses: 23232
% Generated clauses: 112440
% Final active clauses: 266
% Final passive clauses: 18465
% Input formulas: 28
% Initial clauses: 59
% 
% Selected by SInE selection: 27
% SInE iterations: 1
% 
% Duplicate literals: 2152
% Trivial inequalities: 1734
% Fw subsumption resolutions: 14934
% Fw demodulations: 23332
% Bw demodulations: 353
% 
% Simple tautologies: 1608
% Equational tautologies: 90
% Forward subsumptions: 41649
% Fw demodulations to eq. taut.: 5
% Bw demodulations to eq. taut.: 26
% 
% Binary resolution: 7212
% Factoring: 12
% Forward superposition: 27688
% Backward superposition: 32507
% Self superposition: 562
% Equality factoring: 213
% Equality resolution: 174
% 
% Split clauses: 3597
% Split components: 7625
% SAT solver clauses: 3665
% SAT solver unit clauses: 20
% SAT solver binary clauses: 1481
% 
% Sat splits: 3597
% Sat splitting refutations: 53
% 
% Memory used [KB]: 38634
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 141 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.frac
% (102255)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 112
% Passive clauses: 1587
% Generated clauses: 12487
% Final active clauses: 63
% Final passive clauses: 661
% Input formulas: 28
% Initial clauses: 61
% 
% Duplicate literals: 386
% Trivial inequalities: 313
% Fw subsumption resolutions: 1895
% Fw demodulations: 728
% Bw demodulations: 817
% Global subsumptions: 197
% 
% Simple tautologies: 395
% Equational tautologies: 87
% Forward subsumptions: 6561
% Fw demodulations to eq. taut.: 51
% Bw demodulations to eq. taut.: 3
% 
% Unit resulting resolution: 450
% Forward superposition: 3797
% Backward superposition: 2897
% Self superposition: 133
% Equality factoring: 48
% Equality resolution: 22
% 
% Split clauses: 17
% Split components: 35
% SAT solver clauses: 2093
% SAT solver unit clauses: 259
% SAT solver binary clauses: 151
% 
% Sat splits: 17
% Sat splitting refutations: 290
% 
% Memory used [KB]: 8827
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 134 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.frac
% (102273)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 289
% Passive clauses: 3905
% Generated clauses: 13767
% Final active clauses: 103
% Final passive clauses: 2199
% Input formulas: 28
% Initial clauses: 61
% 
% Duplicate literals: 544
% Trivial inequalities: 362
% Fw subsumption resolutions: 542
% Bw subsumption resolutions: 793
% Fw demodulations: 578
% Bw demodulations: 53
% Condensations: 560
% Global subsumptions: 1
% 
% Simple tautologies: 303
% Equational tautologies: 26
% Forward subsumptions: 6890
% Backward subsumptions: 786
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 2018
% Factoring: 11
% Forward superposition: 5126
% Backward superposition: 1785
% Self superposition: 95
% Equality factoring: 38
% Equality resolution: 56
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 3919
% SAT solver unit clauses: 35
% SAT solver binary clauses: 106
% 
% Sat splits: 2
% Sat splitting refutations: 9
% 
% Memory used [KB]: 13816
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 118 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.frac
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.frac
% SZS output start Proof for thm.frac
fof(f10671,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f104,f168,f242,f241,f240,f238,f237,f236,f233,f232,f231,f229,f228,f227,f225,f224,f223,f221,f220,f219,f217,f216,f215,f213,f212,f211,f209,f208,f207,f205,f204,f203,f201,f200,f199,f254,f196,f195,f194,f191,f190,f189,f186,f185,f184,f181,f180,f179,f174,f173,f172,f171,f252,f170,f258,f260,f264,f262,f248,f249,f256,f419,f476,f420,f479,f632,f631,f627,f488,f490,f492,f494,f496,f498,f500,f638,f639,f504,f506,f508,f510,f512,f640,f641,f642,f643,f644,f645,f646,f647,f648,f649,f650,f651,f652,f653,f654,f655,f656,f657,f658,f659,f660,f661,f662,f663,f664,f665,f666,f667,f668,f669,f670,f671,f672,f673,f674,f675,f676,f677,f678,f679,f680,f681,f682,f683,f684,f685,f686,f687,f688,f689,f690,f691,f692,f693,f694,f695,f696,f697,f698,f699,f736,f737,f738,f739,f740,f741,f742,f743,f744,f840,f857,f858,f860,f859,f861,f863,f862,f882,f883,f884,f885,f904,f905,f906,f907,f926,f928,f1002,f1003,f1004,f1005,f1045,f1048,f1046,f1051,f1054,f1052,f1056,f1059,f1057,f1060,f1061,f1064,f1065,f1067,f1068,f1076,f1104,f1281,f1284,f1285,f1287,f1282,f1288,f1289,f1290,f1291,f1495,f1497,f1496,f1498,f1500,f1499,f1501,f1502,f1503,f1504,f1505,f1506,f1642,f1643,f1644,f1645,f2068,f2070,f2069,f2071,f2073,f2072,f2074,f2075,f2241,f2243,f2244,f2245,f2246,f2247,f2242,f2248,f2249,f2250,f2251,f2252,f2253,f2313,f2317,f2321,f2323,f2324,f2326,f2314,f2327,f2328,f2329,f2330,f2331,f2332,f2390,f2394,f2398,f2400,f2401,f2403,f2391,f2404,f2405,f2406,f2407,f2408,f2409,f2410,f2411,f2412,f2413,f2449,f2453,f2457,f2459,f2460,f2462,f2450,f2488,f2489,f4001,f4002,f10438,f10439,f10440,f10441,f10442,f10443,f10444,f478,f10445,f10640,f10654,f10670,f257])).
fof(f257,plain,(
  s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) = s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) | $spl8),
  inference(cnf_transformation,[],[f257_D])).
fof(f257_D,plain,(
  s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) = s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f10670,plain,(
  s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) = s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) | ($spl50 | $spl130)),
  inference(forward_demodulation,[],[f10657,f110])).
fof(f110,plain,(
  ( ! [X0] : (s('type.frac.frac',X0) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : s('type.frac.frac',X0) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X19] : s('type.frac.frac',X19) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X19))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19)))))))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.frac.FRAC')).
fof(f10657,plain,(
  s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | ($spl50 | $spl130)),
  inference(backward_demodulation,[],[f10654,f1104])).
fof(f10654,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | $spl130),
  inference(cnf_transformation,[],[f10654_D])).
fof(f10654_D,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f10640,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ($spl10 | $spl12)),
  inference(unit_resulting_resolution,[],[f752,f1404])).
fof(f1404,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl10 | $spl12)),
  inference(superposition,[],[f799,f262])).
fof(f799,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) | $spl12),
  inference(superposition,[],[f142,f752])).
fof(f142,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(nnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))) <=> s('type.integer.int',X0) = s('type.integer.int',X1))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X11,X12] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12))) <=> s('type.integer.int',X11) = s('type.integer.int',X12))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.integer.INT_EQ_NEG')).
fof(f752,plain,(
  ( ! [X1] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1)))))) ) | $spl12),
  inference(superposition,[],[f476,f111])).
fof(f111,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X18] : s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X18))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X18))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18)))))))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.frac.frac_ainv_def')).
fof(f10445,plain,(
  ( ! [X19,X17,X18] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X19))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X17),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19)))) ) | $spl128),
  inference(cnf_transformation,[],[f10445_D])).
fof(f10445_D,plain,(
  ( ! [X19,X17,X18] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X19))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X17),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19)))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f478,plain,(
  ~p(s(bool,'T_0')) | $spl15),
  inference(cnf_transformation,[],[f478_D])).
fof(f478_D,plain,(
  ~p(s(bool,'T_0')) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f10444,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X19))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X17),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19)))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f10400,f354])).
fof(f354,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f239,f112])).
fof(f112,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.frac.FRAC_AINV_ONEONE',aHL_BOOL_CASES)).
fof(f239,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f108,f107,f168,f166])).
fof(f166,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,X1) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(duplicate_literal_removal,[],[f161])).
fof(f161,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X11,X16,X12,X17] : ((s(bool,X11) = s(bool,X16) & (p(s(bool,X16)) => s(bool,X12) = s(bool,X17))) => ((p(s(bool,X11)) => p(s(bool,X12))) <=> (p(s(bool,X16)) => p(s(bool,X17)))))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.IMP_CONG')).
fof(f107,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.frac.FRAC_AINV_ONEONE',aHL_FALSITY)).
fof(f108,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X19] : p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19))))))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.frac.FRAC_DNMPOS')).
fof(f10400,plain,(
  ( ! [X19,X17,X18] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X19))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X17),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(superposition,[],[f1658,f2581])).
fof(f2581,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3))))))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X2))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))))))) ) | ($spl12 | $spl16 | $spl24)),
  inference(backward_demodulation,[],[f2532,f1595])).
fof(f1595,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3))))))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3))))))))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))))))) ) | ($spl12 | $spl16 | $spl24)),
  inference(superposition,[],[f1013,f479])).
fof(f1013,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) ) | ($spl12 | $spl24)),
  inference(superposition,[],[f773,f923])).
fof(f923,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))) ) | $spl24),
  inference(forward_demodulation,[],[f912,f110])).
fof(f912,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))))))))) ) | $spl24),
  inference(unit_resulting_resolution,[],[f110,f883])).
fof(f773,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) ) | $spl12),
  inference(backward_demodulation,[],[f752,f111])).
fof(f2532,plain,(
  ( ! [X4,X3] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3))))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X4)))))))))))))) ) | ($spl12 | $spl16)),
  inference(superposition,[],[f798,f774])).
fof(f774,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))) ) | ($spl12 | $spl16)),
  inference(forward_demodulation,[],[f753,f479])).
fof(f753,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))))))) ) | $spl12),
  inference(superposition,[],[f111,f476])).
fof(f798,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))))) ) | $spl12),
  inference(superposition,[],[f752,f476])).
fof(f1658,plain,(
  ( ! [X59,X57,X58] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X58),s('type.integer.int',X59))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X57))))))))))) | s('type.integer.int',X59) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X57))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X59))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f1625,f479])).
fof(f1625,plain,(
  ( ! [X59,X57,X58] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X58),s('type.integer.int',X59))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X57))))))))))) | s('type.integer.int',X59) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X57))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X57))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X59))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(superposition,[],[f995,f1013])).
fof(f995,plain,(
  ( ! [X6,X8,X7] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) | s('type.integer.int',X8) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f985,f479])).
fof(f985,plain,(
  ( ! [X6,X8,X7] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) | s('type.integer.int',X8) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f877,f773])).
fof(f877,plain,(
  ( ! [X6,X8,X7] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) | s('type.integer.int',X8) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f868,f479])).
fof(f868,plain,(
  ( ! [X6,X8,X7] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) | s('type.integer.int',X8) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6)))))))))) ) | ($spl12 | $spl22)),
  inference(superposition,[],[f862,f773])).
fof(f10443,plain,(
  ( ! [X14,X15,X16] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X16))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16)))) ) | $spl126),
  inference(cnf_transformation,[],[f10443_D])).
fof(f10443_D,plain,(
  ( ! [X14,X15,X16] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X16))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16)))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f10442,plain,(
  ( ! [X14,X15,X16] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X16))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16)))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f10399,f354])).
fof(f10399,plain,(
  ( ! [X14,X15,X16] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X16))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(superposition,[],[f1658,f774])).
fof(f10441,plain,(
  ( ! [X12,X13,X11] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X11))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13)))) ) | $spl124),
  inference(cnf_transformation,[],[f10441_D])).
fof(f10441_D,plain,(
  ( ! [X12,X13,X11] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X11))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13)))) ) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f10440,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X11))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13)))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f10398,f354])).
fof(f10398,plain,(
  ( ! [X12,X13,X11] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X11))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(superposition,[],[f1658,f1998])).
fof(f1998,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))) ) | ($spl12 | $spl16)),
  inference(superposition,[],[f774,f752])).
fof(f10439,plain,(
  ( ! [X10] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | $spl122),
  inference(cnf_transformation,[],[f10439_D])).
fof(f10439_D,plain,(
  ( ! [X10] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f10438,plain,(
  ( ! [X10] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24 | $spl50)),
  inference(forward_demodulation,[],[f10397,f354])).
fof(f10397,plain,(
  ( ! [X10] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24 | $spl50)),
  inference(superposition,[],[f1658,f1104])).
fof(f4002,plain,(
  ( ! [X54,X53] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X53))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X54))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X53))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X54)))) ) | $spl120),
  inference(cnf_transformation,[],[f4002_D])).
fof(f4002_D,plain,(
  ( ! [X54,X53] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X53))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X54))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X53))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X54)))) ) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f4001,plain,(
  ( ! [X54,X53] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X53))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X54))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X53))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X54)))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl34)),
  inference(forward_demodulation,[],[f3905,f354])).
fof(f3905,plain,(
  ( ! [X54,X53] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X53))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X54))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X53))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X54))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X53))))))) ) | ($spl12 | $spl16 | $spl22 | $spl34)),
  inference(superposition,[],[f1272,f1302])).
fof(f1302,plain,(
  ( ! [X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))))))) ) | ($spl12 | $spl34)),
  inference(superposition,[],[f773,f1133])).
fof(f1133,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f1123,f110])).
fof(f1123,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f110,f1003])).
fof(f1272,plain,(
  ( ! [X6,X8,X7] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))))))) | s('type.integer.int',X8) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f1255,f479])).
fof(f1255,plain,(
  ( ! [X6,X8,X7] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X7),s('type.integer.int',X8))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))))))) | s('type.integer.int',X8) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f995,f773])).
fof(f2489,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X1) != s('type.integer.int',X2) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) ) | $spl118),
  inference(cnf_transformation,[],[f2489_D])).
fof(f2489_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X1) != s('type.integer.int',X2) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) ) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f2488,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.integer.int',X1) != s('type.integer.int',X2) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) ) | ($spl1 | $spl42)),
  inference(forward_demodulation,[],[f2443,f354])).
fof(f2443,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) | s('type.integer.int',X1) != s('type.integer.int',X2) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) ) | $spl42),
  inference(equality_resolution,[],[f1057])).
fof(f2450,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) | s('type.integer.int',X11) != s('type.integer.int',X12) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X12),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9)))))))) ) | $spl114),
  inference(cnf_transformation,[],[f2450_D])).
fof(f2450_D,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) | s('type.integer.int',X11) != s('type.integer.int',X12) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X12),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9)))))))) ) <=> ~$spl114),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl114])])).
fof(f2462,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X27),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X28),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))))))) | ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26))) | s('type.integer.int',X27) != s('type.integer.int',X28)) ) | ($spl1 | $spl16 | $spl42)),
  inference(forward_demodulation,[],[f2461,f479])).
fof(f2461,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26))) | s('type.integer.int',X27) != s('type.integer.int',X28) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X27),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X28),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X24),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25)))))))))))))) ) | ($spl1 | $spl16 | $spl42)),
  inference(forward_demodulation,[],[f2430,f354])).
fof(f2430,plain,(
  ( ! [X28,X26,X24,X27,X25] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X24),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25)))))))))))) | s('type.integer.int',X27) != s('type.integer.int',X28) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X27),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X28),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X24),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25)))))))))))))) ) | ($spl16 | $spl42)),
  inference(superposition,[],[f1057,f479])).
fof(f2460,plain,(
  ( ! [X23,X21,X22] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X23),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | s('type.integer.int',X22) != s('type.integer.int',X23) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | $spl116),
  inference(cnf_transformation,[],[f2460_D])).
fof(f2460_D,plain,(
  ( ! [X23,X21,X22] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X23),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | s('type.integer.int',X22) != s('type.integer.int',X23) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f2459,plain,(
  ( ! [X23,X21,X22] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X23),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.integer.int',X22) != s('type.integer.int',X23)) ) | ($spl1 | $spl32 | $spl42)),
  inference(forward_demodulation,[],[f2458,f928])).
fof(f2458,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.integer.int',X22) != s('type.integer.int',X23) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X23),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) | ($spl1 | $spl32 | $spl42)),
  inference(forward_demodulation,[],[f2429,f354])).
fof(f2429,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))) | s('type.integer.int',X22) != s('type.integer.int',X23) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X23),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) | ($spl32 | $spl42)),
  inference(superposition,[],[f1057,f928])).
fof(f2457,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X20),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) | ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) | s('type.integer.int',X19) != s('type.integer.int',X20)) ) | ($spl1 | $spl24 | $spl42 | $spl56)),
  inference(forward_demodulation,[],[f2456,f923])).
fof(f2456,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X20),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17))))))))) | ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) | s('type.integer.int',X19) != s('type.integer.int',X20)) ) | ($spl1 | $spl24 | $spl42 | $spl56)),
  inference(forward_demodulation,[],[f2455,f923])).
fof(f2455,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X20),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17))))))))))) | ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) | s('type.integer.int',X19) != s('type.integer.int',X20)) ) | ($spl1 | $spl24 | $spl42 | $spl56)),
  inference(forward_demodulation,[],[f2454,f923])).
fof(f2454,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) | s('type.integer.int',X19) != s('type.integer.int',X20) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X20),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17)))))))))))))) ) | ($spl1 | $spl42 | $spl56)),
  inference(forward_demodulation,[],[f2428,f354])).
fof(f2428,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17)))))))))))) | s('type.integer.int',X19) != s('type.integer.int',X20) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X20),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17)))))))))))))) ) | ($spl42 | $spl56)),
  inference(superposition,[],[f1057,f1423])).
fof(f1423,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))))))) ) | $spl56),
  inference(forward_demodulation,[],[f1413,f110])).
fof(f1413,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0)))))))))))))))) ) | $spl56),
  inference(unit_resulting_resolution,[],[f110,f1289])).
fof(f2453,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X16),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) | ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))) | s('type.integer.int',X15) != s('type.integer.int',X16)) ) | ($spl1 | $spl24 | $spl34 | $spl42)),
  inference(forward_demodulation,[],[f2452,f923])).
fof(f2452,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X16),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))))) | ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))) | s('type.integer.int',X15) != s('type.integer.int',X16)) ) | ($spl1 | $spl24 | $spl34 | $spl42)),
  inference(forward_demodulation,[],[f2451,f923])).
fof(f2451,plain,(
  ( ! [X14,X15,X13,X16] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))) | s('type.integer.int',X15) != s('type.integer.int',X16) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X16),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13)))))))))))) ) | ($spl1 | $spl34 | $spl42)),
  inference(forward_demodulation,[],[f2427,f354])).
fof(f2427,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13)))))))))) | s('type.integer.int',X15) != s('type.integer.int',X16) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X16),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13)))))))))))) ) | ($spl34 | $spl42)),
  inference(superposition,[],[f1057,f1133])).
fof(f2449,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X12),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))) | ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) | s('type.integer.int',X11) != s('type.integer.int',X12)) ) | ($spl1 | $spl24 | $spl42)),
  inference(forward_demodulation,[],[f2448,f923])).
fof(f2448,plain,(
  ( ! [X12,X10,X11,X9] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) | s('type.integer.int',X11) != s('type.integer.int',X12) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X12),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9)))))))))) ) | ($spl1 | $spl24 | $spl42)),
  inference(forward_demodulation,[],[f2426,f354])).
fof(f2426,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9)))))))) | s('type.integer.int',X11) != s('type.integer.int',X12) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X12),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9)))))))))) ) | ($spl24 | $spl42)),
  inference(superposition,[],[f1057,f923])).
fof(f2413,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X7),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9)))) ) | $spl112),
  inference(cnf_transformation,[],[f2413_D])).
fof(f2413_D,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X7),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9)))) ) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f2412,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X7),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9)))) ) | ($spl1 | $spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f2376,f354])).
fof(f2376,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X7),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f1272,f774])).
fof(f2411,plain,(
  ( ! [X6] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | $spl110),
  inference(cnf_transformation,[],[f2411_D])).
fof(f2411_D,plain,(
  ( ! [X6] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f2410,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl50)),
  inference(forward_demodulation,[],[f2375,f354])).
fof(f2375,plain,(
  ( ! [X6] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X6))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X6))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) ) | ($spl12 | $spl16 | $spl22 | $spl50)),
  inference(superposition,[],[f1272,f1104])).
fof(f2409,plain,(
  ( ! [X4,X5] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X4))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X5))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X4))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X5)))) ) | $spl108),
  inference(cnf_transformation,[],[f2409_D])).
fof(f2409_D,plain,(
  ( ! [X4,X5] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X4))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X5))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X4))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X5)))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f2408,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X4))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X5))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X4))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X5)))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f2374,f354])).
fof(f2374,plain,(
  ( ! [X4,X5] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X4))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X5))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X4))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X5))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X4))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(superposition,[],[f1272,f1013])).
fof(f2407,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) | $spl106),
  inference(cnf_transformation,[],[f2407_D])).
fof(f2407_D,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f2406,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) | ($spl1 | $spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f2373,f354])).
fof(f2373,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f1272,f773])).
fof(f2405,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) | $spl104),
  inference(cnf_transformation,[],[f2405_D])).
fof(f2405_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f2404,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) | ($spl1 | $spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f2372,f354])).
fof(f2372,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f1272,f110])).
fof(f2391,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9)))) ) | $spl100),
  inference(cnf_transformation,[],[f2391_D])).
fof(f2391_D,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9)))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f2403,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X21))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X20),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19)))))))) ) | ($spl1 | $spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f2402,f354])).
fof(f2402,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X21))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X20),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19))))))))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f2371,f479])).
fof(f2371,plain,(
  ( ! [X21,X19,X20,X18] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X21))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X20),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19))))))))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f1272,f479])).
fof(f2401,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X16),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) | $spl102),
  inference(cnf_transformation,[],[f2401_D])).
fof(f2401_D,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X16),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f2400,plain,(
  ( ! [X17,X16] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X16),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl32)),
  inference(forward_demodulation,[],[f2399,f354])).
fof(f2399,plain,(
  ( ! [X17,X16] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X16),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) ) | ($spl12 | $spl16 | $spl22 | $spl32)),
  inference(forward_demodulation,[],[f2370,f928])).
fof(f2370,plain,(
  ( ! [X17,X16] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X16),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) ) | ($spl12 | $spl16 | $spl22 | $spl32)),
  inference(superposition,[],[f1272,f928])).
fof(f2398,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X15))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13)))))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24 | $spl56)),
  inference(forward_demodulation,[],[f2397,f354])).
fof(f2397,plain,(
  ( ! [X14,X15,X13] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X15))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24 | $spl56)),
  inference(forward_demodulation,[],[f2396,f923])).
fof(f2396,plain,(
  ( ! [X14,X15,X13] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X15))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24 | $spl56)),
  inference(forward_demodulation,[],[f2395,f923])).
fof(f2395,plain,(
  ( ! [X14,X15,X13] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X15))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24 | $spl56)),
  inference(forward_demodulation,[],[f2369,f923])).
fof(f2369,plain,(
  ( ! [X14,X15,X13] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X15))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl56)),
  inference(superposition,[],[f1272,f1423])).
fof(f2394,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X12))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10)))))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24 | $spl34)),
  inference(forward_demodulation,[],[f2393,f354])).
fof(f2393,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X12))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24 | $spl34)),
  inference(forward_demodulation,[],[f2392,f923])).
fof(f2392,plain,(
  ( ! [X12,X10,X11] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X12))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24 | $spl34)),
  inference(forward_demodulation,[],[f2368,f923])).
fof(f2368,plain,(
  ( ! [X12,X10,X11] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X12))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl34)),
  inference(superposition,[],[f1272,f1133])).
fof(f2390,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7)))))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f2389,f354])).
fof(f2389,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X7))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f2367,f923])).
fof(f2367,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X7))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X7))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(superposition,[],[f1272,f923])).
fof(f2332,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14)))) ) | $spl98),
  inference(cnf_transformation,[],[f2332_D])).
fof(f2332_D,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14)))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f2331,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14)))) ) | ($spl1 | $spl12 | $spl16 | $spl40)),
  inference(forward_demodulation,[],[f2282,f354])).
fof(f2282,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12)))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14)))) ) | ($spl12 | $spl16 | $spl40)),
  inference(superposition,[],[f1052,f774])).
fof(f2330,plain,(
  ( ! [X10,X9] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | $spl96),
  inference(cnf_transformation,[],[f2330_D])).
fof(f2330_D,plain,(
  ( ! [X10,X9] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f2329,plain,(
  ( ! [X10,X9] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl1 | $spl40 | $spl50)),
  inference(forward_demodulation,[],[f2281,f354])).
fof(f2281,plain,(
  ( ! [X10,X9] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl40 | $spl50)),
  inference(superposition,[],[f1052,f1104])).
fof(f2328,plain,(
  ( ! [X2,X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2)))) ) | $spl94),
  inference(cnf_transformation,[],[f2328_D])).
fof(f2328_D,plain,(
  ( ! [X2,X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2)))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f2327,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.frac.frac',X0) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2)))) ) | ($spl1 | $spl40)),
  inference(forward_demodulation,[],[f2278,f354])).
fof(f2278,plain,(
  ( ! [X2,X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2)))) ) | $spl40),
  inference(superposition,[],[f1052,f110])).
fof(f2314,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12)))) ) | $spl90),
  inference(cnf_transformation,[],[f2314_D])).
fof(f2314_D,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12)))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f2326,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X28))) | ~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X26),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X27),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X28)))))))) ) | ($spl1 | $spl16 | $spl40)),
  inference(forward_demodulation,[],[f2325,f479])).
fof(f2325,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X26),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X27),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X28))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X28))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X24),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25)))))))))) ) | ($spl1 | $spl16 | $spl40)),
  inference(forward_demodulation,[],[f2277,f354])).
fof(f2277,plain,(
  ( ! [X28,X26,X24,X27,X25] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X26),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X27),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X28))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X24),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25)))))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X28))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X24),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25)))))))))) ) | ($spl16 | $spl40)),
  inference(superposition,[],[f1052,f479])).
fof(f2324,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) | $spl92),
  inference(cnf_transformation,[],[f2324_D])).
fof(f2324_D,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f2323,plain,(
  ( ! [X23,X21,X22] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) | ($spl1 | $spl32 | $spl40)),
  inference(forward_demodulation,[],[f2322,f928])).
fof(f2322,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl1 | $spl32 | $spl40)),
  inference(forward_demodulation,[],[f2276,f354])).
fof(f2276,plain,(
  ( ! [X23,X21,X22] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl32 | $spl40)),
  inference(superposition,[],[f1052,f928])).
fof(f2321,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))) | ~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20)))))))) ) | ($spl1 | $spl24 | $spl40 | $spl56)),
  inference(forward_demodulation,[],[f2320,f923])).
fof(f2320,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17))))) | ~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20)))))))) ) | ($spl1 | $spl24 | $spl40 | $spl56)),
  inference(forward_demodulation,[],[f2319,f923])).
fof(f2319,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17))))))) | ~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20)))))))) ) | ($spl1 | $spl24 | $spl40 | $spl56)),
  inference(forward_demodulation,[],[f2318,f923])).
fof(f2318,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17)))))))))) ) | ($spl1 | $spl40 | $spl56)),
  inference(forward_demodulation,[],[f2275,f354])).
fof(f2275,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17)))))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17)))))))))) ) | ($spl40 | $spl56)),
  inference(superposition,[],[f1052,f1423])).
fof(f2317,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16))) | ~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16)))))))) ) | ($spl1 | $spl24 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f2316,f923])).
fof(f2316,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13))))) | ~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16)))))))) ) | ($spl1 | $spl24 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f2315,f923])).
fof(f2315,plain,(
  ( ! [X14,X15,X13,X16] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13)))))))) ) | ($spl1 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f2274,f354])).
fof(f2274,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13)))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13)))))))) ) | ($spl34 | $spl40)),
  inference(superposition,[],[f1052,f1133])).
fof(f2313,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) | ~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12)))))))) ) | ($spl1 | $spl24 | $spl40)),
  inference(forward_demodulation,[],[f2312,f923])).
fof(f2312,plain,(
  ( ! [X12,X10,X11,X9] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9)))))) ) | ($spl1 | $spl24 | $spl40)),
  inference(forward_demodulation,[],[f2273,f354])).
fof(f2273,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9)))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9)))))) ) | ($spl24 | $spl40)),
  inference(superposition,[],[f1052,f923])).
fof(f2253,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | s('type.integer.int',X13) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))) ) | $spl88),
  inference(cnf_transformation,[],[f2253_D])).
fof(f2253_D,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | s('type.integer.int',X13) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f2252,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | s('type.integer.int',X13) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))) ) | ($spl1 | $spl12 | $spl16 | $spl38)),
  inference(forward_demodulation,[],[f2203,f354])).
fof(f2203,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12)))))) | s('type.integer.int',X13) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))) ) | ($spl12 | $spl16 | $spl38)),
  inference(superposition,[],[f1046,f774])).
fof(f2251,plain,(
  ( ! [X10,X9] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | s('type.integer.int',X9) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | $spl86),
  inference(cnf_transformation,[],[f2251_D])).
fof(f2251_D,plain,(
  ( ! [X10,X9] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | s('type.integer.int',X9) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f2250,plain,(
  ( ! [X10,X9] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | s('type.integer.int',X9) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl1 | $spl38 | $spl50)),
  inference(forward_demodulation,[],[f2202,f354])).
fof(f2202,plain,(
  ( ! [X10,X9] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))) | s('type.integer.int',X9) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl38 | $spl50)),
  inference(superposition,[],[f1046,f1104])).
fof(f2249,plain,(
  ( ! [X2,X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) | $spl84),
  inference(cnf_transformation,[],[f2249_D])).
fof(f2249_D,plain,(
  ( ! [X2,X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f2248,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.frac.frac',X0) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) | ($spl1 | $spl38)),
  inference(forward_demodulation,[],[f2199,f354])).
fof(f2199,plain,(
  ( ! [X2,X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) | $spl38),
  inference(superposition,[],[f1046,f110])).
fof(f2242,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))) | s('type.integer.int',X10) = s('type.integer.int',X11)) ) | $spl80),
  inference(cnf_transformation,[],[f2242_D])).
fof(f2242_D,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))) | s('type.integer.int',X10) = s('type.integer.int',X11)) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f2247,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X26),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X27),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X28))))))) | s('type.integer.int',X26) = s('type.integer.int',X27)) ) | ($spl1 | $spl16 | $spl38)),
  inference(forward_demodulation,[],[f2198,f354])).
fof(f2198,plain,(
  ( ! [X28,X26,X24,X27,X25] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X26),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X27),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X28))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X24),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25)))))))))))) | s('type.integer.int',X26) = s('type.integer.int',X27)) ) | ($spl16 | $spl38)),
  inference(superposition,[],[f1046,f479])).
fof(f2246,plain,(
  ( ! [X23,X21,X22] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | s('type.integer.int',X21) = s('type.integer.int',X22)) ) | $spl82),
  inference(cnf_transformation,[],[f2246_D])).
fof(f2246_D,plain,(
  ( ! [X23,X21,X22] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | s('type.integer.int',X21) = s('type.integer.int',X22)) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f2245,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | s('type.integer.int',X21) = s('type.integer.int',X22)) ) | ($spl1 | $spl32 | $spl38)),
  inference(forward_demodulation,[],[f2197,f354])).
fof(f2197,plain,(
  ( ! [X23,X21,X22] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X23))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))) | s('type.integer.int',X21) = s('type.integer.int',X22)) ) | ($spl32 | $spl38)),
  inference(superposition,[],[f1046,f928])).
fof(f2244,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))))))) | s('type.integer.int',X18) = s('type.integer.int',X19)) ) | ($spl1 | $spl38 | $spl56)),
  inference(forward_demodulation,[],[f2196,f354])).
fof(f2196,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17)))))))))))) | s('type.integer.int',X18) = s('type.integer.int',X19)) ) | ($spl38 | $spl56)),
  inference(superposition,[],[f1046,f1423])).
fof(f2243,plain,(
  ( ! [X14,X15,X13,X16] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16))))))) | s('type.integer.int',X14) = s('type.integer.int',X15)) ) | ($spl1 | $spl34 | $spl38)),
  inference(forward_demodulation,[],[f2195,f354])).
fof(f2195,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X16))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13)))))))))) | s('type.integer.int',X14) = s('type.integer.int',X15)) ) | ($spl34 | $spl38)),
  inference(superposition,[],[f1046,f1133])).
fof(f2241,plain,(
  ( ! [X12,X10,X11,X9] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))) | s('type.integer.int',X10) = s('type.integer.int',X11)) ) | ($spl1 | $spl24 | $spl38)),
  inference(forward_demodulation,[],[f2194,f354])).
fof(f2194,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9)))))))) | s('type.integer.int',X10) = s('type.integer.int',X11)) ) | ($spl24 | $spl38)),
  inference(superposition,[],[f1046,f923])).
fof(f2075,plain,(
  ( ! [X39,X38,X40] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X40))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X38),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X39))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X39))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X40)))) ) | $spl78),
  inference(cnf_transformation,[],[f2075_D])).
fof(f2075_D,plain,(
  ( ! [X39,X38,X40] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X40))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X38),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X39))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X39))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X40)))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f2074,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X40))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X38),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X39))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X39))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X40)))) ) | ($spl1 | $spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f2023,f354])).
fof(f2023,plain,(
  ( ! [X39,X38,X40] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X40))))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X38),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X39))))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X39))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X40))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X39))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f995,f774])).
fof(f2072,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X23),s('type.integer.int',X24))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X22))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X24)))) | s('type.integer.int',X24) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X22)))) ) | $spl76),
  inference(cnf_transformation,[],[f2072_D])).
fof(f2072_D,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X23),s('type.integer.int',X24))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X22))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X24)))) | s('type.integer.int',X24) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X22)))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f2073,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X27),s('type.integer.int',X28))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X25),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26))))))))) | s('type.integer.int',X28) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X28))))) ) | ($spl1 | $spl12 | $spl16)),
  inference(forward_demodulation,[],[f2019,f354])).
fof(f2019,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X27),s('type.integer.int',X28))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X25),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26))))))))) | s('type.integer.int',X28) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X26)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X28))))) ) | ($spl12 | $spl16)),
  inference(superposition,[],[f155,f774])).
fof(f155,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int',X1) = s('type.integer.int',X3) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ((s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | (s('type.integer.int',X0) = s('type.integer.int',X2) & s('type.integer.int',X1) = s('type.integer.int',X3))) & (s('type.integer.int',X0) != s('type.integer.int',X2) | s('type.integer.int',X1) != s('type.integer.int',X3) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ((s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | (s('type.integer.int',X0) = s('type.integer.int',X2) & s('type.integer.int',X1) = s('type.integer.int',X3))) & ((s('type.integer.int',X0) != s('type.integer.int',X2) | s('type.integer.int',X1) != s('type.integer.int',X3)) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))))),
  inference(nnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) <=> (s('type.integer.int',X0) = s('type.integer.int',X2) & s('type.integer.int',X1) = s('type.integer.int',X3))))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) <=> (s('type.integer.int',X0) = s('type.integer.int',X2) & s('type.integer.int',X1) = s('type.integer.int',X3)))))),
  inference(ennf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) => (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) <=> (s('type.integer.int',X0) = s('type.integer.int',X2) & s('type.integer.int',X1) = s('type.integer.int',X3)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X20,X21,X22,X23] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X21)))) => (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23)))) => (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X20),s('type.integer.int',X21))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X22),s('type.integer.int',X23))))) <=> (s('type.integer.int',X20) = s('type.integer.int',X22) & s('type.integer.int',X21) = s('type.integer.int',X23)))))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.frac.FRAC_EQ')).
fof(f2071,plain,(
  ( ! [X24,X23,X21,X22] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X23),s('type.integer.int',X24))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X22))))))))) | s('type.integer.int',X24) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X22))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X24))))) ) | ($spl1 | $spl12 | $spl16)),
  inference(forward_demodulation,[],[f2018,f354])).
fof(f2018,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X23),s('type.integer.int',X24))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X21),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X22))))))))) | s('type.integer.int',X24) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X22))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X24)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X22))))))) ) | ($spl12 | $spl16)),
  inference(superposition,[],[f155,f774])).
fof(f2069,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int',X16))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X16)))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13)))) ) | $spl74),
  inference(cnf_transformation,[],[f2069_D])).
fof(f2069_D,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int',X16))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X16)))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13)))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f2070,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int',X20))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X17),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))))) | s('type.integer.int',X19) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20))))) ) | ($spl1 | $spl12 | $spl16)),
  inference(forward_demodulation,[],[f2017,f354])).
fof(f2017,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int',X20))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X17),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))))) | s('type.integer.int',X19) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X17))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20))))) ) | ($spl12 | $spl16)),
  inference(superposition,[],[f154,f774])).
fof(f154,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int',X0) = s('type.integer.int',X2) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f2068,plain,(
  ( ! [X14,X15,X13,X16] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int',X16))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X16))))) ) | ($spl1 | $spl12 | $spl16)),
  inference(forward_demodulation,[],[f2016,f354])).
fof(f2016,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int',X16))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X13),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))))) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X13))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X16)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))) ) | ($spl12 | $spl16)),
  inference(superposition,[],[f154,f774])).
fof(f1645,plain,(
  ( ! [X21,X20] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X20))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X21))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21)))) ) | $spl72),
  inference(cnf_transformation,[],[f1645_D])).
fof(f1645_D,plain,(
  ( ! [X21,X20] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X20))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X21))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21)))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f1644,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X20))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X21))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21)))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f1604,f354])).
fof(f1604,plain,(
  ( ! [X21,X20] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X20))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X21))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X21))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X20))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(superposition,[],[f995,f1013])).
fof(f1643,plain,(
  ( ! [X19,X18] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X18))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X19))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19)))) ) | $spl70),
  inference(cnf_transformation,[],[f1643_D])).
fof(f1643_D,plain,(
  ( ! [X19,X18] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X18))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X19))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19)))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f1642,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X18))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X19))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19)))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f1603,f354])).
fof(f1603,plain,(
  ( ! [X19,X18] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X18))))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X19))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X19))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X18))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(superposition,[],[f877,f1013])).
fof(f1506,plain,(
  ( ! [X11] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X11))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | $spl68),
  inference(cnf_transformation,[],[f1506_D])).
fof(f1506_D,plain,(
  ( ! [X11] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X11))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f1505,plain,(
  ( ! [X11] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X11))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl50)),
  inference(forward_demodulation,[],[f1461,f354])).
fof(f1461,plain,(
  ( ! [X11] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X11))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) ) | ($spl12 | $spl16 | $spl22 | $spl50)),
  inference(superposition,[],[f995,f1104])).
fof(f1504,plain,(
  ( ! [X10] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | $spl66),
  inference(cnf_transformation,[],[f1504_D])).
fof(f1504_D,plain,(
  ( ! [X10] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f1503,plain,(
  ( ! [X10] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl50)),
  inference(forward_demodulation,[],[f1460,f354])).
fof(f1460,plain,(
  ( ! [X10] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) ) | ($spl12 | $spl16 | $spl22 | $spl50)),
  inference(superposition,[],[f877,f1104])).
fof(f1502,plain,(
  ( ! [X9] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | $spl64),
  inference(cnf_transformation,[],[f1502_D])).
fof(f1502_D,plain,(
  ( ! [X9] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f1501,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl1 | $spl22 | $spl50)),
  inference(forward_demodulation,[],[f1459,f354])).
fof(f1459,plain,(
  ( ! [X9] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X9))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | ($spl22 | $spl50)),
  inference(superposition,[],[f862,f1104])).
fof(f1499,plain,(
  ( ! [X4,X5] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int',X5))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) | s('type.integer.int',X5) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | $spl62),
  inference(cnf_transformation,[],[f1499_D])).
fof(f1499_D,plain,(
  ( ! [X4,X5] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int',X5))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) | s('type.integer.int',X5) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f1500,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X7))))) | s('type.integer.int',X7) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7))))) ) | ($spl1 | $spl50)),
  inference(forward_demodulation,[],[f1457,f354])).
fof(f1457,plain,(
  ( ! [X6,X7] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X7))))) | s('type.integer.int',X7) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7))))) ) | $spl50),
  inference(superposition,[],[f155,f1104])).
fof(f1498,plain,(
  ( ! [X4,X5] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int',X5))))) | s('type.integer.int',X5) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5))))) ) | ($spl1 | $spl50)),
  inference(forward_demodulation,[],[f1456,f354])).
fof(f1456,plain,(
  ( ! [X4,X5] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int',X5))))) | s('type.integer.int',X5) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) ) | $spl50),
  inference(superposition,[],[f155,f1104])).
fof(f1496,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) | $spl60),
  inference(cnf_transformation,[],[f1496_D])).
fof(f1496_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f1497,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) | ($spl1 | $spl50)),
  inference(forward_demodulation,[],[f1455,f354])).
fof(f1455,plain,(
  ( ! [X2,X3] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) | $spl50),
  inference(superposition,[],[f154,f1104])).
fof(f1495,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) ) | ($spl1 | $spl50)),
  inference(forward_demodulation,[],[f1454,f354])).
fof(f1454,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) ) | $spl50),
  inference(superposition,[],[f154,f1104])).
fof(f1291,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) | $spl58),
  inference(cnf_transformation,[],[f1291_D])).
fof(f1291_D,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f1290,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) | ($spl1 | $spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f1269,f354])).
fof(f1269,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f995,f773])).
fof(f1289,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) | $spl56),
  inference(cnf_transformation,[],[f1289_D])).
fof(f1289_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f1288,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) | ($spl1 | $spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f1268,f354])).
fof(f1268,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f995,f110])).
fof(f1282,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X8))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8)))) ) | $spl52),
  inference(cnf_transformation,[],[f1282_D])).
fof(f1282_D,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X8))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f1287,plain,(
  ( ! [X14,X15,X13] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13)))))))) ) | ($spl1 | $spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f1286,f354])).
fof(f1286,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X12),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f1267,f479])).
fof(f1267,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X14))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X12),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X12),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))))))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f995,f479])).
fof(f1285,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) | $spl54),
  inference(cnf_transformation,[],[f1285_D])).
fof(f1285_D,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f1284,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac'))))))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl32)),
  inference(forward_demodulation,[],[f1283,f354])).
fof(f1283,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) ) | ($spl12 | $spl16 | $spl22 | $spl32)),
  inference(forward_demodulation,[],[f1266,f928])).
fof(f1266,plain,(
  ( ! [X10,X11] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) ) | ($spl12 | $spl16 | $spl22 | $spl32)),
  inference(superposition,[],[f995,f928])).
fof(f1281,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X8))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7)))))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f1280,f354])).
fof(f1280,plain,(
  ( ! [X8,X7,X9] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X8))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X7))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f1265,f923])).
fof(f1265,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X8))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X8))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X7))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X7))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(superposition,[],[f995,f923])).
fof(f1104,plain,(
  s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | $spl50),
  inference(cnf_transformation,[],[f1104_D])).
fof(f1104_D,plain,(
  s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f1076,plain,(
  s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | $spl32),
  inference(superposition,[],[f110,f928])).
fof(f1068,plain,(
  ( ! [X72,X71,X73] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X72))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X73),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X71))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X71))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X72)))) ) | $spl48),
  inference(cnf_transformation,[],[f1068_D])).
fof(f1068_D,plain,(
  ( ! [X72,X71,X73] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X72))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X73),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X71))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X71))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X72)))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f1067,plain,(
  ( ! [X72,X71,X73] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X71))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X72))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X72))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X73),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X71)))))))) ) | ($spl1 | $spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f1066,f354])).
fof(f1066,plain,(
  ( ! [X72,X71,X73] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X71))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X72))) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X72))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X73),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X71))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X71))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f1038,f923])).
fof(f1038,plain,(
  ( ! [X72,X71,X73] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X72))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X73),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X71))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X72))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X71))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X71))))))))) ) | ($spl12 | $spl16 | $spl22 | $spl24)),
  inference(superposition,[],[f877,f923])).
fof(f1065,plain,(
  ( ! [X70,X68,X69] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X69))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X70),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X68))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X68))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X69)))) ) | $spl46),
  inference(cnf_transformation,[],[f1065_D])).
fof(f1065_D,plain,(
  ( ! [X70,X68,X69] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X69))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X70),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X68))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X68))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X69)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f1064,plain,(
  ( ! [X70,X68,X69] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X68))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X69))) | ~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X69))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X70),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X68)))))))) ) | ($spl1 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f1063,f923])).
fof(f1063,plain,(
  ( ! [X70,X68,X69] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X69))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X70),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X68))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X69))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X68)))))) ) | ($spl1 | $spl22 | $spl24)),
  inference(forward_demodulation,[],[f1037,f354])).
fof(f1037,plain,(
  ( ! [X70,X68,X69] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X69))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X70),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X68))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X68)))))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X69))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X68)))))) ) | ($spl22 | $spl24)),
  inference(superposition,[],[f862,f923])).
fof(f1061,plain,(
  ( ! [X61,X59,X60] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X60))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X61),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X59))))))) | s('type.integer.int',X61) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X60)))))) ) | $spl44),
  inference(cnf_transformation,[],[f1061_D])).
fof(f1061_D,plain,(
  ( ! [X61,X59,X60] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X60))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X61),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X59))))))) | s('type.integer.int',X61) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X60)))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f1060,plain,(
  ( ! [X61,X59,X60] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X60))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X61),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X59))))))) | s('type.integer.int',X61) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X60)))))) ) | ($spl1 | $spl20 | $spl24)),
  inference(forward_demodulation,[],[f1034,f354])).
fof(f1034,plain,(
  ( ! [X61,X59,X60] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X60))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X61),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X59))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X59)))))))) | s('type.integer.int',X61) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X60)))))) ) | ($spl20 | $spl24)),
  inference(superposition,[],[f859,f923])).
fof(f1057,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.integer.int',X50) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X49))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X50)))) | s('type.integer.int',X51) != s('type.integer.int',X52) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X52),s('type.integer.int',X50))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X51),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X49)))))))) ) | $spl42),
  inference(cnf_transformation,[],[f1057_D])).
fof(f1057_D,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.integer.int',X50) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X49))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X50)))) | s('type.integer.int',X51) != s('type.integer.int',X52) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X52),s('type.integer.int',X50))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X51),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X49)))))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f1059,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X55),s('type.integer.int',X54))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X56),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X53))))))) | s('type.integer.int',X54) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X53))) | s('type.integer.int',X55) != s('type.integer.int',X56) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X54))))) ) | ($spl1 | $spl24)),
  inference(forward_demodulation,[],[f1058,f354])).
fof(f1058,plain,(
  ( ! [X54,X56,X55,X53] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X55),s('type.integer.int',X54))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X56),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X53))))))) | s('type.integer.int',X54) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X53))) | s('type.integer.int',X55) != s('type.integer.int',X56) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X53)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X54))))) ) | $spl24),
  inference(forward_demodulation,[],[f1032,f923])).
fof(f1032,plain,(
  ( ! [X54,X56,X55,X53] : (s('type.integer.int',X54) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X53))) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X55),s('type.integer.int',X54))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X56),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X53))))))))) | s('type.integer.int',X55) != s('type.integer.int',X56) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X53)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X54))))) ) | $spl24),
  inference(superposition,[],[f156,f923])).
fof(f156,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int',X3) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int',X0) != s('type.integer.int',X2) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f1056,plain,(
  ( ! [X52,X50,X51,X49] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X52),s('type.integer.int',X50))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X51),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X49))))))) | s('type.integer.int',X50) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X49))) | s('type.integer.int',X51) != s('type.integer.int',X52) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X50))))) ) | ($spl1 | $spl24)),
  inference(forward_demodulation,[],[f1055,f354])).
fof(f1055,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X52),s('type.integer.int',X50))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X51),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X49))))))) | s('type.integer.int',X50) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X49))) | s('type.integer.int',X51) != s('type.integer.int',X52) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X50)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X49))))))))) ) | $spl24),
  inference(forward_demodulation,[],[f1031,f923])).
fof(f1031,plain,(
  ( ! [X52,X50,X51,X49] : (s('type.integer.int',X50) != s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X49))) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X52),s('type.integer.int',X50))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X51),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X49))))))))) | s('type.integer.int',X51) != s('type.integer.int',X52) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X50)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X49))))))))) ) | $spl24),
  inference(superposition,[],[f156,f923])).
fof(f1052,plain,(
  ( ! [X35,X33,X36,X34] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X35),s('type.integer.int',X36))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X34),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X33))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X36)))) | s('type.integer.int',X36) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X33)))) ) | $spl40),
  inference(cnf_transformation,[],[f1052_D])).
fof(f1052_D,plain,(
  ( ! [X35,X33,X36,X34] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X35),s('type.integer.int',X36))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X34),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X33))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X36)))) | s('type.integer.int',X36) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X33)))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1054,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,'T_0')) | s('type.integer.int',X43) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X41))) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X42),s('type.integer.int',X43))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X44),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X41))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X43))))) ) | ($spl1 | $spl24)),
  inference(forward_demodulation,[],[f1053,f354])).
fof(f1053,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.integer.int',X43) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X41))) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X42),s('type.integer.int',X43))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X44),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X41))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X41)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X43))))) ) | $spl24),
  inference(forward_demodulation,[],[f1029,f923])).
fof(f1029,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X42),s('type.integer.int',X43))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X44),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X41))))))) | s('type.integer.int',X43) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X41))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X41)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X43))))) ) | $spl24),
  inference(superposition,[],[f155,f923])).
fof(f1051,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | s('type.integer.int',X36) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X33))) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X35),s('type.integer.int',X36))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X34),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X33))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X36))))) ) | ($spl1 | $spl24)),
  inference(forward_demodulation,[],[f1050,f354])).
fof(f1050,plain,(
  ( ! [X35,X33,X36,X34] : (s('type.integer.int',X36) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X33))) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X35),s('type.integer.int',X36))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X34),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X33))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X36)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X33))))))))) ) | $spl24),
  inference(forward_demodulation,[],[f1027,f923])).
fof(f1027,plain,(
  ( ! [X35,X33,X36,X34] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X35),s('type.integer.int',X36))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X34),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X33))))))) | s('type.integer.int',X36) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X33))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X36)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X33))))))))) ) | $spl24),
  inference(superposition,[],[f155,f923])).
fof(f1046,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int',X20))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) | s('type.integer.int',X18) = s('type.integer.int',X19)) ) | $spl38),
  inference(cnf_transformation,[],[f1046_D])).
fof(f1046_D,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int',X20))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) | s('type.integer.int',X18) = s('type.integer.int',X19)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f1048,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X26),s('type.integer.int',X27))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X28),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))))))) | s('type.integer.int',X26) = s('type.integer.int',X28) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | ($spl1 | $spl24)),
  inference(forward_demodulation,[],[f1025,f354])).
fof(f1025,plain,(
  ( ! [X28,X26,X27,X25] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X26),s('type.integer.int',X27))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X28),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X25))))))) | s('type.integer.int',X26) = s('type.integer.int',X28) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X25)))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl24),
  inference(superposition,[],[f154,f923])).
fof(f1045,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int',X20))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) | s('type.integer.int',X18) = s('type.integer.int',X19) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20))))) ) | ($spl1 | $spl24)),
  inference(forward_demodulation,[],[f1023,f354])).
fof(f1023,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X19),s('type.integer.int',X20))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X18),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X17))))))) | s('type.integer.int',X18) = s('type.integer.int',X19) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X17))))))))) ) | $spl24),
  inference(superposition,[],[f154,f923])).
fof(f1005,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) | $spl36),
  inference(cnf_transformation,[],[f1005_D])).
fof(f1005_D,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1004,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) | ($spl1 | $spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f992,f354])).
fof(f992,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f877,f773])).
fof(f1003,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) | $spl34),
  inference(cnf_transformation,[],[f1003_D])).
fof(f1003_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f1002,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) | ($spl1 | $spl12 | $spl16 | $spl22)),
  inference(forward_demodulation,[],[f991,f354])).
fof(f991,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))) ) | ($spl12 | $spl16 | $spl22)),
  inference(superposition,[],[f877,f110])).
fof(f928,plain,(
  s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | $spl32),
  inference(cnf_transformation,[],[f928_D])).
fof(f928_D,plain,(
  s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f926,plain,(
  s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | ($spl10 | $spl24)),
  inference(forward_demodulation,[],[f908,f923])).
fof(f908,plain,(
  s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))) | ($spl10 | $spl24)),
  inference(unit_resulting_resolution,[],[f262,f883])).
fof(f907,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3)))))) ) | $spl30),
  inference(cnf_transformation,[],[f907_D])).
fof(f907_D,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3)))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f906,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3)))))) ) | ($spl1 | $spl12 | $spl20)),
  inference(forward_demodulation,[],[f894,f354])).
fof(f894,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2)))))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3)))))) ) | ($spl12 | $spl20)),
  inference(superposition,[],[f859,f773])).
fof(f905,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1)))))) ) | $spl28),
  inference(cnf_transformation,[],[f905_D])).
fof(f905_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1)))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f904,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1)))))) ) | ($spl1 | $spl20)),
  inference(forward_demodulation,[],[f893,f354])).
fof(f893,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1)))))) ) | $spl20),
  inference(superposition,[],[f859,f110])).
fof(f885,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) | $spl26),
  inference(cnf_transformation,[],[f885_D])).
fof(f885_D,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f884,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) | ($spl1 | $spl12 | $spl22)),
  inference(forward_demodulation,[],[f874,f354])).
fof(f874,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X2))) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2)))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3)))) ) | ($spl12 | $spl22)),
  inference(superposition,[],[f862,f773])).
fof(f883,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) | $spl24),
  inference(cnf_transformation,[],[f883_D])).
fof(f883_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f882,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) | ($spl1 | $spl22)),
  inference(forward_demodulation,[],[f873,f354])).
fof(f873,plain,(
  ( ! [X0,X1] : (s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))) ) | $spl22),
  inference(superposition,[],[f862,f110])).
fof(f862,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X7))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) | s('type.integer.int',X9) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7)))) ) | $spl22),
  inference(cnf_transformation,[],[f862_D])).
fof(f862_D,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X7))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) | s('type.integer.int',X9) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7)))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f863,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int',X12))))) | s('type.integer.int',X12) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12))))) ) | ($spl1 | $spl12)),
  inference(forward_demodulation,[],[f848,f354])).
fof(f848,plain,(
  ( ! [X12,X10,X11] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X10))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int',X12))))) | s('type.integer.int',X12) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))))) ) | $spl12),
  inference(superposition,[],[f155,f773])).
fof(f861,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X7))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) | s('type.integer.int',X9) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9))))) ) | ($spl1 | $spl12)),
  inference(forward_demodulation,[],[f847,f354])).
fof(f847,plain,(
  ( ! [X8,X7,X9] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X7))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) | s('type.integer.int',X9) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X7)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9))))) ) | $spl12),
  inference(superposition,[],[f155,f773])).
fof(f859,plain,(
  ( ! [X2,X3,X1] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1)))))) ) | $spl20),
  inference(cnf_transformation,[],[f859_D])).
fof(f859_D,plain,(
  ( ! [X2,X3,X1] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1)))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f860,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X4))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X5),s('type.integer.int',X6))))) | s('type.integer.int',X5) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X4))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6))))) ) | ($spl1 | $spl12)),
  inference(forward_demodulation,[],[f846,f354])).
fof(f846,plain,(
  ( ! [X6,X4,X5] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X4))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X5),s('type.integer.int',X6))))) | s('type.integer.int',X5) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X4))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X4))))))) ) | $spl12),
  inference(superposition,[],[f154,f773])).
fof(f858,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) | ($spl1 | $spl12)),
  inference(forward_demodulation,[],[f845,f354])).
fof(f845,plain,(
  ( ! [X2,X3,X1] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3))))) ) | $spl12),
  inference(superposition,[],[f154,f773])).
fof(f857,plain,(
  s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | $spl18),
  inference(cnf_transformation,[],[f857_D])).
fof(f857_D,plain,(
  s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f840,plain,(
  s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))))))) | ($spl10 | $spl12)),
  inference(superposition,[],[f773,f262])).
fof(f744,plain,(
  $false | $spl15),
  inference(global_subsumption,[],[f104,f478,f505,f503,f499,f497,f495,f493,f491,f489,f628,f629,f630,f636,f637])).
fof(f637,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl15),
  inference(resolution,[],[f478,f118])).
fof(f118,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.EQ_CLAUSES|split|3')).
fof(f636,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl15),
  inference(resolution,[],[f478,f120])).
fof(f120,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.EQ_CLAUSES|split|2')).
fof(f630,plain,(
  ( ! [X2] : (p(s(bool,X2))) ) | $spl15),
  inference(resolution,[],[f478,f121])).
fof(f121,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (~p(s(bool,'T_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(ennf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : ((p(s(bool,'T_0')) => p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10] : ((p(s(bool,'T_0')) => p(s(bool,X10))) <=> p(s(bool,X10)))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.IMP_CLAUSES|split|0')).
fof(f629,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) | $spl15),
  inference(resolution,[],[f478,f124])).
fof(f124,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,'T_0'))))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X10] : ((p(s(bool,X10)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.IMP_CLAUSES|split|1')).
fof(f628,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl15),
  inference(resolution,[],[f478,f130])).
fof(f130,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X10] : ((p(s(bool,X10)) => p(s(bool,X10))) <=> p(s(bool,'T_0')))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.IMP_CLAUSES|split|3')).
fof(f489,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl15),
  inference(unit_resulting_resolution,[],[f478,f130])).
fof(f491,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl15),
  inference(unit_resulting_resolution,[],[f478,f131])).
fof(f131,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f88])).
fof(f493,plain,(
  p(s(bool,'F_0')) | $spl15),
  inference(unit_resulting_resolution,[],[f478,f127])).
fof(f127,plain,(
  p(s(bool,'F_0')) | p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f85])).
fof(f85,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10] : ((p(s(bool,'F_0')) => p(s(bool,X10))) <=> p(s(bool,'T_0')))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.IMP_CLAUSES|split|2')).
fof(f495,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl15),
  inference(unit_resulting_resolution,[],[f478,f128])).
fof(f128,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f86])).
fof(f497,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl15),
  inference(unit_resulting_resolution,[],[f478,f124])).
fof(f499,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl15),
  inference(unit_resulting_resolution,[],[f478,f121])).
fof(f503,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl15),
  inference(unit_resulting_resolution,[],[f478,f118])).
fof(f505,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl15),
  inference(unit_resulting_resolution,[],[f478,f120])).
fof(f743,plain,(
  $false | $spl15),
  inference(global_subsumption,[],[f104,f478,f505,f503,f499,f497,f495,f493,f491,f489,f628,f629,f630,f636])).
fof(f742,plain,(
  $false | $spl15),
  inference(global_subsumption,[],[f104,f478,f505,f503,f499,f497,f495,f493,f491,f489,f628,f629,f630])).
fof(f741,plain,(
  $false | $spl15),
  inference(global_subsumption,[],[f104,f478,f505,f503,f499,f497,f495,f493,f491,f489,f628,f629])).
fof(f740,plain,(
  $false | $spl15),
  inference(global_subsumption,[],[f104,f478,f505,f503,f499,f497,f495,f493,f491,f489,f628])).
fof(f739,plain,(
  $false | $spl15),
  inference(global_subsumption,[],[f104,f478,f505,f503,f499,f497,f495,f493,f491,f489])).
fof(f738,plain,(
  $false | $spl15),
  inference(global_subsumption,[],[f104,f478,f505,f503,f499,f497,f495,f493,f491])).
fof(f737,plain,(
  $false | $spl15),
  inference(global_subsumption,[],[f104,f478,f505,f503,f499,f497,f495,f493])).
fof(f736,plain,(
  $false | $spl15),
  inference(global_subsumption,[],[f104,f478,f505,f503,f499,f497,f495])).
fof(f699,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f623])).
fof(f623,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f105,f478,f478,f166])).
fof(f105,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_AINV_ONEONE',aHL_TRUTH)).
fof(f698,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f622])).
fof(f622,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f106,f478,f478,f166])).
fof(f106,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.TRUTH')).
fof(f697,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f621])).
fof(f621,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f165,f478,f478,f166])).
fof(f165,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f136])).
fof(f136,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7] : ! [X11] : (s(X7,X11) = s(X7,X11) <=> p(s(bool,'T_0')))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.REFL_CLAUSE')).
fof(f696,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f615])).
fof(f615,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f105,f478,f166])).
fof(f695,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f614])).
fof(f614,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f106,f478,f166])).
fof(f694,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f613])).
fof(f613,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f165,f478,f166])).
fof(f693,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f611])).
fof(f611,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f105,f105,f354,f478,f164])).
fof(f164,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) != s(bool,X3) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X2)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f103])).
fof(f692,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f610])).
fof(f610,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f106,f105,f354,f478,f164])).
fof(f691,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f609])).
fof(f609,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f165,f105,f354,f478,f164])).
fof(f690,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f608])).
fof(f608,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f105,f106,f354,f478,f164])).
fof(f689,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f607])).
fof(f607,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f106,f106,f354,f478,f164])).
fof(f688,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f606])).
fof(f606,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f165,f106,f354,f478,f164])).
fof(f687,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f605])).
fof(f605,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f105,f165,f354,f478,f164])).
fof(f686,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f604])).
fof(f604,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f106,f165,f354,f478,f164])).
fof(f685,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f603])).
fof(f603,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f165,f165,f354,f478,f164])).
fof(f684,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f589])).
fof(f589,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f105,f478,f105,f478,f163])).
fof(f163,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f103])).
fof(f683,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f588])).
fof(f588,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f106,f478,f105,f478,f163])).
fof(f682,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f587])).
fof(f587,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f165,f478,f105,f478,f163])).
fof(f681,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f583])).
fof(f583,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f105,f478,f106,f478,f163])).
fof(f680,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f582])).
fof(f582,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f106,f478,f106,f478,f163])).
fof(f679,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f581])).
fof(f581,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f165,f478,f106,f478,f163])).
fof(f678,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f577])).
fof(f577,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f105,f478,f165,f478,f163])).
fof(f677,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f576])).
fof(f576,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f106,f478,f165,f478,f163])).
fof(f676,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f575])).
fof(f575,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f165,f478,f165,f478,f163])).
fof(f675,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f565])).
fof(f565,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f105,f105,f478,f163])).
fof(f674,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f564])).
fof(f564,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f106,f105,f478,f163])).
fof(f673,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f563])).
fof(f563,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f165,f105,f478,f163])).
fof(f672,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f562])).
fof(f562,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f105,f106,f478,f163])).
fof(f671,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f561])).
fof(f561,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f106,f106,f478,f163])).
fof(f670,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f560])).
fof(f560,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f165,f106,f478,f163])).
fof(f669,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f559])).
fof(f559,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f105,f165,f478,f163])).
fof(f668,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f558])).
fof(f558,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f106,f165,f478,f163])).
fof(f667,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f557])).
fof(f557,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f107,f165,f165,f478,f163])).
fof(f666,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f553])).
fof(f553,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f478,f105,f354,f478,f162])).
fof(f162,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) != s(bool,X3) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f103])).
fof(f665,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f551])).
fof(f551,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f478,f106,f354,f478,f162])).
fof(f664,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f549])).
fof(f549,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f478,f165,f354,f478,f162])).
fof(f663,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f545])).
fof(f545,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f105,f478,f354,f478,f162])).
fof(f662,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f544])).
fof(f544,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f106,f478,f354,f478,f162])).
fof(f661,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f543])).
fof(f543,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f165,f478,f354,f478,f162])).
fof(f660,plain,(
  $false | ($spl6 | $spl15)),
  inference(trivial_inequality_removal,[],[f542])).
fof(f542,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl15)),
  inference(unit_resulting_resolution,[],[f105,f107,f256,f478,f162])).
fof(f659,plain,(
  $false | ($spl6 | $spl15)),
  inference(trivial_inequality_removal,[],[f541])).
fof(f541,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl15)),
  inference(unit_resulting_resolution,[],[f106,f107,f256,f478,f162])).
fof(f658,plain,(
  $false | ($spl6 | $spl15)),
  inference(trivial_inequality_removal,[],[f540])).
fof(f540,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl15)),
  inference(unit_resulting_resolution,[],[f165,f107,f256,f478,f162])).
fof(f657,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f538])).
fof(f538,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f105,f105,f354,f478,f160])).
fof(f160,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) != s(bool,X3) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f103])).
fof(f656,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f537])).
fof(f537,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f106,f105,f354,f478,f160])).
fof(f655,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f536])).
fof(f536,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f165,f105,f354,f478,f160])).
fof(f654,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f535])).
fof(f535,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f105,f106,f354,f478,f160])).
fof(f653,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f534])).
fof(f534,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f106,f106,f354,f478,f160])).
fof(f652,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f533])).
fof(f533,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f165,f106,f354,f478,f160])).
fof(f651,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f532])).
fof(f532,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f105,f165,f354,f478,f160])).
fof(f650,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f531])).
fof(f531,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f106,f165,f354,f478,f160])).
fof(f649,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f530])).
fof(f530,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f165,f165,f354,f478,f160])).
fof(f648,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f526])).
fof(f526,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f478,f105,f354,f478,f158])).
fof(f158,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) != s(bool,X3) | ~p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,X3)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f103])).
fof(f647,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f524])).
fof(f524,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f478,f106,f354,f478,f158])).
fof(f646,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f522])).
fof(f522,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f478,f165,f354,f478,f158])).
fof(f645,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f518])).
fof(f518,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f105,f478,f354,f478,f158])).
fof(f644,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f517])).
fof(f517,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f106,f478,f354,f478,f158])).
fof(f643,plain,(
  $false | ($spl1 | $spl15)),
  inference(trivial_inequality_removal,[],[f516])).
fof(f516,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl15)),
  inference(unit_resulting_resolution,[],[f165,f478,f354,f478,f158])).
fof(f642,plain,(
  $false | ($spl6 | $spl15)),
  inference(trivial_inequality_removal,[],[f515])).
fof(f515,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl15)),
  inference(unit_resulting_resolution,[],[f105,f107,f256,f478,f158])).
fof(f641,plain,(
  $false | ($spl6 | $spl15)),
  inference(trivial_inequality_removal,[],[f514])).
fof(f514,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl15)),
  inference(unit_resulting_resolution,[],[f106,f107,f256,f478,f158])).
fof(f640,plain,(
  $false | ($spl6 | $spl15)),
  inference(trivial_inequality_removal,[],[f513])).
fof(f513,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl6 | $spl15)),
  inference(unit_resulting_resolution,[],[f165,f107,f256,f478,f158])).
fof(f512,plain,(
  $false | $spl15),
  inference(unit_resulting_resolution,[],[f478,f478,f130])).
fof(f510,plain,(
  $false | $spl15),
  inference(unit_resulting_resolution,[],[f478,f478,f124])).
fof(f508,plain,(
  $false | $spl15),
  inference(unit_resulting_resolution,[],[f478,f478,f121])).
fof(f506,plain,(
  $false | ($spl5 | $spl15)),
  inference(unit_resulting_resolution,[],[f254,f478,f120])).
fof(f504,plain,(
  $false | ($spl5 | $spl15)),
  inference(unit_resulting_resolution,[],[f254,f478,f118])).
fof(f639,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f502])).
fof(f502,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f478,f115])).
fof(f115,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.EQ_CLAUSES|split|0')).
fof(f638,plain,(
  $false | $spl15),
  inference(trivial_inequality_removal,[],[f501])).
fof(f501,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl15),
  inference(unit_resulting_resolution,[],[f478,f113])).
fof(f113,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.EQ_CLAUSES|split|1')).
fof(f500,plain,(
  $false | $spl15),
  inference(unit_resulting_resolution,[],[f107,f478,f121])).
fof(f498,plain,(
  $false | $spl15),
  inference(unit_resulting_resolution,[],[f107,f478,f124])).
fof(f496,plain,(
  $false | $spl15),
  inference(unit_resulting_resolution,[],[f165,f478,f128])).
fof(f494,plain,(
  $false | $spl15),
  inference(unit_resulting_resolution,[],[f107,f478,f127])).
fof(f492,plain,(
  $false | $spl15),
  inference(unit_resulting_resolution,[],[f165,f478,f131])).
fof(f490,plain,(
  $false | $spl15),
  inference(unit_resulting_resolution,[],[f107,f478,f130])).
fof(f488,plain,(
  $false | $spl15),
  inference(unit_resulting_resolution,[],[f165,f478])).
fof(f627,plain,(
  $false | $spl15),
  inference(resolution,[],[f478,f165])).
fof(f631,plain,(
  $false | $spl15),
  inference(resolution,[],[f478,f106])).
fof(f632,plain,(
  $false | $spl15),
  inference(resolution,[],[f478,f105])).
fof(f479,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2)))))))))) ) | $spl16),
  inference(cnf_transformation,[],[f479_D])).
fof(f479_D,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2)))))))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f420,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X2)))))))))) ) | $spl1),
  inference(superposition,[],[f140,f354])).
fof(f140,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X24,X25] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X25)))) => s('type.integer.int',X25) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X24),s('type.integer.int',X25))))))))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.frac.DNM')).
fof(f476,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))))) ) | $spl12),
  inference(cnf_transformation,[],[f476_D])).
fof(f476_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f419,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))))) ) | $spl1),
  inference(superposition,[],[f141,f354])).
fof(f141,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X24,X25] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X25)))) => s('type.integer.int',X24) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X24),s('type.integer.int',X25))))))))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.frac.NMR')).
fof(f256,plain,(
  s(bool,'F_0') = s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl6),
  inference(cnf_transformation,[],[f256_D])).
fof(f256_D,plain,(
  s(bool,'F_0') = s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f249,plain,(
  s(bool,'F_0') = s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(resolution,[],[f168,f118])).
fof(f248,plain,(
  s(bool,'F_0') = s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(resolution,[],[f168,f120])).
fof(f262,plain,(
  s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | $spl10),
  inference(cnf_transformation,[],[f262_D])).
fof(f262_D,plain,(
  s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f264,plain,(
  s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | $spl1),
  inference(forward_demodulation,[],[f263,f109])).
fof(f109,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))) = s('type.frac.frac',happ(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'),s('type.frac.frac',X0)))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))) = s('type.frac.frac',happ(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'),s('type.frac.frac',X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X26] : s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X26))) = s('type.frac.frac',happ(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'),s('type.frac.frac',X26)))),
  file('thm.frac.FRAC_AINV_ONEONE','ARITY_0_1_const.frac.frac_ainv')).
fof(f263,plain,(
  s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac',happ(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'),s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | $spl1),
  inference(forward_demodulation,[],[f244,f109])).
fof(f244,plain,(
  s('type.frac.frac',happ(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'),s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac',happ(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'),s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | $spl1),
  inference(resolution,[],[f168,f145])).
fof(f145,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2)))) | s(X0,happ(s(fun(X1,X0),X2),s(X1,sK0(X2,X1,X0)))) = s(X0,happ(s(fun(X1,X0),X2),s(X1,sK1(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2)))) | ! [X5,X6] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X6))) | s(X1,X5) = s(X1,X6))) & ((s(X0,happ(s(fun(X1,X0),X2),s(X1,sK0(X2,X1,X0)))) = s(X0,happ(s(fun(X1,X0),X2),s(X1,sK1(X2,X1,X0)))) & s(X1,sK0(X2,X1,X0)) != s(X1,sK1(X2,X1,X0))) | p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2)))) | ! [X5,X6] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X6))) | s(X1,X5) = s(X1,X6))) & (? [X3,X4] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) & s(X1,X3) != s(X1,X4)) | p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2))))))),
  inference(rectify,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2)))) | ! [X3,X4] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) | s(X1,X3) = s(X1,X4))) & (? [X3,X4] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) & s(X1,X3) != s(X1,X4)) | p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2))))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2)))) <=> ! [X3,X4] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) | s(X1,X3) = s(X1,X4)))),
  inference(ennf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2)))) <=> ! [X3,X4] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) => s(X1,X3) = s(X1,X4)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : ! [X2] : (p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2)))) <=> ! [X3,X4] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))) => s(X1,X3) = s(X1,X4)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X5] : (p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X7,X6),X5)))) <=> ! [X8,X9] : (s(X6,happ(s(fun(X7,X6),X5),s(X7,X8))) = s(X6,happ(s(fun(X7,X6),X5),s(X7,X9))) => s(X7,X8) = s(X7,X9)))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.bool.ONE_ONE_DEF')).
fof(f260,plain,(
  s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | $spl1),
  inference(forward_demodulation,[],[f259,f109])).
fof(f259,plain,(
  s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac',happ(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'),s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | $spl1),
  inference(forward_demodulation,[],[f169,f109])).
fof(f169,plain,(
  s('type.frac.frac',happ(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'),s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) = s('type.frac.frac',happ(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'),s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')))) | $spl1),
  inference(unit_resulting_resolution,[],[f168,f145])).
fof(f258,plain,(
  s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) | $spl9),
  inference(cnf_transformation,[],[f258_D])).
fof(f258_D,plain,(
  s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f170,plain,(
  s('type.frac.frac',sK0('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) != s('type.frac.frac',sK1('const.frac.frac_ainv_0','type.frac.frac','type.frac.frac')) | $spl1),
  inference(unit_resulting_resolution,[],[f168,f146])).
fof(f146,plain,(
  ( ! [X2,X0,X1] : (s(X1,sK0(X2,X1,X0)) != s(X1,sK1(X2,X1,X0)) | p(s(bool,'const.bool.ONE_ONE_1'(s(fun(X1,X0),X2))))) )),
  inference(cnf_transformation,[],[f96])).
fof(f252,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl3),
  inference(cnf_transformation,[],[f252_D])).
fof(f252_D,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f171,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f168,f113])).
fof(f172,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f168,f115])).
fof(f173,plain,(
  s(bool,'F_0') = s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f168,f118])).
fof(f174,plain,(
  s(bool,'F_0') = s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f168,f120])).
fof(f179,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f165,f165,f168,f163])).
fof(f180,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f106,f165,f168,f163])).
fof(f181,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f105,f165,f168,f163])).
fof(f184,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f165,f106,f168,f163])).
fof(f185,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f106,f106,f168,f163])).
fof(f186,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f105,f106,f168,f163])).
fof(f189,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f165,f105,f168,f163])).
fof(f190,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f106,f105,f168,f163])).
fof(f191,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f105,f105,f168,f163])).
fof(f194,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f165,f108,f168,f163])).
fof(f195,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f106,f108,f168,f163])).
fof(f196,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f105,f108,f168,f163])).
fof(f254,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl5),
  inference(cnf_transformation,[],[f254_D])).
fof(f254_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f199,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f165,f107,f165,f168,f163])).
fof(f200,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f106,f107,f165,f168,f163])).
fof(f201,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f105,f107,f165,f168,f163])).
fof(f203,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f165,f168,f165,f168,f163])).
fof(f204,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f106,f168,f165,f168,f163])).
fof(f205,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f105,f168,f165,f168,f163])).
fof(f207,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f165,f107,f106,f168,f163])).
fof(f208,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f106,f107,f106,f168,f163])).
fof(f209,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f105,f107,f106,f168,f163])).
fof(f211,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f165,f168,f106,f168,f163])).
fof(f212,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f106,f168,f106,f168,f163])).
fof(f213,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f105,f168,f106,f168,f163])).
fof(f215,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f165,f107,f105,f168,f163])).
fof(f216,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f106,f107,f105,f168,f163])).
fof(f217,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f105,f107,f105,f168,f163])).
fof(f219,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f165,f168,f105,f168,f163])).
fof(f220,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f106,f168,f105,f168,f163])).
fof(f221,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f105,f168,f105,f168,f163])).
fof(f223,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f165,f107,f108,f168,f163])).
fof(f224,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f106,f107,f108,f168,f163])).
fof(f225,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f105,f107,f108,f168,f163])).
fof(f227,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f165,f168,f108,f168,f163])).
fof(f228,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f106,f168,f108,f168,f163])).
fof(f229,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f105,f168,f108,f168,f163])).
fof(f231,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f165,f168,f166])).
fof(f232,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f106,f168,f166])).
fof(f233,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f107,f105,f168,f166])).
fof(f236,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f165,f107,f168,f166])).
fof(f237,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f106,f107,f168,f166])).
fof(f238,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f105,f107,f168,f166])).
fof(f240,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f165,f168,f168,f166])).
fof(f241,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f106,f168,f168,f166])).
fof(f242,plain,(
  s(bool,'T_0') != s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))) | $spl1),
  inference(unit_resulting_resolution,[],[f105,f168,f168,f166])).
fof(f168,plain,(
  ~p(s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0')))) | $spl1),
  inference(cnf_transformation,[],[f168_D])).
fof(f168_D,plain,(
  ~p(s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0')))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f104,plain,(
  ~p(s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))))),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ~p(s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))))),
  inference(flattening,[],[f6])).
fof(f6,negated_conjecture,(
  ~p(s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  p(s(bool,'const.bool.ONE_ONE_1'(s(fun('type.frac.frac','type.frac.frac'),'const.frac.frac_ainv_0'))))),
  file('thm.frac.FRAC_AINV_ONEONE','thm.frac.FRAC_AINV_ONEONE')).
% SZS output end Proof for thm.frac
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 152
% Passive clauses: 449
% Generated clauses: 10492
% Final active clauses: 141
% Final passive clauses: 288
% Input formulas: 28
% Initial clauses: 61
% 
% Duplicate literals: 4
% Trivial inequalities: 71
% Fw demodulations: 5573
% Bw demodulations: 22
% Global subsumptions: 9
% 
% Simple tautologies: 21
% Equational tautologies: 35
% Forward subsumptions: 3736
% Backward subsumptions: 38
% Fw demodulations to eq. taut.: 387
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 17
% Unit resulting resolution: 874
% Forward superposition: 2471
% Backward superposition: 1322
% Self superposition: 14
% Equality resolution: 48
% 
% Split clauses: 77
% Split components: 154
% SAT solver clauses: 824
% SAT solver unit clauses: 50
% SAT solver binary clauses: 184
% 
% Sat splits: 77
% Sat splitting refutations: 86
% 
% Memory used [KB]: 9083
% Time elapsed: 0.381 s
% ------------------------------
% ------------------------------
% Success in time 18.472 s
