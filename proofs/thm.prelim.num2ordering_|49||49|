Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.prelim
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.prelim
% SZS output start Proof for thm.prelim
fof(f333,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f332,f326,f30,f45,f43,f29,f44,f42])).
fof(f42,plain,(
  s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK1))) | $spl0),
  inference(cnf_transformation,[],[f42_D])).
fof(f42_D,plain,(
  s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f44,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl2),
  inference(cnf_transformation,[],[f44_D])).
fof(f44_D,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f29,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & (s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK1))) | s('type.num.num',sK0) = s('type.num.num',sK1)) & (s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))) != s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK1))) | s('type.num.num',sK0) != s('type.num.num',sK1))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f23])).
fof(f23,plain,(
  ? [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & (s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0))) != s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ? [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & ((s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0))) != s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1))))),
  inference(nnf_transformation,[],[f18])).
fof(f18,plain,(
  ? [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & (s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X1))) <~> s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(flattening,[],[f17])).
fof(f17,plain,(
  ? [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) & (s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X1))) <~> s('type.num.num',X0) = s('type.num.num',X1))))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => (s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => (s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X6))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) => (s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X6))) = s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))))),
  file('thm.prelim.num2ordering_|49||49|','thm.prelim.num2ordering_|49||49|')).
fof(f43,plain,(
  s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))) != s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK1))) | $spl1),
  inference(cnf_transformation,[],[f43_D])).
fof(f43_D,plain,(
  s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))) != s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f45,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | $spl3),
  inference(cnf_transformation,[],[f45_D])).
fof(f45_D,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f30,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))) != s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f24])).
fof(f326,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f325,f45])).
fof(f325,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl0),
  inference(forward_demodulation,[],[f320,f309])).
fof(f309,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0)))))),
  inference(resolution,[],[f35,f27])).
fof(f27,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(cnf_transformation,[],[f24])).
fof(f35,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num',X0) = s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.num.num',X0) = s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0)))))) & (s('type.num.num',X0) != s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(nnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> s('type.num.num',X0) = s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> s('type.num.num',X6) = s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',X6))))))),
  file('thm.prelim.num2ordering_|49||49|','thm.prelim.ordering_BIJ|split|1')).
fof(f320,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))))) | $spl0),
  inference(forward_demodulation,[],[f310,f42])).
fof(f310,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.prelim.ordering2num_1'(s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK1)))))),
  inference(resolution,[],[f35,f28])).
fof(f28,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(cnf_transformation,[],[f24])).
fof(f332,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f331])).
fof(f331,plain,(
  s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))) != s('type.prelim.ordering','const.prelim.num2ordering_1'(s('type.num.num',sK0))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f43,f44])).
% SZS output end Proof for thm.prelim
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 21
% Passive clauses: 67
% Generated clauses: 289
% Final active clauses: 16
% Final passive clauses: 34
% Input formulas: 8
% Initial clauses: 15
% 
% Duplicate literals: 38
% Trivial inequalities: 3
% Fw subsumption resolutions: 21
% Fw demodulations: 4
% Bw demodulations: 1
% 
% Simple tautologies: 18
% Equational tautologies: 16
% Forward subsumptions: 116
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 32
% Factoring: 1
% Forward superposition: 37
% Backward superposition: 76
% Self superposition: 25
% Equality factoring: 26
% 
% Split clauses: 9
% Split components: 18
% SAT solver clauses: 16
% SAT solver unit clauses: 4
% SAT solver binary clauses: 11
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 9
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 14
% TWLsolver calls for satisfiability: 8
% 
% Memory used [KB]: 767
% Time elapsed: 0.017 s
% ------------------------------
% ------------------------------
% Success in time 0.018 s
