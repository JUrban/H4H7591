Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.while
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.while
% SZS output start Proof for thm.while
fof(f2276,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2260,f58,f88,f154,f85,f57,f90,f86,f59,f93,f61,f96])).
fof(f96,plain,(
  ~p(s(bool,'F_0')) | $spl13),
  inference(cnf_transformation,[],[f96_D])).
fof(f96_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f61,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.while.LEAST_EXISTS_IMP',aHL_FALSITY)).
fof(f93,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f93_D])).
fof(f93_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f59,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.while.LEAST_EXISTS_IMP',aHL_TRUTH)).
fof(f86,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) | $spl1),
  inference(cnf_transformation,[],[f86_D])).
fof(f86_D,plain,(
  ~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f90,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) | $spl4),
  inference(cnf_transformation,[],[f90_D])).
fof(f90_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f57,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0))))))),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK1)))) & (~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) & p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f37])).
fof(f37,plain,(
  ? [X0] : (? [X2] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))) & (~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ? [X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))))))),
  inference(rectify,[],[f29])).
fof(f29,plain,(
  ? [X0] : (? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) & (~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ? [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ~! [X0] : (? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) => (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) => ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))))))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ~! [X0] : (? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) => (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) => ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (? [X7] : p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',X7)))) => (p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X6)))))) & ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X6)))))) => ~p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (? [X7] : p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',X7)))) => (p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X6)))))) & ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X6)))))) => ~p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',X7)))))))),
  file('thm.while.LEAST_EXISTS_IMP','thm.while.LEAST_EXISTS_IMP')).
fof(f85,plain,(
  p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) | $spl0),
  inference(cnf_transformation,[],[f85_D])).
fof(f85_D,plain,(
  p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f154,plain,(
  p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) | ($spl8 | $spl13)),
  inference(subsumption_resolution,[],[f151,f93])).
fof(f151,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0)))))) | $spl13),
  inference(superposition,[],[f78,f107])).
fof(f107,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK1))) | $spl13),
  inference(subsumption_resolution,[],[f103,f96])).
fof(f103,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK1)))),
  inference(superposition,[],[f56,f62])).
fof(f62,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.while.LEAST_EXISTS_IMP',aHL_BOOL_CASES)).
fof(f56,plain,(
  p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f38])).
fof(f78,plain,(
  ( ! [X4,X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X4)))) | p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : ((! [X4] : ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X4)))) | (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X3))))))) & (~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK3(X0)),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK3(X0)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK4(X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4])],[f51])).
fof(f51,plain,(
  ! [X0] : ((! [X4] : ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X4)))) | (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X3))))))) & (~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ? [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2))))) | ? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f50])).
fof(f50,plain,(
  ! [X0] : ((! [X1] : ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) | (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & ! [X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2))))))) & (~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ? [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2))))) | ? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1))))))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ((! [X1] : ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) | (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & ! [X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2))))))) & ((~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ? [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))))) | ? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : (? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) <=> (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & ! [X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))))))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) <=> (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) => ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))))))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : (? [X1] : p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X1)))) <=> (p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) & ! [X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) => ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X2)))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : (? [X7] : p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',X7)))) <=> (p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X6)))))) & ! [X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X6)))))) => ~p(s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',X7)))))))),
  file('thm.while.LEAST_EXISTS_IMP','thm.while.LEAST_EXISTS')).
fof(f88,plain,(
  p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK2)))) | $spl2),
  inference(cnf_transformation,[],[f88_D])).
fof(f88_D,plain,(
  p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK2)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f58,plain,(
  p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK2)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0))))))),
  inference(cnf_transformation,[],[f38])).
fof(f2260,plain,(
  $false | ($spl2 | $spl4 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f2233,f93])).
fof(f2233,plain,(
  ~p(s(bool,'T_0')) | ($spl2 | $spl4 | $spl8 | $spl13)),
  inference(superposition,[],[f2217,f107])).
fof(f2217,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',X0))))) ) | ($spl2 | $spl4 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f2216,f93])).
fof(f2216,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',X0))))) ) | ($spl2 | $spl4 | $spl8 | $spl13)),
  inference(forward_demodulation,[],[f2215,f108])).
fof(f108,plain,(
  s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK2))) | ($spl2 | $spl13)),
  inference(subsumption_resolution,[],[f104,f96])).
fof(f104,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK2))) | $spl2),
  inference(superposition,[],[f88,f62])).
fof(f2215,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK2)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',X0))))) ) | ($spl4 | $spl8 | $spl13)),
  inference(subsumption_resolution,[],[f2190,f93])).
fof(f2190,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',sK2)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),sK0),s('type.num.num',X0))))) ) | ($spl4 | $spl13)),
  inference(superposition,[],[f79,f138])).
fof(f138,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0))))) | ($spl4 | $spl13)),
  inference(subsumption_resolution,[],[f137,f96])).
fof(f137,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),sK0))))) | $spl4),
  inference(superposition,[],[f90,f62])).
fof(f79,plain,(
  ( ! [X4,X0,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.while.LEAST_1'(s(fun('type.num.num',bool),X0)))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X3)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',X4))))) )),
  inference(cnf_transformation,[],[f52])).
% SZS output end Proof for thm.while
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 30
% Passive clauses: 294
% Generated clauses: 2122
% Final active clauses: 21
% Final passive clauses: 247
% Input formulas: 13
% Initial clauses: 29
% 
% Duplicate literals: 321
% Trivial inequalities: 19
% Fw subsumption resolutions: 149
% Fw demodulations: 2
% Bw demodulations: 6
% 
% Simple tautologies: 81
% Equational tautologies: 67
% Forward subsumptions: 945
% 
% Binary resolution: 19
% Forward superposition: 559
% Backward superposition: 621
% Self superposition: 186
% Equality factoring: 178
% 
% Split clauses: 146
% Split components: 293
% SAT solver clauses: 258
% SAT solver unit clauses: 53
% SAT solver binary clauses: 72
% SAT solver learnt clauses: 1
% 
% Sat splits: 146
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 251
% TWLsolver calls for satisfiability: 16
% 
% Memory used [KB]: 1279
% Time elapsed: 0.072 s
% ------------------------------
% ------------------------------
% Success in time 0.073 s
