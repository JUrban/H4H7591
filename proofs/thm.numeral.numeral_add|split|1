Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f172,plain,(
  $false),
  inference(subsumption_resolution,[],[f171,f83])).
fof(f83,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X11] : s('type.num.num',X11) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X11)))),
  file('thm.numeral.numeral_add|split|1','thm.numeral.iZ')).
fof(f171,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num',sK0)))),
  inference(forward_demodulation,[],[f78,f138])).
fof(f138,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f84,f81])).
fof(f81,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.numeral_add|split|1','thm.arithmetic.ALT_ZERO')).
fof(f84,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_add|split|1','thm.arithmetic.ADD_|48|')).
fof(f78,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f58])).
fof(f58,plain,(
  ? [X0] : s('type.num.num',X0) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(ennf_transformation,[],[f30])).
fof(f30,plain,(
  ~! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num',X6) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.numeral.numeral_add|split|1','thm.numeral.numeral_add|split|1')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 12
% Passive clauses: 35
% Generated clauses: 90
% Final active clauses: 12
% Final passive clauses: 12
% Input formulas: 28
% Initial clauses: 44
% 
% Duplicate literals: 2
% Trivial inequalities: 3
% Fw subsumption resolutions: 1
% Fw demodulations: 3
% 
% Simple tautologies: 15
% Equational tautologies: 4
% Forward subsumptions: 29
% 
% Binary resolution: 5
% Forward superposition: 6
% Backward superposition: 16
% Self superposition: 5
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 8
% SAT solver unit clauses: 4
% SAT solver binary clauses: 4
% 
% Sat splits: 4
% 
% TWLsolver clauses: 8
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 639
% Time elapsed: 0.013 s
% ------------------------------
% ------------------------------
% Success in time 0.019 s
