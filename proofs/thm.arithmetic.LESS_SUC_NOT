Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f337,plain,(
  $false),
  inference(subsumption_resolution,[],[f336,f25])).
fof(f25,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.LESS_SUC_NOT',aHL_TRUTH)).
fof(f336,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f335,f40])).
fof(f40,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),
  inference(subsumption_resolution,[],[f36,f26])).
fof(f26,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f11])).
fof(f11,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.LESS_SUC_NOT',aHL_FALSITY)).
fof(f36,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))),
  inference(superposition,[],[f23,f27])).
fof(f27,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.LESS_SUC_NOT',aHL_BOOL_CASES)).
fof(f23,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f17])).
fof(f17,plain,(
  ? [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))),
  inference(flattening,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) => ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) => ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))),
  file('thm.arithmetic.LESS_SUC_NOT','thm.arithmetic.LESS_SUC_NOT')).
fof(f335,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),
  inference(subsumption_resolution,[],[f329,f25])).
fof(f329,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),
  inference(superposition,[],[f317,f41])).
fof(f41,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))),
  inference(subsumption_resolution,[],[f37,f26])).
fof(f37,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0)))))),
  inference(superposition,[],[f24,f27])).
fof(f24,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))))),
  inference(cnf_transformation,[],[f20])).
fof(f317,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(resolution,[],[f28,f30])).
fof(f30,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f13])).
fof(f13,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.arithmetic.LESS_SUC_NOT','thm.arithmetic.NOT_LESS')).
fof(f28,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',X7)))))),
  file('thm.arithmetic.LESS_SUC_NOT','thm.arithmetic.LESS_OR')).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 22
% Passive clauses: 49
% Generated clauses: 302
% Final active clauses: 13
% Final passive clauses: 15
% Input formulas: 7
% Initial clauses: 9
% 
% Duplicate literals: 53
% Trivial inequalities: 3
% Fw subsumption resolutions: 24
% Fw demodulations: 2
% Bw demodulations: 7
% 
% Simple tautologies: 18
% Equational tautologies: 14
% Forward subsumptions: 123
% 
% Binary resolution: 13
% Forward superposition: 69
% Backward superposition: 60
% Self superposition: 26
% Equality factoring: 26
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 16
% SAT solver unit clauses: 8
% SAT solver binary clauses: 8
% 
% Sat splits: 7
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 16
% TWLsolver calls for satisfiability: 7
% 
% Memory used [KB]: 639
% Time elapsed: 0.016 s
% ------------------------------
% ------------------------------
% Success in time 0.018 s
