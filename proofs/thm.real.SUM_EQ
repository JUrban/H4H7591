Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.real
% (61515)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 89
% Passive clauses: 2650
% Generated clauses: 18608
% Final active clauses: 75
% Final passive clauses: 2464
% Input formulas: 9
% Initial clauses: 15
% 
% Duplicate literals: 1160
% Trivial inequalities: 224
% Fw subsumption resolutions: 2321
% Fw demodulations: 1497
% Bw demodulations: 10
% 
% Simple tautologies: 369
% Equational tautologies: 96
% Forward subsumptions: 8088
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 71
% Forward superposition: 7554
% Backward superposition: 4967
% Self superposition: 352
% Equality factoring: 262
% Equality resolution: 15
% 
% Split clauses: 901
% Split components: 1822
% SAT solver clauses: 2286
% SAT solver unit clauses: 260
% SAT solver binary clauses: 697
% 
% Sat splits: 901
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2282
% TWLsolver calls for satisfiability: 110
% 
% Memory used [KB]: 8187
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.real
% (61549)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 74
% Passive clauses: 232
% Generated clauses: 9847
% Final active clauses: 50
% Final passive clauses: 121
% Input formulas: 9
% Initial clauses: 15
% 
% Duplicate literals: 1730
% Trivial inequalities: 117
% Fw subsumption resolutions: 678
% Fw demodulations: 38
% Bw demodulations: 44
% Condensations: 1998
% 
% Simple tautologies: 134
% Equational tautologies: 51
% Forward subsumptions: 3906
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 48
% Factoring: 2
% Forward superposition: 2263
% Backward superposition: 2129
% Self superposition: 209
% Equality factoring: 167
% Equality resolution: 4
% 
% Split clauses: 284
% Split components: 570
% SAT solver clauses: 1033
% SAT solver unit clauses: 16
% SAT solver binary clauses: 91
% 
% Sat splits: 284
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1033
% TWLsolver calls for satisfiability: 113
% 
% Memory used [KB]: 6140
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.real
% (61568)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 553
% Passive clauses: 3753
% Generated clauses: 123161
% Final active clauses: 110
% Final passive clauses: 508
% Input formulas: 9
% Initial clauses: 15
% 
% Duplicate literals: 10437
% Trivial inequalities: 786
% Fw subsumption resolutions: 10024
% Fw demodulations: 8615
% Bw demodulations: 2112
% Condensations: 19297
% Global subsumptions: 171
% 
% Simple tautologies: 908
% Equational tautologies: 1246
% Forward subsumptions: 67266
% Bw demodulations to eq. taut.: 149
% 
% Unit resulting resolution: 6200
% Forward superposition: 35358
% Backward superposition: 23967
% Self superposition: 1115
% Equality factoring: 586
% Equality resolution: 43
% 
% Split clauses: 645
% Split components: 1299
% SAT solver clauses: 5393
% SAT solver unit clauses: 20
% SAT solver binary clauses: 300
% 
% Sat splits: 645
% Sat splitting refutations: 177
% 
% Memory used [KB]: 46438
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.real
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.real
% SZS output start Proof for thm.real
fof(f608,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f89,f93,f91,f112,f153,f166,f183,f185,f186,f195,f116,f222,f118,f229,f231,f174,f236,f157,f259,f266,f176,f457,f458,f459,f364,f462,f90,f265,f506,f522,f523,f464,f524,f159,f526,f604,f605,f606])).
fof(f606,plain,(
  $false | ($spl1 | $spl6)),
  inference(trivial_inequality_removal,[],[f595])).
fof(f595,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | ($spl1 | $spl6)),
  inference(resolution,[],[f465,f40])).
fof(f40,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | s('type.realax.real',X0) != s('type.realax.real',X1)) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1] : (s('type.realax.real',X0) != s('type.realax.real',X1) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real',X1) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X12,X13] : (s('type.realax.real',X12) = s('type.realax.real',X13) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X12),s('type.realax.real',X13)))))),
  file('thm.real.SUM_EQ','thm.real.REAL_EQ_IMP_LE')).
fof(f465,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0))))))) | ($spl1 | $spl6)),
  inference(forward_demodulation,[],[f97,f118])).
fof(f97,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK1,sK0))))))) | $spl1),
  inference(resolution,[],[f91,f36])).
fof(f36,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X1)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',sK4(X3,X2,X1,X0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',sK4(X3,X2,X1,X0)))))))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',sK4(X3,X2,X1,X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(X3,X2,X1,X0)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',sK4(X3,X2,X1,X0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',sK4(X3,X2,X1,X0)))))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X1)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f23])).
fof(f23,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X4)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2)))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X4))))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X1)))))))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X4)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))))) & ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X4))))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X1)))))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X4)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X4))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X1)))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7,X8,X9] : (! [X10] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X10)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X10))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X7),s('type.num.num',X10))))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X8),s('type.num.num',X9))),s(fun('type.num.num','type.realax.real'),X6))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X8),s('type.num.num',X9))),s(fun('type.num.num','type.realax.real'),X7)))))))),
  file('thm.real.SUM_EQ','thm.real.SUM_LE')).
fof(f605,plain,(
  $false | ($spl1 | $spl6)),
  inference(trivial_inequality_removal,[],[f596])).
fof(f596,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | ($spl1 | $spl6)),
  inference(resolution,[],[f465,f38])).
fof(f38,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | s('type.realax.real',X0) != s('type.realax.real',X1)) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real',X1)) & (s('type.realax.real',X0) != s('type.realax.real',X1) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : (((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0))))) | s('type.realax.real',X0) = s('type.realax.real',X1)) & (s('type.realax.real',X0) != s('type.realax.real',X1) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))))),
  inference(nnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0,X1] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0))))) <=> s('type.realax.real',X0) = s('type.realax.real',X1))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X12,X13] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X12),s('type.realax.real',X13)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X13),s('type.realax.real',X12))))) <=> s('type.realax.real',X12) = s('type.realax.real',X13))),
  file('thm.real.SUM_EQ','thm.real.REAL_LE_ANTISYM')).
fof(f604,plain,(
  $false | ($spl1 | $spl6)),
  inference(trivial_inequality_removal,[],[f597])).
fof(f597,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | ($spl1 | $spl6)),
  inference(resolution,[],[f465,f39])).
fof(f39,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | s('type.realax.real',X0) != s('type.realax.real',X1)) )),
  inference(cnf_transformation,[],[f29])).
fof(f526,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1))))) | $spl19),
  inference(cnf_transformation,[],[f526_D])).
fof(f526_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f159,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl10),
  inference(cnf_transformation,[],[f159_D])).
fof(f159_D,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f524,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1))))) | $spl9),
  inference(subsumption_resolution,[],[f520,f46])).
fof(f46,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.real.SUM_EQ',aHL_TRUTH)).
fof(f520,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1))))) | $spl9),
  inference(superposition,[],[f32,f264])).
fof(f264,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl9),
  inference(trivial_inequality_removal,[],[f263])).
fof(f263,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl9),
  inference(superposition,[],[f156,f43])).
fof(f43,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.real.SUM_EQ',aHL_BOOL_CASES)).
fof(f156,plain,(
  s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl9),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  s(bool,'F_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f32,plain,(
  ( ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2)))))) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X4))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',X4))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',X4))))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',X4)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2)))))) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X4))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',X4)))) & s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))) != s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f21])).
fof(f21,plain,(
  ? [X0,X1,X2,X3] : (! [X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X4)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2)))))) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X4)))) & s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X0))) != s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X1))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ? [X0,X1,X2,X3] : (! [X4] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X4)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))))) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X4)))) & s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X0))) != s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X1))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1,X2,X3] : (! [X4] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X4)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))))) => s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X1),s('type.num.num',X4)))) => s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X0))) = s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : (! [X10] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X10)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8))))))) => s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X10))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X7),s('type.num.num',X10)))) => s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X8),s('type.num.num',X9))),s(fun('type.num.num','type.realax.real'),X6))) = s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X8),s('type.num.num',X9))),s(fun('type.num.num','type.realax.real'),X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : (! [X10] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X10)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8))))))) => s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X6),s('type.num.num',X10))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X7),s('type.num.num',X10)))) => s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X8),s('type.num.num',X9))),s(fun('type.num.num','type.realax.real'),X6))) = s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X8),s('type.num.num',X9))),s(fun('type.num.num','type.realax.real'),X7))))),
  file('thm.real.SUM_EQ','thm.real.SUM_EQ')).
fof(f464,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl16),
  inference(cnf_transformation,[],[f464_D])).
fof(f464_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f523,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl9),
  inference(subsumption_resolution,[],[f519,f267])).
fof(f267,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl9),
  inference(subsumption_resolution,[],[f262,f156])).
fof(f262,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl9),
  inference(superposition,[],[f156,f43])).
fof(f519,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl9),
  inference(superposition,[],[f59,f264])).
fof(f59,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X0))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',X0))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f57,f46])).
fof(f57,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X0))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',X0))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',X0)))) )),
  inference(superposition,[],[f55,f43])).
fof(f55,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',X0)))) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X0))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',X0))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2)))))) )),
  inference(subsumption_resolution,[],[f52,f46])).
fof(f52,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',X0))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',X0))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',X0)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2)))))) )),
  inference(superposition,[],[f32,f43])).
fof(f522,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl9),
  inference(subsumption_resolution,[],[f516,f267])).
fof(f516,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl9),
  inference(superposition,[],[f264,f59])).
fof(f506,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl9),
  inference(trivial_inequality_removal,[],[f502])).
fof(f502,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl9),
  inference(superposition,[],[f156,f59])).
fof(f265,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl9),
  inference(trivial_inequality_removal,[],[f261])).
fof(f261,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl9),
  inference(superposition,[],[f156,f59])).
fof(f90,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1)))))) | $spl0),
  inference(cnf_transformation,[],[f90_D])).
fof(f90_D,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f462,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0))))))) | $spl15),
  inference(cnf_transformation,[],[f462_D])).
fof(f462_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0))))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f364,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0))))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1)))))) | $spl6),
  inference(superposition,[],[f36,f118])).
fof(f459,plain,(
  $false | $spl3),
  inference(trivial_inequality_removal,[],[f448])).
fof(f448,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(resolution,[],[f446,f40])).
fof(f446,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1))))))) | $spl3),
  inference(forward_demodulation,[],[f138,f135])).
fof(f135,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(resolution,[],[f93,f54])).
fof(f54,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),X1))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,X0,X1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,X0,X1))))) )),
  inference(subsumption_resolution,[],[f51,f34])).
fof(f34,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',sK4(X3,X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f27])).
fof(f51,plain,(
  ( ! [X0,X1] : (s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,X0,X1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,X0,X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,X0,X1))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),X1))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),X0))))))) )),
  inference(resolution,[],[f32,f35])).
fof(f35,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X2),s('type.num.num',X3))),s(fun('type.num.num','type.realax.real'),X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(X3,X2,X1,X0)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))))) )),
  inference(cnf_transformation,[],[f27])).
fof(f138,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1))))))) | $spl3),
  inference(resolution,[],[f93,f36])).
fof(f458,plain,(
  $false | $spl3),
  inference(trivial_inequality_removal,[],[f449])).
fof(f449,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(resolution,[],[f446,f38])).
fof(f457,plain,(
  $false | $spl3),
  inference(trivial_inequality_removal,[],[f450])).
fof(f450,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(resolution,[],[f446,f39])).
fof(f176,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl12),
  inference(cnf_transformation,[],[f176_D])).
fof(f176_D,plain,(
  s(bool,'T_0') = s(bool,'F_0') <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f266,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | ($spl3 | $spl9)),
  inference(forward_demodulation,[],[f265,f160])).
fof(f160,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f155,f45])).
fof(f45,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.real.SUM_EQ',aHL_FALSITY)).
fof(f155,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(superposition,[],[f136,f43])).
fof(f136,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1))))) | $spl3),
  inference(resolution,[],[f93,f34])).
fof(f259,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(forward_demodulation,[],[f258,f160])).
fof(f258,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f253,f45])).
fof(f253,plain,(
  p(s(bool,'F_0')) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(superposition,[],[f137,f59])).
fof(f137,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2)))))) | $spl3),
  inference(resolution,[],[f93,f35])).
fof(f157,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl8),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f236,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl3),
  inference(subsumption_resolution,[],[f233,f46])).
fof(f233,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl3),
  inference(superposition,[],[f55,f160])).
fof(f174,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(forward_demodulation,[],[f173,f160])).
fof(f173,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(subsumption_resolution,[],[f168,f45])).
fof(f168,plain,(
  p(s(bool,'F_0')) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | $spl3),
  inference(superposition,[],[f137,f59])).
fof(f231,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f230,f91])).
fof(f230,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1)))))) | $spl4),
  inference(subsumption_resolution,[],[f226,f45])).
fof(f226,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1)))))) | $spl4),
  inference(superposition,[],[f35,f116])).
fof(f229,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f224,f45])).
fof(f224,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f116,f96])).
fof(f96,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK1,sK0)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2)))))) | $spl1),
  inference(resolution,[],[f91,f35])).
fof(f118,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | $spl6),
  inference(cnf_transformation,[],[f118_D])).
fof(f118_D,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f222,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | $spl1),
  inference(forward_demodulation,[],[f221,f119])).
fof(f119,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | $spl1),
  inference(subsumption_resolution,[],[f114,f45])).
fof(f114,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | $spl1),
  inference(superposition,[],[f95,f43])).
fof(f95,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK1,sK0))))) | $spl1),
  inference(resolution,[],[f91,f34])).
fof(f221,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | $spl1),
  inference(subsumption_resolution,[],[f216,f45])).
fof(f216,plain,(
  p(s(bool,'F_0')) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | $spl1),
  inference(superposition,[],[f96,f59])).
fof(f116,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK1,sK0)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl4),
  inference(cnf_transformation,[],[f116_D])).
fof(f116_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK1,sK0)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f195,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK1,sK0)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl1),
  inference(subsumption_resolution,[],[f192,f46])).
fof(f192,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK1,sK0)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl1),
  inference(superposition,[],[f55,f119])).
fof(f186,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK1,sK0)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl1),
  inference(resolution,[],[f95,f55])).
fof(f185,plain,(
  $false | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f184,f93])).
fof(f184,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0)))))) | $spl8),
  inference(subsumption_resolution,[],[f180,f45])).
fof(f180,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0)))))) | $spl8),
  inference(superposition,[],[f35,f157])).
fof(f183,plain,(
  $false | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f178,f45])).
fof(f178,plain,(
  p(s(bool,'F_0')) | ($spl3 | $spl8)),
  inference(backward_demodulation,[],[f157,f137])).
fof(f166,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl3),
  inference(subsumption_resolution,[],[f163,f46])).
fof(f163,plain,(
  ~p(s(bool,'T_0')) | s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl3),
  inference(superposition,[],[f55,f160])).
fof(f153,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK0,sK1)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK0,sK1)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl3),
  inference(resolution,[],[f136,f55])).
fof(f112,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK0),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK1),s('type.num.num',sK4(sK3,sK2,sK1,sK0)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK4(sK3,sK2,sK1,sK0)),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK3),s('type.num.num',sK2))))) | $spl1),
  inference(resolution,[],[f95,f55])).
fof(f91,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1)))))) | $spl1),
  inference(cnf_transformation,[],[f91_D])).
fof(f91_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f93,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0)))))) | $spl3),
  inference(cnf_transformation,[],[f93_D])).
fof(f93_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f89,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0)))))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1))))))),
  inference(equality_resolution,[],[f49])).
fof(f49,plain,(
  ( ! [X0] : (s('type.realax.real',X0) != s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1))))))) )),
  inference(superposition,[],[f33,f37])).
fof(f37,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real',X1) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f33,plain,(
  s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK0))) != s('type.realax.real','const.real.sum_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',sK2),s('type.num.num',sK3))),s(fun('type.num.num','type.realax.real'),sK1)))),
  inference(cnf_transformation,[],[f26])).
% SZS output end Proof for thm.real
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 54
% Passive clauses: 202
% Generated clauses: 588
% Final active clauses: 30
% Final passive clauses: 61
% Input formulas: 9
% Initial clauses: 15
% 
% Selected by SInE selection: 9
% SInE iterations: 1
% 
% Duplicate literals: 2
% Trivial inequalities: 12
% Fw subsumption resolutions: 54
% Fw demodulations: 109
% Bw demodulations: 9
% 
% Simple tautologies: 4
% Forward subsumptions: 186
% 
% Binary resolution: 58
% Forward superposition: 191
% Backward superposition: 103
% Equality resolution: 2
% 
% Split clauses: 18
% Split components: 36
% SAT solver clauses: 29
% SAT solver unit clauses: 3
% SAT solver binary clauses: 8
% 
% Sat splits: 18
% Sat splitting refutations: 10
% 
% Memory used [KB]: 1151
% Time elapsed: 0.019 s
% ------------------------------
% ------------------------------
% Success in time 11.743 s
