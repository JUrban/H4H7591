Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.Omega
% (112036)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 814
% Passive clauses: 9087
% Generated clauses: 21157
% Final active clauses: 748
% Final passive clauses: 7368
% Input formulas: 38
% Initial clauses: 166
% 
% Duplicate literals: 540
% Trivial inequalities: 156
% Fw subsumption resolutions: 2194
% Fw demodulations: 399
% Bw demodulations: 58
% 
% Simple tautologies: 237
% Equational tautologies: 62
% Forward subsumptions: 8003
% 
% Binary resolution: 10918
% Factoring: 1398
% Forward superposition: 2856
% Backward superposition: 2113
% Self superposition: 26
% Equality factoring: 28
% Equality resolution: 40
% 
% Split clauses: 601
% Split components: 1209
% SAT solver clauses: 1067
% SAT solver unit clauses: 30
% SAT solver binary clauses: 205
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 601
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1064
% TWLsolver calls for satisfiability: 435
% 
% Memory used [KB]: 8315
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.Omega
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.Omega
% SZS output start Proof for thm.Omega
fof(f5453,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5449,f214,f390,f849,f899,f222,f399,f1990,f2012,f1987,f1989,f4528,f923,f925,f393,f395,f1866,f1880,f232,f400,f294,f424,f215,f392,f304,f425,f236,f402,f3889,f4065,f5264,f1911,f1927,f260,f408])).
fof(f408,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) | $spl16),
  inference(cnf_transformation,[],[f408_D])).
fof(f408_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f260,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(ennf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  file('thm.Omega.Omega_42_prove_ltb','thm.integer.INT_LT_ADD|49|')).
fof(f1927,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl738),
  inference(cnf_transformation,[],[f1927_D])).
fof(f1927_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) <=> ~$spl738),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl738])])).
fof(f1911,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | ($spl8 | $spl16)),
  inference(resolution,[],[f408,f400])).
fof(f5264,plain,(
  $false | ($spl2 | $spl363 | $spl368 | $spl738)),
  inference(subsumption_resolution,[],[f5263,f909])).
fof(f909,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl363),
  inference(cnf_transformation,[],[f909_D])).
fof(f909_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl363),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl363])])).
fof(f5263,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl2 | $spl368 | $spl738)),
  inference(subsumption_resolution,[],[f5224,f392])).
fof(f5224,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl368 | $spl738)),
  inference(superposition,[],[f1927,f924])).
fof(f924,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl368),
  inference(cnf_transformation,[],[f924_D])).
fof(f924_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) <=> ~$spl368),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl368])])).
fof(f4065,plain,(
  ( ! [X178] : (s(bool,X178) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | s(bool,'T_0') = s(bool,X178)) ) | $spl1538),
  inference(cnf_transformation,[],[f4065_D])).
fof(f4065_D,plain,(
  ( ! [X178] : (s(bool,X178) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | s(bool,'T_0') = s(bool,X178)) ) <=> ~$spl1538),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1538])])).
fof(f3889,plain,(
  ( ! [X178] : (s(bool,X178) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | s(bool,'T_0') = s(bool,X178)) ) | ($spl354 | $spl369)),
  inference(trivial_inequality_removal,[],[f3701])).
fof(f3701,plain,(
  ( ! [X178] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X178) = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | s(bool,'T_0') = s(bool,X178)) ) | ($spl354 | $spl369)),
  inference(superposition,[],[f925,f899])).
fof(f402,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f236,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.Omega.Omega_42_prove_ltb','thm.bool.EQ_CLAUSES|split|3')).
fof(f425,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) | $spl40),
  inference(cnf_transformation,[],[f425_D])).
fof(f425_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f304,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(ennf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : ~(p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6,X7] : ~(p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  file('thm.Omega.Omega_42_prove_ltb','thm.integer.INT_DISCRETE')).
fof(f392,plain,(
  p(s(bool,'T_0')) | $spl2),
  inference(cnf_transformation,[],[f392_D])).
fof(f392_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f215,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.Omega.Omega_42_prove_ltb',aHL_TRUTH)).
fof(f424,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) | $spl38),
  inference(cnf_transformation,[],[f424_D])).
fof(f424_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f294,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0,X1] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X6,X7] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X7),s('type.integer.int',X6)))))),
  file('thm.Omega.Omega_42_prove_ltb','thm.integer.INT_NOT_LT')).
fof(f400,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f400_D])).
fof(f400_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f232,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.Omega.Omega_42_prove_ltb','thm.bool.EQ_CLAUSES|split|1')).
fof(f1880,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) | $spl710),
  inference(cnf_transformation,[],[f1880_D])).
fof(f1880_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) <=> ~$spl710),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl710])])).
fof(f1866,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) | ($spl8 | $spl38)),
  inference(resolution,[],[f424,f400])).
fof(f395,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f395_D])).
fof(f395_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f393,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f218,f215])).
fof(f218,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f18])).
fof(f18,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.Omega.Omega_42_prove_ltb','thm.bool.NOT_CLAUSES|split|2')).
fof(f925,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | $spl369),
  inference(cnf_transformation,[],[f925_D])).
fof(f925_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) <=> ~$spl369),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl369])])).
fof(f923,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | ($spl1 | $spl362)),
  inference(backward_demodulation,[],[f910,f390])).
fof(f910,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl362),
  inference(cnf_transformation,[],[f910_D])).
fof(f910_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f4528,plain,(
  $false | ($spl5 | $spl369 | $spl710 | $spl796)),
  inference(subsumption_resolution,[],[f4527,f925])).
fof(f4527,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | ($spl5 | $spl710 | $spl796)),
  inference(subsumption_resolution,[],[f4502,f395])).
fof(f4502,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | ($spl710 | $spl796)),
  inference(superposition,[],[f1880,f2012])).
fof(f1989,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK12)))) | $spl795),
  inference(cnf_transformation,[],[f1989_D])).
fof(f1989_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK12)))) <=> ~$spl795),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl795])])).
fof(f1987,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK12)))) | ($spl2 | $spl40 | $spl362)),
  inference(subsumption_resolution,[],[f1968,f392])).
fof(f1968,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK12)))) | ($spl40 | $spl362)),
  inference(superposition,[],[f425,f910])).
fof(f2012,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) | $spl796),
  inference(cnf_transformation,[],[f2012_D])).
fof(f2012_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) <=> ~$spl796),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl796])])).
fof(f1990,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) | ($spl12 | $spl795)),
  inference(resolution,[],[f1989,f402])).
fof(f399,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(cnf_transformation,[],[f399_D])).
fof(f399_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f222,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.Omega.Omega_42_prove_ltb',aHL_BOOL_CASES)).
fof(f899,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl354),
  inference(cnf_transformation,[],[f899_D])).
fof(f899_D,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f849,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f399,f399])).
fof(f390,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(cnf_transformation,[],[f390_D])).
fof(f390_D,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f214,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f97])).
fof(f97,plain,(
  ? [X0,X1] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.Omega.Omega_42_prove_ltb','thm.Omega.Omega_42_prove_ltb')).
fof(f5449,plain,(
  $false | ($spl1 | $spl354 | $spl363 | $spl1538)),
  inference(subsumption_resolution,[],[f5448,f909])).
fof(f5448,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl1 | $spl354 | $spl1538)),
  inference(condensation,[],[f5447])).
fof(f5447,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl354 | $spl1538)),
  inference(subsumption_resolution,[],[f5444,f4065])).
fof(f5444,plain,(
  ( ! [X2] : (s(bool,X2) != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK12),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl354)),
  inference(superposition,[],[f390,f899])).
% SZS output end Proof for thm.Omega
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 308
% Passive clauses: 1081
% Generated clauses: 5487
% Final active clauses: 229
% Final passive clauses: 759
% Input formulas: 38
% Initial clauses: 166
% 
% Duplicate literals: 150
% Trivial inequalities: 19
% Fw subsumption resolutions: 526
% Fw demodulations: 115
% Bw demodulations: 12
% Condensations: 139
% Global subsumptions: 13
% 
% Simple tautologies: 214
% Equational tautologies: 16
% Forward subsumptions: 1847
% 
% Binary resolution: 1923
% Factoring: 148
% Forward superposition: 278
% Backward superposition: 568
% Self superposition: 22
% Equality factoring: 26
% Equality resolution: 4
% 
% Split clauses: 163
% Split components: 331
% SAT solver clauses: 1525
% SAT solver unit clauses: 171
% SAT solver binary clauses: 75
% SAT solver learnt clauses: 28
% SAT solver learnt literals: 11
% 
% Sat splits: 163
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 1470
% TWLsolver calls for satisfiability: 1589
% 
% Memory used [KB]: 5245
% Time elapsed: 0.198 s
% ------------------------------
% ------------------------------
% Success in time 0.815 s
