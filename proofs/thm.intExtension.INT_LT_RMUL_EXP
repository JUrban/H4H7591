Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.intExtension
% (66299)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 108
% Passive clauses: 1473
% Generated clauses: 22932
% Final active clauses: 94
% Final passive clauses: 1199
% Input formulas: 10
% Initial clauses: 13
% 
% Duplicate literals: 1232
% Trivial inequalities: 283
% Fw subsumption resolutions: 3295
% Fw demodulations: 2675
% Bw demodulations: 11
% 
% Simple tautologies: 420
% Equational tautologies: 72
% Forward subsumptions: 11632
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 50
% Forward superposition: 8859
% Backward superposition: 5769
% Self superposition: 303
% Equality factoring: 213
% Equality resolution: 22
% 
% Split clauses: 1205
% Split components: 2480
% SAT solver clauses: 1995
% SAT solver unit clauses: 26
% SAT solver binary clauses: 175
% 
% Sat splits: 1204
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1973
% TWLsolver calls for satisfiability: 143
% 
% Memory used [KB]: 9850
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.intExtension
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.intExtension
% SZS output start Proof for thm.intExtension
fof(f601,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f600,f30,f44,f445,f460,f39,f52,f412,f431,f309,f310,f31,f48,f41,f54,f65,f67,f29,f46,f33,f50,f34,f51])).
fof(f51,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f34,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.intExtension.INT_LT_RMUL_EXP',aHL_BOOL_CASES)).
fof(f50,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f33,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.intExtension.INT_LT_RMUL_EXP',aHL_FALSITY)).
fof(f46,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2)))) | $spl2),
  inference(cnf_transformation,[],[f46_D])).
fof(f46_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f29,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2))))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2)))) & s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f22])).
fof(f22,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) & s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) => s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) => s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))) => s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X8))))))),
  file('thm.intExtension.INT_LT_RMUL_EXP','thm.intExtension.INT_LT_RMUL_EXP')).
fof(f67,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2))) | $spl20),
  inference(cnf_transformation,[],[f67_D])).
fof(f67_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f65,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2))) | ($spl2 | $spl7 | $spl8)),
  inference(subsumption_resolution,[],[f59,f50])).
fof(f59,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK2))) | ($spl2 | $spl8)),
  inference(superposition,[],[f46,f51])).
fof(f54,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))) ) | $spl14),
  inference(cnf_transformation,[],[f54_D])).
fof(f54_D,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f41,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) => s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X2))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10,X11,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))) => s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',X12))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',X11))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',X12))))))),
  file('thm.intExtension.INT_LT_RMUL_EXP','thm.integer.INT_LT_MONO')).
fof(f48,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f48_D])).
fof(f48_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f31,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.intExtension.INT_LT_RMUL_EXP',aHL_TRUTH)).
fof(f310,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X1)))))) ) | $spl52),
  inference(cnf_transformation,[],[f310_D])).
fof(f310_D,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X1)))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f309,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X1)))))) ) | ($spl4 | $spl14 | $spl20)),
  inference(subsumption_resolution,[],[f302,f48])).
fof(f302,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X1)))))) ) | ($spl14 | $spl20)),
  inference(superposition,[],[f54,f67])).
fof(f431,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X1)))))) ) | $spl68),
  inference(cnf_transformation,[],[f431_D])).
fof(f431_D,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X1)))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f412,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',X1)))))) ) | ($spl10 | $spl52)),
  inference(superposition,[],[f310,f52])).
fof(f52,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) | $spl10),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f39,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X11,X10] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',X11))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',X10)))),
  file('thm.intExtension.INT_LT_RMUL_EXP','thm.integer.INT_MUL_SYM')).
fof(f460,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK2)))))) ) | $spl78),
  inference(cnf_transformation,[],[f460_D])).
fof(f460_D,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK2)))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f445,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK2)))))) ) | ($spl10 | $spl68)),
  inference(superposition,[],[f431,f52])).
fof(f44,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl1),
  inference(cnf_transformation,[],[f44_D])).
fof(f44_D,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f30,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))))),
  inference(cnf_transformation,[],[f25])).
fof(f600,plain,(
  $false | ($spl1 | $spl78)),
  inference(subsumption_resolution,[],[f44,f460])).
% SZS output end Proof for thm.intExtension
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 24
% Passive clauses: 55
% Generated clauses: 575
% Final active clauses: 20
% Final passive clauses: 24
% Input formulas: 10
% Initial clauses: 13
% 
% Duplicate literals: 69
% Trivial inequalities: 5
% Fw subsumption resolutions: 11
% Fw demodulations: 14
% Bw demodulations: 8
% Condensations: 54
% 
% Simple tautologies: 22
% Equational tautologies: 16
% Forward subsumptions: 182
% 
% Binary resolution: 1
% Forward superposition: 142
% Backward superposition: 117
% Self superposition: 28
% Equality factoring: 28
% 
% Split clauses: 13
% Split components: 27
% SAT solver clauses: 119
% SAT solver unit clauses: 18
% SAT solver binary clauses: 10
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 13
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 117
% TWLsolver calls for satisfiability: 37
% 
% Memory used [KB]: 1151
% Time elapsed: 0.021 s
% ------------------------------
% ------------------------------
% Success in time 0.643 s
