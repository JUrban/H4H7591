Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.frac
% (64375)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 548
% Passive clauses: 4616
% Generated clauses: 36441
% Final active clauses: 111
% Final passive clauses: 2519
% Input formulas: 62
% Initial clauses: 70
% 
% Duplicate literals: 619
% Trivial inequalities: 607
% Fw subsumption resolutions: 2248
% Fw demodulations: 8841
% Bw demodulations: 357
% 
% Simple tautologies: 152
% Equational tautologies: 43
% Forward subsumptions: 19892
% Fw demodulations to eq. taut.: 93
% Bw demodulations to eq. taut.: 20
% 
% Binary resolution: 102
% Forward superposition: 12508
% Backward superposition: 10406
% Self superposition: 139
% Equality factoring: 54
% Equality resolution: 22
% 
% Split clauses: 192
% Split components: 384
% SAT solver clauses: 500
% SAT solver unit clauses: 25
% SAT solver binary clauses: 90
% 
% Sat splits: 192
% Sat splitting refutations: 88
% 
% TWLsolver clauses: 500
% TWLsolver calls for satisfiability: 131
% 
% Memory used [KB]: 15735
% Time elapsed: 0.618 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.frac
% (64400)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 303
% Passive clauses: 1122
% Generated clauses: 30434
% Final active clauses: 241
% Final passive clauses: 499
% Input formulas: 62
% Initial clauses: 70
% 
% Duplicate literals: 669
% Trivial inequalities: 227
% Fw subsumption resolutions: 1786
% Fw demodulations: 8727
% Bw demodulations: 302
% Condensations: 439
% 
% Simple tautologies: 114
% Equational tautologies: 37
% Forward subsumptions: 14636
% Fw demodulations to eq. taut.: 17
% Bw demodulations to eq. taut.: 65
% 
% Binary resolution: 42
% Forward superposition: 9804
% Backward superposition: 6875
% Self superposition: 131
% Equality factoring: 58
% Equality resolution: 16
% 
% Split clauses: 112
% Split components: 226
% SAT solver clauses: 2592
% SAT solver unit clauses: 121
% SAT solver binary clauses: 32
% 
% Sat splits: 112
% Sat splitting refutations: 95
% 
% TWLsolver clauses: 2592
% TWLsolver calls for satisfiability: 332
% 
% Memory used [KB]: 19445
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.frac
% (64423)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1310
% Passive clauses: 12218
% Generated clauses: 276048
% Final active clauses: 66
% Final passive clauses: 371
% Input formulas: 62
% Initial clauses: 70
% 
% Duplicate literals: 5130
% Trivial inequalities: 1416
% Fw subsumption resolutions: 16631
% Fw demodulations: 64277
% Bw demodulations: 8753
% Condensations: 4170
% Global subsumptions: 1822
% 
% Simple tautologies: 1809
% Equational tautologies: 796
% Forward subsumptions: 158738
% Fw demodulations to eq. taut.: 505
% Bw demodulations to eq. taut.: 914
% 
% Unit resulting resolution: 13275
% Forward superposition: 57265
% Backward superposition: 42110
% Self superposition: 572
% Equality factoring: 220
% Equality resolution: 94
% 
% Split clauses: 949
% Split components: 1899
% SAT solver clauses: 22557
% SAT solver unit clauses: 2014
% SAT solver binary clauses: 5654
% 
% Sat splits: 949
% Sat splitting refutations: 6616
% 
% Memory used [KB]: 142385
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.frac
% Refutation not found, incomplete strategy
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation not found, incomplete strategy

% Active clauses: 12
% Passive clauses: 1
% Generated clauses: 1
% Final active clauses: 12
% Input formulas: 62
% Initial clauses: 12
% 
% Pure predicates: 1
% Selected by SInE selection: 11
% SInE iterations: 1
% 
% SAT solver clauses: 1
% 
% Memory used [KB]: 767
% Time elapsed: 0.002 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.frac
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.frac
% SZS output start Proof for thm.frac
fof(f7275,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f7271])).
fof(f7271,plain,(
  s('type.frac.frac',sK0) != s('type.frac.frac',sK0)),
  inference(superposition,[],[f137,f7254])).
fof(f7254,plain,(
  ( ! [X0] : (s('type.frac.frac',X0) = s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|48|_0')))) )),
  inference(forward_demodulation,[],[f7253,f172])).
fof(f172,plain,(
  ( ! [X0] : (s('type.frac.frac',X0) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : s('type.frac.frac',X0) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X11] : s('type.frac.frac',X11) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X11))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X11)))))))),
  file('thm.frac.FRAC_ADD_RID','thm.frac.FRAC')).
fof(f7253,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(forward_demodulation,[],[f7252,f161])).
fof(f161,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X8] : s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.frac.FRAC_ADD_RID','thm.integer.INT_ADD_RID')).
fof(f7252,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(forward_demodulation,[],[f7251,f162])).
fof(f162,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))),
  file('thm.frac.FRAC_ADD_RID','thm.integer.INT_MUL_LZERO')).
fof(f7251,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(forward_demodulation,[],[f7250,f7163])).
fof(f7163,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(subsumption_resolution,[],[f7162,f138])).
fof(f138,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_ADD_RID',aHL_TRUTH)).
fof(f7162,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(forward_demodulation,[],[f7161,f3558])).
fof(f3558,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f3555,f158])).
fof(f158,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X13] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13)))))),
  file('thm.frac.FRAC_ADD_RID','thm.numeral.numeral_lt|split|0')).
fof(f3555,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.ZERO_0')),
  inference(forward_demodulation,[],[f3554,f578])).
fof(f578,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f545,f155])).
fof(f155,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X13] : s('type.num.num',X13) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_ADD_RID','thm.numeral.numeral_distrib|split|7')).
fof(f545,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f155,f175])).
fof(f175,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X13] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X13))),
  file('thm.frac.FRAC_ADD_RID','thm.numeral.numeral_distrib|split|17')).
fof(f3554,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f3553,f3334])).
fof(f3334,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(unit_resulting_resolution,[],[f3286,f174])).
fof(f174,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f128])).
fof(f3286,plain,(
  ( ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X8)))))) )),
  inference(forward_demodulation,[],[f3179,f147])).
fof(f147,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X13] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X13)))),
  file('thm.frac.FRAC_ADD_RID','thm.arithmetic.MULT|split|0')).
fof(f3179,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f191,f578])).
fof(f191,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X13,X14] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num',X14))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_ADD_RID','thm.numeral.numeral_distrib|split|5')).
fof(f3553,plain,(
  ( ! [X60] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60)))))) )),
  inference(subsumption_resolution,[],[f3411,f3471])).
fof(f3471,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f3342,f149])).
fof(f149,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X13] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_ADD_RID','thm.numeral.numeral_distrib|split|4')).
fof(f3342,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f3286,f578])).
fof(f3411,plain,(
  ( ! [X60] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60)))))) )),
  inference(superposition,[],[f174,f3286])).
fof(f7161,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(forward_demodulation,[],[f7160,f3643])).
fof(f3643,plain,(
  ( ! [X10] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(backward_demodulation,[],[f3555,f1651])).
fof(f1651,plain,(
  ( ! [X10] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f1639,f1638])).
fof(f1638,plain,(
  ( ! [X9] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f183,f142])).
fof(f142,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f34])).
fof(f34,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.frac.FRAC_ADD_RID','thm.numeral.numeral_distrib|split|13')).
fof(f183,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X13,X14] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X14))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_ADD_RID','thm.numeral.numeral_distrib|split|22')).
fof(f1639,plain,(
  ( ! [X10] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f183,f758])).
fof(f758,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f163,f578])).
fof(f163,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X13] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.frac.FRAC_ADD_RID','thm.numeral.numeral_distrib|split|14')).
fof(f7160,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(forward_demodulation,[],[f7152,f189])).
fof(f189,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X13,X14] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X14))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_ADD_RID','thm.integer.INT_LT_CALCULATE|split|0')).
fof(f7152,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),
  inference(superposition,[],[f197,f208])).
fof(f208,plain,(
  s('type.frac.frac','const.frac.frac_|48|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(forward_demodulation,[],[f143,f142])).
fof(f143,plain,(
  s('type.frac.frac','const.frac.frac_|48|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  s('type.frac.frac','const.frac.frac_|48|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.frac.FRAC_ADD_RID','thm.frac.frac_|48|_def')).
fof(f197,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) => s('type.integer.int',X6) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X12))))))))),
  file('thm.frac.FRAC_ADD_RID','thm.frac.NMR')).
fof(f7250,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(forward_demodulation,[],[f7234,f7215])).
fof(f7215,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))) )),
  inference(backward_demodulation,[],[f7212,f210])).
fof(f210,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f171,f142])).
fof(f171,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X8] : s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.frac.FRAC_ADD_RID','thm.integer.INT_MUL_RID')).
fof(f7212,plain,(
  s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(subsumption_resolution,[],[f7211,f138])).
fof(f7211,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f7210,f3558])).
fof(f7210,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f7209,f3643])).
fof(f7209,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f7198,f189])).
fof(f7198,plain,(
  s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),
  inference(superposition,[],[f198,f208])).
fof(f198,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) => s('type.integer.int',X12) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X12))))))))),
  file('thm.frac.FRAC_ADD_RID','thm.frac.DNM')).
fof(f7234,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))))))) )),
  inference(superposition,[],[f196,f7215])).
fof(f196,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1] : s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X9,X10] : s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X9),s('type.frac.frac',X10))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X9))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X10))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X9))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X10)))))))))),
  file('thm.frac.FRAC_ADD_RID','thm.frac.frac_add_def')).
fof(f137,plain,(
  s('type.frac.frac',sK0) != s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',sK0),s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  s('type.frac.frac',sK0) != s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',sK0),s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f123])).
fof(f123,plain,(
  ? [X0] : s('type.frac.frac',X0) != s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(ennf_transformation,[],[f64])).
fof(f64,plain,(
  ~! [X0] : s('type.frac.frac',X0) = s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.frac.frac',X6) = s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X6),s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.frac.frac',X6) = s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X6),s('type.frac.frac','const.frac.frac_|48|_0')))),
  file('thm.frac.FRAC_ADD_RID','thm.frac.FRAC_ADD_RID')).
% SZS output end Proof for thm.frac
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 142
% Passive clauses: 682
% Generated clauses: 7128
% Final active clauses: 98
% Final passive clauses: 302
% Input formulas: 62
% Initial clauses: 70
% 
% Duplicate literals: 46
% Trivial inequalities: 25
% Fw subsumption resolutions: 74
% Fw demodulations: 1683
% Bw demodulations: 262
% Global subsumptions: 1
% 
% Simple tautologies: 40
% Equational tautologies: 9
% Forward subsumptions: 4468
% Fw demodulations to eq. taut.: 96
% Bw demodulations to eq. taut.: 17
% 
% Unit resulting resolution: 471
% Forward superposition: 2569
% Backward superposition: 1866
% Self superposition: 59
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 688
% SAT solver unit clauses: 164
% SAT solver binary clauses: 381
% 
% Sat splits: 3
% 
% Memory used [KB]: 5628
% Time elapsed: 0.149 s
% ------------------------------
% ------------------------------
% Success in time 11.917 s
