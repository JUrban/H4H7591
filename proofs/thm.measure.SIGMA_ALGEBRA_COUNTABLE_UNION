Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.measure
% (94729)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 626
% Passive clauses: 9175
% Generated clauses: 17834
% Final active clauses: 621
% Final passive clauses: 8042
% Input formulas: 44
% Initial clauses: 202
% 
% Duplicate literals: 318
% Trivial inequalities: 18
% Fw subsumption resolutions: 1624
% Fw demodulations: 140
% Bw demodulations: 4
% 
% Simple tautologies: 230
% Equational tautologies: 57
% Forward subsumptions: 5790
% 
% Binary resolution: 10733
% Factoring: 1063
% Forward superposition: 1452
% Backward superposition: 2072
% Self superposition: 34
% Equality factoring: 34
% Equality resolution: 4
% 
% Split clauses: 532
% Split components: 1071
% SAT solver clauses: 851
% SAT solver unit clauses: 20
% SAT solver binary clauses: 179
% 
% Sat splits: 532
% 
% TWLsolver clauses: 850
% TWLsolver calls for satisfiability: 378
% 
% Memory used [KB]: 9210
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f3272,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3252,f266,f482,f483,f485,f310,f501,f609,f613,f262,f480,f283,f490,f610,f615,f263,f478,f611,f617,f264,f476,f725,f732,f265,f474,f287,f492])).
fof(f492,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f492_D])).
fof(f492_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f287,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.measure.SIGMA_ALGEBRA_COUNTABLE_UNION','thm.bool.EQ_CLAUSES|split|3')).
fof(f474,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),sK14))),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))))) | $spl1),
  inference(cnf_transformation,[],[f474_D])).
fof(f474_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),sK14))),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f265,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),sK14))),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))))),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK12,bool),bool),sK14),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),sK14))),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f116])).
fof(f116,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(flattening,[],[f115])).
fof(f115,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ~! [X0] : ! [X1,X2] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X6,bool),bool),X8)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X8),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),X8))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) & p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X6,bool),bool),X8)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X8),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),X8))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))))),
  file('thm.measure.SIGMA_ALGEBRA_COUNTABLE_UNION','thm.measure.SIGMA_ALGEBRA_COUNTABLE_UNION')).
fof(f732,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),sK14))),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))) | $spl282),
  inference(cnf_transformation,[],[f732_D])).
fof(f732_D,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),sK14))),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f725,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK12,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(sK12,bool),bool),sK14))),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))) | ($spl1 | $spl18)),
  inference(resolution,[],[f474,f492])).
fof(f476,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK12,bool),bool),sK14),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))))) | $spl2),
  inference(cnf_transformation,[],[f476_D])).
fof(f476_D,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK12,bool),bool),sK14),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f264,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK12,bool),bool),sK14),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))))),
  inference(cnf_transformation,[],[f160])).
fof(f617,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK12,bool),bool),sK14),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))) | $spl222),
  inference(cnf_transformation,[],[f617_D])).
fof(f617_D,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK12,bool),bool),sK14),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f611,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK12,bool),bool),sK14),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))) | ($spl2 | $spl14)),
  inference(resolution,[],[f490,f476])).
fof(f478,plain,(
  p(s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14)))) | $spl4),
  inference(cnf_transformation,[],[f478_D])).
fof(f478_D,plain,(
  p(s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f263,plain,(
  p(s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14))))),
  inference(cnf_transformation,[],[f160])).
fof(f615,plain,(
  s(bool,'T_0') = s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14))) | $spl220),
  inference(cnf_transformation,[],[f615_D])).
fof(f615_D,plain,(
  s(bool,'T_0') = s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14))) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f610,plain,(
  s(bool,'T_0') = s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14))) | ($spl4 | $spl14)),
  inference(resolution,[],[f490,f478])).
fof(f490,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f490_D])).
fof(f490_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f283,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.measure.SIGMA_ALGEBRA_COUNTABLE_UNION','thm.bool.EQ_CLAUSES|split|1')).
fof(f480,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))) | $spl6),
  inference(cnf_transformation,[],[f480_D])).
fof(f480_D,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f262,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))))),
  inference(cnf_transformation,[],[f160])).
fof(f613,plain,(
  s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))) | $spl218),
  inference(cnf_transformation,[],[f613_D])).
fof(f613_D,plain,(
  s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f609,plain,(
  s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13))) | ($spl6 | $spl14)),
  inference(resolution,[],[f490,f480])).
fof(f501,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X3)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) ) | $spl28),
  inference(cnf_transformation,[],[f501_D])).
fof(f501_D,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X3)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f310,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X3)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) )),
  inference(cnf_transformation,[],[f182])).
fof(f182,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X3] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X3)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),sK15(X1,X0))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),sK15(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),sK15(X1,X0)))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15])],[f181])).
fof(f181,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X3] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X3)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ? [X2] : (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(rectify,[],[f180])).
fof(f180,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ? [X2] : (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(flattening,[],[f179])).
fof(f179,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & ((~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | ? [X2] : (p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))) | p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(nnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : (~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : ((~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(ennf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : ((p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ! [X2] : ((p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X0,bool),bool),X2)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X0,bool),bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) <=> (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) & ! [X8] : ((p(s(bool,'const.util_prob.countable_1'(s(fun(fun(X6,bool),bool),X8)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X8),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.BIGUNION_1'(s(fun(fun(X6,bool),bool),X8))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))))))),
  file('thm.measure.SIGMA_ALGEBRA_COUNTABLE_UNION','thm.measure.sigma_algebra_def')).
fof(f485,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f485_D])).
fof(f485_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f483,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f269,f266])).
fof(f269,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f19])).
fof(f19,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.measure.SIGMA_ALGEBRA_COUNTABLE_UNION','thm.bool.NOT_CLAUSES|split|2')).
fof(f482,plain,(
  p(s(bool,'T_0')) | $spl8),
  inference(cnf_transformation,[],[f482_D])).
fof(f482_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f266,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.measure.SIGMA_ALGEBRA_COUNTABLE_UNION','thm.bool.TRUTH')).
fof(f3252,plain,(
  $false | ($spl8 | $spl11 | $spl28 | $spl218 | $spl220 | $spl222 | $spl282)),
  inference(subsumption_resolution,[],[f3251,f482])).
fof(f3251,plain,(
  ~p(s(bool,'T_0')) | ($spl8 | $spl11 | $spl28 | $spl218 | $spl220 | $spl222 | $spl282)),
  inference(forward_demodulation,[],[f3250,f613])).
fof(f3250,plain,(
  ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))) | ($spl8 | $spl11 | $spl28 | $spl220 | $spl222 | $spl282)),
  inference(subsumption_resolution,[],[f3249,f482])).
fof(f3249,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))) | ($spl8 | $spl11 | $spl28 | $spl220 | $spl222 | $spl282)),
  inference(forward_demodulation,[],[f3248,f615])).
fof(f3248,plain,(
  ~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))) | ($spl8 | $spl11 | $spl28 | $spl222 | $spl282)),
  inference(subsumption_resolution,[],[f3247,f482])).
fof(f3247,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))) | ($spl11 | $spl28 | $spl222 | $spl282)),
  inference(forward_demodulation,[],[f3246,f617])).
fof(f3246,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK12,bool),bool),sK14),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))))) | ~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))) | ($spl11 | $spl28 | $spl282)),
  inference(subsumption_resolution,[],[f3197,f485])).
fof(f3197,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK12,bool),bool),sK14),s(fun(fun(sK12,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))))) | ~p(s(bool,'const.util_prob.countable_1'(s(fun(fun(sK12,bool),bool),sK14)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK12,bool),fun(fun(sK12,bool),bool)),sK13)))) | ($spl28 | $spl282)),
  inference(superposition,[],[f501,f732])).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 245
% Passive clauses: 728
% Generated clauses: 2989
% Final active clauses: 241
% Final passive clauses: 483
% Input formulas: 44
% Initial clauses: 202
% 
% Duplicate literals: 83
% Trivial inequalities: 3
% Fw subsumption resolutions: 255
% Fw demodulations: 50
% Bw demodulations: 4
% Condensations: 34
% Global subsumptions: 13
% 
% Simple tautologies: 191
% Equational tautologies: 4
% Forward subsumptions: 784
% 
% Binary resolution: 1221
% Factoring: 70
% Forward superposition: 224
% Backward superposition: 94
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 1042
% SAT solver unit clauses: 189
% SAT solver binary clauses: 60
% SAT solver learnt clauses: 27
% SAT solver learnt literals: 10
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 989
% TWLsolver calls for satisfiability: 1732
% 
% Memory used [KB]: 3837
% Time elapsed: 0.117 s
% ------------------------------
% ------------------------------
% Success in time 0.734 s
