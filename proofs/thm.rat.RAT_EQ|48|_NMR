Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.rat
% (68731)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 160
% Passive clauses: 2251
% Generated clauses: 18756
% Final active clauses: 124
% Final passive clauses: 1979
% Input formulas: 31
% Initial clauses: 37
% 
% Duplicate literals: 1327
% Trivial inequalities: 226
% Fw subsumption resolutions: 2169
% Fw demodulations: 1678
% Bw demodulations: 25
% 
% Simple tautologies: 334
% Equational tautologies: 103
% Forward subsumptions: 8437
% 
% Binary resolution: 60
% Forward superposition: 6665
% Backward superposition: 5780
% Self superposition: 347
% Equality factoring: 269
% Equality resolution: 23
% 
% Split clauses: 807
% Split components: 1660
% SAT solver clauses: 2264
% SAT solver unit clauses: 334
% SAT solver binary clauses: 710
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 807
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2251
% TWLsolver calls for satisfiability: 72
% 
% Memory used [KB]: 8955
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rat
% (68744)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 143
% Passive clauses: 492
% Generated clauses: 13811
% Final active clauses: 130
% Final passive clauses: 313
% Input formulas: 31
% Initial clauses: 37
% 
% Duplicate literals: 1645
% Trivial inequalities: 93
% Fw subsumption resolutions: 1021
% Fw demodulations: 1370
% Bw demodulations: 41
% Condensations: 1852
% 
% Simple tautologies: 154
% Equational tautologies: 49
% Forward subsumptions: 5507
% 
% Binary resolution: 36
% Forward superposition: 3774
% Backward superposition: 3143
% Self superposition: 177
% Equality factoring: 128
% Equality resolution: 8
% 
% Split clauses: 413
% Split components: 827
% SAT solver clauses: 1593
% SAT solver unit clauses: 54
% SAT solver binary clauses: 62
% 
% Sat splits: 413
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 1593
% TWLsolver calls for satisfiability: 170
% 
% Memory used [KB]: 10490
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f1806,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f74,f114,f112,f73,f113,f111,f147,f150,f148,f172,f174,f168,f178,f176,f233,f235,f264,f265,f271,f622,f624,f628,f626,f695,f1238,f1272,f1270,f1755,f1800,f1803])).
fof(f1803,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f1802,f114])).
fof(f1802,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(forward_demodulation,[],[f1801,f82])).
fof(f82,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X16] : s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X16))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X16)))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.rat.rat_nmr_def')).
fof(f1801,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK0))))) | $spl0),
  inference(forward_demodulation,[],[f1797,f699])).
fof(f699,plain,(
  s('type.rat.rat',sK0) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) | $spl0),
  inference(backward_demodulation,[],[f111,f77])).
fof(f77,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(cnf_transformation,[],[f29])).
fof(f29,axiom,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0')))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.rat.rat_|48|')).
fof(f1797,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))))),
  inference(trivial_inequality_removal,[],[f1790])).
fof(f1790,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))))),
  inference(superposition,[],[f93,f1748])).
fof(f1748,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0')))),
  inference(superposition,[],[f1665,f79])).
fof(f79,plain,(
  s('type.frac.frac','const.frac.frac_|48|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f10])).
fof(f10,axiom,(
  s('type.frac.frac','const.frac.frac_|48|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.frac.frac_|48|_def')).
fof(f1665,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))))))) )),
  inference(subsumption_resolution,[],[f1648,f75])).
fof(f75,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.bool.TRUTH')).
fof(f1648,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))))))) )),
  inference(superposition,[],[f103,f86])).
fof(f86,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) )),
  inference(cnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12)))))))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.integer.INT_LT_REDUCE|split|0')).
fof(f103,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) => s('type.integer.int',X10) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.frac.NMR')).
fof(f93,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))))))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X14] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X14))))))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X14))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.rat.RAT_NMREQ|48|_CONG')).
fof(f1800,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f1799,f114])).
fof(f1799,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(forward_demodulation,[],[f1798,f82])).
fof(f1798,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK0))))) | $spl0),
  inference(forward_demodulation,[],[f1788,f699])).
fof(f1788,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1748,f93])).
fof(f1755,plain,(
  $false | ($spl3 | $spl10)),
  inference(subsumption_resolution,[],[f1754,f114])).
fof(f1754,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl10),
  inference(forward_demodulation,[],[f1748,f176])).
fof(f1270,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))) ) | $spl18),
  inference(cnf_transformation,[],[f1270_D])).
fof(f1270_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1272,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) | $spl21),
  inference(cnf_transformation,[],[f1272_D])).
fof(f1272_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f1238,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) | s(bool,X0) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))) ) | ($spl7 | $spl16)),
  inference(equality_factoring,[],[f1158])).
fof(f1158,plain,(
  ( ! [X26] : (s(bool,X26) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) | s(bool,'T_0') = s(bool,X26)) ) | ($spl7 | $spl16)),
  inference(subsumption_resolution,[],[f885,f150])).
fof(f885,plain,(
  ( ! [X26] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X26) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) | s(bool,'T_0') = s(bool,X26)) ) | $spl16),
  inference(superposition,[],[f134,f628])).
fof(f134,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f91,f91])).
fof(f91,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rat.RAT_EQ|48|_NMR',aHL_BOOL_CASES)).
fof(f695,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f694,f112])).
fof(f694,plain,(
  s('type.rat.rat',sK0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(backward_demodulation,[],[f693,f77])).
fof(f693,plain,(
  s('type.rat.rat',sK0) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) | $spl2),
  inference(forward_demodulation,[],[f689,f81])).
fof(f81,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : s('type.rat.rat',X0) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X16] : s('type.rat.rat',X16) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X16)))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.rat.RAT')).
fof(f689,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK0))))) | $spl2),
  inference(unit_resulting_resolution,[],[f662,f108])).
fof(f108,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : ((s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) & (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))))),
  inference(nnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X14,X15] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X14))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X15))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X14),s('type.frac.frac',X15)))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.rat.RAT_ABS_EQUIV')).
fof(f662,plain,(
  p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',sK0)))))) | $spl2),
  inference(unit_resulting_resolution,[],[f82,f652])).
fof(f652,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.frac.frac',X0)))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) | $spl2),
  inference(forward_demodulation,[],[f651,f274])).
fof(f274,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int',X0)))) ) | $spl2),
  inference(backward_demodulation,[],[f113,f83])).
fof(f83,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X8] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X8)))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.integer.INT_MUL_LZERO')).
fof(f651,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.frac.frac',X0))))) ) | $spl2),
  inference(forward_demodulation,[],[f650,f438])).
fof(f438,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))) ) | $spl2),
  inference(backward_demodulation,[],[f431,f85])).
fof(f85,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X8] : s('type.integer.int',X8) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.integer.INT_MUL_RID')).
fof(f431,plain,(
  s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl2),
  inference(superposition,[],[f420,f273])).
fof(f273,plain,(
  s('type.frac.frac','const.frac.frac_|48|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl2),
  inference(backward_demodulation,[],[f113,f79])).
fof(f420,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))))))) ) | $spl2),
  inference(subsumption_resolution,[],[f408,f75])).
fof(f408,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))))))) ) | $spl2),
  inference(superposition,[],[f284,f276])).
fof(f276,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl2),
  inference(backward_demodulation,[],[f113,f86])).
fof(f284,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) ) | $spl2),
  inference(backward_demodulation,[],[f113,f104])).
fof(f104,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X10,X11] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) => s('type.integer.int',X11) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X10),s('type.integer.int',X11))))))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.frac.DNM')).
fof(f650,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.frac.frac',X0))))) ) | $spl2),
  inference(forward_demodulation,[],[f649,f476])).
fof(f476,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))))))) ) | $spl2),
  inference(superposition,[],[f420,f431])).
fof(f649,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))))))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.frac.frac',X0))))) ) | $spl2),
  inference(forward_demodulation,[],[f646,f477])).
fof(f477,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0')))))))))) ) | $spl2),
  inference(superposition,[],[f370,f431])).
fof(f370,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))))))) ) | $spl2),
  inference(subsumption_resolution,[],[f360,f75])).
fof(f360,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))))))) ) | $spl2),
  inference(superposition,[],[f283,f276])).
fof(f283,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) ) | $spl2),
  inference(backward_demodulation,[],[f113,f103])).
fof(f646,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.frac.frac',X0)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))))))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) ) | $spl2),
  inference(superposition,[],[f106,f437])).
fof(f437,plain,(
  s('type.frac.frac','const.frac.frac_|48|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))))) | $spl2),
  inference(backward_demodulation,[],[f431,f273])).
fof(f106,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))) & (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X14,X15] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X14),s('type.frac.frac',X15)))) <=> s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X14))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X15))))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X15))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.rat.rat_equiv_def')).
fof(f626,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl14),
  inference(cnf_transformation,[],[f626_D])).
fof(f626_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f628,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) | $spl16),
  inference(cnf_transformation,[],[f628_D])).
fof(f628_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f624,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f91,f606])).
fof(f606,plain,(
  s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f557,f431])).
fof(f557,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))) ) | $spl2),
  inference(superposition,[],[f100,f431])).
fof(f100,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X12,X13] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X12),s('type.num.num',X13))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.integer.INT_LT_REDUCE|split|7')).
fof(f622,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl2),
  inference(superposition,[],[f606,f91])).
fof(f271,plain,(
  $false | ($spl0 | $spl9)),
  inference(trivial_inequality_removal,[],[f269])).
fof(f269,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) | ($spl0 | $spl9)),
  inference(backward_demodulation,[],[f111,f174])).
fof(f265,plain,(
  $false | ($spl2 | $spl9)),
  inference(subsumption_resolution,[],[f256,f174])).
fof(f256,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl2),
  inference(superposition,[],[f82,f234])).
fof(f234,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl2),
  inference(forward_demodulation,[],[f231,f77])).
fof(f231,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))))) | $spl2),
  inference(trivial_inequality_removal,[],[f227])).
fof(f227,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))))) | $spl2),
  inference(superposition,[],[f129,f221])).
fof(f221,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) | $spl2),
  inference(superposition,[],[f214,f116])).
fof(f116,plain,(
  s('type.frac.frac','const.frac.frac_|48|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl2),
  inference(backward_demodulation,[],[f113,f79])).
fof(f214,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))))))) ) | $spl2),
  inference(subsumption_resolution,[],[f207,f75])).
fof(f207,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | s('type.integer.int',X2) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))))))) ) | $spl2),
  inference(superposition,[],[f126,f119])).
fof(f119,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl2),
  inference(backward_demodulation,[],[f113,f86])).
fof(f126,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) ) | $spl2),
  inference(backward_demodulation,[],[f113,f103])).
fof(f129,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))))) ) | $spl2),
  inference(forward_demodulation,[],[f125,f113])).
fof(f125,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) | $spl2),
  inference(backward_demodulation,[],[f113,f93])).
fof(f264,plain,(
  $false | ($spl2 | $spl9)),
  inference(subsumption_resolution,[],[f255,f174])).
fof(f255,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl2),
  inference(superposition,[],[f234,f82])).
fof(f235,plain,(
  $false | ($spl2 | $spl13)),
  inference(subsumption_resolution,[],[f234,f178])).
fof(f233,plain,(
  $false | ($spl2 | $spl13)),
  inference(subsumption_resolution,[],[f232,f178])).
fof(f232,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl2),
  inference(forward_demodulation,[],[f226,f77])).
fof(f226,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))))) | $spl2),
  inference(unit_resulting_resolution,[],[f221,f129])).
fof(f176,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) | $spl10),
  inference(cnf_transformation,[],[f176_D])).
fof(f176_D,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f178,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl13),
  inference(cnf_transformation,[],[f178_D])).
fof(f178_D,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f168,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) | $spl2),
  inference(superposition,[],[f128,f77])).
fof(f128,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) | $spl2),
  inference(forward_demodulation,[],[f124,f113])).
fof(f124,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) | $spl2),
  inference(backward_demodulation,[],[f113,f92])).
fof(f92,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) )),
  inference(cnf_transformation,[],[f67])).
fof(f174,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl9),
  inference(cnf_transformation,[],[f174_D])).
fof(f174_D,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f172,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_|48|_0'))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl2),
  inference(forward_demodulation,[],[f171,f116])).
fof(f171,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl2),
  inference(forward_demodulation,[],[f170,f77])).
fof(f170,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl2),
  inference(forward_demodulation,[],[f167,f82])).
fof(f167,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|48|_0'))))))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl2),
  inference(superposition,[],[f128,f116])).
fof(f148,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f150,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl7),
  inference(cnf_transformation,[],[f150_D])).
fof(f150_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f147,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f91])).
fof(f111,plain,(
  s('type.rat.rat',sK0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  s('type.rat.rat',sK0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f113,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f73,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',sK0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  (s('type.rat.rat',sK0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.rat.rat',sK0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f65])).
fof(f65,plain,(
  ? [X0] : ((s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0)))) & (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0)))))),
  inference(nnf_transformation,[],[f61])).
fof(f61,plain,(
  ? [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <~> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))))),
  inference(ennf_transformation,[],[f33])).
fof(f33,plain,(
  ~! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X6))))),
  file('thm.rat.RAT_EQ|48|_NMR','thm.rat.RAT_EQ|48|_NMR')).
fof(f112,plain,(
  s('type.rat.rat',sK0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl1),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  s('type.rat.rat',sK0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f114,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl3),
  inference(cnf_transformation,[],[f114_D])).
fof(f114_D,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f74,plain,(
  s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',sK0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f66])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 141
% Passive clauses: 227
% Generated clauses: 1751
% Final active clauses: 62
% Final passive clauses: 28
% Input formulas: 31
% Initial clauses: 37
% 
% Duplicate literals: 111
% Trivial inequalities: 24
% Fw subsumption resolutions: 61
% Fw demodulations: 243
% Bw demodulations: 40
% Condensations: 100
% 
% Simple tautologies: 29
% Equational tautologies: 44
% Forward subsumptions: 895
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 124
% Forward superposition: 486
% Backward superposition: 393
% Self superposition: 40
% Equality factoring: 30
% Equality resolution: 8
% 
% Split clauses: 8
% Split components: 16
% SAT solver clauses: 254
% SAT solver unit clauses: 56
% SAT solver binary clauses: 130
% 
% Sat splits: 8
% Sat splitting refutations: 9
% 
% Memory used [KB]: 1918
% Time elapsed: 0.056 s
% ------------------------------
% ------------------------------
% Success in time 1.393 s
