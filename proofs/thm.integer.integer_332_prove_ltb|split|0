Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f986,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f977,f343,f337,f344,f969,f349,f957,f348,f635,f639,f357,f688,f55,f58,f56,f67,f971,f342])).
fof(f342,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f342_D])).
fof(f342_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f971,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl19),
  inference(subsumption_resolution,[],[f763,f35])).
fof(f35,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.integer_332_prove_ltb|split|0',aHL_TRUTH)).
fof(f763,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s(bool,X4) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X4)) ) | $spl19),
  inference(superposition,[],[f641,f50])).
fof(f50,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f39,f39])).
fof(f39,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integer.integer_332_prove_ltb|split|0',aHL_BOOL_CASES)).
fof(f641,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl19),
  inference(cnf_transformation,[],[f641_D])).
fof(f641_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f67,plain,(
  $false | $spl0),
  inference(resolution,[],[f64,f35])).
fof(f64,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl0),
  inference(superposition,[],[f37,f56])).
fof(f37,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.integer_332_prove_ltb|split|0',aHL_FALSITY)).
fof(f56,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f58,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f58_D])).
fof(f58_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f55,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f39])).
fof(f688,plain,(
  $false | ($spl3 | $spl14)),
  inference(trivial_inequality_removal,[],[f680])).
fof(f680,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl3 | $spl14)),
  inference(superposition,[],[f58,f357])).
fof(f357,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | $spl14),
  inference(cnf_transformation,[],[f357_D])).
fof(f357_D,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f639,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl16),
  inference(cnf_transformation,[],[f639_D])).
fof(f639_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f635,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(duplicate_literal_removal,[],[f588])).
fof(f588,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f342,f39])).
fof(f348,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) | $spl12),
  inference(cnf_transformation,[],[f348_D])).
fof(f348_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f957,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) | $spl16),
  inference(forward_demodulation,[],[f937,f38])).
fof(f38,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))),
  file('thm.integer.integer_332_prove_ltb|split|0','thm.integer.INT_ADD_LID')).
fof(f937,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK0))))) | $spl16),
  inference(superposition,[],[f639,f48])).
fof(f48,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X2)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6,X7,X9] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X9),s('type.integer.int',X7))))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X9)))),
  file('thm.integer.integer_332_prove_ltb|split|0','thm.integer.INT_LE_SUB_RADD')).
fof(f349,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) | $spl13),
  inference(cnf_transformation,[],[f349_D])).
fof(f349_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f969,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) | $spl16),
  inference(forward_demodulation,[],[f300,f639])).
fof(f300,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f299,f45])).
fof(f45,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7)))))),
  file('thm.integer.integer_332_prove_ltb|split|0','thm.integer.int_sub')).
fof(f299,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f34,f44])).
fof(f44,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7,X6] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X6)))),
  file('thm.integer.integer_332_prove_ltb|split|0','thm.integer.INT_ADD_SYM')).
fof(f34,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f28])).
fof(f28,plain,(
  ? [X0,X1] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0))) != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X7),s('type.integer.int',X6))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(bool,'const.integer.int_le_2'(s('type.integer.int',X7),s('type.integer.int',X6))) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.integer.integer_332_prove_ltb|split|0','thm.integer.integer_332_prove_ltb|split|0')).
fof(f344,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) | $spl7),
  inference(cnf_transformation,[],[f344_D])).
fof(f344_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f337,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) | s(bool,X0) = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f300,f50])).
fof(f343,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) | $spl6),
  inference(cnf_transformation,[],[f343_D])).
fof(f343_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f977,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) | $spl18),
  inference(resolution,[],[f976,f52])).
fof(f52,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f37,f39])).
fof(f976,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int',sK0)))) | $spl18),
  inference(forward_demodulation,[],[f975,f38])).
fof(f975,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK0)))))) | $spl18),
  inference(forward_demodulation,[],[f640,f48])).
fof(f640,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl18),
  inference(cnf_transformation,[],[f640_D])).
fof(f640_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 37
% Passive clauses: 230
% Generated clauses: 951
% Final active clauses: 20
% Final passive clauses: 140
% Input formulas: 13
% Initial clauses: 15
% 
% Duplicate literals: 67
% Trivial inequalities: 9
% Fw subsumption resolutions: 17
% Fw demodulations: 65
% Bw demodulations: 9
% 
% Simple tautologies: 26
% Equational tautologies: 16
% Forward subsumptions: 500
% 
% Binary resolution: 7
% Forward superposition: 428
% Backward superposition: 229
% Self superposition: 43
% Equality factoring: 28
% Equality resolution: 1
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 37
% SAT solver unit clauses: 3
% SAT solver binary clauses: 21
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 14
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 32
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 1151
% Time elapsed: 0.032 s
% ------------------------------
% ------------------------------
% Success in time 0.034 s
