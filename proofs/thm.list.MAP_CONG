Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% (48636)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 235
% Passive clauses: 5732
% Generated clauses: 24478
% Final active clauses: 227
% Final passive clauses: 5116
% Input formulas: 37
% Initial clauses: 109
% 
% Duplicate literals: 587
% Trivial inequalities: 614
% Fw subsumption resolutions: 3781
% Fw demodulations: 2993
% Bw demodulations: 5
% 
% Simple tautologies: 525
% Equational tautologies: 47
% Forward subsumptions: 9121
% 
% Binary resolution: 2112
% Factoring: 6
% Forward superposition: 7612
% Backward superposition: 6306
% Self superposition: 84
% Equality factoring: 70
% Equality resolution: 36
% 
% Split clauses: 556
% Split components: 1142
% SAT solver clauses: 1306
% SAT solver unit clauses: 21
% SAT solver binary clauses: 265
% 
% Sat splits: 556
% 
% TWLsolver clauses: 1301
% TWLsolver calls for satisfiability: 271
% 
% Memory used [KB]: 12153
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (48663)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 146
% Passive clauses: 1184
% Generated clauses: 11692
% Final active clauses: 129
% Final passive clauses: 992
% Input formulas: 37
% Initial clauses: 109
% 
% Duplicate literals: 536
% Trivial inequalities: 110
% Fw subsumption resolutions: 1181
% Fw demodulations: 579
% Bw demodulations: 40
% Condensations: 1161
% Global subsumptions: 6
% 
% Simple tautologies: 240
% Equational tautologies: 51
% Forward subsumptions: 4708
% Bw demodulations to eq. taut.: 9
% 
% Binary resolution: 490
% Factoring: 6
% Forward superposition: 2420
% Backward superposition: 3533
% Self superposition: 137
% Equality factoring: 96
% Equality resolution: 27
% 
% Split clauses: 225
% Split components: 458
% SAT solver clauses: 2032
% SAT solver unit clauses: 100
% SAT solver binary clauses: 68
% SAT solver learnt clauses: 13
% SAT solver learnt literals: 3
% 
% Sat splits: 225
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 2007
% TWLsolver calls for satisfiability: 604
% 
% Memory used [KB]: 12281
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f2690,plain,(
  $false),
  inference(subsumption_resolution,[],[f2669,f2424])).
fof(f2424,plain,(
  s(sK1,happ(s(fun(sK2,sK1),sK5),s(sK2,sK14(sK3,sK5,sK6,sK2,sK1)))) = s(sK1,happ(s(fun(sK2,sK1),sK6),s(sK2,sK14(sK3,sK5,sK6,sK2,sK1))))),
  inference(unit_resulting_resolution,[],[f2343,f294])).
fof(f294,plain,(
  ( ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(sK2,X6),s(fun(sK2,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK2),sK3)))))) | s(sK1,happ(s(fun(sK2,sK1),sK5),s(sK2,X6))) = s(sK1,happ(s(fun(sK2,sK1),sK6),s(sK2,X6)))) )),
  inference(backward_demodulation,[],[f167,f168])).
fof(f168,plain,(
  ( ! [X6] : (s(sK1,happ(s(fun(sK2,sK1),sK5),s(sK2,X6))) = s(sK1,happ(s(fun(sK2,sK1),sK6),s(sK2,X6))) | ~p(s(bool,'const.bool.IN_2'(s(sK2,X6),s(fun(sK2,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK2),sK4))))))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  s('type.list.list'(sK2),sK3) = s('type.list.list'(sK2),sK4) & ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(sK2,X6),s(fun(sK2,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK2),sK4)))))) | s(sK1,happ(s(fun(sK2,sK1),sK5),s(sK2,X6))) = s(sK1,happ(s(fun(sK2,sK1),sK6),s(sK2,X6)))) & s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK5),s('type.list.list'(sK2),sK3))) != s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK6),s('type.list.list'(sK2),sK4)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2,sK3,sK4,sK5,sK6])],[f94])).
fof(f94,plain,(
  ? [X0,X1,X2,X3,X4,X5] : (s('type.list.list'(X1),X2) = s('type.list.list'(X1),X3) & ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X3)))))) | s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))) = s(X0,happ(s(fun(X1,X0),X5),s(X1,X6)))) & s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X2))) != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X5),s('type.list.list'(X1),X3))))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((s('type.list.list'(X1),X2) = s('type.list.list'(X1),X3) & ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X3)))))) | s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))) = s(X0,happ(s(fun(X1,X0),X5),s(X1,X6))))) & s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X2))) != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X5),s('type.list.list'(X1),X3))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : ((s('type.list.list'(X1),X2) = s('type.list.list'(X1),X3) & ! [X6] : (p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X3)))))) => s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))) = s(X0,happ(s(fun(X1,X0),X5),s(X1,X6))))) => s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X2))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X5),s('type.list.list'(X1),X3))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5] : ((s('type.list.list'(X1),X2) = s('type.list.list'(X1),X3) & ! [X6] : (p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X3)))))) => s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))) = s(X0,happ(s(fun(X1,X0),X5),s(X1,X6))))) => s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X2))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X5),s('type.list.list'(X1),X3))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11] : ((s('type.list.list'(X7),X8) = s('type.list.list'(X7),X9) & ! [X12] : (p(s(bool,'const.bool.IN_2'(s(X7,X12),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),X9)))))) => s(X6,happ(s(fun(X7,X6),X10),s(X7,X12))) = s(X6,happ(s(fun(X7,X6),X11),s(X7,X12))))) => s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X10),s('type.list.list'(X7),X8))) = s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X11),s('type.list.list'(X7),X9))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11] : ((s('type.list.list'(X7),X8) = s('type.list.list'(X7),X9) & ! [X12] : (p(s(bool,'const.bool.IN_2'(s(X7,X12),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),X9)))))) => s(X6,happ(s(fun(X7,X6),X10),s(X7,X12))) = s(X6,happ(s(fun(X7,X6),X11),s(X7,X12))))) => s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X10),s('type.list.list'(X7),X8))) = s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X11),s('type.list.list'(X7),X9))))),
  file('thm.list.MAP_CONG','thm.list.MAP_CONG')).
fof(f167,plain,(
  s('type.list.list'(sK2),sK3) = s('type.list.list'(sK2),sK4)),
  inference(cnf_transformation,[],[f120])).
fof(f2343,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK2,sK14(sK3,sK5,sK6,sK2,sK1)),s(fun(sK2,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(sK2),sK3))))))),
  inference(unit_resulting_resolution,[],[f295,f234])).
fof(f234,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X1,sK14(X4,X3,X2,X1,X0)),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X4)))))) | s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4))) | ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X4)))))) | s(X0,happ(s(fun(X1,X0),X2),s(X1,X6))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X6))))) & ((p(s(bool,'const.bool.IN_2'(s(X1,sK14(X4,X3,X2,X1,X0)),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X4)))))) & s(X0,happ(s(fun(X1,X0),X2),s(X1,sK14(X4,X3,X2,X1,X0)))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,sK14(X4,X3,X2,X1,X0))))) | s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14])],[f156])).
fof(f156,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4))) | ! [X6] : (~p(s(bool,'const.bool.IN_2'(s(X1,X6),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X4)))))) | s(X0,happ(s(fun(X1,X0),X2),s(X1,X6))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X6))))) & (? [X5] : (p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X4)))))) & s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))) | s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4)))))),
  inference(rectify,[],[f155])).
fof(f155,plain,(
  ! [X0,X1,X2,X3,X4] : ((s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4))) | ! [X5] : (~p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X4)))))) | s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X5))))) & (? [X5] : (p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X4)))))) & s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))) | s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4)))))),
  inference(nnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4))) <=> ! [X5] : (~p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X4)))))) | s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))))),
  inference(ennf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3,X4] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4))) <=> ! [X5] : (p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X4)))))) => s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))))),
  inference(flattening,[],[f86])).
fof(f86,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4))) <=> ! [X5] : (p(s(bool,'const.bool.IN_2'(s(X1,X5),s(fun(X1,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X1),X4)))))) => s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,X5)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X13,X14,X15] : (s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X13),s('type.list.list'(X7),X15))) = s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X14),s('type.list.list'(X7),X15))) <=> ! [X16] : (p(s(bool,'const.bool.IN_2'(s(X7,X16),s(fun(X7,bool),'const.list.LIST_TO_SET_1'(s('type.list.list'(X7),X15)))))) => s(X6,happ(s(fun(X7,X6),X13),s(X7,X16))) = s(X6,happ(s(fun(X7,X6),X14),s(X7,X16)))))),
  file('thm.list.MAP_CONG','thm.list.MAP_EQ_f')).
fof(f295,plain,(
  s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK5),s('type.list.list'(sK2),sK3))) != s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK6),s('type.list.list'(sK2),sK3)))),
  inference(backward_demodulation,[],[f167,f169])).
fof(f169,plain,(
  s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK5),s('type.list.list'(sK2),sK3))) != s('type.list.list'(sK1),'const.list.MAP_2'(s(fun(sK2,sK1),sK6),s('type.list.list'(sK2),sK4)))),
  inference(cnf_transformation,[],[f120])).
fof(f2669,plain,(
  s(sK1,happ(s(fun(sK2,sK1),sK5),s(sK2,sK14(sK3,sK5,sK6,sK2,sK1)))) != s(sK1,happ(s(fun(sK2,sK1),sK6),s(sK2,sK14(sK3,sK5,sK6,sK2,sK1))))),
  inference(unit_resulting_resolution,[],[f295,f235])).
fof(f235,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X2),s(X1,sK14(X4,X3,X2,X1,X0)))) != s(X0,happ(s(fun(X1,X0),X3),s(X1,sK14(X4,X3,X2,X1,X0)))) | s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4))) = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X4)))) )),
  inference(cnf_transformation,[],[f157])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 89
% Passive clauses: 306
% Generated clauses: 2484
% Final active clauses: 79
% Final passive clauses: 198
% Input formulas: 37
% Initial clauses: 109
% 
% Duplicate literals: 100
% Trivial inequalities: 14
% Fw subsumption resolutions: 111
% Fw demodulations: 414
% Bw demodulations: 21
% Condensations: 158
% 
% Simple tautologies: 71
% Equational tautologies: 42
% Forward subsumptions: 1127
% Fw demodulations to eq. taut.: 84
% Bw demodulations to eq. taut.: 2
% 
% Unit resulting resolution: 439
% Factoring: 1
% Forward superposition: 700
% Backward superposition: 339
% Self superposition: 26
% Equality factoring: 26
% Equality resolution: 8
% 
% Split clauses: 9
% Split components: 18
% SAT solver clauses: 353
% SAT solver unit clauses: 82
% SAT solver binary clauses: 102
% 
% Sat splits: 9
% Sat splitting refutations: 27
% 
% Memory used [KB]: 3198
% Time elapsed: 0.080 s
% ------------------------------
% ------------------------------
% Success in time 1.392 s
