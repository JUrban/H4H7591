Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% (69240)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1164
% Passive clauses: 6089
% Generated clauses: 32819
% Final active clauses: 796
% Final passive clauses: 4294
% Input formulas: 110
% Initial clauses: 263
% 
% Duplicate literals: 317
% Trivial inequalities: 79
% Fw subsumption resolutions: 2230
% Fw demodulations: 2656
% Bw demodulations: 323
% 
% Simple tautologies: 211
% Equational tautologies: 32
% Forward subsumptions: 20448
% Fw demodulations to eq. taut.: 3
% 
% Binary resolution: 8236
% Factoring: 1567
% Forward superposition: 7451
% Backward superposition: 9389
% Self superposition: 45
% Equality factoring: 2
% Equality resolution: 17
% 
% Split clauses: 788
% Split components: 1577
% SAT solver clauses: 1172
% SAT solver unit clauses: 14
% SAT solver binary clauses: 67
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 788
% Sat splitting refutations: 16
% 
% TWLsolver clauses: 1171
% TWLsolver calls for satisfiability: 532
% 
% Memory used [KB]: 17142
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f19676,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f19598,f848,f850,f846,f374,f646,f375,f648,f644,f382,f659,f4643,f4686,f517,f742,f4840,f4847,f4830,f4832,f5004,f4747,f4725,f4984,f376,f649,f647,f645,f390,f669,f399,f678,f521,f747,f18869,f18871,f393,f672,f15745,f15793,f15714,f15716,f11421,f11423,f6873,f6882,f486,f719,f5017,f5024,f11092,f11093,f499,f732,f11169,f11195,f500,f733,f6872,f6881,f11170,f11196,f15635,f15672,f15461,f15500,f397,f676,f14918,f14953,f14716,f14795,f8586,f8618,f567,f767])).
fof(f767,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) ) | $spl186),
  inference(cnf_transformation,[],[f767_D])).
fof(f767_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2)))) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f567,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f342])).
fof(f342,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X0) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) & (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))),
  inference(nnf_transformation,[],[f227])).
fof(f227,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))) <=> s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X14,X15,X18] : (s('type.integer.int',X14) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X15),s('type.integer.int',X18))) <=> s('type.integer.int',X15) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X14),s('type.integer.int',X18))))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.integer.INT_EQ_SUB_LADD')).
fof(f8618,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X4) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) | $spl2464),
  inference(cnf_transformation,[],[f8618_D])).
fof(f8618_D,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X4) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) <=> ~$spl2464),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2464])])).
fof(f8586,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X4) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) | ($spl186 | $spl1886)),
  inference(superposition,[],[f767,f6881])).
fof(f14795,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) | $spl3594),
  inference(cnf_transformation,[],[f14795_D])).
fof(f14795_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) <=> ~$spl3594),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3594])])).
fof(f14716,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) | $spl2464),
  inference(equality_resolution,[],[f8618])).
fof(f14953,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK10))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) | $spl3628),
  inference(cnf_transformation,[],[f14953_D])).
fof(f14953_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK10))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) <=> ~$spl3628),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3628])])).
fof(f14918,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',sK10))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) | ($spl2798 | $spl3594)),
  inference(superposition,[],[f14795,f11195])).
fof(f676,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | $spl36),
  inference(cnf_transformation,[],[f676_D])).
fof(f676_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f397,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.arithmetic.ADD|split|0')).
fof(f15500,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))))) | $spl3696),
  inference(cnf_transformation,[],[f15500_D])).
fof(f15500_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))))) <=> ~$spl3696),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3696])])).
fof(f15461,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))))) | ($spl36 | $spl3628)),
  inference(superposition,[],[f14953,f676])).
fof(f15672,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK10),s('type.num.num',sK11))))) | $spl3774),
  inference(cnf_transformation,[],[f15672_D])).
fof(f15672_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK10),s('type.num.num',sK11))))) <=> ~$spl3774),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3774])])).
fof(f15635,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK10),s('type.num.num',sK11))))) | ($spl2800 | $spl3696)),
  inference(superposition,[],[f15500,f11196])).
fof(f11196,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',sK11))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) | $spl2800),
  inference(cnf_transformation,[],[f11196_D])).
fof(f11196_D,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',sK11))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) <=> ~$spl2800),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2800])])).
fof(f11170,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',sK11))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) | ($spl128 | $spl1888)),
  inference(superposition,[],[f733,f6882])).
fof(f6881,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) | $spl1886),
  inference(cnf_transformation,[],[f6881_D])).
fof(f6881_D,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) <=> ~$spl1886),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1886])])).
fof(f6872,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10)))))) ) | ($spl0 | $spl100)),
  inference(superposition,[],[f719,f644])).
fof(f733,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) ) | $spl128),
  inference(cnf_transformation,[],[f733_D])).
fof(f733_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f500,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f197])).
fof(f197,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X7,X6] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6)))))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.integer.INT_ADD')).
fof(f11195,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',sK10))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11)))))) ) | $spl2798),
  inference(cnf_transformation,[],[f11195_D])).
fof(f11195_D,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',sK10))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11)))))) ) <=> ~$spl2798),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2798])])).
fof(f11169,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',sK10))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X3))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11)))))) ) | ($spl128 | $spl1886)),
  inference(superposition,[],[f733,f6881])).
fof(f732,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) | $spl126),
  inference(cnf_transformation,[],[f732_D])).
fof(f732_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f499,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f196])).
fof(f196,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X14,X15] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X14),s('type.integer.int',X15))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15)))))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.integer.INT_NEG_ADD')).
fof(f11093,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))),s('type.integer.int',X4)))))) ) | $spl2774),
  inference(cnf_transformation,[],[f11093_D])).
fof(f11093_D,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))),s('type.integer.int',X4)))))) ) <=> ~$spl2774),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2774])])).
fof(f11092,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))),s('type.integer.int',X4))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))),s('type.integer.int',X4)))))) ) | ($spl100 | $spl126 | $spl1466)),
  inference(forward_demodulation,[],[f11052,f719])).
fof(f11052,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))),s('type.integer.int',X4))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4)))))) ) | ($spl126 | $spl1466)),
  inference(superposition,[],[f732,f5024])).
fof(f5024,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))))) | $spl1466),
  inference(cnf_transformation,[],[f5024_D])).
fof(f5024_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))))) <=> ~$spl1466),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1466])])).
fof(f5017,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))))) | ($spl0 | $spl40)),
  inference(superposition,[],[f678,f644])).
fof(f719,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) | $spl100),
  inference(cnf_transformation,[],[f719_D])).
fof(f719_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f486,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f183])).
fof(f183,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X14,X15] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X14),s('type.integer.int',X15))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X15)))))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.integer.int_sub')).
fof(f6882,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11)))))) ) | $spl1888),
  inference(cnf_transformation,[],[f6882_D])).
fof(f6882_D,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11)))))) ) <=> ~$spl1888),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1888])])).
fof(f6873,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11)))))) ) | ($spl100 | $spl1466)),
  inference(superposition,[],[f719,f5024])).
fof(f11423,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK10),s('type.num.num',sK11))))))) | $spl2854),
  inference(cnf_transformation,[],[f11423_D])).
fof(f11423_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK10),s('type.num.num',sK11))))))) <=> ~$spl2854),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2854])])).
fof(f11421,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK10),s('type.num.num',sK11))))))) | ($spl1888 | $spl2774 | $spl2798 | $spl2800)),
  inference(forward_demodulation,[],[f11420,f11195])).
fof(f11420,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK10),s('type.num.num',sK11))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) | ($spl1888 | $spl2774 | $spl2800)),
  inference(forward_demodulation,[],[f11385,f11196])).
fof(f11385,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))))))) | ($spl1888 | $spl2774)),
  inference(superposition,[],[f11093,f6882])).
fof(f15716,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))))) | $spl3794),
  inference(cnf_transformation,[],[f15716_D])).
fof(f15716_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))))) <=> ~$spl3794),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3794])])).
fof(f15714,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))))) | ($spl14 | $spl2854 | $spl3774)),
  inference(forward_demodulation,[],[f15698,f659])).
fof(f15698,plain,(
  s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))))) | ($spl2854 | $spl3774)),
  inference(backward_demodulation,[],[f15672,f11423])).
fof(f15793,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10)))) ) | $spl3824),
  inference(cnf_transformation,[],[f15793_D])).
fof(f15793_D,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10)))) ) <=> ~$spl3824),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3824])])).
fof(f15745,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10)))) ) | ($spl146 | $spl3794)),
  inference(superposition,[],[f742,f15716])).
fof(f672,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl28),
  inference(cnf_transformation,[],[f672_D])).
fof(f672_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f393,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X7] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.arithmetic.MULT_|48|')).
fof(f18871,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))) | $spl5050),
  inference(cnf_transformation,[],[f18871_D])).
fof(f18871_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))) <=> ~$spl5050),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5050])])).
fof(f18869,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))) | ($spl28 | $spl3824)),
  inference(forward_demodulation,[],[f18867,f672])).
fof(f18867,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl28 | $spl3824)),
  inference(trivial_inequality_removal,[],[f18818])).
fof(f18818,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK10))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | ($spl28 | $spl3824)),
  inference(superposition,[],[f15793,f672])).
fof(f747,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl156),
  inference(cnf_transformation,[],[f747_D])).
fof(f747_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f521,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f323])).
fof(f323,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(flattening,[],[f322])).
fof(f322,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & ((s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f206])).
fof(f206,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7,X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X7) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X6)))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.arithmetic.ADD_EQ_|48|')).
fof(f678,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | $spl40),
  inference(cnf_transformation,[],[f678_D])).
fof(f678_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f399,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X14] : s('type.integer.int',X14) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X14)))))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.integer.INT_NEGNEG')).
fof(f669,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | $spl22),
  inference(cnf_transformation,[],[f669_D])).
fof(f669_D,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f390,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.arithmetic.MULT_CLAUSES|split|0')).
fof(f645,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) | $spl1),
  inference(cnf_transformation,[],[f645_D])).
fof(f645_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f647,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK10) | $spl3),
  inference(cnf_transformation,[],[f647_D])).
fof(f647_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK10) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f649,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK11) | $spl5),
  inference(cnf_transformation,[],[f649_D])).
fof(f649_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK11) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f376,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK11) | s('type.num.num','const.num.|48|_0') != s('type.num.num',sK10) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11)))))),
  inference(cnf_transformation,[],[f275])).
fof(f275,plain,(
  (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK10) & s('type.num.num','const.num.|48|_0') = s('type.num.num',sK11))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',sK10) | s('type.num.num','const.num.|48|_0') != s('type.num.num',sK11))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11])],[f274])).
fof(f274,plain,(
  ? [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1)))),
  inference(flattening,[],[f273])).
fof(f273,plain,(
  ? [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) | (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X1))))),
  inference(nnf_transformation,[],[f236])).
fof(f236,plain,(
  ? [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) <~> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)))),
  inference(ennf_transformation,[],[f112])).
fof(f112,plain,(
  ~! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))))) <=> (s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) & s('type.num.num','const.num.|48|_0') = s('type.num.num',X7)))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.integer.integer_244_prove_ltb|split|0')).
fof(f4984,plain,(
  $false | ($spl5 | $spl22 | $spl1454)),
  inference(subsumption_resolution,[],[f4983,f649])).
fof(f4983,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK11) | ($spl22 | $spl1454)),
  inference(forward_demodulation,[],[f4981,f669])).
fof(f4981,plain,(
  ( ! [X0] : (s('type.num.num',sK11) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | ($spl22 | $spl1454)),
  inference(trivial_inequality_removal,[],[f4952])).
fof(f4952,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num',sK11) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | ($spl22 | $spl1454)),
  inference(superposition,[],[f4847,f669])).
fof(f4725,plain,(
  $false | ($spl3 | $spl22 | $spl1424)),
  inference(subsumption_resolution,[],[f4724,f647])).
fof(f4724,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK10) | ($spl22 | $spl1424)),
  inference(forward_demodulation,[],[f4722,f669])).
fof(f4722,plain,(
  ( ! [X0] : (s('type.num.num',sK10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | ($spl22 | $spl1424)),
  inference(trivial_inequality_removal,[],[f4693])).
fof(f4693,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num',sK10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | ($spl22 | $spl1424)),
  inference(superposition,[],[f4686,f669])).
fof(f4747,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) | $spl1430),
  inference(cnf_transformation,[],[f4747_D])).
fof(f4747_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) <=> ~$spl1430),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1430])])).
fof(f5004,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f644,f646])).
fof(f4832,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))) | $spl1450),
  inference(cnf_transformation,[],[f4832_D])).
fof(f4832_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))) <=> ~$spl1450),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1450])])).
fof(f4830,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))) | ($spl14 | $spl40 | $spl1430)),
  inference(forward_demodulation,[],[f4824,f659])).
fof(f4824,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl40 | $spl1430)),
  inference(superposition,[],[f678,f4747])).
fof(f4847,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) | s('type.num.num',sK11) = s('type.num.num',X0)) ) | $spl1454),
  inference(cnf_transformation,[],[f4847_D])).
fof(f4847_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) | s('type.num.num',sK11) = s('type.num.num',X0)) ) <=> ~$spl1454),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1454])])).
fof(f4840,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) | s('type.num.num',sK11) = s('type.num.num',X0)) ) | ($spl146 | $spl1450)),
  inference(superposition,[],[f742,f4832])).
fof(f742,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) ) | $spl146),
  inference(cnf_transformation,[],[f742_D])).
fof(f742_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f517,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f320])).
fof(f320,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f204])).
fof(f204,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X7,X6] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.integer.INT_INJ')).
fof(f4686,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) | s('type.num.num',sK10) = s('type.num.num',X0)) ) | $spl1424),
  inference(cnf_transformation,[],[f4686_D])).
fof(f4686_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) | s('type.num.num',sK10) = s('type.num.num',X0)) ) <=> ~$spl1424),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1424])])).
fof(f4643,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) | s('type.num.num',sK10) = s('type.num.num',X0)) ) | ($spl146 | $spl312)),
  inference(superposition,[],[f742,f850])).
fof(f659,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl14),
  inference(cnf_transformation,[],[f659_D])).
fof(f659_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f382,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(cnf_transformation,[],[f53])).
fof(f53,axiom,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.integer.integer_244_prove_ltb|split|0','thm.integer.INT_NEG_|48|')).
fof(f644,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) | $spl0),
  inference(cnf_transformation,[],[f644_D])).
fof(f644_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f648,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK11) | $spl4),
  inference(cnf_transformation,[],[f648_D])).
fof(f648_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK11) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f375,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK11) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11)))))),
  inference(cnf_transformation,[],[f275])).
fof(f646,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK10) | $spl2),
  inference(cnf_transformation,[],[f646_D])).
fof(f646_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK10) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f374,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK10) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11)))))),
  inference(cnf_transformation,[],[f275])).
fof(f846,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl14)),
  inference(trivial_inequality_removal,[],[f845])).
fof(f845,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl2 | $spl4 | $spl14)),
  inference(forward_demodulation,[],[f844,f646])).
fof(f844,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) | ($spl1 | $spl4 | $spl14)),
  inference(forward_demodulation,[],[f843,f659])).
fof(f843,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f645,f648])).
fof(f850,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) | $spl312),
  inference(cnf_transformation,[],[f850_D])).
fof(f850_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f848,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) | ($spl0 | $spl4 | $spl14)),
  inference(forward_demodulation,[],[f847,f659])).
fof(f847,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK10))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f644,f648])).
fof(f19598,plain,(
  $false | ($spl5 | $spl156 | $spl5050)),
  inference(subsumption_resolution,[],[f19594,f649])).
fof(f19594,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK11) | ($spl156 | $spl5050)),
  inference(trivial_inequality_removal,[],[f19404])).
fof(f19404,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK11) | ($spl156 | $spl5050)),
  inference(superposition,[],[f747,f18871])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 513
% Passive clauses: 2542
% Generated clauses: 19237
% Final active clauses: 458
% Final passive clauses: 1743
% Input formulas: 110
% Initial clauses: 263
% 
% Duplicate literals: 83
% Trivial inequalities: 239
% Fw subsumption resolutions: 871
% Fw demodulations: 3449
% Bw demodulations: 280
% Condensations: 24
% Global subsumptions: 20
% 
% Simple tautologies: 214
% Equational tautologies: 10
% Forward subsumptions: 8470
% Fw demodulations to eq. taut.: 69
% Bw demodulations to eq. taut.: 25
% 
% Binary resolution: 1467
% Factoring: 59
% Forward superposition: 5129
% Backward superposition: 4553
% Self superposition: 54
% Equality factoring: 2
% Equality resolution: 60
% 
% Split clauses: 29
% Split components: 59
% SAT solver clauses: 3467
% SAT solver unit clauses: 312
% SAT solver binary clauses: 124
% SAT solver learnt clauses: 43
% SAT solver learnt literals: 14
% 
% Sat splits: 29
% Sat splitting refutations: 96
% 
% TWLsolver clauses: 3383
% TWLsolver calls for satisfiability: 1810
% 
% Memory used [KB]: 16502
% Time elapsed: 0.376 s
% ------------------------------
% ------------------------------
% Success in time 1.044 s
