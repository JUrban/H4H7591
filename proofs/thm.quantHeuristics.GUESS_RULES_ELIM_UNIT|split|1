Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (31688)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1016
% Passive clauses: 9003
% Generated clauses: 25934
% Final active clauses: 1005
% Final passive clauses: 7593
% Input formulas: 260
% Initial clauses: 541
% 
% Duplicate literals: 171
% Trivial inequalities: 90
% Fw subsumption resolutions: 1485
% Fw demodulations: 3520
% Bw demodulations: 10
% 
% Simple tautologies: 278
% Equational tautologies: 31
% Forward subsumptions: 11219
% Fw demodulations to eq. taut.: 8
% 
% Binary resolution: 8703
% Factoring: 857
% Forward superposition: 4883
% Backward superposition: 5517
% Self superposition: 35
% Equality factoring: 2
% Equality resolution: 17
% 
% Split clauses: 209
% Split components: 420
% SAT solver clauses: 437
% SAT solver unit clauses: 14
% SAT solver binary clauses: 103
% 
% Sat splits: 209
% 
% TWLsolver clauses: 437
% TWLsolver calls for satisfiability: 368
% 
% Memory used [KB]: 16119
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (31706)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 424
% Passive clauses: 2379
% Generated clauses: 9733
% Final active clauses: 404
% Final passive clauses: 1856
% Input formulas: 260
% Initial clauses: 541
% 
% Duplicate literals: 80
% Trivial inequalities: 9
% Fw subsumption resolutions: 419
% Fw demodulations: 1063
% Bw demodulations: 112
% Condensations: 52
% Global subsumptions: 25
% 
% Simple tautologies: 278
% Equational tautologies: 9
% Forward subsumptions: 2637
% Fw demodulations to eq. taut.: 3
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 2150
% Factoring: 87
% Forward superposition: 1615
% Backward superposition: 1090
% Self superposition: 34
% Equality factoring: 2
% Equality resolution: 3
% 
% Split clauses: 14
% Split components: 28
% SAT solver clauses: 3319
% SAT solver unit clauses: 619
% SAT solver binary clauses: 206
% SAT solver learnt clauses: 50
% SAT solver learnt literals: 20
% 
% Sat splits: 14
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 3219
% TWLsolver calls for satisfiability: 3791
% 
% Memory used [KB]: 13944
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% (31736)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 818
% Passive clauses: 6667
% Generated clauses: 62768
% Final active clauses: 752
% Final passive clauses: 4090
% Input formulas: 260
% Initial clauses: 541
% Discarded non-redundant clauses: 1018
% 
% Duplicate literals: 9
% Trivial inequalities: 8
% Fw subsumption resolutions: 684
% Fw demodulations: 24768
% Bw demodulations: 933
% Condensations: 45
% Global subsumptions: 4
% 
% Simple tautologies: 168
% Equational tautologies: 47
% Forward subsumptions: 19135
% Fw demodulations to eq. taut.: 10013
% Bw demodulations to eq. taut.: 86
% 
% Unit resulting resolution: 23413
% Factoring: 1
% Forward superposition: 6112
% Backward superposition: 5517
% Self superposition: 62
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 23
% Split components: 47
% SAT solver clauses: 7452
% SAT solver unit clauses: 1687
% SAT solver binary clauses: 4018
% 
% Sat splits: 23
% Sat splitting refutations: 733
% 
% Memory used [KB]: 177054
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 29 next slice time: 29
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f18035,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f944,f945,f946,f947,f948,f949,f950,f951,f952,f953,f1027,f1031,f1032,f1033,f1029,f1172,f1174,f1175,f1176,f1179,f1267,f1312,f1314,f1315,f1316,f1319,f1407,f1438,f1440,f1441,f1442,f1445,f1533,f1592,f1593,f2266,f2267,f2268,f2269,f2425,f2373,f2515,f2517,f2518,f2520,f2522,f2611,f2667,f2668,f2669,f2670,f2671,f2672,f958,f957,f2673,f2674,f959,f2675,f2676,f961,f3053,f3070,f3071,f3072,f3803,f3806,f3809,f3812,f3813,f3814,f3810,f3807,f3804,f3801,f956,f4077,f4079,f4080,f4082,f4084,f4173,f4212,f4279,f4281,f4282,f4283,f4286,f4374,f1295,f4444,f4446,f4447,f4448,f4445,f4601,f4549,f4709,f4733,f4758,f4796,f4710,f4913,f4915,f4916,f4917,f4920,f5008,f5036,f5049,f5051,f5052,f5053,f5056,f5144,f5172,f5185,f5187,f5188,f5189,f5192,f5280,f5308,f6324,f6326,f6327,f6328,f6325,f6317,f6316,f6329,f6433,f6435,f6436,f6437,f6434,f6426,f6425,f6438,f7246,f7248,f7249,f7250,f7247,f7348,f7350,f7351,f7352,f7349,f7449,f7451,f7452,f7453,f7450,f7517,f7519,f7520,f7521,f7518,f7916,f7918,f7919,f7920,f7917,f7963,f7965,f7966,f7967,f7964,f8004,f8006,f8007,f8008,f8005,f8045,f8047,f8048,f8049,f8046,f8252,f8254,f8255,f8256,f8253,f8812,f8814,f8815,f8816,f8813,f8887,f9013,f8890,f8892,f8893,f8894,f8897,f8985,f9016,f9031,f9033,f9034,f9035,f9038,f9126,f9156,f9185,f9187,f9188,f9189,f9192,f9280,f9312,f9336,f9338,f9339,f9340,f9343,f9431,f9463,f9699,f9701,f9702,f9703,f9706,f9794,f9824,f10000,f10002,f10003,f10004,f10007,f10095,f10125,f11573,f11575,f11576,f11577,f11580,f11668,f11712,f11733,f11735,f11736,f11737,f11740,f11828,f11942,f11832,f11946,f11972,f11974,f11975,f11976,f11979,f12067,f12181,f12071,f12184,f11944,f12386,f12388,f12389,f12390,f12393,f12481,f12512,f13646,f13648,f13649,f13650,f13653,f13741,f13785,f13808,f13810,f13811,f13812,f13815,f13903,f13947,f13960,f13962,f13963,f13964,f13967,f14055,f14110,f14128,f14130,f14131,f14133,f14135,f14224,f14280,f14297,f14299,f14300,f14301,f14304,f14392,f14424,f14437,f14439,f14440,f14441,f14444,f14532,f14564,f15364,f15366,f15367,f15368,f15371,f15459,f15515,f15625,f15627,f15628,f15630,f15632,f15721,f15778,f15805,f15807,f15808,f15810,f15812,f15901,f15962,f16052,f16054,f16055,f1296,f16057,f1298,f16059,f1297,f16148,f16209,f1030,f18031,f18033])).
fof(f18033,plain,(
  $false | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f18032,f3985])).
fof(f3985,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),X7))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f3343,f919])).
fof(f919,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f713])).
fof(f713,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f542])).
fof(f542,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f286])).
fof(f286,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f285])).
fof(f285,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : ! [X10] : (s(X6,X10) = s(X6,X10) <=> p(s(bool,'T_0')))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.REFL_CLAUSE')).
fof(f3343,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),X7))))))) ) | $spl6),
  inference(superposition,[],[f774,f960])).
fof(f960,plain,(
  s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | $spl6),
  inference(cnf_transformation,[],[f960_D])).
fof(f960_D,plain,(
  s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f774,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f581])).
fof(f581,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK43(X3,X2,X1,X0))))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK43])],[f580])).
fof(f580,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f579])).
fof(f579,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))) & (? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f378])).
fof(f378,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(flattening,[],[f377])).
fof(f377,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X7,X6] : ! [X24,X25] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X24),s(fun(X7,bool),X25)))) <=> ! [X26] : p(s(bool,happ(s(fun(X7,bool),X25),s(X7,happ(s(fun(X6,X7),X24),s(X6,X26)))))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESS_REWRITES|split|2')).
fof(f18032,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),happ(s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X1))),s(sK12,sK42(sK14,'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X1)))),sK12,sK13)))))))))) ) | $spl1),
  inference(forward_demodulation,[],[f17885,f669])).
fof(f669,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f270])).
fof(f270,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f269])).
fof(f269,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X12,X14,X13] : ! [X15,X16,X17] : s(X12,happ(s(fun(X14,X12),X15),s(X14,happ(s(fun(X13,X14),X16),s(X13,X17))))) = s(X12,happ(s(fun(X13,X12),'_dst_x0x1_2'(s(fun(X14,X12),X15),s(fun(X13,X14),X16))),s(X13,X17)))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','_dst_x0x1_ax')).
fof(f17885,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X1))))),s(sK12,sK42(sK14,'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X1)))),sK12,sK13)))))))) ) | $spl1),
  inference(resolution,[],[f4180,f773])).
fof(f773,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK42(X3,X2,X1,X0)))))))) )),
  inference(cnf_transformation,[],[f578])).
fof(f578,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK42(X3,X2,X1,X0))))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK42])],[f577])).
fof(f577,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) & (? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f576])).
fof(f576,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4))))))) & (? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f376])).
fof(f376,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(flattening,[],[f375])).
fof(f375,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X4)))))))),
  inference(rectify,[],[f85])).
fof(f85,axiom,(
  ! [X7,X6] : ! [X9,X18] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),X18)))) <=> ! [X26] : p(s(bool,happ(s(fun(X7,bool),X18),s(X7,happ(s(fun(X6,X7),X9),s(X6,X26)))))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESS_EXISTS_POINT_def')).
fof(f4180,plain,(
  ( ! [X0] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X0))))),s(fun(sK13,bool),sK14))))) ) | $spl1),
  inference(superposition,[],[f956,f759])).
fof(f759,plain,(
  ( ! [X0] : (s('type.one.one','const.one.one_0') = s('type.one.one',X0)) )),
  inference(cnf_transformation,[],[f358])).
fof(f358,plain,(
  ! [X0] : s('type.one.one','const.one.one_0') = s('type.one.one',X0)),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X27] : s('type.one.one','const.one.one_0') = s('type.one.one',X27)),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.one.one')).
fof(f18031,plain,(
  $false | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f18030,f3985])).
fof(f18030,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),happ(s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X0))),s(sK12,sK43(sK14,'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X0)))),sK12,sK13)))))))))) ) | $spl1),
  inference(forward_demodulation,[],[f17884,f669])).
fof(f17884,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X0))))),s(sK12,sK43(sK14,'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X0)))),sK12,sK13)))))))) ) | $spl1),
  inference(resolution,[],[f4180,f775])).
fof(f775,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK43(X3,X2,X1,X0)))))))) )),
  inference(cnf_transformation,[],[f581])).
fof(f1030,plain,(
  ( ! [X12] : (p(s(bool,X12))) ) | $spl10),
  inference(cnf_transformation,[],[f1030_D])).
fof(f1030_D,plain,(
  ( ! [X12] : (p(s(bool,X12))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f16209,plain,(
  ( ! [X47,X50,X48,X46] : (p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48)))) | s(bool,X50) != s(bool,happ(s(fun(X46,bool),X47),s(X46,sK49(X47,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X46)))) | ~p(s(bool,X50))) ) | $spl106),
  inference(cnf_transformation,[],[f16209_D])).
fof(f16209_D,plain,(
  ( ! [X47,X50,X48,X46] : (p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48)))) | s(bool,X50) != s(bool,happ(s(fun(X46,bool),X47),s(X46,sK49(X47,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X46)))) | ~p(s(bool,X50))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f16148,plain,(
  ( ! [X520,X522,X518,X521,X519] : (p(s(bool,happ(s(fun(X518,bool),X519),s(X518,X520)))) | p(s(bool,X521)) | ~p(s(bool,X522)) | s(bool,X522) != s(bool,happ(s(fun(X518,bool),X519),s(X518,sK49(X519,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X518))))) ) | $spl6),
  inference(resolution,[],[f3861,f918])).
fof(f918,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f664])).
fof(f664,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f520])).
fof(f520,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f519])).
fof(f519,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f436])).
fof(f436,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f435])).
fof(f435,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f266])).
fof(f266,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X10,X22,X11,X23] : ((s(bool,X10) = s(bool,X22) & (p(s(bool,X22)) => s(bool,X11) = s(bool,X23))) => ((p(s(bool,X10)) => p(s(bool,X11))) <=> (p(s(bool,X22)) => p(s(bool,X23)))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.IMP_CONG')).
fof(f3861,plain,(
  ( ! [X449,X451,X450] : (~p(s(bool,happ(s(fun(X449,bool),X450),s(X449,sK49(X450,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X449))))) | p(s(bool,happ(s(fun(X449,bool),X450),s(X449,X451))))) ) | $spl6),
  inference(subsumption_resolution,[],[f3580,f919])).
fof(f3580,plain,(
  ( ! [X449,X451,X450] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X449,bool),X450),s(X449,X451)))) | ~p(s(bool,happ(s(fun(X449,bool),X450),s(X449,sK49(X450,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X449)))))) ) | $spl6),
  inference(superposition,[],[f896,f960])).
fof(f896,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK49(X2,X1,X0))))) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f642])).
fof(f642,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK49(X2,X1,X0))))) | ! [X5] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))))) & ((~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK50(X2,X1,X0)))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK49,sK50])],[f641])).
fof(f641,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,X1)) | ? [X6] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6)))) | ! [X5] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))))) & (? [X4] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(rectify,[],[f640])).
fof(f640,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,X1)) | ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (? [X4] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(flattening,[],[f639])).
fof(f639,plain,(
  ! [X0,X1,X2] : (((~p(s(bool,X1)) | ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (? [X4] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f417])).
fof(f417,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(flattening,[],[f416])).
fof(f416,plain,(
  ! [X0] : ! [X1,X2] : ((p(s(bool,X1)) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> ! [X4] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(rectify,[],[f258])).
fof(f258,axiom,(
  ! [X6] : ! [X18,X47] : ((p(s(bool,X18)) & ! [X10] : p(s(bool,happ(s(fun(X6,bool),X47),s(X6,X10))))) <=> ! [X10] : (p(s(bool,X18)) & p(s(bool,happ(s(fun(X6,bool),X47),s(X6,X10))))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.RIGHT_AND_FORALL_THM')).
fof(f1297,plain,(
  ( ! [X8,X7] : (~p(s(bool,X7)) | s(bool,X7) != s(bool,X8)) ) | $spl16),
  inference(cnf_transformation,[],[f1297_D])).
fof(f1297_D,plain,(
  ( ! [X8,X7] : (~p(s(bool,X7)) | s(bool,X7) != s(bool,X8)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f16059,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (p(s(bool,happ(s(fun(X88,bool),X89),s(X88,X90)))) | ~p(s(bool,X91)) | ~p(s(bool,X92)) | s(bool,X92) != s(bool,happ(s(fun(X88,bool),X89),s(X88,sK49(X89,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X88)))) | s(bool,X91) != s(bool,X93)) ) | $spl6),
  inference(resolution,[],[f3861,f667])).
fof(f667,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f520])).
fof(f1298,plain,(
  ( ! [X13] : (~p(s(bool,X13))) ) | $spl18),
  inference(cnf_transformation,[],[f1298_D])).
fof(f1298_D,plain,(
  ( ! [X13] : (~p(s(bool,X13))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f16057,plain,(
  ( ! [X80,X78,X76,X81,X79,X77] : (p(s(bool,happ(s(fun(X76,bool),X77),s(X76,X78)))) | p(s(bool,X79)) | ~p(s(bool,X80)) | ~p(s(bool,X81)) | s(bool,X80) != s(bool,happ(s(fun(X76,bool),X77),s(X76,sK49(X77,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X76))))) ) | $spl6),
  inference(resolution,[],[f3861,f666])).
fof(f666,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f520])).
fof(f1296,plain,(
  ( ! [X2,X0] : (p(s(bool,X0)) | s(bool,X0) != s(bool,X2)) ) | $spl14),
  inference(cnf_transformation,[],[f1296_D])).
fof(f1296_D,plain,(
  ( ! [X2,X0] : (p(s(bool,X0)) | s(bool,X0) != s(bool,X2)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f16055,plain,(
  ( ! [X68,X66,X64,X69,X67,X65] : (p(s(bool,happ(s(fun(X64,bool),X65),s(X64,X66)))) | p(s(bool,X67)) | ~p(s(bool,X68)) | s(bool,X67) != s(bool,X69) | s(bool,X68) != s(bool,happ(s(fun(X64,bool),X65),s(X64,sK49(X65,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X64))))) ) | $spl6),
  inference(resolution,[],[f3861,f665])).
fof(f665,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f520])).
fof(f16054,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60)))) | ~p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X62) != s(bool,happ(s(fun(X58,bool),X59),s(X58,sK49(X59,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X58)))) | s(bool,X61) != s(bool,X63)) ) | $spl6),
  inference(resolution,[],[f3861,f663])).
fof(f663,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f520])).
fof(f16052,plain,(
  ( ! [X47,X50,X48,X46,X51,X49] : (p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48)))) | p(s(bool,X49)) | ~p(s(bool,X50)) | s(bool,X49) != s(bool,X51) | s(bool,X50) != s(bool,happ(s(fun(X46,bool),X47),s(X46,sK49(X47,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X46))))) ) | $spl6),
  inference(resolution,[],[f3861,f661])).
fof(f661,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f520])).
fof(f15962,plain,(
  ( ! [X47,X50,X48,X46] : (p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48)))) | s(bool,X50) != s(bool,happ(s(fun(X46,bool),X47),s(X46,sK50(X47,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X46)))) | ~p(s(bool,X50))) ) | $spl104),
  inference(cnf_transformation,[],[f15962_D])).
fof(f15962_D,plain,(
  ( ! [X47,X50,X48,X46] : (p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48)))) | s(bool,X50) != s(bool,happ(s(fun(X46,bool),X47),s(X46,sK50(X47,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X46)))) | ~p(s(bool,X50))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f15901,plain,(
  ( ! [X520,X522,X518,X521,X519] : (p(s(bool,happ(s(fun(X518,bool),X519),s(X518,X520)))) | p(s(bool,X521)) | ~p(s(bool,X522)) | s(bool,X522) != s(bool,happ(s(fun(X518,bool),X519),s(X518,sK50(X519,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X518))))) ) | $spl6),
  inference(resolution,[],[f3860,f918])).
fof(f3860,plain,(
  ( ! [X453,X452,X454] : (~p(s(bool,happ(s(fun(X452,bool),X453),s(X452,sK50(X453,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X452))))) | p(s(bool,happ(s(fun(X452,bool),X453),s(X452,X454))))) ) | $spl6),
  inference(subsumption_resolution,[],[f3581,f919])).
fof(f3581,plain,(
  ( ! [X453,X452,X454] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X452,bool),X453),s(X452,X454)))) | ~p(s(bool,happ(s(fun(X452,bool),X453),s(X452,sK50(X453,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X452)))))) ) | $spl6),
  inference(superposition,[],[f898,f960])).
fof(f898,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK50(X2,X1,X0))))) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f642])).
fof(f15812,plain,(
  ( ! [X92,X90,X88,X93,X91,X89] : (p(s(bool,happ(s(fun(X88,bool),X89),s(X88,X90)))) | ~p(s(bool,X91)) | ~p(s(bool,X92)) | s(bool,X92) != s(bool,happ(s(fun(X88,bool),X89),s(X88,sK50(X89,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X88)))) | s(bool,X91) != s(bool,X93)) ) | $spl6),
  inference(resolution,[],[f3860,f667])).
fof(f15810,plain,(
  ( ! [X80,X78,X76,X81,X79,X77] : (p(s(bool,happ(s(fun(X76,bool),X77),s(X76,X78)))) | p(s(bool,X79)) | ~p(s(bool,X80)) | ~p(s(bool,X81)) | s(bool,X80) != s(bool,happ(s(fun(X76,bool),X77),s(X76,sK50(X77,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X76))))) ) | $spl6),
  inference(resolution,[],[f3860,f666])).
fof(f15808,plain,(
  ( ! [X68,X66,X64,X69,X67,X65] : (p(s(bool,happ(s(fun(X64,bool),X65),s(X64,X66)))) | p(s(bool,X67)) | ~p(s(bool,X68)) | s(bool,X67) != s(bool,X69) | s(bool,X68) != s(bool,happ(s(fun(X64,bool),X65),s(X64,sK50(X65,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X64))))) ) | $spl6),
  inference(resolution,[],[f3860,f665])).
fof(f15807,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60)))) | ~p(s(bool,X61)) | ~p(s(bool,X62)) | s(bool,X62) != s(bool,happ(s(fun(X58,bool),X59),s(X58,sK50(X59,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X58)))) | s(bool,X61) != s(bool,X63)) ) | $spl6),
  inference(resolution,[],[f3860,f663])).
fof(f15805,plain,(
  ( ! [X47,X50,X48,X46,X51,X49] : (p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48)))) | p(s(bool,X49)) | ~p(s(bool,X50)) | s(bool,X49) != s(bool,X51) | s(bool,X50) != s(bool,happ(s(fun(X46,bool),X47),s(X46,sK50(X47,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X46))))) ) | $spl6),
  inference(resolution,[],[f3860,f661])).
fof(f15778,plain,(
  ( ! [X22,X20] : (p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0')))) | s(bool,X22) != s(bool,happ(s(fun(bool,bool),X20),s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X20,bool)))) | ~p(s(bool,X22))) ) | $spl102),
  inference(cnf_transformation,[],[f15778_D])).
fof(f15778_D,plain,(
  ( ! [X22,X20] : (p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0')))) | s(bool,X22) != s(bool,happ(s(fun(bool,bool),X20),s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X20,bool)))) | ~p(s(bool,X22))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f15721,plain,(
  ( ! [X300,X302,X301] : (p(s(bool,happ(s(fun(bool,bool),X300),s(bool,'T_0')))) | p(s(bool,X301)) | ~p(s(bool,X302)) | s(bool,X302) != s(bool,happ(s(fun(bool,bool),X300),s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X300,bool))))) ) | $spl6),
  inference(resolution,[],[f3603,f918])).
fof(f3603,plain,(
  ( ! [X502] : (~p(s(bool,happ(s(fun(bool,bool),X502),s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X502,bool))))) | p(s(bool,happ(s(fun(bool,bool),X502),s(bool,'T_0'))))) ) | $spl6),
  inference(superposition,[],[f708,f960])).
fof(f708,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK17(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f540])).
fof(f540,plain,(
  ! [X0,X1,X2] : (((s(X0,X2) = s(X0,sK17(X2,X1,X0)) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK17(X2,X1,X0)))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : (s(X0,X2) != s(X0,X3) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17])],[f539])).
fof(f539,plain,(
  ! [X0,X1,X2] : ((? [X4] : (s(X0,X2) = s(X0,X4) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : (s(X0,X2) != s(X0,X3) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f538])).
fof(f538,plain,(
  ! [X0,X1,X2] : ((? [X3] : (s(X0,X2) = s(X0,X3) & ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : (s(X0,X2) != s(X0,X3) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f440])).
fof(f440,plain,(
  ! [X0,X1,X2] : (! [X3] : (s(X0,X2) != s(X0,X3) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(ennf_transformation,[],[f280])).
fof(f280,plain,(
  ! [X0,X1,X2] : (! [X3] : (s(X0,X2) = s(X0,X3) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f279])).
fof(f279,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (s(X0,X2) = s(X0,X3) => p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f202])).
fof(f202,axiom,(
  ! [X6] : ! [X33,X27] : (! [X10] : (s(X6,X10) = s(X6,X27) => p(s(bool,happ(s(fun(X6,bool),X33),s(X6,X10))))) <=> p(s(bool,happ(s(fun(X6,bool),X33),s(X6,X27)))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.UNWIND_FORALL_THM2')).
fof(f15632,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,happ(s(fun(bool,bool),X48),s(bool,'T_0')))) | ~p(s(bool,X49)) | ~p(s(bool,X50)) | s(bool,X50) != s(bool,happ(s(fun(bool,bool),X48),s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X48,bool)))) | s(bool,X49) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f3603,f667])).
fof(f15630,plain,(
  ( ! [X43,X41,X42,X40] : (p(s(bool,happ(s(fun(bool,bool),X40),s(bool,'T_0')))) | p(s(bool,X41)) | ~p(s(bool,X42)) | ~p(s(bool,X43)) | s(bool,X42) != s(bool,happ(s(fun(bool,bool),X40),s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X40,bool))))) ) | $spl6),
  inference(resolution,[],[f3603,f666])).
fof(f15628,plain,(
  ( ! [X35,X33,X34,X32] : (p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) | p(s(bool,X33)) | ~p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,happ(s(fun(bool,bool),X32),s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X32,bool))))) ) | $spl6),
  inference(resolution,[],[f3603,f665])).
fof(f15627,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,happ(s(fun(bool,bool),X28),s(bool,'T_0')))) | ~p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X30) != s(bool,happ(s(fun(bool,bool),X28),s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X28,bool)))) | s(bool,X29) != s(bool,X31)) ) | $spl6),
  inference(resolution,[],[f3603,f663])).
fof(f15625,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0')))) | p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,happ(s(fun(bool,bool),X20),s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X20,bool))))) ) | $spl6),
  inference(resolution,[],[f3603,f661])).
fof(f15515,plain,(
  ( ! [X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0')))) | s(bool,X22) != s(bool,happ(s(fun(bool,bool),X20),s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X20,bool)))) | p(s(bool,X22))) ) | $spl100),
  inference(cnf_transformation,[],[f15515_D])).
fof(f15515_D,plain,(
  ( ! [X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0')))) | s(bool,X22) != s(bool,happ(s(fun(bool,bool),X20),s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X20,bool)))) | p(s(bool,X22))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f15459,plain,(
  ( ! [X296,X295,X297] : (~p(s(bool,happ(s(fun(bool,bool),X295),s(bool,'T_0')))) | p(s(bool,X296)) | p(s(bool,X297)) | s(bool,X297) != s(bool,happ(s(fun(bool,bool),X295),s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X295,bool))))) ) | $spl6),
  inference(resolution,[],[f3601,f918])).
fof(f3601,plain,(
  ( ! [X500] : (p(s(bool,happ(s(fun(bool,bool),X500),s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X500,bool))))) | ~p(s(bool,happ(s(fun(bool,bool),X500),s(bool,'T_0'))))) ) | $spl6),
  inference(superposition,[],[f706,f960])).
fof(f706,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f537])).
fof(f537,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK16(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16])],[f536])).
fof(f536,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f535])).
fof(f535,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f278])).
fof(f278,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f277])).
fof(f277,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f116])).
fof(f116,axiom,(
  ! [X6] : ! [X18,X37] : (? [X10] : (s(X6,X10) = s(X6,X37) & p(s(bool,happ(s(fun(X6,bool),X18),s(X6,X10))))) <=> p(s(bool,happ(s(fun(X6,bool),X18),s(X6,X37)))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.UNWIND_THM2')).
fof(f15371,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,'T_0')))) | p(s(bool,X49)) | ~p(s(bool,X50)) | s(bool,X49) != s(bool,happ(s(fun(bool,bool),X48),s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X48,bool)))) | s(bool,X50) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f3601,f667])).
fof(f15368,plain,(
  ( ! [X39,X37,X38,X36] : (~p(s(bool,happ(s(fun(bool,bool),X36),s(bool,'T_0')))) | p(s(bool,X37)) | ~p(s(bool,X38)) | p(s(bool,X39)) | s(bool,X39) != s(bool,happ(s(fun(bool,bool),X36),s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X36,bool))))) ) | $spl6),
  inference(resolution,[],[f3601,f666])).
fof(f15367,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) | p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,happ(s(fun(bool,bool),X32),s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X32,bool))))) ) | $spl6),
  inference(resolution,[],[f3601,f665])).
fof(f15366,plain,(
  ( ! [X30,X28,X31,X29] : (~p(s(bool,happ(s(fun(bool,bool),X28),s(bool,'T_0')))) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,happ(s(fun(bool,bool),X28),s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X28,bool)))) | s(bool,X30) != s(bool,X31)) ) | $spl6),
  inference(resolution,[],[f3601,f663])).
fof(f15364,plain,(
  ( ! [X23,X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0')))) | p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,happ(s(fun(bool,bool),X20),s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X20,bool))))) ) | $spl6),
  inference(resolution,[],[f3601,f661])).
fof(f14564,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK52(sK14,sK13))),sK13,'type.one.one'))))) ) | $spl98),
  inference(cnf_transformation,[],[f14564_D])).
fof(f14564_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK52(sK14,sK13))),sK13,'type.one.one'))))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f14532,plain,(
  ( ! [X189,X190] : (p(s(bool,X189)) | p(s(bool,X190)) | s(bool,X190) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK52(sK14,sK13))),sK13,'type.one.one'))))) ) | $spl6),
  inference(resolution,[],[f9462,f918])).
fof(f9462,plain,(
  p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK52(sK14,sK13))),sK13,'type.one.one'))))) | $spl6),
  inference(subsumption_resolution,[],[f9334,f919])).
fof(f9334,plain,(
  p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK52(sK14,sK13))),sK13,'type.one.one'))))) | ~p(s(bool,'T_0')) | $spl6),
  inference(resolution,[],[f5180,f777])).
fof(f777,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X3),s(X1,sK44(X3,X2,X1,X0))))) | ~p(s(bool,'T_0')) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3))))) )),
  inference(cnf_transformation,[],[f584])).
fof(f584,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) | ((! [X5] : ~p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5)))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1,bool),X3),s(X1,sK44(X3,X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK44])],[f583])).
fof(f583,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) | ((! [X5] : ~p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X5)))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ? [X4] : p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X4)))))))),
  inference(rectify,[],[f582])).
fof(f582,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) | ((! [X4] : ~p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X4)))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ? [X4] : p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X4)))))))),
  inference(nnf_transformation,[],[f476])).
fof(f476,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) | (? [X4] : p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X4)))) <=> p(s(bool,'T_0'))))),
  inference(ennf_transformation,[],[f380])).
fof(f380,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => (? [X4] : p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X4)))) <=> p(s(bool,'T_0'))))),
  inference(flattening,[],[f379])).
fof(f379,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => (? [X4] : p(s(bool,happ(s(fun(X1,bool),X3),s(X1,X4)))) <=> p(s(bool,'T_0'))))),
  inference(rectify,[],[f140])).
fof(f140,axiom,(
  ! [X6,X7] : ! [X9,X18] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),X18)))) => (? [X27] : p(s(bool,happ(s(fun(X7,bool),X18),s(X7,X27)))) <=> p(s(bool,'T_0'))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESS_POINT_THM|split|0')).
fof(f5180,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) | $spl6),
  inference(resolution,[],[f4912,f779])).
fof(f779,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',X0),'_dst_x0_1'(s(X0,X1))),s(fun(X0,bool),X2)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X1))))) )),
  inference(cnf_transformation,[],[f478])).
fof(f478,plain,(
  ! [X0,X1,X2] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X1)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',X0),'_dst_x0_1'(s(X0,X1))),s(fun(X0,bool),X2)))))),
  inference(ennf_transformation,[],[f384])).
fof(f384,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X1)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',X0),'_dst_x0_1'(s(X0,X1))),s(fun(X0,bool),X2)))))),
  inference(flattening,[],[f383])).
fof(f383,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X1)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',X0),'_dst_x0_1'(s(X0,X1))),s(fun(X0,bool),X2)))))),
  inference(rectify,[],[f87])).
fof(f87,axiom,(
  ! [X6] : ! [X9,X18] : (p(s(bool,happ(s(fun(X6,bool),X18),s(X6,X9)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',X6),'_dst_x0_1'(s(X6,X9))),s(fun(X6,bool),X18)))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESS_RULES_TRIVIAL_EXISTS_POINT')).
fof(f4912,plain,(
  p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK52(sK14,sK13))))) | $spl6),
  inference(resolution,[],[f2003,f904])).
fof(f904,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK52(X1,X0)))))) )),
  inference(cnf_transformation,[],[f649])).
fof(f649,plain,(
  ! [X0,X1] : ((p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK51(X1,X0))))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK52(X1,X0))))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK51,sK52])],[f648])).
fof(f648,plain,(
  ! [X0,X1] : ((? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(rectify,[],[f647])).
fof(f647,plain,(
  ! [X0,X1] : ((? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(nnf_transformation,[],[f495])).
fof(f495,plain,(
  ! [X0,X1] : (! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(ennf_transformation,[],[f421])).
fof(f421,plain,(
  ! [X0,X1] : (~? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(flattening,[],[f420])).
fof(f420,plain,(
  ! [X0] : ! [X1] : (~? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(rectify,[],[f96])).
fof(f96,axiom,(
  ! [X6] : ! [X18] : (~? [X10] : p(s(bool,happ(s(fun(X6,bool),X18),s(X6,X10)))) <=> ! [X10] : ~p(s(bool,happ(s(fun(X6,bool),X18),s(X6,X10)))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.NOT_EXISTS_THM')).
fof(f2003,plain,(
  p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')))))) | $spl6),
  inference(subsumption_resolution,[],[f1981,f919])).
fof(f1981,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')))))) | $spl6),
  inference(duplicate_literal_removal,[],[f1679])).
fof(f1679,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')))))) | ~p(s(bool,'T_0')) | $spl6),
  inference(superposition,[],[f777,f960])).
fof(f14444,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK52(sK14,sK13))),sK13,'type.one.one')))) | s(bool,X31) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f9462,f667])).
fof(f14441,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK52(sK14,sK13))),sK13,'type.one.one'))))) ) | $spl6),
  inference(resolution,[],[f9462,f666])).
fof(f14440,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK52(sK14,sK13))),sK13,'type.one.one'))))) ) | $spl6),
  inference(resolution,[],[f9462,f665])).
fof(f14439,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK52(sK14,sK13))),sK13,'type.one.one')))) | s(bool,X16) != s(bool,X17)) ) | $spl6),
  inference(resolution,[],[f9462,f663])).
fof(f14437,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK52(sK14,sK13))),sK13,'type.one.one'))))) ) | $spl6),
  inference(resolution,[],[f9462,f661])).
fof(f14424,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK51(sK14,sK13))),sK13,'type.one.one'))))) ) | $spl96),
  inference(cnf_transformation,[],[f14424_D])).
fof(f14424_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK51(sK14,sK13))),sK13,'type.one.one'))))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f14392,plain,(
  ( ! [X189,X190] : (p(s(bool,X189)) | p(s(bool,X190)) | s(bool,X190) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK51(sK14,sK13))),sK13,'type.one.one'))))) ) | $spl6),
  inference(resolution,[],[f9311,f918])).
fof(f9311,plain,(
  p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK51(sK14,sK13))),sK13,'type.one.one'))))) | $spl6),
  inference(subsumption_resolution,[],[f9183,f919])).
fof(f9183,plain,(
  p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK51(sK14,sK13))),sK13,'type.one.one'))))) | ~p(s(bool,'T_0')) | $spl6),
  inference(resolution,[],[f5044,f777])).
fof(f5044,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) | $spl6),
  inference(resolution,[],[f4911,f779])).
fof(f4911,plain,(
  p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK51(sK14,sK13))))) | $spl6),
  inference(resolution,[],[f2003,f903])).
fof(f903,plain,(
  ( ! [X4,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK51(X1,X0)))))) )),
  inference(cnf_transformation,[],[f649])).
fof(f14304,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK51(sK14,sK13))),sK13,'type.one.one')))) | s(bool,X31) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f9311,f667])).
fof(f14301,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK51(sK14,sK13))),sK13,'type.one.one'))))) ) | $spl6),
  inference(resolution,[],[f9311,f666])).
fof(f14300,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK51(sK14,sK13))),sK13,'type.one.one'))))) ) | $spl6),
  inference(resolution,[],[f9311,f665])).
fof(f14299,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK51(sK14,sK13))),sK13,'type.one.one')))) | s(bool,X16) != s(bool,X17)) ) | $spl6),
  inference(resolution,[],[f9311,f663])).
fof(f14297,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,'_dst_x0_1'(s(sK13,sK51(sK14,sK13))),sK13,'type.one.one'))))) ) | $spl6),
  inference(resolution,[],[f9311,f661])).
fof(f14280,plain,(
  ( ! [X23,X21] : (s(bool,'T_0') = s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X21,bool)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,happ(s(fun(bool,bool),X21),s(bool,'T_0')))) ) | $spl94),
  inference(cnf_transformation,[],[f14280_D])).
fof(f14280_D,plain,(
  ( ! [X23,X21] : (s(bool,'T_0') = s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X21,bool)) | ~p(s(bool,X23)) | s(bool,X23) != s(bool,happ(s(fun(bool,bool),X21),s(bool,'T_0')))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f14224,plain,(
  ( ! [X302,X301,X303] : (s(bool,'T_0') = s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X301,bool)) | p(s(bool,X302)) | ~p(s(bool,X303)) | s(bool,X303) != s(bool,happ(s(fun(bool,bool),X301),s(bool,'T_0')))) ) | $spl6),
  inference(resolution,[],[f3848,f918])).
fof(f3848,plain,(
  ( ! [X499] : (~p(s(bool,happ(s(fun(bool,bool),X499),s(bool,'T_0')))) | s(bool,'T_0') = s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X499,bool))) ) | $spl6),
  inference(forward_demodulation,[],[f3600,f960])).
fof(f3600,plain,(
  ( ! [X499] : (~p(s(bool,happ(s(fun(bool,bool),X499),s(bool,'T_0')))) | s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) = s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X499,bool))) ) | $spl6),
  inference(superposition,[],[f705,f960])).
fof(f705,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,sK16(X2,X1,X0)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f537])).
fof(f14135,plain,(
  ( ! [X52,X50,X51,X49] : (s(bool,'T_0') = s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X49,bool)) | ~p(s(bool,X50)) | ~p(s(bool,X51)) | s(bool,X51) != s(bool,happ(s(fun(bool,bool),X49),s(bool,'T_0'))) | s(bool,X50) != s(bool,X52)) ) | $spl6),
  inference(resolution,[],[f3848,f667])).
fof(f14133,plain,(
  ( ! [X43,X41,X44,X42] : (s(bool,'T_0') = s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X41,bool)) | p(s(bool,X42)) | ~p(s(bool,X43)) | ~p(s(bool,X44)) | s(bool,X43) != s(bool,happ(s(fun(bool,bool),X41),s(bool,'T_0')))) ) | $spl6),
  inference(resolution,[],[f3848,f666])).
fof(f14131,plain,(
  ( ! [X35,X33,X36,X34] : (s(bool,'T_0') = s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X33,bool)) | p(s(bool,X34)) | ~p(s(bool,X35)) | s(bool,X34) != s(bool,X36) | s(bool,X35) != s(bool,happ(s(fun(bool,bool),X33),s(bool,'T_0')))) ) | $spl6),
  inference(resolution,[],[f3848,f665])).
fof(f14130,plain,(
  ( ! [X30,X31,X29,X32] : (s(bool,'T_0') = s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X29,bool)) | ~p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X31) != s(bool,happ(s(fun(bool,bool),X29),s(bool,'T_0'))) | s(bool,X30) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f3848,f663])).
fof(f14128,plain,(
  ( ! [X24,X23,X21,X22] : (s(bool,'T_0') = s(bool,sK16('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X21,bool)) | p(s(bool,X22)) | ~p(s(bool,X23)) | s(bool,X22) != s(bool,X24) | s(bool,X23) != s(bool,happ(s(fun(bool,bool),X21),s(bool,'T_0')))) ) | $spl6),
  inference(resolution,[],[f3848,f661])).
fof(f14110,plain,(
  ( ! [X22,X20] : (s(bool,'T_0') = s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X20,bool)) | p(s(bool,X22)) | s(bool,X22) != s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0')))) ) | $spl92),
  inference(cnf_transformation,[],[f14110_D])).
fof(f14110_D,plain,(
  ( ! [X22,X20] : (s(bool,'T_0') = s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X20,bool)) | p(s(bool,X22)) | s(bool,X22) != s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0')))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f14055,plain,(
  ( ! [X296,X295,X297] : (s(bool,'T_0') = s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X295,bool)) | p(s(bool,X296)) | p(s(bool,X297)) | s(bool,X297) != s(bool,happ(s(fun(bool,bool),X295),s(bool,'T_0')))) ) | $spl6),
  inference(resolution,[],[f3847,f918])).
fof(f3847,plain,(
  ( ! [X501] : (p(s(bool,happ(s(fun(bool,bool),X501),s(bool,'T_0')))) | s(bool,'T_0') = s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X501,bool))) ) | $spl6),
  inference(forward_demodulation,[],[f3602,f960])).
fof(f3602,plain,(
  ( ! [X501] : (p(s(bool,happ(s(fun(bool,bool),X501),s(bool,'T_0')))) | s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) = s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X501,bool))) ) | $spl6),
  inference(superposition,[],[f707,f960])).
fof(f707,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK17(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f540])).
fof(f13967,plain,(
  ( ! [X50,X48,X51,X49] : (s(bool,'T_0') = s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X48,bool)) | p(s(bool,X49)) | ~p(s(bool,X50)) | s(bool,X49) != s(bool,happ(s(fun(bool,bool),X48),s(bool,'T_0'))) | s(bool,X50) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f3847,f667])).
fof(f13964,plain,(
  ( ! [X39,X37,X38,X36] : (s(bool,'T_0') = s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X36,bool)) | p(s(bool,X37)) | ~p(s(bool,X38)) | p(s(bool,X39)) | s(bool,X39) != s(bool,happ(s(fun(bool,bool),X36),s(bool,'T_0')))) ) | $spl6),
  inference(resolution,[],[f3847,f666])).
fof(f13963,plain,(
  ( ! [X35,X33,X34,X32] : (s(bool,'T_0') = s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X32,bool)) | p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) ) | $spl6),
  inference(resolution,[],[f3847,f665])).
fof(f13962,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,'T_0') = s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X28,bool)) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,happ(s(fun(bool,bool),X28),s(bool,'T_0'))) | s(bool,X30) != s(bool,X31)) ) | $spl6),
  inference(resolution,[],[f3847,f663])).
fof(f13960,plain,(
  ( ! [X23,X21,X22,X20] : (s(bool,'T_0') = s(bool,sK17('const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)),X20,bool)) | p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,happ(s(fun(bool,bool),X20),s(bool,'T_0')))) ) | $spl6),
  inference(resolution,[],[f3847,f661])).
fof(f13947,plain,(
  ( ! [X24,X22] : (p(s(bool,X22)) | s(bool,X22) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),sK14),s(fun(sK13,bool),X24)))))) ) | $spl90),
  inference(cnf_transformation,[],[f13947_D])).
fof(f13947_D,plain,(
  ( ! [X24,X22] : (p(s(bool,X22)) | s(bool,X22) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),sK14),s(fun(sK13,bool),X24)))))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f13903,plain,(
  ( ! [X296,X295,X297] : (p(s(bool,X295)) | p(s(bool,X296)) | s(bool,X296) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),sK14),s(fun(sK13,bool),X297)))))) ) | $spl6),
  inference(resolution,[],[f3988,f918])).
fof(f3988,plain,(
  ( ! [X4] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),sK14),s(fun(sK13,bool),X4))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f3339,f919])).
fof(f3339,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),sK14),s(fun(sK13,bool),X4))))))) ) | $spl6),
  inference(superposition,[],[f770,f960])).
fof(f770,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X1,bool),X4),s(fun(X1,bool),X3)))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4))))) )),
  inference(cnf_transformation,[],[f474])).
fof(f474,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X1,bool),X4),s(fun(X1,bool),X3)))))))),
  inference(ennf_transformation,[],[f372])).
fof(f372,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X1,bool),X4),s(fun(X1,bool),X3)))))))),
  inference(flattening,[],[f371])).
fof(f371,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X4)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X1,bool),X4),s(fun(X1,bool),X3)))))))),
  inference(rectify,[],[f93])).
fof(f93,axiom,(
  ! [X6,X7] : ! [X9,X47,X18] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),X18)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X7,bool),X18),s(fun(X7,bool),X47)))))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESS_RULES_DISJ|split|0')).
fof(f13815,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,X48)) | ~p(s(bool,X49)) | s(bool,X48) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),sK14),s(fun(sK13,bool),X50))))) | s(bool,X49) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f3988,f667])).
fof(f13812,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,X37)) | ~p(s(bool,X38)) | p(s(bool,X39)) | s(bool,X39) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),sK14),s(fun(sK13,bool),X40)))))) ) | $spl6),
  inference(resolution,[],[f3988,f666])).
fof(f13811,plain,(
  ( ! [X35,X33,X36,X34] : (p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),sK14),s(fun(sK13,bool),X36)))))) ) | $spl6),
  inference(resolution,[],[f3988,f665])).
fof(f13810,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),sK14),s(fun(sK13,bool),X31))))) | s(bool,X30) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f3988,f663])).
fof(f13808,plain,(
  ( ! [X24,X23,X21,X22] : (p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),sK14),s(fun(sK13,bool),X24)))))) ) | $spl6),
  inference(resolution,[],[f3988,f661])).
fof(f13785,plain,(
  ( ! [X24,X22] : (p(s(bool,X22)) | s(bool,X22) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),X24),s(fun(sK13,bool),sK14)))))) ) | $spl88),
  inference(cnf_transformation,[],[f13785_D])).
fof(f13785_D,plain,(
  ( ! [X24,X22] : (p(s(bool,X22)) | s(bool,X22) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),X24),s(fun(sK13,bool),sK14)))))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f13741,plain,(
  ( ! [X296,X295,X297] : (p(s(bool,X295)) | p(s(bool,X296)) | s(bool,X296) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),X297),s(fun(sK13,bool),sK14)))))) ) | $spl6),
  inference(resolution,[],[f3987,f918])).
fof(f3987,plain,(
  ( ! [X5] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),X5),s(fun(sK13,bool),sK14))))))) ) | $spl6),
  inference(subsumption_resolution,[],[f3340,f919])).
fof(f3340,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),X5),s(fun(sK13,bool),sK14))))))) ) | $spl6),
  inference(superposition,[],[f771,f960])).
fof(f771,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X1,bool),X4),s(fun(X1,bool),X3)))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3))))) )),
  inference(cnf_transformation,[],[f475])).
fof(f475,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X1,bool),X4),s(fun(X1,bool),X3)))))))),
  inference(ennf_transformation,[],[f374])).
fof(f374,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X1,bool),X4),s(fun(X1,bool),X3)))))))),
  inference(flattening,[],[f373])).
fof(f373,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X1,bool),X4),s(fun(X1,bool),X3)))))))),
  inference(rectify,[],[f94])).
fof(f94,axiom,(
  ! [X6,X7] : ! [X9,X47,X18] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),X47)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(X7,bool),X18),s(fun(X7,bool),X47)))))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESS_RULES_DISJ|split|1')).
fof(f13653,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,X48)) | ~p(s(bool,X49)) | s(bool,X48) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),X50),s(fun(sK13,bool),sK14))))) | s(bool,X49) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f3987,f667])).
fof(f13650,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,X37)) | ~p(s(bool,X38)) | p(s(bool,X39)) | s(bool,X39) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),X40),s(fun(sK13,bool),sK14)))))) ) | $spl6),
  inference(resolution,[],[f3987,f666])).
fof(f13649,plain,(
  ( ! [X35,X33,X36,X34] : (p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),X36),s(fun(sK13,bool),sK14)))))) ) | $spl6),
  inference(resolution,[],[f3987,f665])).
fof(f13648,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),X31),s(fun(sK13,bool),sK14))))) | s(bool,X30) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f3987,f663])).
fof(f13646,plain,(
  ( ! [X24,X23,X21,X22] : (p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|bslash||slash|_0'),s(fun(sK13,bool),X24),s(fun(sK13,bool),sK14)))))) ) | $spl6),
  inference(resolution,[],[f3987,f661])).
fof(f12512,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK16(sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')),sK14,sK13))))) ) | $spl86),
  inference(cnf_transformation,[],[f12512_D])).
fof(f12512_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK16(sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')),sK14,sK13))))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f12481,plain,(
  ( ! [X189,X190] : (p(s(bool,X189)) | p(s(bool,X190)) | s(bool,X190) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK16(sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')),sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4904,f918])).
fof(f4904,plain,(
  p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK16(sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')),sK14,sK13))))) | $spl6),
  inference(resolution,[],[f2003,f706])).
fof(f12393,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK16(sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')),sK14,sK13)))) | s(bool,X31) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f4904,f667])).
fof(f12390,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK16(sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')),sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4904,f666])).
fof(f12389,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK16(sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')),sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4904,f665])).
fof(f12388,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK16(sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')),sK14,sK13)))) | s(bool,X16) != s(bool,X17)) ) | $spl6),
  inference(resolution,[],[f4904,f663])).
fof(f12386,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK16(sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')),sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4904,f661])).
fof(f11944,plain,(
  ( ! [X288,X290,X287,X289] : (p(s(bool,happ(s(fun(X287,bool),X288),s(X287,sK44(X288,X289,X287,X290))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X290,X287),X289),s(fun(X287,bool),X288))))) ) | $spl78),
  inference(cnf_transformation,[],[f11944_D])).
fof(f11944_D,plain,(
  ( ! [X288,X290,X287,X289] : (p(s(bool,happ(s(fun(X287,bool),X288),s(X287,sK44(X288,X289,X287,X290))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X290,X287),X289),s(fun(X287,bool),X288))))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f12184,plain,(
  s(sK13,sK46('T_0',sK14,sK13)) = s(sK13,sK16(sK46('T_0',sK14,sK13),sK14,sK13)) | $spl84),
  inference(cnf_transformation,[],[f12184_D])).
fof(f12184_D,plain,(
  s(sK13,sK46('T_0',sK14,sK13)) = s(sK13,sK16(sK46('T_0',sK14,sK13),sK14,sK13)) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f12071,plain,(
  ( ! [X288,X290,X287,X289] : (s(sK13,sK46('T_0',sK14,sK13)) = s(sK13,sK16(sK46('T_0',sK14,sK13),sK14,sK13)) | p(s(bool,happ(s(fun(X287,bool),X288),s(X287,sK44(X288,X289,X287,X290))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X290,X287),X289),s(fun(X287,bool),X288))))) ) | $spl6),
  inference(resolution,[],[f9021,f777])).
fof(f9021,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(sK13,sK46(X2,sK14,sK13)) = s(sK13,sK16(sK46(X2,sK14,sK13),sK14,sK13))) ) | $spl6),
  inference(resolution,[],[f4910,f705])).
fof(f4910,plain,(
  ( ! [X8] : (p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X8,sK14,sK13))))) | p(s(bool,X8))) ) | $spl6),
  inference(resolution,[],[f2003,f889])).
fof(f889,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK46(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f634])).
fof(f634,plain,(
  ! [X0,X1,X2] : (((p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK45(X2,X1,X0))))) & ~p(s(bool,X2))) | ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | p(s(bool,X2))) & ((p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK46(X2,X1,X0))))) & ~p(s(bool,X2))) | ! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK45,sK46])],[f633])).
fof(f633,plain,(
  ! [X0,X1,X2] : ((? [X6] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) & ~p(s(bool,X2))) | ! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | p(s(bool,X2))) & ((? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & ~p(s(bool,X2))) | ! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,X2)))))),
  inference(rectify,[],[f632])).
fof(f632,plain,(
  ! [X0,X1,X2] : ((? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & ~p(s(bool,X2))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,X2))) & ((? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & ~p(s(bool,X2))) | ! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,X2)))))),
  inference(flattening,[],[f631])).
fof(f631,plain,(
  ! [X0,X1,X2] : ((? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & ~p(s(bool,X2))) | (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,X2)))) & ((? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & ~p(s(bool,X2))) | ! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f494])).
fof(f494,plain,(
  ! [X0,X1,X2] : (! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,X2))) <=> (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,X2))))),
  inference(ennf_transformation,[],[f413])).
fof(f413,plain,(
  ! [X0,X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) => p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) => p(s(bool,X2))))),
  inference(flattening,[],[f412])).
fof(f412,plain,(
  ! [X0] : ! [X1,X2] : (! [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) => p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) => p(s(bool,X2))))),
  inference(rectify,[],[f224])).
fof(f224,axiom,(
  ! [X6] : ! [X18,X47] : (! [X10] : (p(s(bool,happ(s(fun(X6,bool),X18),s(X6,X10)))) => p(s(bool,X47))) <=> (? [X10] : p(s(bool,happ(s(fun(X6,bool),X18),s(X6,X10)))) => p(s(bool,X47))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.LEFT_FORALL_IMP_THM')).
fof(f12181,plain,(
  ( ! [X2,X0] : (s(sK13,sK46(X0,sK14,sK13)) = s(sK13,sK16(sK46(X0,sK14,sK13),sK14,sK13)) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) | $spl82),
  inference(cnf_transformation,[],[f12181_D])).
fof(f12181_D,plain,(
  ( ! [X2,X0] : (s(sK13,sK46(X0,sK14,sK13)) = s(sK13,sK16(sK46(X0,sK14,sK13),sK14,sK13)) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f12067,plain,(
  ( ! [X277,X275,X276] : (s(sK13,sK46(X275,sK14,sK13)) = s(sK13,sK16(sK46(X275,sK14,sK13),sK14,sK13)) | p(s(bool,X276)) | p(s(bool,X277)) | s(bool,X275) != s(bool,X277)) ) | $spl6),
  inference(resolution,[],[f9021,f918])).
fof(f11979,plain,(
  ( ! [X30,X28,X31,X29] : (s(sK13,sK46(X28,sK14,sK13)) = s(sK13,sK16(sK46(X28,sK14,sK13),sK14,sK13)) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl6),
  inference(resolution,[],[f9021,f667])).
fof(f11976,plain,(
  ( ! [X19,X17,X18,X16] : (s(sK13,sK46(X16,sK14,sK13)) = s(sK13,sK16(sK46(X16,sK14,sK13),sK14,sK13)) | p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X16) != s(bool,X19)) ) | $spl6),
  inference(resolution,[],[f9021,f666])).
fof(f11975,plain,(
  ( ! [X14,X12,X15,X13] : (s(sK13,sK46(X12,sK14,sK13)) = s(sK13,sK16(sK46(X12,sK14,sK13),sK14,sK13)) | p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl6),
  inference(resolution,[],[f9021,f665])).
fof(f11974,plain,(
  ( ! [X10,X8,X11,X9] : (s(sK13,sK46(X8,sK14,sK13)) = s(sK13,sK16(sK46(X8,sK14,sK13),sK14,sK13)) | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,X11)) ) | $spl6),
  inference(resolution,[],[f9021,f663])).
fof(f11972,plain,(
  ( ! [X2,X0,X3,X1] : (s(sK13,sK46(X0,sK14,sK13)) = s(sK13,sK16(sK46(X0,sK14,sK13),sK14,sK13)) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl6),
  inference(resolution,[],[f9021,f661])).
fof(f11946,plain,(
  s(sK13,sK45('T_0',sK14,sK13)) = s(sK13,sK16(sK45('T_0',sK14,sK13),sK14,sK13)) | $spl80),
  inference(cnf_transformation,[],[f11946_D])).
fof(f11946_D,plain,(
  s(sK13,sK45('T_0',sK14,sK13)) = s(sK13,sK16(sK45('T_0',sK14,sK13),sK14,sK13)) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f11832,plain,(
  ( ! [X288,X290,X287,X289] : (s(sK13,sK45('T_0',sK14,sK13)) = s(sK13,sK16(sK45('T_0',sK14,sK13),sK14,sK13)) | p(s(bool,happ(s(fun(X287,bool),X288),s(X287,sK44(X288,X289,X287,X290))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X290,X287),X289),s(fun(X287,bool),X288))))) ) | $spl6),
  inference(resolution,[],[f8880,f777])).
fof(f8880,plain,(
  ( ! [X2] : (p(s(bool,X2)) | s(sK13,sK45(X2,sK14,sK13)) = s(sK13,sK16(sK45(X2,sK14,sK13),sK14,sK13))) ) | $spl6),
  inference(resolution,[],[f4909,f705])).
fof(f4909,plain,(
  ( ! [X7] : (p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK45(X7,sK14,sK13))))) | p(s(bool,X7))) ) | $spl6),
  inference(resolution,[],[f2003,f887])).
fof(f887,plain,(
  ( ! [X2,X0,X5,X1] : (p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK45(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f634])).
fof(f11942,plain,(
  ( ! [X2,X0] : (s(sK13,sK45(X0,sK14,sK13)) = s(sK13,sK16(sK45(X0,sK14,sK13),sK14,sK13)) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) | $spl76),
  inference(cnf_transformation,[],[f11942_D])).
fof(f11942_D,plain,(
  ( ! [X2,X0] : (s(sK13,sK45(X0,sK14,sK13)) = s(sK13,sK16(sK45(X0,sK14,sK13),sK14,sK13)) | s(bool,X0) != s(bool,X2) | p(s(bool,X2))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f11828,plain,(
  ( ! [X277,X275,X276] : (s(sK13,sK45(X275,sK14,sK13)) = s(sK13,sK16(sK45(X275,sK14,sK13),sK14,sK13)) | p(s(bool,X276)) | p(s(bool,X277)) | s(bool,X275) != s(bool,X277)) ) | $spl6),
  inference(resolution,[],[f8880,f918])).
fof(f11740,plain,(
  ( ! [X30,X28,X31,X29] : (s(sK13,sK45(X28,sK14,sK13)) = s(sK13,sK16(sK45(X28,sK14,sK13),sK14,sK13)) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X28) != s(bool,X29) | s(bool,X30) != s(bool,X31)) ) | $spl6),
  inference(resolution,[],[f8880,f667])).
fof(f11737,plain,(
  ( ! [X19,X17,X18,X16] : (s(sK13,sK45(X16,sK14,sK13)) = s(sK13,sK16(sK45(X16,sK14,sK13),sK14,sK13)) | p(s(bool,X17)) | ~p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X16) != s(bool,X19)) ) | $spl6),
  inference(resolution,[],[f8880,f666])).
fof(f11736,plain,(
  ( ! [X14,X12,X15,X13] : (s(sK13,sK45(X12,sK14,sK13)) = s(sK13,sK16(sK45(X12,sK14,sK13),sK14,sK13)) | p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X13) != s(bool,X15) | s(bool,X12) != s(bool,X14)) ) | $spl6),
  inference(resolution,[],[f8880,f665])).
fof(f11735,plain,(
  ( ! [X10,X8,X11,X9] : (s(sK13,sK45(X8,sK14,sK13)) = s(sK13,sK16(sK45(X8,sK14,sK13),sK14,sK13)) | p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X8) != s(bool,X9) | s(bool,X10) != s(bool,X11)) ) | $spl6),
  inference(resolution,[],[f8880,f663])).
fof(f11733,plain,(
  ( ! [X2,X0,X3,X1] : (s(sK13,sK45(X0,sK14,sK13)) = s(sK13,sK16(sK45(X0,sK14,sK13),sK14,sK13)) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X1) != s(bool,X3) | s(bool,X0) != s(bool,X2)) ) | $spl6),
  inference(resolution,[],[f8880,f661])).
fof(f11712,plain,(
  ( ! [X18,X16] : (p(s(bool,X16)) | s(bool,X16) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),X18)))))) ) | $spl74),
  inference(cnf_transformation,[],[f11712_D])).
fof(f11712_D,plain,(
  ( ! [X18,X16] : (p(s(bool,X16)) | s(bool,X16) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),X18)))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f11668,plain,(
  ( ! [X290,X289,X291] : (p(s(bool,X289)) | p(s(bool,X290)) | s(bool,X290) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),X291)))))) ) | $spl6),
  inference(resolution,[],[f3985,f918])).
fof(f11580,plain,(
  ( ! [X45,X43,X44,X42] : (p(s(bool,X42)) | ~p(s(bool,X43)) | s(bool,X42) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),X44))))) | s(bool,X43) != s(bool,X45)) ) | $spl6),
  inference(resolution,[],[f3985,f667])).
fof(f11577,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,X31)) | ~p(s(bool,X32)) | p(s(bool,X33)) | s(bool,X33) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),X34)))))) ) | $spl6),
  inference(resolution,[],[f3985,f666])).
fof(f11576,plain,(
  ( ! [X30,X28,X29,X27] : (p(s(bool,X27)) | p(s(bool,X28)) | s(bool,X27) != s(bool,X29) | s(bool,X28) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),X30)))))) ) | $spl6),
  inference(resolution,[],[f3985,f665])).
fof(f11575,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,X23)) | ~p(s(bool,X24)) | s(bool,X23) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),X25))))) | s(bool,X24) != s(bool,X26)) ) | $spl6),
  inference(resolution,[],[f3985,f663])).
fof(f11573,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,X15)) | p(s(bool,X16)) | s(bool,X15) != s(bool,X17) | s(bool,X16) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,happ(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s('type.pair.prod'(sK12,'type.one.one'),X18)))))) ) | $spl6),
  inference(resolution,[],[f3985,f661])).
fof(f10125,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl72),
  inference(cnf_transformation,[],[f10125_D])).
fof(f10125_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f10095,plain,(
  ( ! [X180,X181] : (p(s(bool,X180)) | p(s(bool,X181)) | s(bool,X181) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f9335,f918])).
fof(f9335,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) | $spl6),
  inference(resolution,[],[f5180,f778])).
fof(f778,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3))))) )),
  inference(cnf_transformation,[],[f477])).
fof(f477,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))))),
  inference(ennf_transformation,[],[f382])).
fof(f382,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))))),
  inference(flattening,[],[f381])).
fof(f381,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))))),
  inference(rectify,[],[f141])).
fof(f141,axiom,(
  ! [X6,X7] : ! [X9,X18] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),X18)))) => p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun(X6,X7),X9),s(fun(X7,bool),X18)))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESSES_WEAKEN_THM|split|2')).
fof(f10007,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14))) | s(bool,X22) != s(bool,X23)) ) | $spl6),
  inference(resolution,[],[f9335,f667])).
fof(f10004,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f9335,f666])).
fof(f10003,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f9335,f665])).
fof(f10002,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14))) | s(bool,X7) != s(bool,X8)) ) | $spl6),
  inference(resolution,[],[f9335,f663])).
fof(f10000,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f9335,f661])).
fof(f9824,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl70),
  inference(cnf_transformation,[],[f9824_D])).
fof(f9824_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f9794,plain,(
  ( ! [X180,X181] : (p(s(bool,X180)) | p(s(bool,X181)) | s(bool,X181) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f9184,f918])).
fof(f9184,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) | $spl6),
  inference(resolution,[],[f5044,f778])).
fof(f9706,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14))) | s(bool,X22) != s(bool,X23)) ) | $spl6),
  inference(resolution,[],[f9184,f667])).
fof(f9703,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f9184,f666])).
fof(f9702,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f9184,f665])).
fof(f9701,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14))) | s(bool,X7) != s(bool,X8)) ) | $spl6),
  inference(resolution,[],[f9184,f663])).
fof(f9699,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f9184,f661])).
fof(f9463,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl68),
  inference(cnf_transformation,[],[f9463_D])).
fof(f9463_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f9431,plain,(
  ( ! [X189,X190] : (p(s(bool,X189)) | p(s(bool,X190)) | s(bool,X190) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f5180,f918])).
fof(f9343,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14))) | s(bool,X31) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f5180,f667])).
fof(f9340,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f5180,f666])).
fof(f9339,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f5180,f665])).
fof(f9338,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14))) | s(bool,X16) != s(bool,X17)) ) | $spl6),
  inference(resolution,[],[f5180,f663])).
fof(f9336,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK52(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f5180,f661])).
fof(f9312,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl66),
  inference(cnf_transformation,[],[f9312_D])).
fof(f9312_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f9280,plain,(
  ( ! [X189,X190] : (p(s(bool,X189)) | p(s(bool,X190)) | s(bool,X190) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f5044,f918])).
fof(f9192,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14))) | s(bool,X31) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f5044,f667])).
fof(f9189,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f5044,f666])).
fof(f9188,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f5044,f665])).
fof(f9187,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14))) | s(bool,X16) != s(bool,X17)) ) | $spl6),
  inference(resolution,[],[f5044,f663])).
fof(f9185,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.one.one',sK13),'_dst_x0_1'(s(sK13,sK51(sK14,sK13)))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f5044,f661])).
fof(f9156,plain,(
  ( ! [X22,X20] : (p(s(bool,X20)) | p(s(bool,X22)) | s(bool,X22) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X20,sK14,sK13))))) ) | $spl64),
  inference(cnf_transformation,[],[f9156_D])).
fof(f9156_D,plain,(
  ( ! [X22,X20] : (p(s(bool,X20)) | p(s(bool,X22)) | s(bool,X22) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X20,sK14,sK13))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f9126,plain,(
  ( ! [X296,X295,X297] : (p(s(bool,X295)) | p(s(bool,X296)) | p(s(bool,X297)) | s(bool,X297) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X295,sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4910,f918])).
fof(f9038,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,X48)) | p(s(bool,X49)) | ~p(s(bool,X50)) | s(bool,X49) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X48,sK14,sK13)))) | s(bool,X50) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f4910,f667])).
fof(f9035,plain,(
  ( ! [X39,X37,X38,X36] : (p(s(bool,X36)) | p(s(bool,X37)) | ~p(s(bool,X38)) | p(s(bool,X39)) | s(bool,X39) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X36,sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4910,f666])).
fof(f9034,plain,(
  ( ! [X35,X33,X34,X32] : (p(s(bool,X32)) | p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X32,sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4910,f665])).
fof(f9033,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,X28)) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X28,sK14,sK13)))) | s(bool,X30) != s(bool,X31)) ) | $spl6),
  inference(resolution,[],[f4910,f663])).
fof(f9031,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,X20)) | p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X20,sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4910,f661])).
fof(f9016,plain,(
  ( ! [X22,X20] : (p(s(bool,X20)) | p(s(bool,X22)) | s(bool,X22) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK45(X20,sK14,sK13))))) ) | $spl62),
  inference(cnf_transformation,[],[f9016_D])).
fof(f9016_D,plain,(
  ( ! [X22,X20] : (p(s(bool,X20)) | p(s(bool,X22)) | s(bool,X22) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK45(X20,sK14,sK13))))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f8985,plain,(
  ( ! [X296,X295,X297] : (p(s(bool,X295)) | p(s(bool,X296)) | p(s(bool,X297)) | s(bool,X297) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK45(X295,sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4909,f918])).
fof(f8897,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,X48)) | p(s(bool,X49)) | ~p(s(bool,X50)) | s(bool,X49) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK45(X48,sK14,sK13)))) | s(bool,X50) != s(bool,X51)) ) | $spl6),
  inference(resolution,[],[f4909,f667])).
fof(f8894,plain,(
  ( ! [X39,X37,X38,X36] : (p(s(bool,X36)) | p(s(bool,X37)) | ~p(s(bool,X38)) | p(s(bool,X39)) | s(bool,X39) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK45(X36,sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4909,f666])).
fof(f8893,plain,(
  ( ! [X35,X33,X34,X32] : (p(s(bool,X32)) | p(s(bool,X33)) | p(s(bool,X34)) | s(bool,X33) != s(bool,X35) | s(bool,X34) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK45(X32,sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4909,f665])).
fof(f8892,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,X28)) | p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK45(X28,sK14,sK13)))) | s(bool,X30) != s(bool,X31)) ) | $spl6),
  inference(resolution,[],[f4909,f663])).
fof(f8890,plain,(
  ( ! [X23,X21,X22,X20] : (p(s(bool,X20)) | p(s(bool,X21)) | p(s(bool,X22)) | s(bool,X21) != s(bool,X23) | s(bool,X22) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK45(X20,sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4909,f661])).
fof(f9013,plain,(
  ( ! [X17] : (p(s(bool,X17)) | p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X17,sK14,sK13)))))) ) | $spl60),
  inference(cnf_transformation,[],[f9013_D])).
fof(f9013_D,plain,(
  ( ! [X17] : (p(s(bool,X17)) | p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X17,sK14,sK13)))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f8887,plain,(
  ( ! [X17,X16] : (p(s(bool,X16)) | p(s(bool,X17)) | p(s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK46(X17,sK14,sK13)))))) ) | $spl6),
  inference(resolution,[],[f4909,f889])).
fof(f8813,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34))),s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl58),
  inference(cnf_transformation,[],[f8813_D])).
fof(f8813_D,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34))),s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f8816,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X61,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X59))),s(fun('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X59),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f8803,f717])).
fof(f717,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f543])).
fof(f543,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f289])).
fof(f289,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X28] : (s(bool,'T_0') = s(bool,X28) <=> p(s(bool,X28)))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.EQ_CLAUSES|split|0')).
fof(f8803,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,'T_0') != s(bool,X60) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X61,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X59))),s(fun('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X59),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3758,f703])).
fof(f703,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f439])).
fof(f439,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f438])).
fof(f438,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f276])).
fof(f276,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X19,X20] : ((p(s(bool,X19)) => p(s(bool,X20))) => ((p(s(bool,X20)) => p(s(bool,X19))) => s(bool,X19) = s(bool,X20)))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.IMP_ANTISYM_AX')).
fof(f3758,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X4),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X5,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X5,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X5,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X5,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X5,X6))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X4))),s(fun('type.pair.prod'(X5,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X5,'type.pair.prod'('type.pair.prod'(X5,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X5,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X5,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X5,'type.pair.prod'(X5,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X5,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X5,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X5,bool),X7))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f763,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X2) = s(X1,X3) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))) )),
  inference(cnf_transformation,[],[f575])).
fof(f575,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) & s(X1,X2) = s(X1,X3))) & (~p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) | s(X1,X2) != s(X1,X3) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))))),
  inference(flattening,[],[f574])).
fof(f574,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) | (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) & s(X1,X2) = s(X1,X3))) & ((~p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) | s(X1,X2) != s(X1,X3)) | p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5))))))))))),
  inference(nnf_transformation,[],[f360])).
fof(f360,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) <=> (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) & s(X1,X2) = s(X1,X3)))),
  inference(flattening,[],[f359])).
fof(f359,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X0,X1),happ(s(fun(X1,'type.pair.prod'(X0,X1)),happ(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X0,X4))),s(X1,X3))),s(fun('type.pair.prod'(X0,X1),bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'('type.pair.prod'(X0,X1),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X0,X1),fun(bool,'type.pair.prod'('type.pair.prod'(X0,X1),bool))),'const.pair.,_0'),s(fun(X0,'type.pair.prod'(X0,X1)),'_dst_x1x0_2'(s(fun(X0,fun(X1,'type.pair.prod'(X0,X1))),'const.pair.,_0'),s(X1,X2))),s(fun(X0,bool),X5)))))))) <=> (p(s(bool,happ(s(fun(X0,bool),X5),s(X0,X4)))) & s(X1,X2) = s(X1,X3)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6,X7] : ! [X10,X36,X37,X18] : (p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X6,X7),happ(s(fun(X7,'type.pair.prod'(X6,X7)),happ(s(fun(X6,fun(X7,'type.pair.prod'(X6,X7))),'const.pair.,_0'),s(X6,X37))),s(X7,X36))),s(fun('type.pair.prod'(X6,X7),bool),'const.pred_set.GSPEC_1'(s(fun(X6,'type.pair.prod'('type.pair.prod'(X6,X7),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X6,X7),fun(bool,'type.pair.prod'('type.pair.prod'(X6,X7),bool))),'const.pair.,_0'),s(fun(X6,'type.pair.prod'(X6,X7)),'_dst_x1x0_2'(s(fun(X6,fun(X7,'type.pair.prod'(X6,X7))),'const.pair.,_0'),s(X7,X10))),s(fun(X6,bool),X18)))))))) <=> (p(s(bool,happ(s(fun(X6,bool),X18),s(X6,X37)))) & s(X7,X10) = s(X7,X36)))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.pred_set.PAIR_IN_GSPEC_|49|')).
fof(f3315,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | $spl6),
  inference(backward_demodulation,[],[f960,f658])).
fof(f658,plain,(
  s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))),
  inference(cnf_transformation,[],[f518])).
fof(f518,plain,(
  s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f434])).
fof(f434,plain,(
  ? [X0,X1,X2,X3] : s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X1,bool),X2))) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),'_dst_x0x1_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X0,'type.pair.prod'(X0,'type.one.one')),'_dst_x1x0_2'(s(fun(X0,fun('type.one.one','type.pair.prod'(X0,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X1,bool),X2)))),
  inference(ennf_transformation,[],[f263])).
fof(f263,plain,(
  ~! [X0,X1,X2,X3] : s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X1,bool),X2))) = s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),'_dst_x0x1_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X0,'type.pair.prod'(X0,'type.one.one')),'_dst_x1x0_2'(s(fun(X0,fun('type.one.one','type.pair.prod'(X0,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X1,bool),X2)))),
  inference(flattening,[],[f262])).
fof(f262,plain,(
  ~! [X0,X1] : ! [X2,X3] : s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X1,bool),X2))) = s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),'_dst_x0x1_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X0,'type.pair.prod'(X0,'type.one.one')),'_dst_x1x0_2'(s(fun(X0,fun('type.one.one','type.pair.prod'(X0,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X1,bool),X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(X6,'type.one.one'),X7),X9),s(fun(X7,bool),X8))) = s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),'_dst_x0x1_2'(s(fun('type.pair.prod'(X6,'type.one.one'),X7),X9),s(fun(X6,'type.pair.prod'(X6,'type.one.one')),'_dst_x1x0_2'(s(fun(X6,fun('type.one.one','type.pair.prod'(X6,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X7,bool),X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(X6,'type.one.one'),X7),X9),s(fun(X7,bool),X8))) = s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),'_dst_x0x1_2'(s(fun('type.pair.prod'(X6,'type.one.one'),X7),X9),s(fun(X6,'type.pair.prod'(X6,'type.one.one')),'_dst_x1x0_2'(s(fun(X6,fun('type.one.one','type.pair.prod'(X6,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X7,bool),X8)))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1')).
fof(f8815,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X56,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X54))),s(fun('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X54),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(subsumption_resolution,[],[f8802,f717])).
fof(f8802,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,X55) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X56,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X54))),s(fun('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X54),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(superposition,[],[f3758,f703])).
fof(f8814,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X41,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X39))),s(fun('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X39),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f8799,f717])).
fof(f8799,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,'T_0') != s(bool,X40) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X41,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X39))),s(fun('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X39),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3758,f699])).
fof(f699,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f534])).
fof(f534,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(flattening,[],[f533])).
fof(f533,plain,(
  ! [X0,X1] : ((s(bool,X0) != s(bool,X1) | ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0))))) & (((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0)))) | s(bool,X0) = s(bool,X1)))),
  inference(nnf_transformation,[],[f437])).
fof(f437,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((~p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | p(s(bool,X0)))))),
  inference(ennf_transformation,[],[f275])).
fof(f275,plain,(
  ! [X0,X1] : (s(bool,X0) = s(bool,X1) <=> ((p(s(bool,X0)) => p(s(bool,X1))) & (p(s(bool,X1)) => p(s(bool,X0)))))),
  inference(rectify,[],[f168])).
fof(f168,axiom,(
  ! [X19,X20] : (s(bool,X19) = s(bool,X20) <=> ((p(s(bool,X19)) => p(s(bool,X20))) & (p(s(bool,X20)) => p(s(bool,X19)))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.EQ_IMP_THM')).
fof(f8812,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34))),s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f8798,f717])).
fof(f8798,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34))),s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f3758,f699])).
fof(f8253,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl56),
  inference(cnf_transformation,[],[f8253_D])).
fof(f8253_D,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f8256,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X61,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X59))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X59),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f8243,f717])).
fof(f8243,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,'T_0') != s(bool,X60) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X61,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X61,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X59))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X59),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3757,f703])).
fof(f3757,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X0),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X1,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X1,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X1,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X1,X2))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X1,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'('type.pair.prod'(X1,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X1,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X1,'type.pair.prod'(X1,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X1,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X1,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X0))),s(fun(X1,bool),X3))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f8255,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X56,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X54))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X54),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(subsumption_resolution,[],[f8242,f717])).
fof(f8242,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,X55) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X56,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X56,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X54))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X54),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(superposition,[],[f3757,f703])).
fof(f8254,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X41,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X39))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X39),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f8239,f717])).
fof(f8239,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,'T_0') != s(bool,X40) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X41,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X41,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X39))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X39),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3757,f699])).
fof(f8252,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f8238,f717])).
fof(f8238,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),happ(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'))),s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'type.pair.prod'(X36,fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one')))))),'const.pair.,_0'),s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),X34),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f3757,f699])).
fof(f8046,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(sK13,bool),sK14))))) ) | $spl54),
  inference(cnf_transformation,[],[f8046_D])).
fof(f8046_D,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(sK13,bool),sK14))))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f8049,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X61,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X59))),s(fun('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X59))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f8036,f717])).
fof(f8036,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,'T_0') != s(bool,X60) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X61,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X59))),s(fun('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X59))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3764,f703])).
fof(f3764,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X4))),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X5,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X5,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X5,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X5,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X5,X6))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X4))),s(fun('type.pair.prod'(X5,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X5,'type.pair.prod'('type.pair.prod'(X5,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X5,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X5,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X5,'type.pair.prod'(X5,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X5,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X5,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X5,bool),X7))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f8048,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X56,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X54))),s(fun('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X54))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(subsumption_resolution,[],[f8035,f717])).
fof(f8035,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,X55) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X56,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X54))),s(fun('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X54))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(superposition,[],[f3764,f703])).
fof(f8047,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X41,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X39))),s(fun('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X39))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f8032,f717])).
fof(f8032,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,'T_0') != s(bool,X40) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X41,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X39))),s(fun('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X39))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3764,f699])).
fof(f8045,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f8031,f717])).
fof(f8031,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f3764,f699])).
fof(f8005,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(sK13,bool),sK14))))) ) | $spl52),
  inference(cnf_transformation,[],[f8005_D])).
fof(f8005_D,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(sK13,bool),sK14))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f8008,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X61,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X59))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X59))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7995,f717])).
fof(f7995,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,'T_0') != s(bool,X60) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X61,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X61,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X59))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X59))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3763,f703])).
fof(f3763,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X0))),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X1,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X1,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X1,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X1,X2))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X1,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'('type.pair.prod'(X1,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X1,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X1,'type.pair.prod'(X1,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X1,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X1,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X0))),s(fun(X1,bool),X3))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f8007,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X56,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X54))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X54))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(subsumption_resolution,[],[f7994,f717])).
fof(f7994,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,X55) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X56,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X56,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X54))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X54))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(superposition,[],[f3763,f703])).
fof(f8006,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X41,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X39))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X39))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7991,f717])).
fof(f7991,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,'T_0') != s(bool,X40) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X41,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X41,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X39))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X39))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3763,f699])).
fof(f8004,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f7990,f717])).
fof(f7990,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),happ(s(fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),happ(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one')))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'type.pair.prod'(X36,fun(sK12,'type.pair.prod'(sK12,'type.one.one'))))),'const.pair.,_0'),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),X34))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f3763,f699])).
fof(f7964,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34))),s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl50),
  inference(cnf_transformation,[],[f7964_D])).
fof(f7964_D,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34))),s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f7967,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X61,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X61,X62))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X59))),s(fun('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X61,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X59),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7954,f717])).
fof(f7954,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,'T_0') != s(bool,X60) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X61,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X61,X62))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X59))),s(fun('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X61,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X59),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3756,f703])).
fof(f3756,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X4),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X5,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X5,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X5,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X5,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X5,X6))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X4))),s(fun('type.pair.prod'(X5,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X5,'type.pair.prod'('type.pair.prod'(X5,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X5,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X5,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X5,'type.pair.prod'(X5,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X5,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X5,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X5,bool),X7))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f7966,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X56,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X56,X57))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X54))),s(fun('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X56,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X54),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(subsumption_resolution,[],[f7953,f717])).
fof(f7953,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,X55) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X56,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X56,X57))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X54))),s(fun('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X56,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X54),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(superposition,[],[f3756,f703])).
fof(f7965,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X41,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X41,X42))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X39))),s(fun('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X41,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X39),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7950,f717])).
fof(f7950,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,'T_0') != s(bool,X40) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X41,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X41,X42))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X39))),s(fun('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X41,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X39),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3756,f699])).
fof(f7963,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34))),s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f7949,f717])).
fof(f7949,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34))),s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f3756,f699])).
fof(f7917,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl48),
  inference(cnf_transformation,[],[f7917_D])).
fof(f7917_D,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f7920,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X61,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X61,X62))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X61,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X59))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X59),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7907,f717])).
fof(f7907,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,'T_0') != s(bool,X60) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X61,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X61,X62))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X61,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X61,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X59))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X59),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3755,f703])).
fof(f3755,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X0),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X1,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X1,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X1,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X1,X2))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X1,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'('type.pair.prod'(X1,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X1,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X1,'type.pair.prod'(X1,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X1,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X1,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X0))),s(fun(X1,bool),X3))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f7919,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X56,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X56,X57))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X56,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X54))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X54),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(subsumption_resolution,[],[f7906,f717])).
fof(f7906,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,X55) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X56,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X56,X57))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X56,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X56,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X54))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X54),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(superposition,[],[f3755,f703])).
fof(f7918,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X41,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X41,X42))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X41,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X39))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X39),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7903,f717])).
fof(f7903,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,'T_0') != s(bool,X40) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X41,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X41,X42))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X41,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X41,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X39))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X39),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3755,f699])).
fof(f7916,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f7902,f717])).
fof(f7902,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),happ(s(fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),happ(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15))),s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun('type.pair.prod'(sK12,'type.one.one'),sK13),'type.pair.prod'(X36,fun('type.pair.prod'(sK12,'type.one.one'),sK13)))),'const.pair.,_0'),s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),X34),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f3755,f699])).
fof(f7518,plain,(
  ( ! [X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X40,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool))),happ(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(X40,X41))),s(fun(sK13,bool),X38))),s(fun('type.pair.prod'(X40,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X40,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X40,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X40,'type.pair.prod'(X40,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X40,bool),X42)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X38))))) ) | $spl46),
  inference(cnf_transformation,[],[f7518_D])).
fof(f7518_D,plain,(
  ( ! [X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X40,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool))),happ(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(X40,X41))),s(fun(sK13,bool),X38))),s(fun('type.pair.prod'(X40,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X40,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X40,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X40,'type.pair.prod'(X40,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X40,bool),X42)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X38))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f7521,plain,(
  ( ! [X66,X64,X67,X65,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X65,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool))),happ(s(fun(X65,fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool)))),'const.pair.,_0'),s(X65,X66))),s(fun(sK13,bool),X63))),s(fun('type.pair.prod'(X65,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X65,'type.pair.prod'('type.pair.prod'(X65,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X65,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X65,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X65,'type.pair.prod'(X65,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X65,fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X65,bool),X67)))))))) | ~p(s(bool,X64)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X63))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7507,f717])).
fof(f7507,plain,(
  ( ! [X66,X64,X67,X65,X63] : (s(bool,'T_0') != s(bool,X64) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X65,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool))),happ(s(fun(X65,fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool)))),'const.pair.,_0'),s(X65,X66))),s(fun(sK13,bool),X63))),s(fun('type.pair.prod'(X65,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X65,'type.pair.prod'('type.pair.prod'(X65,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X65,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X65,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X65,'type.pair.prod'(X65,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X65,fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X65,bool),X67)))))))) | ~p(s(bool,X64)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X63))))) ) | $spl6),
  inference(superposition,[],[f3768,f703])).
fof(f3768,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X4))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X5,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X5,fun(sK13,bool))),happ(s(fun(X5,fun(fun(sK13,bool),'type.pair.prod'(X5,fun(sK13,bool)))),'const.pair.,_0'),s(X5,X6))),s(fun(sK13,bool),X4))),s(fun('type.pair.prod'(X5,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X5,'type.pair.prod'('type.pair.prod'(X5,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X5,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X5,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X5,'type.pair.prod'(X5,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X5,fun(fun(sK13,bool),'type.pair.prod'(X5,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X5,bool),X7))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f7520,plain,(
  ( ! [X61,X59,X62,X60,X58] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X60,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool))),happ(s(fun(X60,fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool)))),'const.pair.,_0'),s(X60,X61))),s(fun(sK13,bool),X58))),s(fun('type.pair.prod'(X60,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X60,'type.pair.prod'('type.pair.prod'(X60,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X60,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X60,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X60,'type.pair.prod'(X60,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X60,fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X60,bool),X62)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X58)))) | ~p(s(bool,X59))) ) | $spl6),
  inference(subsumption_resolution,[],[f7506,f717])).
fof(f7506,plain,(
  ( ! [X61,X59,X62,X60,X58] : (s(bool,'T_0') != s(bool,X59) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X60,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool))),happ(s(fun(X60,fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool)))),'const.pair.,_0'),s(X60,X61))),s(fun(sK13,bool),X58))),s(fun('type.pair.prod'(X60,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X60,'type.pair.prod'('type.pair.prod'(X60,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X60,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X60,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X60,'type.pair.prod'(X60,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X60,fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X60,bool),X62)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X58)))) | ~p(s(bool,X59))) ) | $spl6),
  inference(superposition,[],[f3768,f703])).
fof(f7519,plain,(
  ( ! [X47,X45,X43,X46,X44] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X45,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool))),happ(s(fun(X45,fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool)))),'const.pair.,_0'),s(X45,X46))),s(fun(sK13,bool),X43))),s(fun('type.pair.prod'(X45,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X45,'type.pair.prod'('type.pair.prod'(X45,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X45,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X45,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X45,'type.pair.prod'(X45,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X45,fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X45,bool),X47)))))))) | ~p(s(bool,X44)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X43))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7503,f717])).
fof(f7503,plain,(
  ( ! [X47,X45,X43,X46,X44] : (s(bool,'T_0') != s(bool,X44) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X45,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool))),happ(s(fun(X45,fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool)))),'const.pair.,_0'),s(X45,X46))),s(fun(sK13,bool),X43))),s(fun('type.pair.prod'(X45,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X45,'type.pair.prod'('type.pair.prod'(X45,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X45,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X45,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X45,'type.pair.prod'(X45,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X45,fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X45,bool),X47)))))))) | ~p(s(bool,X44)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X43))))) ) | $spl6),
  inference(superposition,[],[f3768,f699])).
fof(f7517,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X40,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool))),happ(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(X40,X41))),s(fun(sK13,bool),X38))),s(fun('type.pair.prod'(X40,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X40,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X40,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X40,'type.pair.prod'(X40,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X40,bool),X42)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X38)))) | ~p(s(bool,X39))) ) | $spl6),
  inference(subsumption_resolution,[],[f7502,f717])).
fof(f7502,plain,(
  ( ! [X39,X41,X38,X42,X40] : (s(bool,'T_0') != s(bool,X39) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X40,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool))),happ(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(X40,X41))),s(fun(sK13,bool),X38))),s(fun('type.pair.prod'(X40,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X40,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X40,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X40,'type.pair.prod'(X40,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),sK14))),s(fun(X40,bool),X42)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X38)))) | ~p(s(bool,X39))) ) | $spl6),
  inference(superposition,[],[f3768,f699])).
fof(f7450,plain,(
  ( ! [X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X40,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool))),happ(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(X40,X41))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X40,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X40,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X40,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X40,'type.pair.prod'(X40,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X38))),s(fun(X40,bool),X42)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X38))))) ) | $spl44),
  inference(cnf_transformation,[],[f7450_D])).
fof(f7450_D,plain,(
  ( ! [X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X40,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool))),happ(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(X40,X41))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X40,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X40,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X40,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X40,'type.pair.prod'(X40,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X38))),s(fun(X40,bool),X42)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X38))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f7453,plain,(
  ( ! [X66,X64,X67,X65,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X65,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool))),happ(s(fun(X65,fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool)))),'const.pair.,_0'),s(X65,X66))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X65,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X65,'type.pair.prod'('type.pair.prod'(X65,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X65,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X65,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X65,'type.pair.prod'(X65,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X65,fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X63))),s(fun(X65,bool),X67)))))))) | ~p(s(bool,X64)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X63))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7439,f717])).
fof(f7439,plain,(
  ( ! [X66,X64,X67,X65,X63] : (s(bool,'T_0') != s(bool,X64) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X65,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool))),happ(s(fun(X65,fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool)))),'const.pair.,_0'),s(X65,X66))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X65,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X65,'type.pair.prod'('type.pair.prod'(X65,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X65,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X65,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X65,'type.pair.prod'(X65,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X65,fun(fun(sK13,bool),'type.pair.prod'(X65,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X63))),s(fun(X65,bool),X67)))))))) | ~p(s(bool,X64)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X63))))) ) | $spl6),
  inference(superposition,[],[f3767,f703])).
fof(f3767,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X0))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X1,fun(sK13,bool))),happ(s(fun(X1,fun(fun(sK13,bool),'type.pair.prod'(X1,fun(sK13,bool)))),'const.pair.,_0'),s(X1,X2))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X1,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'('type.pair.prod'(X1,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X1,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X1,'type.pair.prod'(X1,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X1,fun(fun(sK13,bool),'type.pair.prod'(X1,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X0))),s(fun(X1,bool),X3))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f7452,plain,(
  ( ! [X61,X59,X62,X60,X58] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X60,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool))),happ(s(fun(X60,fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool)))),'const.pair.,_0'),s(X60,X61))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X60,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X60,'type.pair.prod'('type.pair.prod'(X60,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X60,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X60,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X60,'type.pair.prod'(X60,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X60,fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X58))),s(fun(X60,bool),X62)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X58)))) | ~p(s(bool,X59))) ) | $spl6),
  inference(subsumption_resolution,[],[f7438,f717])).
fof(f7438,plain,(
  ( ! [X61,X59,X62,X60,X58] : (s(bool,'T_0') != s(bool,X59) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X60,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool))),happ(s(fun(X60,fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool)))),'const.pair.,_0'),s(X60,X61))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X60,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X60,'type.pair.prod'('type.pair.prod'(X60,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X60,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X60,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X60,'type.pair.prod'(X60,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X60,fun(fun(sK13,bool),'type.pair.prod'(X60,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X58))),s(fun(X60,bool),X62)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X58)))) | ~p(s(bool,X59))) ) | $spl6),
  inference(superposition,[],[f3767,f703])).
fof(f7451,plain,(
  ( ! [X47,X45,X43,X46,X44] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X45,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool))),happ(s(fun(X45,fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool)))),'const.pair.,_0'),s(X45,X46))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X45,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X45,'type.pair.prod'('type.pair.prod'(X45,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X45,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X45,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X45,'type.pair.prod'(X45,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X45,fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X43))),s(fun(X45,bool),X47)))))))) | ~p(s(bool,X44)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X43))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7435,f717])).
fof(f7435,plain,(
  ( ! [X47,X45,X43,X46,X44] : (s(bool,'T_0') != s(bool,X44) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X45,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool))),happ(s(fun(X45,fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool)))),'const.pair.,_0'),s(X45,X46))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X45,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X45,'type.pair.prod'('type.pair.prod'(X45,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X45,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X45,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X45,'type.pair.prod'(X45,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X45,fun(fun(sK13,bool),'type.pair.prod'(X45,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X43))),s(fun(X45,bool),X47)))))))) | ~p(s(bool,X44)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X43))))) ) | $spl6),
  inference(superposition,[],[f3767,f699])).
fof(f7449,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X40,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool))),happ(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(X40,X41))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X40,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X40,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X40,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X40,'type.pair.prod'(X40,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X38))),s(fun(X40,bool),X42)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X38)))) | ~p(s(bool,X39))) ) | $spl6),
  inference(subsumption_resolution,[],[f7434,f717])).
fof(f7434,plain,(
  ( ! [X39,X41,X38,X42,X40] : (s(bool,'T_0') != s(bool,X39) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X40,fun(sK13,bool)),happ(s(fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool))),happ(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(X40,X41))),s(fun(sK13,bool),sK14))),s(fun('type.pair.prod'(X40,fun(sK13,bool)),bool),'const.pred_set.GSPEC_1'(s(fun(X40,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X40,fun(sK13,bool)),fun(bool,'type.pair.prod'('type.pair.prod'(X40,fun(sK13,bool)),bool))),'const.pair.,_0'),s(fun(X40,'type.pair.prod'(X40,fun(sK13,bool))),'_dst_x1x0_2'(s(fun(X40,fun(fun(sK13,bool),'type.pair.prod'(X40,fun(sK13,bool)))),'const.pair.,_0'),s(fun(sK13,bool),X38))),s(fun(X40,bool),X42)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),X38)))) | ~p(s(bool,X39))) ) | $spl6),
  inference(superposition,[],[f3767,f699])).
fof(f7349,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13))),happ(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,sK13),X34))),s(fun('type.pair.prod'(X36,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X34),s(fun(sK13,bool),sK14))))) ) | $spl42),
  inference(cnf_transformation,[],[f7349_D])).
fof(f7349_D,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13))),happ(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,sK13),X34))),s(fun('type.pair.prod'(X36,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X34),s(fun(sK13,bool),sK14))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f7352,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13))),happ(s(fun(X61,fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13)))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,sK13),X59))),s(fun('type.pair.prod'(X61,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X59),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7339,f717])).
fof(f7339,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,'T_0') != s(bool,X60) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13))),happ(s(fun(X61,fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13)))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,sK13),X59))),s(fun('type.pair.prod'(X61,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X59),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3766,f703])).
fof(f3766,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X4),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X5,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X5,fun(sK12,sK13))),happ(s(fun(X5,fun(fun(sK12,sK13),'type.pair.prod'(X5,fun(sK12,sK13)))),'const.pair.,_0'),s(X5,X6))),s(fun(sK12,sK13),X4))),s(fun('type.pair.prod'(X5,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X5,'type.pair.prod'('type.pair.prod'(X5,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X5,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X5,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X5,'type.pair.prod'(X5,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X5,fun(fun(sK12,sK13),'type.pair.prod'(X5,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X5,bool),X7))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f7351,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13))),happ(s(fun(X56,fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13)))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,sK13),X54))),s(fun('type.pair.prod'(X56,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X54),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(subsumption_resolution,[],[f7338,f717])).
fof(f7338,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,X55) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13))),happ(s(fun(X56,fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13)))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,sK13),X54))),s(fun('type.pair.prod'(X56,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X54),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(superposition,[],[f3766,f703])).
fof(f7350,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13))),happ(s(fun(X41,fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13)))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,sK13),X39))),s(fun('type.pair.prod'(X41,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X39),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7335,f717])).
fof(f7335,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,'T_0') != s(bool,X40) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13))),happ(s(fun(X41,fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13)))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,sK13),X39))),s(fun('type.pair.prod'(X41,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X39),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3766,f699])).
fof(f7348,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13))),happ(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,sK13),X34))),s(fun('type.pair.prod'(X36,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X34),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f7334,f717])).
fof(f7334,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13))),happ(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,sK13),X34))),s(fun('type.pair.prod'(X36,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X34),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f3766,f699])).
fof(f7247,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13))),happ(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X36,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X34),s(fun(sK13,bool),sK14))))) ) | $spl40),
  inference(cnf_transformation,[],[f7247_D])).
fof(f7247_D,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13))),happ(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X36,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X34),s(fun(sK13,bool),sK14))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f7250,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13))),happ(s(fun(X61,fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13)))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X61,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X59))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X59),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7237,f717])).
fof(f7237,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,'T_0') != s(bool,X60) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13))),happ(s(fun(X61,fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13)))),'const.pair.,_0'),s(X61,X62))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X61,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X61,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X61,fun(fun(sK12,sK13),'type.pair.prod'(X61,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X59))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X59),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3765,f703])).
fof(f3765,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X0),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X1,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X1,fun(sK12,sK13))),happ(s(fun(X1,fun(fun(sK12,sK13),'type.pair.prod'(X1,fun(sK12,sK13)))),'const.pair.,_0'),s(X1,X2))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X1,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'('type.pair.prod'(X1,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X1,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X1,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X1,'type.pair.prod'(X1,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X1,fun(fun(sK12,sK13),'type.pair.prod'(X1,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X0))),s(fun(X1,bool),X3))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f7249,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13))),happ(s(fun(X56,fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13)))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X56,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X54))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X54),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(subsumption_resolution,[],[f7236,f717])).
fof(f7236,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,X55) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13))),happ(s(fun(X56,fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13)))),'const.pair.,_0'),s(X56,X57))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X56,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X56,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X56,fun(fun(sK12,sK13),'type.pair.prod'(X56,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X54))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X54),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X55))) ) | $spl6),
  inference(superposition,[],[f3765,f703])).
fof(f7248,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13))),happ(s(fun(X41,fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13)))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X41,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X39))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X39),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f7233,f717])).
fof(f7233,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,'T_0') != s(bool,X40) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13))),happ(s(fun(X41,fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13)))),'const.pair.,_0'),s(X41,X42))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X41,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X41,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X41,fun(fun(sK12,sK13),'type.pair.prod'(X41,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X39))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X39),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3765,f699])).
fof(f7246,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13))),happ(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X36,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X34),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f7232,f717])).
fof(f7232,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,fun(sK12,sK13)),happ(s(fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13))),happ(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(X36,X37))),s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))))),s(fun('type.pair.prod'(X36,fun(sK12,sK13)),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,fun(sK12,sK13)),fun(bool,'type.pair.prod'('type.pair.prod'(X36,fun(sK12,sK13)),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,fun(sK12,sK13))),'_dst_x1x0_2'(s(fun(X36,fun(fun(sK12,sK13),'type.pair.prod'(X36,fun(sK12,sK13)))),'const.pair.,_0'),s(fun(sK12,sK13),X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),X34),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f3765,f699])).
fof(f6438,plain,(
  ( ! [X90,X91,X89] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X89,bool),happ(s(fun(bool,'type.pair.prod'(X89,bool)),happ(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(X89,X90))),s(bool,'T_0'))),s(fun('type.pair.prod'(X89,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X89,'type.pair.prod'('type.pair.prod'(X89,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X89,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X89,bool),bool))),'const.pair.,_0'),s(fun(X89,'type.pair.prod'(X89,bool)),'_dst_x1x0_2'(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X89,bool),X91))))))))) ) | $spl38),
  inference(cnf_transformation,[],[f6438_D])).
fof(f6438_D,plain,(
  ( ! [X90,X91,X89] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X89,bool),happ(s(fun(bool,'type.pair.prod'(X89,bool)),happ(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(X89,X90))),s(bool,'T_0'))),s(fun('type.pair.prod'(X89,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X89,'type.pair.prod'('type.pair.prod'(X89,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X89,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X89,bool),bool))),'const.pair.,_0'),s(fun(X89,'type.pair.prod'(X89,bool)),'_dst_x1x0_2'(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X89,bool),X91))))))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f6425,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X93,bool),happ(s(fun(bool,'type.pair.prod'(X93,bool)),happ(s(fun(X93,fun(bool,'type.pair.prod'(X93,bool))),'const.pair.,_0'),s(X93,X94))),s(bool,'T_0'))),s(fun('type.pair.prod'(X93,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X93,'type.pair.prod'('type.pair.prod'(X93,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X93,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X93,bool),bool))),'const.pair.,_0'),s(fun(X93,'type.pair.prod'(X93,bool)),'_dst_x1x0_2'(s(fun(X93,fun(bool,'type.pair.prod'(X93,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X93,bool),X95)))))))) | ~p(s(bool,X92))) ) | $spl6),
  inference(trivial_inequality_removal,[],[f6404])).
fof(f6404,plain,(
  ( ! [X94,X92,X95,X93] : (s(bool,X92) != s(bool,X92) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X93,bool),happ(s(fun(bool,'type.pair.prod'(X93,bool)),happ(s(fun(X93,fun(bool,'type.pair.prod'(X93,bool))),'const.pair.,_0'),s(X93,X94))),s(bool,'T_0'))),s(fun('type.pair.prod'(X93,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X93,'type.pair.prod'('type.pair.prod'(X93,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X93,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X93,bool),bool))),'const.pair.,_0'),s(fun(X93,'type.pair.prod'(X93,bool)),'_dst_x1x0_2'(s(fun(X93,fun(bool,'type.pair.prod'(X93,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X93,bool),X95)))))))) | ~p(s(bool,X92))) ) | $spl6),
  inference(superposition,[],[f3784,f717])).
fof(f3784,plain,(
  ( ! [X23,X21,X22,X20] : (s(bool,'T_0') != s(bool,X20) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X21,bool),happ(s(fun(bool,'type.pair.prod'(X21,bool)),happ(s(fun(X21,fun(bool,'type.pair.prod'(X21,bool))),'const.pair.,_0'),s(X21,X22))),s(bool,X20))),s(fun('type.pair.prod'(X21,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X21,'type.pair.prod'('type.pair.prod'(X21,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X21,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X21,bool),bool))),'const.pair.,_0'),s(fun(X21,'type.pair.prod'(X21,bool)),'_dst_x1x0_2'(s(fun(X21,fun(bool,'type.pair.prod'(X21,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X21,bool),X23))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f6426,plain,(
  ( ! [X90,X88,X91,X89] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X89,bool),happ(s(fun(bool,'type.pair.prod'(X89,bool)),happ(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(X89,X90))),s(bool,'T_0'))),s(fun('type.pair.prod'(X89,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X89,'type.pair.prod'('type.pair.prod'(X89,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X89,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X89,bool),bool))),'const.pair.,_0'),s(fun(X89,'type.pair.prod'(X89,bool)),'_dst_x1x0_2'(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X89,bool),X91)))))))) | ~p(s(bool,X88))) ) | $spl6),
  inference(trivial_inequality_removal,[],[f6403])).
fof(f6403,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) != s(bool,X88) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X89,bool),happ(s(fun(bool,'type.pair.prod'(X89,bool)),happ(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(X89,X90))),s(bool,'T_0'))),s(fun('type.pair.prod'(X89,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X89,'type.pair.prod'('type.pair.prod'(X89,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X89,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X89,bool),bool))),'const.pair.,_0'),s(fun(X89,'type.pair.prod'(X89,bool)),'_dst_x1x0_2'(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X89,bool),X91)))))))) | ~p(s(bool,X88))) ) | $spl6),
  inference(superposition,[],[f3784,f719])).
fof(f719,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f544])).
fof(f544,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f290])).
fof(f290,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X28] : (s(bool,'T_0') = s(bool,X28) <=> p(s(bool,X28)))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.bool.EQ_CLAUSES|split|1')).
fof(f6434,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,bool),happ(s(fun(bool,'type.pair.prod'(X36,bool)),happ(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(X36,X37))),s(bool,X34))),s(fun('type.pair.prod'(X36,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X36,bool),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,bool)),'_dst_x1x0_2'(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,X34))) ) | $spl36),
  inference(cnf_transformation,[],[f6434_D])).
fof(f6434_D,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,bool),happ(s(fun(bool,'type.pair.prod'(X36,bool)),happ(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(X36,X37))),s(bool,X34))),s(fun('type.pair.prod'(X36,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X36,bool),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,bool)),'_dst_x1x0_2'(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,X34))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f6437,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,bool),happ(s(fun(bool,'type.pair.prod'(X61,bool)),happ(s(fun(X61,fun(bool,'type.pair.prod'(X61,bool))),'const.pair.,_0'),s(X61,X62))),s(bool,X59))),s(fun('type.pair.prod'(X61,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X61,bool),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,bool)),'_dst_x1x0_2'(s(fun(X61,fun(bool,'type.pair.prod'(X61,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,X59))) ) | $spl6),
  inference(subsumption_resolution,[],[f6398,f717])).
fof(f6398,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,'T_0') != s(bool,X60) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,bool),happ(s(fun(bool,'type.pair.prod'(X61,bool)),happ(s(fun(X61,fun(bool,'type.pair.prod'(X61,bool))),'const.pair.,_0'),s(X61,X62))),s(bool,X59))),s(fun('type.pair.prod'(X61,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X61,bool),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,bool)),'_dst_x1x0_2'(s(fun(X61,fun(bool,'type.pair.prod'(X61,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,X59))) ) | $spl6),
  inference(superposition,[],[f3784,f703])).
fof(f6436,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,bool),happ(s(fun(bool,'type.pair.prod'(X56,bool)),happ(s(fun(X56,fun(bool,'type.pair.prod'(X56,bool))),'const.pair.,_0'),s(X56,X57))),s(bool,X54))),s(fun('type.pair.prod'(X56,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X56,bool),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,bool)),'_dst_x1x0_2'(s(fun(X56,fun(bool,'type.pair.prod'(X56,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,X54)) | ~p(s(bool,X55))) ) | $spl6),
  inference(subsumption_resolution,[],[f6397,f717])).
fof(f6397,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,X55) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,bool),happ(s(fun(bool,'type.pair.prod'(X56,bool)),happ(s(fun(X56,fun(bool,'type.pair.prod'(X56,bool))),'const.pair.,_0'),s(X56,X57))),s(bool,X54))),s(fun('type.pair.prod'(X56,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X56,bool),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,bool)),'_dst_x1x0_2'(s(fun(X56,fun(bool,'type.pair.prod'(X56,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,X54)) | ~p(s(bool,X55))) ) | $spl6),
  inference(superposition,[],[f3784,f703])).
fof(f6435,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,bool),happ(s(fun(bool,'type.pair.prod'(X41,bool)),happ(s(fun(X41,fun(bool,'type.pair.prod'(X41,bool))),'const.pair.,_0'),s(X41,X42))),s(bool,X39))),s(fun('type.pair.prod'(X41,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X41,bool),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,bool)),'_dst_x1x0_2'(s(fun(X41,fun(bool,'type.pair.prod'(X41,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,X39))) ) | $spl6),
  inference(subsumption_resolution,[],[f6394,f717])).
fof(f6394,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,'T_0') != s(bool,X40) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,bool),happ(s(fun(bool,'type.pair.prod'(X41,bool)),happ(s(fun(X41,fun(bool,'type.pair.prod'(X41,bool))),'const.pair.,_0'),s(X41,X42))),s(bool,X39))),s(fun('type.pair.prod'(X41,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X41,bool),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,bool)),'_dst_x1x0_2'(s(fun(X41,fun(bool,'type.pair.prod'(X41,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,X39))) ) | $spl6),
  inference(superposition,[],[f3784,f699])).
fof(f6433,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,bool),happ(s(fun(bool,'type.pair.prod'(X36,bool)),happ(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(X36,X37))),s(bool,X34))),s(fun('type.pair.prod'(X36,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X36,bool),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,bool)),'_dst_x1x0_2'(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,X34)) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f6393,f717])).
fof(f6393,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,bool),happ(s(fun(bool,'type.pair.prod'(X36,bool)),happ(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(X36,X37))),s(bool,X34))),s(fun('type.pair.prod'(X36,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X36,bool),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,bool)),'_dst_x1x0_2'(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,X34)) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f3784,f699])).
fof(f6329,plain,(
  ( ! [X90,X91,X89] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X89,bool),happ(s(fun(bool,'type.pair.prod'(X89,bool)),happ(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(X89,X90))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X89,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X89,'type.pair.prod'('type.pair.prod'(X89,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X89,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X89,bool),bool))),'const.pair.,_0'),s(fun(X89,'type.pair.prod'(X89,bool)),'_dst_x1x0_2'(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(bool,'T_0'))),s(fun(X89,bool),X91))))))))) ) | $spl34),
  inference(cnf_transformation,[],[f6329_D])).
fof(f6329_D,plain,(
  ( ! [X90,X91,X89] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X89,bool),happ(s(fun(bool,'type.pair.prod'(X89,bool)),happ(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(X89,X90))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X89,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X89,'type.pair.prod'('type.pair.prod'(X89,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X89,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X89,bool),bool))),'const.pair.,_0'),s(fun(X89,'type.pair.prod'(X89,bool)),'_dst_x1x0_2'(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(bool,'T_0'))),s(fun(X89,bool),X91))))))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f6316,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X93,bool),happ(s(fun(bool,'type.pair.prod'(X93,bool)),happ(s(fun(X93,fun(bool,'type.pair.prod'(X93,bool))),'const.pair.,_0'),s(X93,X94))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X93,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X93,'type.pair.prod'('type.pair.prod'(X93,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X93,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X93,bool),bool))),'const.pair.,_0'),s(fun(X93,'type.pair.prod'(X93,bool)),'_dst_x1x0_2'(s(fun(X93,fun(bool,'type.pair.prod'(X93,bool))),'const.pair.,_0'),s(bool,'T_0'))),s(fun(X93,bool),X95)))))))) | ~p(s(bool,X92))) ) | $spl6),
  inference(trivial_inequality_removal,[],[f6295])).
fof(f6295,plain,(
  ( ! [X94,X92,X95,X93] : (s(bool,X92) != s(bool,X92) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X93,bool),happ(s(fun(bool,'type.pair.prod'(X93,bool)),happ(s(fun(X93,fun(bool,'type.pair.prod'(X93,bool))),'const.pair.,_0'),s(X93,X94))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X93,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X93,'type.pair.prod'('type.pair.prod'(X93,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X93,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X93,bool),bool))),'const.pair.,_0'),s(fun(X93,'type.pair.prod'(X93,bool)),'_dst_x1x0_2'(s(fun(X93,fun(bool,'type.pair.prod'(X93,bool))),'const.pair.,_0'),s(bool,'T_0'))),s(fun(X93,bool),X95)))))))) | ~p(s(bool,X92))) ) | $spl6),
  inference(superposition,[],[f3783,f717])).
fof(f3783,plain,(
  ( ! [X19,X17,X18,X16] : (s(bool,'T_0') != s(bool,X16) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X17,bool),happ(s(fun(bool,'type.pair.prod'(X17,bool)),happ(s(fun(X17,fun(bool,'type.pair.prod'(X17,bool))),'const.pair.,_0'),s(X17,X18))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X17,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X17,'type.pair.prod'('type.pair.prod'(X17,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X17,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X17,bool),bool))),'const.pair.,_0'),s(fun(X17,'type.pair.prod'(X17,bool)),'_dst_x1x0_2'(s(fun(X17,fun(bool,'type.pair.prod'(X17,bool))),'const.pair.,_0'),s(bool,X16))),s(fun(X17,bool),X19))))))))) ) | $spl6),
  inference(superposition,[],[f3315,f763])).
fof(f6317,plain,(
  ( ! [X90,X88,X91,X89] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X89,bool),happ(s(fun(bool,'type.pair.prod'(X89,bool)),happ(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(X89,X90))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X89,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X89,'type.pair.prod'('type.pair.prod'(X89,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X89,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X89,bool),bool))),'const.pair.,_0'),s(fun(X89,'type.pair.prod'(X89,bool)),'_dst_x1x0_2'(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(bool,'T_0'))),s(fun(X89,bool),X91)))))))) | ~p(s(bool,X88))) ) | $spl6),
  inference(trivial_inequality_removal,[],[f6294])).
fof(f6294,plain,(
  ( ! [X90,X88,X91,X89] : (s(bool,X88) != s(bool,X88) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X89,bool),happ(s(fun(bool,'type.pair.prod'(X89,bool)),happ(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(X89,X90))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X89,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X89,'type.pair.prod'('type.pair.prod'(X89,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X89,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X89,bool),bool))),'const.pair.,_0'),s(fun(X89,'type.pair.prod'(X89,bool)),'_dst_x1x0_2'(s(fun(X89,fun(bool,'type.pair.prod'(X89,bool))),'const.pair.,_0'),s(bool,'T_0'))),s(fun(X89,bool),X91)))))))) | ~p(s(bool,X88))) ) | $spl6),
  inference(superposition,[],[f3783,f719])).
fof(f6325,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,bool),happ(s(fun(bool,'type.pair.prod'(X36,bool)),happ(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(X36,X37))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X36,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X36,bool),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,bool)),'_dst_x1x0_2'(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(bool,X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,X34))) ) | $spl32),
  inference(cnf_transformation,[],[f6325_D])).
fof(f6325_D,plain,(
  ( ! [X37,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,bool),happ(s(fun(bool,'type.pair.prod'(X36,bool)),happ(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(X36,X37))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X36,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X36,bool),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,bool)),'_dst_x1x0_2'(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(bool,X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,X34))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f6328,plain,(
  ( ! [X61,X59,X62,X60,X63] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,bool),happ(s(fun(bool,'type.pair.prod'(X61,bool)),happ(s(fun(X61,fun(bool,'type.pair.prod'(X61,bool))),'const.pair.,_0'),s(X61,X62))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X61,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X61,bool),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,bool)),'_dst_x1x0_2'(s(fun(X61,fun(bool,'type.pair.prod'(X61,bool))),'const.pair.,_0'),s(bool,X59))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,X59))) ) | $spl6),
  inference(subsumption_resolution,[],[f6289,f717])).
fof(f6289,plain,(
  ( ! [X61,X59,X62,X60,X63] : (s(bool,'T_0') != s(bool,X60) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X61,bool),happ(s(fun(bool,'type.pair.prod'(X61,bool)),happ(s(fun(X61,fun(bool,'type.pair.prod'(X61,bool))),'const.pair.,_0'),s(X61,X62))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X61,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X61,'type.pair.prod'('type.pair.prod'(X61,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X61,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X61,bool),bool))),'const.pair.,_0'),s(fun(X61,'type.pair.prod'(X61,bool)),'_dst_x1x0_2'(s(fun(X61,fun(bool,'type.pair.prod'(X61,bool))),'const.pair.,_0'),s(bool,X59))),s(fun(X61,bool),X63)))))))) | ~p(s(bool,X60)) | ~p(s(bool,X59))) ) | $spl6),
  inference(superposition,[],[f3783,f703])).
fof(f6327,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,bool),happ(s(fun(bool,'type.pair.prod'(X56,bool)),happ(s(fun(X56,fun(bool,'type.pair.prod'(X56,bool))),'const.pair.,_0'),s(X56,X57))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X56,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X56,bool),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,bool)),'_dst_x1x0_2'(s(fun(X56,fun(bool,'type.pair.prod'(X56,bool))),'const.pair.,_0'),s(bool,X54))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,X54)) | ~p(s(bool,X55))) ) | $spl6),
  inference(subsumption_resolution,[],[f6288,f717])).
fof(f6288,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s(bool,'T_0') != s(bool,X55) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X56,bool),happ(s(fun(bool,'type.pair.prod'(X56,bool)),happ(s(fun(X56,fun(bool,'type.pair.prod'(X56,bool))),'const.pair.,_0'),s(X56,X57))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X56,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X56,'type.pair.prod'('type.pair.prod'(X56,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X56,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X56,bool),bool))),'const.pair.,_0'),s(fun(X56,'type.pair.prod'(X56,bool)),'_dst_x1x0_2'(s(fun(X56,fun(bool,'type.pair.prod'(X56,bool))),'const.pair.,_0'),s(bool,X54))),s(fun(X56,bool),X58)))))))) | ~p(s(bool,X54)) | ~p(s(bool,X55))) ) | $spl6),
  inference(superposition,[],[f3783,f703])).
fof(f6326,plain,(
  ( ! [X39,X43,X41,X42,X40] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,bool),happ(s(fun(bool,'type.pair.prod'(X41,bool)),happ(s(fun(X41,fun(bool,'type.pair.prod'(X41,bool))),'const.pair.,_0'),s(X41,X42))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X41,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X41,bool),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,bool)),'_dst_x1x0_2'(s(fun(X41,fun(bool,'type.pair.prod'(X41,bool))),'const.pair.,_0'),s(bool,X39))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,X39))) ) | $spl6),
  inference(subsumption_resolution,[],[f6285,f717])).
fof(f6285,plain,(
  ( ! [X39,X43,X41,X42,X40] : (s(bool,'T_0') != s(bool,X40) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X41,bool),happ(s(fun(bool,'type.pair.prod'(X41,bool)),happ(s(fun(X41,fun(bool,'type.pair.prod'(X41,bool))),'const.pair.,_0'),s(X41,X42))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X41,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X41,'type.pair.prod'('type.pair.prod'(X41,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X41,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X41,bool),bool))),'const.pair.,_0'),s(fun(X41,'type.pair.prod'(X41,bool)),'_dst_x1x0_2'(s(fun(X41,fun(bool,'type.pair.prod'(X41,bool))),'const.pair.,_0'),s(bool,X39))),s(fun(X41,bool),X43)))))))) | ~p(s(bool,X40)) | ~p(s(bool,X39))) ) | $spl6),
  inference(superposition,[],[f3783,f699])).
fof(f6324,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,bool),happ(s(fun(bool,'type.pair.prod'(X36,bool)),happ(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(X36,X37))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X36,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X36,bool),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,bool)),'_dst_x1x0_2'(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(bool,X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,X34)) | ~p(s(bool,X35))) ) | $spl6),
  inference(subsumption_resolution,[],[f6284,f717])).
fof(f6284,plain,(
  ( ! [X37,X35,X38,X36,X34] : (s(bool,'T_0') != s(bool,X35) | ~p(s(bool,'const.bool.IN_2'(s('type.pair.prod'(X36,bool),happ(s(fun(bool,'type.pair.prod'(X36,bool)),happ(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(X36,X37))),s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),s(fun('type.pair.prod'(X36,bool),bool),'const.pred_set.GSPEC_1'(s(fun(X36,'type.pair.prod'('type.pair.prod'(X36,bool),bool)),'_dst_x0x1x1_3'(s(fun('type.pair.prod'(X36,bool),fun(bool,'type.pair.prod'('type.pair.prod'(X36,bool),bool))),'const.pair.,_0'),s(fun(X36,'type.pair.prod'(X36,bool)),'_dst_x1x0_2'(s(fun(X36,fun(bool,'type.pair.prod'(X36,bool))),'const.pair.,_0'),s(bool,X34))),s(fun(X36,bool),X38)))))))) | ~p(s(bool,X34)) | ~p(s(bool,X35))) ) | $spl6),
  inference(superposition,[],[f3783,f699])).
fof(f5308,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK52(sK14,sK13))))) ) | $spl30),
  inference(cnf_transformation,[],[f5308_D])).
fof(f5308_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK52(sK14,sK13))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f5280,plain,(
  ( ! [X189,X190] : (p(s(bool,X189)) | p(s(bool,X190)) | s(bool,X190) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK52(sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4912,f918])).
fof(f5192,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK52(sK14,sK13)))) | s(bool,X31) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f4912,f667])).
fof(f5189,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK52(sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4912,f666])).
fof(f5188,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK52(sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4912,f665])).
fof(f5187,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK52(sK14,sK13)))) | s(bool,X16) != s(bool,X17)) ) | $spl6),
  inference(resolution,[],[f4912,f663])).
fof(f5185,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK52(sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4912,f661])).
fof(f5172,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK51(sK14,sK13))))) ) | $spl28),
  inference(cnf_transformation,[],[f5172_D])).
fof(f5172_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK51(sK14,sK13))))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f5144,plain,(
  ( ! [X189,X190] : (p(s(bool,X189)) | p(s(bool,X190)) | s(bool,X190) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK51(sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4911,f918])).
fof(f5056,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK51(sK14,sK13)))) | s(bool,X31) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f4911,f667])).
fof(f5053,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK51(sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4911,f666])).
fof(f5052,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK51(sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4911,f665])).
fof(f5051,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK51(sK14,sK13)))) | s(bool,X16) != s(bool,X17)) ) | $spl6),
  inference(resolution,[],[f4911,f663])).
fof(f5049,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK51(sK14,sK13))))) ) | $spl6),
  inference(resolution,[],[f4911,f661])).
fof(f5036,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')))))) ) | $spl26),
  inference(cnf_transformation,[],[f5036_D])).
fof(f5036_D,plain,(
  ( ! [X10] : (p(s(bool,X10)) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f5008,plain,(
  ( ! [X189,X190] : (p(s(bool,X189)) | p(s(bool,X190)) | s(bool,X190) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')))))) ) | $spl6),
  inference(resolution,[],[f2003,f918])).
fof(f4920,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one'))))) | s(bool,X31) != s(bool,X32)) ) | $spl6),
  inference(resolution,[],[f2003,f667])).
fof(f4917,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')))))) ) | $spl6),
  inference(resolution,[],[f2003,f666])).
fof(f4916,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')))))) ) | $spl6),
  inference(resolution,[],[f2003,f665])).
fof(f4915,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one'))))) | s(bool,X16) != s(bool,X17)) ) | $spl6),
  inference(resolution,[],[f2003,f663])).
fof(f4913,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,happ(s(fun(sK13,bool),sK14),s(sK13,sK44(sK14,sK15,sK13,'type.pair.prod'(sK12,'type.one.one')))))) ) | $spl6),
  inference(resolution,[],[f2003,f661])).
fof(f4710,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,X2) | s(bool,X2) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl24),
  inference(cnf_transformation,[],[f4710_D])).
fof(f4710_D,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,X2) | s(bool,X2) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f4796,plain,(
  ( ! [X4,X5] : (~p(s(bool,X4)) | s(bool,'T_0') != s(bool,X5) | s(bool,X5) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f4776])).
fof(f4776,plain,(
  ( ! [X4,X5] : (~p(s(bool,X4)) | s(bool,'T_0') != s(bool,X5) | s(bool,X5) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | ~p(s(bool,X4))) ) | $spl6),
  inference(resolution,[],[f3772,f690])).
fof(f690,plain,(
  ( ! [X2,X0,X1] : (sP3(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f532])).
fof(f532,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP3(X2,X1,X0)) & (~sP3(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f504])).
fof(f504,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP3(X2,X1,X0))),
  inference(definition_folding,[],[f272,f503,f502,f501,f500])).
fof(f500,plain,(
  ! [X0,X1,X2] : (sP0(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f501,plain,(
  ! [X1,X0,X2] : (sP1(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f502,plain,(
  ! [X2,X0,X1] : (sP2(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f503,plain,(
  ! [X2,X1,X0] : (sP3(X2,X1,X0) <=> (sP0(X0,X1,X2) & sP1(X1,X0,X2) & sP2(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f272,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f271])).
fof(f271,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f115])).
fof(f115,axiom,(
  ! [X54,X50,X29] : ((p(s(bool,X29)) <=> s(bool,X50) = s(bool,X54)) <=> ((p(s(bool,X29)) | p(s(bool,X50)) | p(s(bool,X54))) & (p(s(bool,X29)) | ~p(s(bool,X54)) | ~p(s(bool,X50))) & (p(s(bool,X50)) | ~p(s(bool,X54)) | ~p(s(bool,X29))) & (p(s(bool,X54)) | ~p(s(bool,X50)) | ~p(s(bool,X29)))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.sat.sat_2|49|_prove_ltb')).
fof(f3772,plain,(
  ( ! [X6,X7] : (~sP3(X7,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)),X6) | ~p(s(bool,X7)) | s(bool,'T_0') != s(bool,X6)) ) | $spl6),
  inference(superposition,[],[f3315,f691])).
fof(f691,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X2)) | ~sP3(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f532])).
fof(f4758,plain,(
  ( ! [X4,X5] : (~p(s(bool,X4)) | s(bool,'T_0') != s(bool,X5) | s(bool,X5) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f4738])).
fof(f4738,plain,(
  ( ! [X4,X5] : (~p(s(bool,X4)) | s(bool,'T_0') != s(bool,X5) | s(bool,X5) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | ~p(s(bool,X4))) ) | $spl6),
  inference(resolution,[],[f3771,f690])).
fof(f3771,plain,(
  ( ! [X4,X5] : (~sP3(X5,X4,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | ~p(s(bool,X5)) | s(bool,'T_0') != s(bool,X4)) ) | $spl6),
  inference(superposition,[],[f3315,f691])).
fof(f4733,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | p(s(bool,X3)) | s(bool,X2) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f4714])).
fof(f4714,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | p(s(bool,X3)) | p(s(bool,X3)) | s(bool,X2) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f3770,f692])).
fof(f692,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | s(bool,X0) != s(bool,X1) | ~sP3(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f532])).
fof(f3770,plain,(
  ( ! [X2,X3] : (sP3(X3,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)),X2) | s(bool,'T_0') != s(bool,X2) | p(s(bool,X3))) ) | $spl6),
  inference(superposition,[],[f3315,f689])).
fof(f689,plain,(
  ( ! [X2,X0,X1] : (sP3(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f532])).
fof(f4709,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | p(s(bool,X3)) | s(bool,X2) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f4690])).
fof(f4690,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | p(s(bool,X3)) | p(s(bool,X3)) | s(bool,X2) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f3769,f692])).
fof(f3769,plain,(
  ( ! [X0,X1] : (sP3(X1,X0,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | s(bool,'T_0') != s(bool,X0) | p(s(bool,X1))) ) | $spl6),
  inference(superposition,[],[f3315,f689])).
fof(f4549,plain,(
  $false | $spl18),
  inference(resolution,[],[f1298,f919])).
fof(f4601,plain,(
  $false | ($spl6 | $spl18)),
  inference(resolution,[],[f1298,f3983])).
fof(f3983,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl6),
  inference(subsumption_resolution,[],[f3347,f919])).
fof(f3347,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl6),
  inference(superposition,[],[f778,f960])).
fof(f4445,plain,(
  ( ! [X16] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X16))))),s(fun(sK13,bool),sK14))))) ) | $spl22),
  inference(cnf_transformation,[],[f4445_D])).
fof(f4445_D,plain,(
  ( ! [X16] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X16))))),s(fun(sK13,bool),sK14))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f4448,plain,(
  ( ! [X26,X27] : (~p(s(bool,X27)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X26))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4437,f717])).
fof(f4437,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') != s(bool,X27) | ~p(s(bool,X27)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X26))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3759,f703])).
fof(f3759,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X0))))),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(superposition,[],[f3315,f759])).
fof(f4447,plain,(
  ( ! [X24,X25] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X24))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X25))) ) | $spl6),
  inference(subsumption_resolution,[],[f4436,f717])).
fof(f4436,plain,(
  ( ! [X24,X25] : (s(bool,'T_0') != s(bool,X25) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X24))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X25))) ) | $spl6),
  inference(superposition,[],[f3759,f703])).
fof(f4446,plain,(
  ( ! [X19,X18] : (~p(s(bool,X19)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X18))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f4433,f717])).
fof(f4433,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') != s(bool,X19) | ~p(s(bool,X19)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X18))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3759,f699])).
fof(f4444,plain,(
  ( ! [X17,X16] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X16))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X17))) ) | $spl6),
  inference(subsumption_resolution,[],[f4432,f717])).
fof(f4432,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') != s(bool,X17) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one',X16))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X17))) ) | $spl6),
  inference(superposition,[],[f3759,f699])).
fof(f1295,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl12),
  inference(cnf_transformation,[],[f1295_D])).
fof(f1295_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f4374,plain,(
  ( ! [X180,X181] : (p(s(bool,X180)) | p(s(bool,X181)) | s(bool,X181) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f3983,f918])).
fof(f4286,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | s(bool,X22) != s(bool,X23)) ) | $spl6),
  inference(resolution,[],[f3983,f667])).
fof(f4283,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f3983,f666])).
fof(f4282,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f3983,f665])).
fof(f4281,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | s(bool,X7) != s(bool,X8)) ) | $spl6),
  inference(resolution,[],[f3983,f663])).
fof(f4279,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl6),
  inference(resolution,[],[f3983,f661])).
fof(f4212,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl20),
  inference(cnf_transformation,[],[f4212_D])).
fof(f4212_D,plain,(
  ( ! [X1] : (~p(s(bool,X1)) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f4173,plain,(
  ( ! [X185,X184] : (p(s(bool,X184)) | ~p(s(bool,X185)) | s(bool,X185) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl1),
  inference(resolution,[],[f956,f918])).
fof(f4084,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | s(bool,X21) != s(bool,X23)) ) | $spl1),
  inference(resolution,[],[f956,f667])).
fof(f4082,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl1),
  inference(resolution,[],[f956,f666])).
fof(f4080,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl1),
  inference(resolution,[],[f956,f665])).
fof(f4079,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | s(bool,X6) != s(bool,X8)) ) | $spl1),
  inference(resolution,[],[f956,f663])).
fof(f4077,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) ) | $spl1),
  inference(resolution,[],[f956,f661])).
fof(f956,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | $spl1),
  inference(cnf_transformation,[],[f956_D])).
fof(f956_D,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f3801,plain,(
  ( ! [X10] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X10))) ) | $spl6),
  inference(subsumption_resolution,[],[f3775,f717])).
fof(f3775,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,X10) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X10))) ) | $spl6),
  inference(superposition,[],[f3315,f699])).
fof(f3804,plain,(
  ( ! [X11] : (~p(s(bool,X11)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f3776,f717])).
fof(f3776,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,X11) | ~p(s(bool,X11)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3315,f699])).
fof(f3807,plain,(
  ( ! [X14] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X14))) ) | $spl6),
  inference(subsumption_resolution,[],[f3779,f717])).
fof(f3779,plain,(
  ( ! [X14] : (s(bool,'T_0') != s(bool,X14) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X14))) ) | $spl6),
  inference(superposition,[],[f3315,f703])).
fof(f3810,plain,(
  ( ! [X15] : (~p(s(bool,X15)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f3780,f717])).
fof(f3780,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,X15) | ~p(s(bool,X15)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f3315,f703])).
fof(f3814,plain,(
  $false | ($spl6 | $spl10)),
  inference(subsumption_resolution,[],[f3785,f1030])).
fof(f3785,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | $spl6),
  inference(trivial_inequality_removal,[],[f3782])).
fof(f3782,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | $spl6),
  inference(superposition,[],[f3315,f719])).
fof(f3813,plain,(
  $false | ($spl6 | $spl10)),
  inference(subsumption_resolution,[],[f3786,f1030])).
fof(f3786,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | $spl6),
  inference(trivial_inequality_removal,[],[f3781])).
fof(f3781,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | $spl6),
  inference(superposition,[],[f3315,f717])).
fof(f3812,plain,(
  $false | ($spl6 | $spl10)),
  inference(subsumption_resolution,[],[f3811,f1030])).
fof(f3811,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ($spl6 | $spl10)),
  inference(subsumption_resolution,[],[f3810,f1030])).
fof(f3809,plain,(
  $false | ($spl6 | $spl10)),
  inference(subsumption_resolution,[],[f3808,f1030])).
fof(f3808,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ($spl6 | $spl10)),
  inference(subsumption_resolution,[],[f3807,f1030])).
fof(f3806,plain,(
  $false | ($spl6 | $spl10)),
  inference(subsumption_resolution,[],[f3805,f1030])).
fof(f3805,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ($spl6 | $spl10)),
  inference(subsumption_resolution,[],[f3804,f1030])).
fof(f3803,plain,(
  $false | ($spl6 | $spl10)),
  inference(subsumption_resolution,[],[f3802,f1030])).
fof(f3802,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ($spl6 | $spl10)),
  inference(subsumption_resolution,[],[f3801,f1030])).
fof(f3072,plain,(
  $false | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f1074,f961])).
fof(f1074,plain,(
  s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | $spl2),
  inference(resolution,[],[f1013,f717])).
fof(f1013,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl2),
  inference(equality_resolution,[],[f958])).
fof(f3071,plain,(
  $false | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f1075,f961])).
fof(f1075,plain,(
  s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | $spl2),
  inference(resolution,[],[f1013,f719])).
fof(f3070,plain,(
  $false | ($spl2 | $spl9)),
  inference(subsumption_resolution,[],[f1013,f1028])).
fof(f1028,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl9),
  inference(cnf_transformation,[],[f1028_D])).
fof(f1028_D,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f3053,plain,(
  $false | ($spl0 | $spl9)),
  inference(subsumption_resolution,[],[f3052,f1028])).
fof(f3052,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl0),
  inference(forward_demodulation,[],[f3051,f744])).
fof(f744,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3))) = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X1,bool),X3)))))) )),
  inference(cnf_transformation,[],[f340])).
fof(f340,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3))) = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X1,bool),X3)))))),
  inference(flattening,[],[f339])).
fof(f339,plain,(
  ! [X0,X1] : ! [X2,X3] : s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3))) = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X1,bool),X3)))))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X6,X7] : ! [X9,X18] : s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),X18))) = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X7,bool),X18)))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESSES_NEG_REWRITE|split|5')).
fof(f3051,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(sK13,bool),sK14)))))) | $spl0),
  inference(forward_demodulation,[],[f2906,f738])).
fof(f738,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X1,bool),X2))) = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),'_dst_x0x1_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X0,'type.pair.prod'(X0,'type.one.one')),'_dst_x1x0_2'(s(fun(X0,fun('type.one.one','type.pair.prod'(X0,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X1,bool),X2)))) )),
  inference(cnf_transformation,[],[f328])).
fof(f328,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X1,bool),X2))) = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),'_dst_x0x1_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X0,'type.pair.prod'(X0,'type.one.one')),'_dst_x1x0_2'(s(fun(X0,fun('type.one.one','type.pair.prod'(X0,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X1,bool),X2)))),
  inference(flattening,[],[f327])).
fof(f327,plain,(
  ! [X0,X1] : ! [X2,X3] : s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X1,bool),X2))) = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),'_dst_x0x1_2'(s(fun('type.pair.prod'(X0,'type.one.one'),X1),X3),s(fun(X0,'type.pair.prod'(X0,'type.one.one')),'_dst_x1x0_2'(s(fun(X0,fun('type.one.one','type.pair.prod'(X0,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X1,bool),X2)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X8,X9] : s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun('type.pair.prod'(X6,'type.one.one'),X7),X9),s(fun(X7,bool),X8))) = s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X7),'_dst_x0x1_2'(s(fun('type.pair.prod'(X6,'type.one.one'),X7),X9),s(fun(X6,'type.pair.prod'(X6,'type.one.one')),'_dst_x1x0_2'(s(fun(X6,fun('type.one.one','type.pair.prod'(X6,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(X7,bool),X8)))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|0')).
fof(f2906,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(sK13,bool),sK14)))))) | $spl0),
  inference(resolution,[],[f957,f737])).
fof(f737,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X1,bool),X3)))))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3))))) )),
  inference(cnf_transformation,[],[f458])).
fof(f458,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X1,bool),X3)))))))),
  inference(ennf_transformation,[],[f326])).
fof(f326,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X1,bool),X3)))))))),
  inference(flattening,[],[f325])).
fof(f325,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),X3)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X1,bool),X3)))))))),
  inference(rectify,[],[f106])).
fof(f106,axiom,(
  ! [X6,X7] : ! [X9,X18] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),X18)))) => p(s(bool,'const.quantHeuristics.GUESS_FORALL_POINT_2'(s(fun(X6,X7),X9),s(fun(X7,bool),'_dst_x0x1_2'(s(fun(bool,bool),'~_0'),s(fun(X7,bool),X18)))))))),
  file('thm.quantHeuristics.GUESS_RULES_ELIM_UNIT|split|1','thm.quantHeuristics.GUESS_RULES_NEG|split|2')).
fof(f961,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | $spl7),
  inference(cnf_transformation,[],[f961_D])).
fof(f961_D,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f2676,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),
  inference(superposition,[],[f658,f719])).
fof(f2675,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),
  inference(superposition,[],[f658,f717])).
fof(f959,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,X10))) ) | $spl4),
  inference(cnf_transformation,[],[f959_D])).
fof(f959_D,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,X10))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f2674,plain,(
  ( ! [X15] : (s(bool,X15) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,X15)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) )),
  inference(superposition,[],[f658,f703])).
fof(f2673,plain,(
  ( ! [X14] : (s(bool,X14) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X14))) )),
  inference(superposition,[],[f658,f703])).
fof(f957,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | $spl0),
  inference(cnf_transformation,[],[f957_D])).
fof(f957_D,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f958,plain,(
  ( ! [X8] : (s(bool,X8) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | p(s(bool,X8))) ) | $spl2),
  inference(cnf_transformation,[],[f958_D])).
fof(f958_D,plain,(
  ( ! [X8] : (s(bool,X8) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | p(s(bool,X8))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f2672,plain,(
  ( ! [X13] : (s(bool,X13) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | p(s(bool,X13))) )),
  inference(superposition,[],[f658,f700])).
fof(f700,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f439])).
fof(f2671,plain,(
  ( ! [X12] : (s(bool,X12) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | p(s(bool,X12)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) )),
  inference(superposition,[],[f658,f700])).
fof(f2670,plain,(
  ( ! [X11] : (s(bool,X11) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,X11)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) )),
  inference(superposition,[],[f658,f699])).
fof(f2669,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X10))) )),
  inference(superposition,[],[f658,f699])).
fof(f2668,plain,(
  ( ! [X9] : (s(bool,X9) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | p(s(bool,X9))) )),
  inference(superposition,[],[f658,f696])).
fof(f696,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f534])).
fof(f2667,plain,(
  ( ! [X8] : (s(bool,X8) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | p(s(bool,X8)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) )),
  inference(superposition,[],[f658,f696])).
fof(f2611,plain,(
  ( ! [X185,X184] : (p(s(bool,X184)) | ~p(s(bool,X185)) | s(bool,X185) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl9),
  inference(resolution,[],[f1028,f918])).
fof(f2522,plain,(
  ( ! [X23,X21,X22] : (~p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X22) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | s(bool,X21) != s(bool,X23)) ) | $spl9),
  inference(resolution,[],[f1028,f667])).
fof(f2520,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)) | s(bool,X16) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl9),
  inference(resolution,[],[f1028,f666])).
fof(f2518,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | ~p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl9),
  inference(resolution,[],[f1028,f665])).
fof(f2517,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X7) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | s(bool,X6) != s(bool,X8)) ) | $spl9),
  inference(resolution,[],[f1028,f663])).
fof(f2515,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | ~p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl9),
  inference(resolution,[],[f1028,f661])).
fof(f2373,plain,(
  $false | ($spl4 | $spl6)),
  inference(resolution,[],[f2272,f919])).
fof(f2272,plain,(
  ( ! [X10] : (~p(s(bool,X10))) ) | ($spl4 | $spl6)),
  inference(subsumption_resolution,[],[f2271,f719])).
fof(f2271,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,X10) | ~p(s(bool,X10))) ) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f959,f960])).
fof(f2425,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(resolution,[],[f2272,f1045])).
fof(f1045,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl2),
  inference(resolution,[],[f1013,f778])).
fof(f2269,plain,(
  ( ! [X15] : (~p(s(bool,X15)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f2259,f717])).
fof(f2259,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,X15) | ~p(s(bool,X15)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f1648,f703])).
fof(f1648,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))) | $spl6),
  inference(backward_demodulation,[],[f960,f658])).
fof(f2268,plain,(
  ( ! [X14] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X14))) ) | $spl6),
  inference(subsumption_resolution,[],[f2258,f717])).
fof(f2258,plain,(
  ( ! [X14] : (s(bool,'T_0') != s(bool,X14) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X14))) ) | $spl6),
  inference(superposition,[],[f1648,f703])).
fof(f2267,plain,(
  ( ! [X11] : (~p(s(bool,X11)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(subsumption_resolution,[],[f2255,f717])).
fof(f2255,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,X11) | ~p(s(bool,X11)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) ) | $spl6),
  inference(superposition,[],[f1648,f699])).
fof(f2266,plain,(
  ( ! [X10] : (~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X10))) ) | $spl6),
  inference(subsumption_resolution,[],[f2254,f717])).
fof(f2254,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,X10) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X10))) ) | $spl6),
  inference(superposition,[],[f1648,f699])).
fof(f1593,plain,(
  $false | ($spl7 | $spl8)),
  inference(subsumption_resolution,[],[f1582,f1029])).
fof(f1582,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl7),
  inference(trivial_inequality_removal,[],[f1579])).
fof(f1579,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl7),
  inference(superposition,[],[f961,f719])).
fof(f1592,plain,(
  $false | ($spl7 | $spl8)),
  inference(subsumption_resolution,[],[f1583,f1029])).
fof(f1583,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl7),
  inference(trivial_inequality_removal,[],[f1578])).
fof(f1578,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl7),
  inference(superposition,[],[f961,f717])).
fof(f1533,plain,(
  ( ! [X180,X181] : (p(s(bool,X180)) | p(s(bool,X181)) | s(bool,X181) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl2),
  inference(resolution,[],[f1045,f918])).
fof(f1445,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | s(bool,X22) != s(bool,X23)) ) | $spl2),
  inference(resolution,[],[f1045,f667])).
fof(f1442,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl2),
  inference(resolution,[],[f1045,f666])).
fof(f1441,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl2),
  inference(resolution,[],[f1045,f665])).
fof(f1440,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | s(bool,X7) != s(bool,X8)) ) | $spl2),
  inference(resolution,[],[f1045,f663])).
fof(f1438,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl2),
  inference(resolution,[],[f1045,f661])).
fof(f1407,plain,(
  ( ! [X189,X190] : (p(s(bool,X189)) | p(s(bool,X190)) | s(bool,X190) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl8),
  inference(resolution,[],[f1029,f918])).
fof(f1319,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | s(bool,X30) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | s(bool,X31) != s(bool,X32)) ) | $spl8),
  inference(resolution,[],[f1029,f667])).
fof(f1316,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | p(s(bool,X23)) | s(bool,X23) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl8),
  inference(resolution,[],[f1029,f666])).
fof(f1315,plain,(
  ( ! [X19,X20,X18] : (p(s(bool,X18)) | p(s(bool,X19)) | s(bool,X18) != s(bool,X20) | s(bool,X19) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl8),
  inference(resolution,[],[f1029,f665])).
fof(f1314,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X15)) | ~p(s(bool,X16)) | s(bool,X15) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | s(bool,X16) != s(bool,X17)) ) | $spl8),
  inference(resolution,[],[f1029,f663])).
fof(f1312,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl8),
  inference(resolution,[],[f1029,f661])).
fof(f1267,plain,(
  ( ! [X180,X181] : (p(s(bool,X180)) | p(s(bool,X181)) | s(bool,X181) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl2),
  inference(resolution,[],[f1045,f918])).
fof(f1179,plain,(
  ( ! [X23,X21,X22] : (p(s(bool,X21)) | ~p(s(bool,X22)) | s(bool,X21) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | s(bool,X22) != s(bool,X23)) ) | $spl2),
  inference(resolution,[],[f1045,f667])).
fof(f1176,plain,(
  ( ! [X14,X12,X13] : (p(s(bool,X12)) | ~p(s(bool,X13)) | p(s(bool,X14)) | s(bool,X14) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl2),
  inference(resolution,[],[f1045,f666])).
fof(f1175,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X9)) | p(s(bool,X10)) | s(bool,X9) != s(bool,X11) | s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl2),
  inference(resolution,[],[f1045,f665])).
fof(f1174,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X6)) | ~p(s(bool,X7)) | s(bool,X6) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | s(bool,X7) != s(bool,X8)) ) | $spl2),
  inference(resolution,[],[f1045,f663])).
fof(f1172,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X2) | s(bool,X1) != s(bool,'const.quantHeuristics.GUESS_EXISTS_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) ) | $spl2),
  inference(resolution,[],[f1045,f661])).
fof(f1029,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | $spl8),
  inference(cnf_transformation,[],[f1029_D])).
fof(f1029_D,plain,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1033,plain,(
  ( ! [X23,X22] : (p(s(bool,X23)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | p(s(bool,X22))) ) | $spl2),
  inference(subsumption_resolution,[],[f1006,f696])).
fof(f1006,plain,(
  ( ! [X23,X22] : (s(bool,X22) != s(bool,X23) | p(s(bool,X23)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | p(s(bool,X22))) ) | $spl2),
  inference(superposition,[],[f958,f700])).
fof(f1032,plain,(
  ( ! [X21,X20] : (p(s(bool,X21)) | p(s(bool,X20)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))))) ) | $spl2),
  inference(subsumption_resolution,[],[f1005,f696])).
fof(f1005,plain,(
  ( ! [X21,X20] : (s(bool,X20) != s(bool,X21) | p(s(bool,X21)) | p(s(bool,X20)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))))) ) | $spl2),
  inference(superposition,[],[f958,f700])).
fof(f1031,plain,(
  ( ! [X14,X15] : (p(s(bool,X15)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | p(s(bool,X14))) ) | $spl2),
  inference(subsumption_resolution,[],[f1002,f696])).
fof(f1002,plain,(
  ( ! [X14,X15] : (s(bool,X14) != s(bool,X15) | p(s(bool,X15)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14)))) | p(s(bool,X14))) ) | $spl2),
  inference(superposition,[],[f958,f696])).
fof(f1027,plain,(
  ( ! [X12,X13] : (p(s(bool,X13)) | p(s(bool,X12)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))))) ) | $spl2),
  inference(subsumption_resolution,[],[f1001,f696])).
fof(f1001,plain,(
  ( ! [X12,X13] : (s(bool,X12) != s(bool,X13) | p(s(bool,X13)) | p(s(bool,X12)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))))) ) | $spl2),
  inference(superposition,[],[f958,f696])).
fof(f953,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),
  inference(superposition,[],[f658,f719])).
fof(f952,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))),
  inference(superposition,[],[f658,f717])).
fof(f951,plain,(
  ( ! [X15] : (s(bool,X15) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,X15)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) )),
  inference(superposition,[],[f658,f703])).
fof(f950,plain,(
  ( ! [X14] : (s(bool,X14) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X14))) )),
  inference(superposition,[],[f658,f703])).
fof(f949,plain,(
  ( ! [X13] : (s(bool,X13) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | p(s(bool,X13))) )),
  inference(superposition,[],[f658,f700])).
fof(f948,plain,(
  ( ! [X12] : (s(bool,X12) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | p(s(bool,X12)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) )),
  inference(superposition,[],[f658,f700])).
fof(f947,plain,(
  ( ! [X11] : (s(bool,X11) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,X11)) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) )),
  inference(superposition,[],[f658,f699])).
fof(f946,plain,(
  ( ! [X10] : (s(bool,X10) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | ~p(s(bool,X10))) )),
  inference(superposition,[],[f658,f699])).
fof(f945,plain,(
  ( ! [X9] : (s(bool,X9) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14)))) | p(s(bool,X9))) )),
  inference(superposition,[],[f658,f696])).
fof(f944,plain,(
  ( ! [X8] : (s(bool,X8) != s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK13,bool),sK14))) | p(s(bool,X8)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_POINT_2'(s(fun(sK12,sK13),'_dst_x0x1_2'(s(fun('type.pair.prod'(sK12,'type.one.one'),sK13),sK15),s(fun(sK12,'type.pair.prod'(sK12,'type.one.one')),'_dst_x1x0_2'(s(fun(sK12,fun('type.one.one','type.pair.prod'(sK12,'type.one.one'))),'const.pair.,_0'),s('type.one.one','const.one.one_0'))))),s(fun(sK13,bool),sK14))))) )),
  inference(superposition,[],[f658,f696])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 638
% Passive clauses: 7164
% Generated clauses: 17794
% Final active clauses: 579
% Final passive clauses: 5227
% Input formulas: 260
% Initial clauses: 260
% 
% Selected by SInE selection: 98
% SInE iterations: 1
% 
% Duplicate literals: 625
% Trivial inequalities: 63
% Fw subsumption resolutions: 1636
% Fw demodulations: 1728
% Bw demodulations: 18
% 
% Simple tautologies: 995
% Equational tautologies: 3
% Forward subsumptions: 5493
% 
% Binary resolution: 7157
% Forward superposition: 3766
% Backward superposition: 2083
% Equality resolution: 6
% 
% Split clauses: 269
% Split components: 571
% SAT solver clauses: 292
% SAT solver unit clauses: 1
% SAT solver binary clauses: 36
% 
% Sat splits: 269
% Sat splitting refutations: 18
% 
% Memory used [KB]: 11001
% Time elapsed: 1.166 s
% ------------------------------
% ------------------------------
% Success in time 13.22 s
