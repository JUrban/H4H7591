Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numpair
% (83785)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 346
% Passive clauses: 3285
% Generated clauses: 29531
% Final active clauses: 252
% Final passive clauses: 2607
% Input formulas: 97
% Initial clauses: 152
% 
% Duplicate literals: 384
% Trivial inequalities: 195
% Fw subsumption resolutions: 1236
% Fw demodulations: 5443
% Bw demodulations: 77
% 
% Simple tautologies: 254
% Equational tautologies: 25
% Forward subsumptions: 18529
% Fw demodulations to eq. taut.: 37
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 289
% Forward superposition: 12567
% Backward superposition: 9062
% Self superposition: 105
% Equality factoring: 42
% Equality resolution: 29
% 
% Split clauses: 119
% Split components: 240
% SAT solver clauses: 399
% SAT solver unit clauses: 9
% SAT solver binary clauses: 83
% 
% Sat splits: 119
% Sat splitting refutations: 24
% 
% TWLsolver clauses: 399
% TWLsolver calls for satisfiability: 107
% 
% Memory used [KB]: 17014
% Time elapsed: 0.618 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numpair
% (83796)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 332
% Passive clauses: 1669
% Generated clauses: 28155
% Final active clauses: 220
% Final passive clauses: 868
% Input formulas: 97
% Initial clauses: 152
% 
% Duplicate literals: 247
% Trivial inequalities: 229
% Fw subsumption resolutions: 1073
% Fw demodulations: 7289
% Bw demodulations: 486
% Condensations: 236
% Global subsumptions: 10
% 
% Simple tautologies: 146
% Equational tautologies: 24
% Forward subsumptions: 14462
% Fw demodulations to eq. taut.: 40
% Bw demodulations to eq. taut.: 50
% 
% Binary resolution: 341
% Factoring: 2
% Forward superposition: 9215
% Backward superposition: 6719
% Self superposition: 102
% Equality factoring: 38
% Equality resolution: 34
% 
% Split clauses: 45
% Split components: 90
% SAT solver clauses: 2810
% SAT solver unit clauses: 224
% SAT solver binary clauses: 63
% SAT solver learnt clauses: 20
% SAT solver learnt literals: 2
% 
% Sat splits: 45
% Sat splitting refutations: 45
% 
% TWLsolver clauses: 2770
% TWLsolver calls for satisfiability: 609
% 
% Memory used [KB]: 19061
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numpair
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numpair
% SZS output start Proof for thm.numpair
fof(f114167,plain,(
  $false),
  inference(subsumption_resolution,[],[f114166,f30453])).
fof(f30453,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))),s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(unit_resulting_resolution,[],[f30273,f380])).
fof(f380,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f249])).
fof(f249,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f187])).
fof(f187,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f186])).
fof(f186,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X7,X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))))),
  file('thm.numpair.invtri_upper','thm.arithmetic.NOT_LESS')).
fof(f30273,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))))))) )),
  inference(backward_demodulation,[],[f30229,f13753])).
fof(f13753,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))))))))) )),
  inference(superposition,[],[f366,f5354])).
fof(f5354,plain,(
  ( ! [X0] : (s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))) = s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(backward_demodulation,[],[f5336,f302])).
fof(f302,plain,(
  ( ! [X0] : (s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))) = s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0] : s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))) = s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f96])).
fof(f96,axiom,(
  ! [X6] : s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X6))) = s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))))),
  file('thm.numpair.invtri_upper','thm.numpair.invtri_def')).
fof(f5336,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(subsumption_resolution,[],[f5269,f262])).
fof(f262,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.numpair.invtri_upper',aHL_TRUTH)).
fof(f5269,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(superposition,[],[f5061,f281])).
fof(f281,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f87])).
fof(f87,axiom,(
  ! [X6] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)))),
  file('thm.numpair.invtri_upper','thm.numeral.numeral_lte|split|0')).
fof(f5061,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) )),
  inference(forward_demodulation,[],[f5060,f900])).
fof(f900,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f885,f434])).
fof(f434,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f301,f267])).
fof(f267,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f64])).
fof(f64,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.numpair.invtri_upper','thm.numeral.numeral_distrib|split|13')).
fof(f301,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7)))),
  file('thm.numpair.invtri_upper','thm.arithmetic.MULT_LEFT_|49|')).
fof(f885,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f434,f319])).
fof(f319,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f224])).
fof(f224,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X6))),
  file('thm.numpair.invtri_upper','thm.numeral.numeral_distrib|split|18')).
fof(f5060,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f5059,f900])).
fof(f5059,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(subsumption_resolution,[],[f5058,f262])).
fof(f5058,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f4986,f280])).
fof(f280,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f77])).
fof(f77,axiom,(
  ! [X6] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))),
  file('thm.numpair.invtri_upper','thm.numeral.numeral_distrib|split|26')).
fof(f4986,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f370,f900])).
fof(f370,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(flattening,[],[f243])).
fof(f243,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f180])).
fof(f180,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X7,X6] : (s('type.num.num',X6) = s('type.num.num',X7) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))))))),
  file('thm.numpair.invtri_upper','thm.arithmetic.EQ_LESS_EQ')).
fof(f366,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num',X1))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num',X1))))))))))) )),
  inference(cnf_transformation,[],[f178])).
fof(f178,plain,(
  ! [X0,X1] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num',X1))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num',X1))))))))))),
  inference(rectify,[],[f98])).
fof(f98,axiom,(
  ! [X6,X19] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X6),s('type.num.num',X19))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X6),s('type.num.num',X19))))))))))),
  file('thm.numpair.invtri_upper','thm.numpair.SND_invtri|48|')).
fof(f30229,plain,(
  ( ! [X4,X5] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f12854,f350])).
fof(f350,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f162])).
fof(f162,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X6] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X6))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6)))),
  file('thm.numpair.invtri_upper','thm.arithmetic.LESS_EQ')).
fof(f12854,plain,(
  ( ! [X24,X23] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X24))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X24)))))) )),
  inference(forward_demodulation,[],[f12853,f5343])).
fof(f5343,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(backward_demodulation,[],[f5336,f276])).
fof(f276,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))),
  file('thm.numpair.invtri_upper','thm.arithmetic.ADD|split|0')).
fof(f12853,plain,(
  ( ! [X24,X23] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X24))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X24)))))))) )),
  inference(forward_demodulation,[],[f12749,f438])).
fof(f438,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(backward_demodulation,[],[f354,f352])).
fof(f352,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numpair.invtri_upper','thm.arithmetic.ADD_CLAUSES|split|2')).
fof(f354,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numpair.invtri_upper','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f12749,plain,(
  ( ! [X24,X23] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X24))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X24)))))) )),
  inference(superposition,[],[f390,f5365])).
fof(f5365,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(backward_demodulation,[],[f5336,f435])).
fof(f435,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f303,f267])).
fof(f303,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6)))),
  file('thm.numpair.invtri_upper','thm.arithmetic.SUC_ONE_ADD')).
fof(f390,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f194])).
fof(f194,plain,(
  ! [X0,X1,X2] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X7,X6,X8] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X8))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8)))))),
  file('thm.numpair.invtri_upper','thm.arithmetic.ADD_MONO_LESS_EQ')).
fof(f114166,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))),s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.ZERO_0'))))))))),
  inference(forward_demodulation,[],[f114102,f27757])).
fof(f27757,plain,(
  ( ! [X6,X7] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num',X6))),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f27531,f350])).
fof(f27531,plain,(
  ( ! [X6,X7] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num',X6))),s('type.num.num',X7)))))) )),
  inference(superposition,[],[f390,f3300])).
fof(f3300,plain,(
  ( ! [X1] : (s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f308,f348])).
fof(f348,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.numpair.invtri_upper','thm.arithmetic.ADD_SYM')).
fof(f308,plain,(
  ( ! [X0] : (s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0] : s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f95])).
fof(f95,axiom,(
  ! [X6] : s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X6)))))),
  file('thm.numpair.invtri_upper','thm.numpair.tri_def|split|1')).
fof(f114102,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))),s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(unit_resulting_resolution,[],[f14221,f24867])).
fof(f24867,plain,(
  ( ! [X0] : (s('type.num.num',sK0) != s('type.num.num',X0) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))),s('type.num.num',X0))))) )),
  inference(subsumption_resolution,[],[f24811,f262])).
fof(f24811,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))),s('type.num.num',X0)))) | s('type.num.num',sK0) != s('type.num.num',X0)) )),
  inference(superposition,[],[f23270,f1179])).
fof(f1179,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5))) | s('type.num.num',X4) != s('type.num.num',X5)) )),
  inference(subsumption_resolution,[],[f1120,f430])).
fof(f430,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f269,f262])).
fof(f269,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f218])).
fof(f218,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f100])).
fof(f100,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f39])).
fof(f39,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.numpair.invtri_upper','thm.bool.NOT_CLAUSES|split|2')).
fof(f1120,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | s('type.num.num',X4) != s('type.num.num',X5) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X5)))) )),
  inference(superposition,[],[f369,f309])).
fof(f309,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.numpair.invtri_upper',aHL_BOOL_CASES)).
fof(f369,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f244])).
fof(f23270,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))),s('type.num.num',X0))))) )),
  inference(subsumption_resolution,[],[f23244,f262])).
fof(f23244,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))),s('type.num.num',X0))))) )),
  inference(superposition,[],[f392,f23233])).
fof(f23233,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))),s('type.num.num',sK0)))),
  inference(condensation,[],[f23232])).
fof(f23232,plain,(
  ( ! [X12] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f23116,f311])).
fof(f311,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f220])).
fof(f220,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.numpair.invtri_upper','thm.bool.EQ_CLAUSES|split|0')).
fof(f23116,plain,(
  ( ! [X12] : (p(s(bool,X12)) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f2427,f17259])).
fof(f17259,plain,(
  ( ! [X32] : (s(bool,X32) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))))) | s(bool,'T_0') = s(bool,X32)) )),
  inference(subsumption_resolution,[],[f16507,f439])).
fof(f439,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f430,f310])).
fof(f310,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f220])).
fof(f16507,plain,(
  ( ! [X32] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X32) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))))) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f615,f460])).
fof(f460,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0)))))))))),
  inference(unit_resulting_resolution,[],[f437,f315])).
fof(f315,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f222])).
fof(f222,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f141])).
fof(f141,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.numpair.invtri_upper','thm.bool.EQ_CLAUSES|split|3')).
fof(f437,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))))))))))),
  inference(backward_demodulation,[],[f436,f429])).
fof(f429,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))),
  inference(backward_demodulation,[],[f267,f261])).
fof(f261,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f200])).
fof(f200,plain,(
  ? [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(ennf_transformation,[],[f99])).
fof(f99,plain,(
  ~! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  file('thm.numpair.invtri_upper','thm.numpair.invtri_upper')).
fof(f436,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f304,f267])).
fof(f304,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X7] : s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.numpair.invtri_upper','thm.arithmetic.ADD|49|')).
fof(f615,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f309,f309])).
fof(f2427,plain,(
  ( ! [X6,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X5)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num',X6)))) )),
  inference(subsumption_resolution,[],[f2378,f430])).
fof(f2378,plain,(
  ( ! [X6,X5] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X5)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num',X6)))) )),
  inference(superposition,[],[f379,f309])).
fof(f379,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f249])).
fof(f392,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(flattening,[],[f211])).
fof(f211,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(ennf_transformation,[],[f196])).
fof(f196,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X7,X6,X8] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X8))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X8)))))),
  file('thm.numpair.invtri_upper','thm.arithmetic.LESS_EQ_TRANS')).
fof(f14221,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))))),s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f14220,f5342])).
fof(f5342,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(backward_demodulation,[],[f5336,f275])).
fof(f275,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.numpair.invtri_upper','thm.arithmetic.ADD_|48|')).
fof(f14220,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))))),s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f13989,f5340])).
fof(f5340,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(backward_demodulation,[],[f5336,f266])).
fof(f266,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f94])).
fof(f94,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.numpair.invtri_upper','thm.numpair.tri_def|split|0')).
fof(f13989,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.numpair.invtri_1'(s('type.num.num',X0))))),s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f367,f5354])).
fof(f367,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num',X1))))))),s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num',X1))))))),s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X0),s('type.num.num',X1)))))))),
  inference(rectify,[],[f97])).
fof(f97,axiom,(
  ! [X6,X19] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.numpair.tri_1'(s('type.num.num',X19))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numpair.tri_1'(s('type.num.num','const.pair.SND_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X6),s('type.num.num',X19))))))),s('type.num.num','const.pair.FST_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.numpair.invtri|48|_2'(s('type.num.num',X6),s('type.num.num',X19)))))))),
  file('thm.numpair.invtri_upper','thm.numpair.invtri|48|_thm')).
% SZS output end Proof for thm.numpair
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 826
% Passive clauses: 9729
% Generated clauses: 117778
% Final active clauses: 185
% Final passive clauses: 3302
% Input formulas: 97
% Initial clauses: 152
% 
% Duplicate literals: 515
% Trivial inequalities: 269
% Fw subsumption resolutions: 3004
% Fw demodulations: 35002
% Bw demodulations: 3880
% Condensations: 505
% Global subsumptions: 1
% 
% Simple tautologies: 218
% Equational tautologies: 249
% Forward subsumptions: 67205
% Fw demodulations to eq. taut.: 494
% Bw demodulations to eq. taut.: 78
% 
% Unit resulting resolution: 5874
% Forward superposition: 36135
% Backward superposition: 28241
% Self superposition: 175
% Equality factoring: 36
% Equality resolution: 25
% 
% Split clauses: 28
% Split components: 56
% SAT solver clauses: 10290
% SAT solver unit clauses: 2384
% SAT solver binary clauses: 4896
% 
% Sat splits: 28
% Sat splitting refutations: 502
% 
% Memory used [KB]: 77525
% Time elapsed: 3.922 s
% ------------------------------
% ------------------------------
% Success in time 5.303 s
