Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.util_prob
% (64939)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 908
% Passive clauses: 4974
% Generated clauses: 31988
% Final active clauses: 652
% Final passive clauses: 3655
% Input formulas: 115
% Initial clauses: 253
% 
% Duplicate literals: 218
% Trivial inequalities: 46
% Fw subsumption resolutions: 1556
% Fw demodulations: 2637
% Bw demodulations: 195
% 
% Simple tautologies: 170
% Equational tautologies: 25
% Forward subsumptions: 21956
% Fw demodulations to eq. taut.: 34
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 5468
% Factoring: 1267
% Forward superposition: 9009
% Backward superposition: 11135
% Self superposition: 61
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 192
% Split components: 385
% SAT solver clauses: 361
% SAT solver unit clauses: 13
% SAT solver binary clauses: 43
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 192
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 360
% TWLsolver calls for satisfiability: 334
% 
% Memory used [KB]: 17910
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.util_prob
% (64951)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 623
% Passive clauses: 2983
% Generated clauses: 24534
% Final active clauses: 421
% Final passive clauses: 1677
% Input formulas: 115
% Initial clauses: 253
% 
% Duplicate literals: 102
% Trivial inequalities: 61
% Fw subsumption resolutions: 1015
% Fw demodulations: 3107
% Bw demodulations: 734
% Condensations: 23
% Global subsumptions: 15
% 
% Simple tautologies: 218
% Equational tautologies: 18
% Forward subsumptions: 13131
% Fw demodulations to eq. taut.: 60
% Bw demodulations to eq. taut.: 63
% 
% Binary resolution: 2612
% Factoring: 59
% Forward superposition: 6427
% Backward superposition: 6653
% Self superposition: 92
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 63
% Split components: 127
% SAT solver clauses: 3838
% SAT solver unit clauses: 316
% SAT solver binary clauses: 116
% SAT solver learnt clauses: 35
% SAT solver learnt literals: 18
% 
% Sat splits: 63
% Sat splitting refutations: 75
% 
% TWLsolver clauses: 3773
% TWLsolver calls for satisfiability: 1684
% 
% Memory used [KB]: 25458
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.util_prob
% (64967)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2948
% Passive clauses: 20528
% Generated clauses: 244023
% Final active clauses: 1578
% Final passive clauses: 6133
% Input formulas: 115
% Initial clauses: 253
% Discarded non-redundant clauses: 37025
% 
% Duplicate literals: 179
% Trivial inequalities: 145
% Fw subsumption resolutions: 6872
% Fw demodulations: 58042
% Bw demodulations: 8704
% Condensations: 260
% Global subsumptions: 225
% 
% Simple tautologies: 126
% Equational tautologies: 144
% Forward subsumptions: 151416
% Fw demodulations to eq. taut.: 698
% Bw demodulations to eq. taut.: 44
% 
% Unit resulting resolution: 29441
% Factoring: 4
% Forward superposition: 73855
% Backward superposition: 58067
% Self superposition: 240
% Equality factoring: 26
% Equality resolution: 32
% 
% Split clauses: 139
% Split components: 280
% SAT solver clauses: 25087
% SAT solver unit clauses: 6120
% SAT solver binary clauses: 13339
% 
% Sat splits: 139
% Sat splitting refutations: 4053
% 
% Memory used [KB]: 153643
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.util_prob
% (65212)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2461
% Passive clauses: 58128
% Generated clauses: 182045
% Final active clauses: 1359
% Final passive clauses: 38938
% Input formulas: 115
% Initial clauses: 212
% 
% Selected by SInE selection: 75
% SInE iterations: 1
% 
% Duplicate literals: 2602
% Trivial inequalities: 681
% Fw subsumption resolutions: 15578
% Fw demodulations: 37602
% Bw demodulations: 624
% 
% Simple tautologies: 5194
% Equational tautologies: 66
% Forward subsumptions: 62615
% Fw demodulations to eq. taut.: 62
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 33622
% Factoring: 4
% Forward superposition: 73384
% Backward superposition: 14269
% Self superposition: 5
% Equality resolution: 60
% 
% Split clauses: 1787
% Split components: 3762
% SAT solver clauses: 1937
% SAT solver unit clauses: 21
% SAT solver binary clauses: 216
% 
% Sat splits: 1787
% Sat splitting refutations: 95
% 
% Memory used [KB]: 55905
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.util_prob
% (65349)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 707
% Passive clauses: 3405
% Generated clauses: 33627
% Final active clauses: 692
% Final passive clauses: 2443
% Input formulas: 115
% Initial clauses: 253
% 
% Duplicate literals: 180
% Trivial inequalities: 68
% Fw subsumption resolutions: 704
% Fw demodulations: 4196
% Bw demodulations: 103
% Global subsumptions: 2
% 
% Simple tautologies: 227
% Equational tautologies: 31
% Forward subsumptions: 24577
% Fw demodulations to eq. taut.: 99
% Bw demodulations to eq. taut.: 5
% 
% Unit resulting resolution: 7945
% Factoring: 11
% Forward superposition: 12359
% Backward superposition: 7595
% Self superposition: 118
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 3520
% SAT solver unit clauses: 1037
% SAT solver binary clauses: 983
% 
% Sat splits: 7
% Sat splitting refutations: 104
% 
% Memory used [KB]: 18038
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.util_prob
% (65359)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 827
% Passive clauses: 8482
% Generated clauses: 43523
% Final active clauses: 718
% Final passive clauses: 6001
% Input formulas: 115
% Initial clauses: 253
% 
% Duplicate literals: 954
% Trivial inequalities: 169
% Fw subsumption resolutions: 2237
% Bw subsumption resolutions: 360
% Fw demodulations: 7821
% Bw demodulations: 823
% Condensations: 1927
% Global subsumptions: 3
% 
% Simple tautologies: 1648
% Forward subsumptions: 19780
% Backward subsumptions: 761
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 8813
% Forward superposition: 15959
% Backward superposition: 4222
% Self superposition: 6
% Equality resolution: 10
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 8492
% SAT solver unit clauses: 33
% SAT solver binary clauses: 593
% 
% Sat splits: 3
% Sat splitting refutations: 1
% 
% Memory used [KB]: 25841
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 119 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.util_prob
% (65384)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2126
% Passive clauses: 9685
% Generated clauses: 39851
% Final active clauses: 718
% Final passive clauses: 1378
% Input formulas: 115
% Initial clauses: 253
% 
% Duplicate literals: 380
% Trivial inequalities: 59
% Fw demodulations: 5858
% Bw demodulations: 4926
% Global subsumptions: 40
% 
% Simple tautologies: 1256
% Equational tautologies: 57
% Forward subsumptions: 18608
% Backward subsumptions: 66
% Fw demodulations to eq. taut.: 2
% Bw demodulations to eq. taut.: 6
% 
% Binary resolution: 5085
% Unit resulting resolution: 11197
% Forward superposition: 3125
% Backward superposition: 1547
% 
% Split clauses: 224
% Split components: 486
% SAT solver clauses: 17043
% SAT solver unit clauses: 6
% SAT solver binary clauses: 13510
% 
% Sat splits: 224
% Sat splitting refutations: 21
% 
% Memory used [KB]: 16758
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% remaining time: 109 next slice time: 85
lrs+1_5:4_cond=on:fsr=off:fde=none:gs=on:gsem=on:lwlo=on:nm=64:nwc=1:stl=60:sos=all:spl=off_80 on thm.util_prob
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.util_prob
% SZS output start Proof for thm.util_prob
fof(f152112,plain,(
  $false),
  inference(equality_resolution,[],[f151806])).
fof(f151806,plain,(
  ( ! [X4] : (s('type.num.num',sK1) != s('type.num.num',X4)) )),
  inference(duplicate_literal_removal,[],[f151611])).
fof(f151611,plain,(
  ( ! [X4] : (s('type.num.num',sK1) != s('type.num.num',X4) | s('type.num.num',sK1) != s('type.num.num',X4)) )),
  inference(resolution,[],[f147422,f449])).
fof(f449,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f293])).
fof(f293,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(flattening,[],[f292])).
fof(f292,plain,(
  ! [X0,X1] : ((s('type.num.num',X0) != s('type.num.num',X1) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) | s('type.num.num',X0) = s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X8,X9] : (s('type.num.num',X8) = s('type.num.num',X9) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X8))))))),
  file('thm.util_prob.LE_SUC','thm.arithmetic.EQ_LESS_EQ')).
fof(f147422,plain,(
  ( ! [X4] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',sK1)))) | s('type.num.num',sK1) != s('type.num.num',X4)) )),
  inference(resolution,[],[f24710,f449])).
fof(f24710,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',sK1))))) )),
  inference(global_subsumption,[],[f24655,f4594,f23826])).
fof(f23826,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f23713,f423])).
fof(f423,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f107])).
fof(f107,axiom,(
  ! [X9,X8] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X8))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))),
  file('thm.util_prob.LE_SUC','thm.numeral.numeral_lte|split|6')).
fof(f23713,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) )),
  inference(superposition,[],[f2496,f422])).
fof(f422,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f105])).
fof(f105,axiom,(
  ! [X9,X8] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X8))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))))),
  file('thm.util_prob.LE_SUC','thm.numeral.numeral_lte|split|4')).
fof(f2496,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))))),s('type.num.num',X0))))) )),
  inference(resolution,[],[f1596,f505])).
fof(f505,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f259])).
fof(f259,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(flattening,[],[f258])).
fof(f258,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(ennf_transformation,[],[f235])).
fof(f235,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X2))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X2)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X8,X9,X10] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))) & p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X10)))))),
  file('thm.util_prob.LE_SUC','thm.arithmetic.LESS_EQ_TRANS')).
fof(f1596,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))))),
  inference(global_subsumption,[],[f1535,f813,f1444])).
fof(f1444,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2))))),
  inference(duplicate_literal_removal,[],[f1324])).
fof(f1324,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2))))),
  inference(resolution,[],[f1281,f492])).
fof(f492,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f306])).
fof(f306,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f226])).
fof(f226,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))))),
  inference(flattening,[],[f225])).
fof(f225,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X8,X9] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))),s('type.num.num',X8)))))),
  file('thm.util_prob.LE_SUC','thm.arithmetic.NOT_LEQ')).
fof(f1281,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))),s('type.num.num',sK1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2))))),
  inference(global_subsumption,[],[f1276,f1158])).
fof(f1158,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))),
  inference(duplicate_literal_removal,[],[f1045])).
fof(f1045,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))) | s('type.num.num',sK1) != s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))),
  inference(resolution,[],[f328,f449])).
fof(f328,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))))) | s('type.num.num',sK1) != s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))),
  inference(cnf_transformation,[],[f266])).
fof(f266,plain,(
  (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | s('type.num.num',sK1) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))))) | (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) & s('type.num.num',sK1) != s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2])],[f265])).
fof(f265,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))),
  inference(flattening,[],[f264])).
fof(f264,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) | (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f245])).
fof(f245,plain,(
  ? [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) <~> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f117])).
fof(f117,plain,(
  ~! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s('type.num.num',X6) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) | s('type.num.num',X6) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  file('thm.util_prob.LE_SUC','thm.util_prob.LE_SUC')).
fof(f1276,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | s('type.num.num',sK1) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))),s('type.num.num',sK1))))),
  inference(duplicate_literal_removal,[],[f1183])).
fof(f1183,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | s('type.num.num',sK1) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))) | s('type.num.num',sK1) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))),s('type.num.num',sK1))))),
  inference(resolution,[],[f326,f451])).
fof(f451,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f293])).
fof(f326,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | s('type.num.num',sK1) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))),
  inference(cnf_transformation,[],[f266])).
fof(f813,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))))),
  inference(resolution,[],[f327,f461])).
fof(f461,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f297])).
fof(f297,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f216])).
fof(f216,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f215])).
fof(f215,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f106])).
fof(f106,axiom,(
  ! [X9,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8)))))) <=> ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X9)))))),
  file('thm.util_prob.LE_SUC','thm.numeral.numeral_lte|split|5')).
fof(f327,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2))))),
  inference(cnf_transformation,[],[f266])).
fof(f1535,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))))),
  inference(backward_demodulation,[],[f1452,f813])).
fof(f1452,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK2)))),
  inference(resolution,[],[f1444,f384])).
fof(f384,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f269])).
fof(f269,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.util_prob.LE_SUC','thm.bool.EQ_CLAUSES|split|0')).
fof(f4594,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))),s('type.num.num',X0))))) )),
  inference(resolution,[],[f1448,f505])).
fof(f1448,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))),s('type.num.num',sK1))))),
  inference(resolution,[],[f1444,f493])).
fof(f493,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f306])).
fof(f24655,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',X0))))) )),
  inference(superposition,[],[f2567,f451])).
fof(f2567,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2))))),s('type.num.num','const.num.|48|_0'))))),
  inference(superposition,[],[f1596,f395])).
fof(f395,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f275])).
fof(f275,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f77])).
fof(f77,axiom,(
  ! [X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X9))),
  file('thm.util_prob.LE_SUC','thm.numeral.numeral_distrib|split|30')).
% SZS output end Proof for thm.util_prob
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 968
% Passive clauses: 12967
% Generated clauses: 149423
% Final active clauses: 864
% Final passive clauses: 9944
% Input formulas: 115
% Initial clauses: 354
% Discarded non-redundant clauses: 4908
% 
% Duplicate literals: 4257
% Trivial inequalities: 755
% Fw demodulations: 38875
% Bw demodulations: 458
% Condensations: 6393
% Global subsumptions: 200
% 
% Simple tautologies: 5086
% Equational tautologies: 20
% Forward subsumptions: 81304
% Bw demodulations to eq. taut.: 21
% 
% Binary resolution: 33706
% Factoring: 18
% Forward superposition: 58353
% Backward superposition: 6703
% Self superposition: 4
% Equality factoring: 1
% Equality resolution: 42
% 
% SAT solver clauses: 13939
% SAT solver unit clauses: 882
% SAT solver binary clauses: 3419
% SAT solver learnt clauses: 420
% SAT solver learnt literals: 791
% 
% TWLsolver clauses: 13167
% TWLsolver calls for satisfiability: 266692
% 
% Memory used [KB]: 54625
% Time elapsed: 5.673 s
% ------------------------------
% ------------------------------
% Success in time 24.712 s
