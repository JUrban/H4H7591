Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (109208)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 167
% Passive clauses: 2950
% Generated clauses: 21471
% Final active clauses: 134
% Final passive clauses: 2413
% Input formulas: 69
% Initial clauses: 126
% 
% Duplicate literals: 575
% Trivial inequalities: 349
% Fw subsumption resolutions: 1686
% Fw demodulations: 2224
% Bw demodulations: 15
% 
% Simple tautologies: 317
% Equational tautologies: 42
% Forward subsumptions: 12418
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 268
% Factoring: 1
% Forward superposition: 8649
% Backward superposition: 7171
% Self superposition: 171
% Equality factoring: 72
% Equality resolution: 37
% 
% Split clauses: 365
% Split components: 754
% SAT solver clauses: 917
% SAT solver unit clauses: 31
% SAT solver binary clauses: 248
% 
% Sat splits: 365
% Sat splitting refutations: 43
% 
% TWLsolver clauses: 896
% TWLsolver calls for satisfiability: 137
% 
% Memory used [KB]: 13304
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (109226)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 165
% Passive clauses: 1212
% Generated clauses: 21021
% Final active clauses: 135
% Final passive clauses: 862
% Input formulas: 69
% Initial clauses: 126
% 
% Duplicate literals: 267
% Trivial inequalities: 601
% Fw subsumption resolutions: 1542
% Fw demodulations: 4296
% Bw demodulations: 187
% Condensations: 582
% Global subsumptions: 13
% 
% Simple tautologies: 200
% Equational tautologies: 30
% Forward subsumptions: 10173
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 168
% Factoring: 1
% Forward superposition: 5667
% Backward superposition: 5647
% Self superposition: 128
% Equality factoring: 47
% Equality resolution: 32
% 
% Split clauses: 97
% Split components: 194
% SAT solver clauses: 2201
% SAT solver unit clauses: 167
% SAT solver binary clauses: 104
% SAT solver learnt clauses: 27
% SAT solver learnt literals: 2
% 
% Sat splits: 97
% Sat splitting refutations: 97
% 
% TWLsolver clauses: 2148
% TWLsolver calls for satisfiability: 567
% 
% Memory used [KB]: 17142
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f5734,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f5732])).
fof(f5732,plain,(
  s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),sK1)),
  inference(superposition,[],[f5709,f302])).
fof(f302,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X6] : ! [X10] : s('type.list.list'(X6),X10) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X10)))),
  file('thm.rich_list.IS_PREFIX_IS_SUBLIST','thm.list.APPEND|split|0')).
fof(f5709,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),sK1)))) )),
  inference(superposition,[],[f5675,f4624])).
fof(f4624,plain,(
  s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),sK6(sK2,sK1,sK0))))),
  inference(subsumption_resolution,[],[f4599,f250])).
fof(f250,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.IS_PREFIX_IS_SUBLIST',aHL_TRUTH)).
fof(f4599,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK0),sK1) = s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),sK6(sK2,sK1,sK0))))),
  inference(superposition,[],[f326,f386])).
fof(f386,plain,(
  s(bool,'T_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),sK1)))),
  inference(unit_resulting_resolution,[],[f248,f261])).
fof(f261,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f191])).
fof(f191,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X19] : (s(bool,'T_0') = s(bool,X19) <=> p(s(bool,X19)))),
  file('thm.rich_list.IS_PREFIX_IS_SUBLIST','thm.bool.EQ_CLAUSES|split|0')).
fof(f248,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),sK1))))),
  inference(cnf_transformation,[],[f188])).
fof(f188,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),sK1)))) & ~p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f180])).
fof(f180,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) & ~p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) => p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) => p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X7)))) => p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X7)))) => p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8)))))),
  file('thm.rich_list.IS_PREFIX_IS_SUBLIST','thm.rich_list.IS_PREFIX_IS_SUBLIST')).
fof(f326,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),sK6(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f227])).
fof(f227,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),sK6(X2,X1,X0))))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f226])).
fof(f226,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ? [X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4)))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(rectify,[],[f225])).
fof(f225,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))) & (! [X3] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(nnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) <=> ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f134])).
fof(f134,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) <=> ? [X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X7)))) <=> ? [X10] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X10))))),
  file('thm.rich_list.IS_PREFIX_IS_SUBLIST','thm.rich_list.IS_PREFIX_APPEND')).
fof(f5675,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),X1)))))) )),
  inference(subsumption_resolution,[],[f5641,f378])).
fof(f378,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f253,f250])).
fof(f253,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f189])).
fof(f189,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f25])).
fof(f25,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.rich_list.IS_PREFIX_IS_SUBLIST','thm.bool.NOT_CLAUSES|split|1')).
fof(f5641,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.list.list'(sK0),sK1) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK2),s('type.list.list'(sK0),X1)))))) )),
  inference(superposition,[],[f329,f400])).
fof(f400,plain,(
  s(bool,'F_0') = s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2)))),
  inference(unit_resulting_resolution,[],[f249,f265])).
fof(f265,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f193])).
fof(f193,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X19] : (s(bool,'F_0') = s(bool,X19) <=> ~p(s(bool,X19)))),
  file('thm.rich_list.IS_PREFIX_IS_SUBLIST','thm.bool.EQ_CLAUSES|split|2')).
fof(f249,plain,(
  ~p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(sK0),sK1),s('type.list.list'(sK0),sK2))))),
  inference(cnf_transformation,[],[f188])).
fof(f329,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4)))))) )),
  inference(cnf_transformation,[],[f230])).
fof(f230,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK7(X2,X1,X0)),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),sK8(X2,X1,X0))))))) & (! [X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4))))) | p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8])],[f229])).
fof(f229,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) | ? [X5,X6] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X5),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X6)))))) & (! [X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4))))) | p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f228])).
fof(f228,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) | ? [X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4)))))) & (! [X3,X4] : s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4))))) | p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))))),
  inference(nnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) <=> ? [X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4))))))),
  inference(flattening,[],[f136])).
fof(f136,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) <=> ? [X3,X4] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X4))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.rich_list.IS_SUBLIST_2'(s('type.list.list'(X6),X7),s('type.list.list'(X6),X8)))) <=> ? [X10,X14] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X10),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X8),s('type.list.list'(X6),X14))))))),
  file('thm.rich_list.IS_PREFIX_IS_SUBLIST','thm.rich_list.IS_SUBLIST_APPEND')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 100
% Passive clauses: 527
% Generated clauses: 5444
% Final active clauses: 93
% Final passive clauses: 407
% Input formulas: 69
% Initial clauses: 126
% 
% Duplicate literals: 34
% Trivial inequalities: 105
% Fw subsumption resolutions: 263
% Fw demodulations: 1227
% Bw demodulations: 24
% Condensations: 10
% Global subsumptions: 1
% 
% Simple tautologies: 77
% Equational tautologies: 26
% Forward subsumptions: 3167
% 
% Unit resulting resolution: 533
% Factoring: 3
% Forward superposition: 1936
% Backward superposition: 1132
% Self superposition: 29
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 538
% SAT solver unit clauses: 123
% SAT solver binary clauses: 308
% 
% Sat splits: 3
% Sat splitting refutations: 2
% 
% Memory used [KB]: 4349
% Time elapsed: 0.157 s
% ------------------------------
% ------------------------------
% Success in time 1.49 s
