Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f1284,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1270])).
fof(f1270,plain,(
  s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),sK3)),
  inference(superposition,[],[f36,f1233])).
fof(f1233,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.option.option'(X4),X7) = s('type.option.option'(X4),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X5),'const.option.SOME_1'(s(X5,X6))),s('type.option.option'(X4),X7)))) )),
  inference(forward_demodulation,[],[f1216,f293])).
fof(f293,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X2) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(forward_demodulation,[],[f45,f44])).
fof(f44,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.combin.K_2'(s(X1,X2),s(X0,X3)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X11,X7] : ! [X10,X12] : s(X7,X10) = s(X7,'const.combin.K_2'(s(X7,X10),s(X11,X12)))),
  file('thm.option.OPTION_IGNORE_BIND_thm|split|1','thm.combin.K_THM')).
fof(f45,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0,X1,X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X0,'const.combin.K_2'(s(X0,X2),s(X1,X3))) = s(X0,happ(s(fun(X1,X0),'const.combin.K_1'(s(X0,X2))),s(X1,X3)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7,X11] : ! [X16,X17] : s(X7,'const.combin.K_2'(s(X7,X16),s(X11,X17))) = s(X7,happ(s(fun(X11,X7),'const.combin.K_1'(s(X7,X16))),s(X11,X17)))),
  file('thm.option.OPTION_IGNORE_BIND_thm|split|1','ARITY_1_2_const.combin.K')).
fof(f1216,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.option.option'(X4),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X5),'const.option.SOME_1'(s(X5,X6))),s('type.option.option'(X4),X7))) = s('type.option.option'(X4),happ(s(fun(X5,'type.option.option'(X4)),'const.combin.K_1'(s('type.option.option'(X4),X7))),s(X5,X6)))) )),
  inference(superposition,[],[f47,f46])).
fof(f46,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),X2),s(fun(X0,'type.option.option'(X1)),'const.combin.K_1'(s('type.option.option'(X1),X3)))))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),X2),s(fun(X0,'type.option.option'(X1)),'const.combin.K_1'(s('type.option.option'(X1),X3)))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),X2),s('type.option.option'(X1),X3))) = s('type.option.option'(X1),'const.option.OPTION_BIND_2'(s('type.option.option'(X0),X2),s(fun(X0,'type.option.option'(X1)),'const.combin.K_1'(s('type.option.option'(X1),X3)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X11,X7] : ! [X14,X15] : s('type.option.option'(X7),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X11),X14),s('type.option.option'(X7),X15))) = s('type.option.option'(X7),'const.option.OPTION_BIND_2'(s('type.option.option'(X11),X14),s(fun(X11,'type.option.option'(X7)),'const.combin.K_1'(s('type.option.option'(X7),X15)))))),
  file('thm.option.OPTION_IGNORE_BIND_thm|split|1','thm.option.OPTION_IGNORE_BIND_def')).
fof(f47,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.option.option'(X0),happ(s(fun(X1,'type.option.option'(X0)),X3),s(X1,X2))) = s('type.option.option'(X0),'const.option.OPTION_BIND_2'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(fun(X1,'type.option.option'(X0)),X3)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3] : s('type.option.option'(X0),happ(s(fun(X1,'type.option.option'(X0)),X3),s(X1,X2))) = s('type.option.option'(X0),'const.option.OPTION_BIND_2'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(fun(X1,'type.option.option'(X0)),X3)))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.option.option'(X0),happ(s(fun(X1,'type.option.option'(X0)),X3),s(X1,X2))) = s('type.option.option'(X0),'const.option.OPTION_BIND_2'(s('type.option.option'(X1),'const.option.SOME_1'(s(X1,X2))),s(fun(X1,'type.option.option'(X0)),X3)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7,X11] : ! [X10,X13] : s('type.option.option'(X7),happ(s(fun(X11,'type.option.option'(X7)),X13),s(X11,X10))) = s('type.option.option'(X7),'const.option.OPTION_BIND_2'(s('type.option.option'(X11),'const.option.SOME_1'(s(X11,X10))),s(fun(X11,'type.option.option'(X7)),X13)))),
  file('thm.option.OPTION_IGNORE_BIND_thm|split|1','thm.option.OPTION_BIND_def|split|1')).
fof(f36,plain,(
  s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK1),sK3)))),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  s('type.option.option'(sK1),sK3) != s('type.option.option'(sK1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2))),s('type.option.option'(sK1),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f31])).
fof(f31,plain,(
  ? [X0,X1,X2,X3] : s('type.option.option'(X1),X3) != s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X1),X3)))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1,X2,X3] : s('type.option.option'(X1),X3) = s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X1),X3)))),
  inference(flattening,[],[f14])).
fof(f14,plain,(
  ~! [X0,X1] : ! [X2,X3] : s('type.option.option'(X1),X3) = s('type.option.option'(X1),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))),s('type.option.option'(X1),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : s('type.option.option'(X7),X9) = s('type.option.option'(X7),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))),s('type.option.option'(X7),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : s('type.option.option'(X7),X9) = s('type.option.option'(X7),'const.option.OPTION_IGNORE_BIND_2'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X8))),s('type.option.option'(X7),X9)))),
  file('thm.option.OPTION_IGNORE_BIND_thm|split|1','thm.option.OPTION_IGNORE_BIND_thm|split|1')).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 25
% Passive clauses: 124
% Generated clauses: 1167
% Final active clauses: 23
% Final passive clauses: 86
% Input formulas: 12
% Initial clauses: 13
% 
% Duplicate literals: 105
% Trivial inequalities: 19
% Fw subsumption resolutions: 45
% Fw demodulations: 61
% 
% Simple tautologies: 30
% Equational tautologies: 17
% Forward subsumptions: 736
% 
% Binary resolution: 4
% Forward superposition: 484
% Backward superposition: 343
% Self superposition: 76
% Equality factoring: 41
% Equality resolution: 3
% 
% Split clauses: 13
% Split components: 26
% SAT solver clauses: 26
% SAT solver unit clauses: 9
% SAT solver binary clauses: 16
% 
% Sat splits: 13
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 26
% TWLsolver calls for satisfiability: 9
% 
% Memory used [KB]: 1535
% Time elapsed: 0.037 s
% ------------------------------
% ------------------------------
% Success in time 0.039 s
