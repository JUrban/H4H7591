Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (49555)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 191
% Passive clauses: 2566
% Generated clauses: 27876
% Final active clauses: 185
% Final passive clauses: 2263
% Input formulas: 37
% Initial clauses: 51
% 
% Duplicate literals: 89
% Trivial inequalities: 6
% Fw subsumption resolutions: 89
% Fw demodulations: 4200
% Bw demodulations: 3
% 
% Simple tautologies: 23
% Equational tautologies: 17
% Forward subsumptions: 20761
% Fw demodulations to eq. taut.: 30
% 
% Binary resolution: 42
% Forward superposition: 10846
% Backward superposition: 12332
% Self superposition: 169
% Equality factoring: 34
% Equality resolution: 3
% 
% Split clauses: 46
% Split components: 92
% SAT solver clauses: 59
% SAT solver unit clauses: 4
% SAT solver binary clauses: 15
% 
% Sat splits: 46
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 59
% TWLsolver calls for satisfiability: 12
% 
% Memory used [KB]: 30191
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (49575)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 179
% Passive clauses: 1596
% Generated clauses: 14033
% Final active clauses: 141
% Final passive clauses: 1112
% Input formulas: 37
% Initial clauses: 51
% 
% Duplicate literals: 279
% Trivial inequalities: 113
% Fw subsumption resolutions: 320
% Fw demodulations: 1739
% Bw demodulations: 113
% Condensations: 443
% 
% Simple tautologies: 76
% Equational tautologies: 20
% Forward subsumptions: 7424
% Fw demodulations to eq. taut.: 7
% Bw demodulations to eq. taut.: 226
% 
% Binary resolution: 100
% Forward superposition: 5293
% Backward superposition: 3731
% Self superposition: 133
% Equality factoring: 36
% Equality resolution: 8
% 
% Split clauses: 83
% Split components: 166
% SAT solver clauses: 2037
% SAT solver unit clauses: 70
% SAT solver binary clauses: 38
% 
% Sat splits: 83
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 2037
% TWLsolver calls for satisfiability: 322
% 
% Memory used [KB]: 21492
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f5345,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f105,f156,f155,f104,f158,f103,f160,f154,f230,f233,f231,f679,f683,f681,f1153,f1155,f1148,f1142,f1156,f1230,f1828,f1830,f2051,f2052,f2046,f2040,f2053,f2582,f2585,f2583,f2700,f2703,f1154,f2701,f2718,f2723,f2722,f3768,f3777,f3775,f4051,f4061,f4027,f4083,f4025,f4085,f1829,f4084,f5187,f5197,f5188,f5201,f5189,f5203,f5190,f5205,f5191,f5199,f5207,f5271,f5331,f5332,f5333,f5334,f5335,f5336,f5337,f5340])).
fof(f5340,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f5338,f155])).
fof(f5338,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1))) | ($spl4 | $spl6)),
  inference(backward_demodulation,[],[f160,f5105])).
fof(f5105,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | $spl4),
  inference(forward_demodulation,[],[f5003,f127])).
fof(f127,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : ! [X33,X34] : s(X6,X34) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X33),s(X6,X34)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.bool.COND_CLAUSES|split|1')).
fof(f5003,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f127,f158,f132])).
fof(f132,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) | (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(X2,X1,X0)))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK16(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X2,X1,X0)),s('type.list.list'(X0),sK15(X2,X1,X0)))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16,sK17,sK18,sK19,sK20,sK21,sK22,sK23,sK24,sK25,sK26])],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) | ? [X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X15))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),X15))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1)))))),
  inference(rectify,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) | ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3)))))))))))))))))))))))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3)))))))))))))))))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X7))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),X9)))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.quantHeuristics.LIST_LENGTH_|49|5|split|66')).
fof(f5337,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl6)),
  inference(global_subsumption,[],[f155,f105,f104,f103,f106,f107,f108,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f161,f124,f126,f125,f132,f131,f130,f143,f142,f141,f140,f146,f148,f149,f150,f151,f153,f158,f225,f227,f230,f268,f347,f387,f431,f679,f687,f878,f940,f1153,f1148,f1142,f1080,f889,f863,f145,f819,f818,f817,f816,f815,f890,f888,f864,f862,f147,f144,f784,f785,f850,f958,f919,f942,f764,f772,f777,f776,f775,f774,f773,f770,f769,f768,f739,f783,f782,f781,f779,f778,f780,f765,f766,f771,f138,f136,f135,f134,f133,f1081,f891,f865,f843,f786,f759,f758,f735,f678,f580,f536,f298,f127,f109,f1824,f1813,f1815,f1817,f1828,f1832,f1897,f1924,f1950,f787,f1812,f1130,f1127,f1114,f1093,f1092,f1091,f1090,f1082,f767,f2089,f2116,f2146,f2148,f2153,f2154,f2191,f2237,f2238,f2267,f2300,f2301,f2340,f2341,f2342,f2343,f2344,f2345,f2346,f2347,f2348,f2349,f2350,f2351,f2352,f2353,f2354,f2355,f2387,f2395,f2418,f2420,f2422,f2423,f2425,f2468,f2505,f2522,f2580,f2582,f2585,f2576,f2577,f2578,f2579,f2586,f2587,f2588,f2589,f2590,f2591,f2592,f2593,f2627,f2659,f2660,f2662,f2664,f2666,f2681,f2698,f2700,f2703,f2693,f2694,f2695,f2696,f2697,f2721,f2718,f2771,f2851,f2852,f2853,f2855,f2856,f2857,f2890,f2894,f2895,f2896,f2897,f2904,f2978,f2979,f2980,f2981,f2982,f2983,f2984,f2985,f2987,f3119,f3122,f3079,f3125,f3126,f3171,f3172,f3173,f3174,f3175,f3176,f3177,f3178,f3180,f3227,f3230,f3231,f3232,f3233,f3234,f3235,f3236,f3237,f3238,f3240,f3242,f3241,f3243,f3276,f3277,f3280,f3281,f3326,f3327,f3340,f3342,f3341,f3343,f3376,f3377,f3380,f3381,f3382,f3427,f3428,f3429,f3431,f3444,f3445,f3446,f3448,f3450,f3451,f3452,f3454,f3456,f3457,f3458,f3459,f3460,f3461,f3462,f3463,f3464,f3465,f3466,f3504,f3505,f3506,f3507,f3508,f3509,f3510,f3511,f3512,f3513,f3514,f3552,f3565,f3566,f3557,f3558,f3559,f3560,f3561,f3562,f3653,f3654,f3655,f3656,f3657,f3658,f3659,f3660,f3661,f3662,f3664,f3753,f3754,f3755,f3756,f3757,f3758,f3759,f3760,f3761,f3762,f3764,f3765,f3766,f3768,f3779,f3835,f3836,f3784,f3785,f3786,f3787,f3788,f3789,f3837,f3838,f3839,f3840,f3841,f3842,f3843,f3844,f3845,f3846,f3847,f3848,f3849,f3850,f3804,f3851,f3852,f3853,f3809,f3810,f3854,f3855,f3856,f3857,f3858,f3860,f3862,f3863,f3864,f3865,f3866,f3867,f3868,f3869,f3870,f3871,f3872,f3873,f3875,f3831,f3832,f3833,f3892,f4051,f3903,f3916,f3946,f3981,f3984,f4027,f4096,f4097,f4100,f4101,f156,f4254,f4259,f4260,f4481,f4506,f4726,f4749,f4464,f4469,f4474,f4477,f4478,f5076,f5104,f5105,f5110,f5113,f5118,f5122,f5124,f5130,f5028,f5035,f5036,f5160,f5174,f5063,f5067,f5068,f5074,f5273,f5275,f5211,f5276,f5277,f5214,f5215,f5216,f5279,f5281,f5282,f5284,f5286,f5287,f5288,f5290,f5292,f5294,f5295,f5297,f5231,f5232,f5298,f5236,f5301,f5239,f5240,f5312,f5313,f5248,f5314,f5316,f5317,f5318,f5319,f5320,f5321,f5322,f5323,f5324,f5259,f5260,f5325,f5327,f5328,f5265,f5266,f5268,f5269,f4250,f160])).
fof(f4250,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f158,f156])).
fof(f5269,plain,(
  ( ! [X8,X7,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X8),X9) = s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK16(X9,X7,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK17(X9,X7,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK18(X9,X7,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK19(X9,X7,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK20(X9,X7,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK21(X9,X7,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK22(X9,X7,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK23(X9,X7,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK24(X9,X7,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK25(X9,X7,X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK26(X9,X7,X8)),s('type.list.list'(X8),sK15(X9,X7,X8))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f146])).
fof(f5268,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X5),X6) = s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK16(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK17(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK18(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK19(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK20(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK21(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK22(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK23(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK24(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK25(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),'const.list.CONS_2'(s(X5,sK26(X6,'const.num.|48|_0',X5)),s('type.list.list'(X5),sK15(X6,'const.num.|48|_0',X5))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f115])).
fof(f5266,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0))))) | s('type.list.list'(X1),X2) = s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK16(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK17(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK18(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK19(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK20(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK21(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK22(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK23(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK24(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK25(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK26(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1)),s('type.list.list'(X1),sK15(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2852])).
fof(f5265,plain,(
  ( ! [X134,X132,X135,X133] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X134),X135))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X133))) | s('type.list.list'(X134),X135) = s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK16(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK17(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK18(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK19(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK20(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK21(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK22(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK23(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK24(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK25(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),'const.list.CONS_2'(s(X134,sK26(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134)),s('type.list.list'(X134),sK15(X135,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X132),s('type.num.num',X133)),X134))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f127])).
fof(f5328,plain,(
  ( ! [X127,X125,X126] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X125))))))) | s('type.list.list'(X126),X127) = s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK16(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK17(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK18(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK19(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK20(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK21(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK22(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK23(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK24(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK25(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK26(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),sK15(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5263,f2852])).
fof(f5263,plain,(
  ( ! [X127,X125,X126] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X126),X127))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X125))))))) | s('type.list.list'(X126),X127) = s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK16(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK17(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK18(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK19(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK20(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK21(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK22(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK23(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK24(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK25(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),'const.list.CONS_2'(s(X126,sK26(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126)),s('type.list.list'(X126),sK15(X127,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X125)))),X126))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f119])).
fof(f5327,plain,(
  ( ! [X123,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X123),X124))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X123),X124) = s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK16(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK17(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK18(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK19(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK20(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK21(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK22(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK23(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK24(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK25(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK26(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),sK15(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5326,f2852])).
fof(f5326,plain,(
  ( ! [X123,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X123),X124))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X123),X124) = s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK16(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK17(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK18(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK19(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK20(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK21(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK22(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK23(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK24(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK25(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK26(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),sK15(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5262,f146])).
fof(f5262,plain,(
  ( ! [X123,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X123),X124))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X123),X124) = s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK16(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK17(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK18(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK19(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK20(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK21(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK22(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK23(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK24(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK25(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),'const.list.CONS_2'(s(X123,sK26(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123)),s('type.list.list'(X123),sK15(X124,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X123))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f431])).
fof(f5325,plain,(
  ( ! [X121,X122,X120] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X121),X122))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X120))))))) | s('type.list.list'(X121),X122) = s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK16(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK17(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK18(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK19(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK20(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK21(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK22(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK23(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK24(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK25(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK26(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),sK15(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5261,f2852])).
fof(f5261,plain,(
  ( ! [X121,X122,X120] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X121),X122))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X120))))))) | s('type.list.list'(X121),X122) = s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK16(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK17(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK18(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK19(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK20(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK21(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK22(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK23(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK24(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK25(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),'const.list.CONS_2'(s(X121,sK26(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121)),s('type.list.list'(X121),sK15(X122,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X120)))),X121))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f120])).
fof(f5260,plain,(
  ( ! [X118,X119,X117] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X118),X119))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X117))))) | s('type.list.list'(X118),X119) = s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK16(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK17(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK18(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK19(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK20(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK21(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK22(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK23(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK24(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK25(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),'const.list.CONS_2'(s(X118,sK26(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118)),s('type.list.list'(X118),sK15(X119,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X117)))),X118))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f117])).
fof(f5259,plain,(
  ( ! [X116,X114,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X114))))))) | s('type.list.list'(X115),X116) = s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK16(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK17(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK18(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK19(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK20(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK21(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK22(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK23(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK24(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK25(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),'const.list.CONS_2'(s(X115,sK26(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115)),s('type.list.list'(X115),sK15(X116,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X114)))),X115))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f122])).
fof(f5324,plain,(
  ( ! [X112,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK16(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK17(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK18(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK19(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK20(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK21(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK22(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK23(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK24(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK25(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK26(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),sK15(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5258,f146])).
fof(f5258,plain,(
  ( ! [X112,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X112),X113))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X112),X113) = s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK16(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK17(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK18(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK19(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK20(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK21(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK22(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK23(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK24(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK25(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),'const.list.CONS_2'(s(X112,sK26(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112)),s('type.list.list'(X112),sK15(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X112))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f107])).
fof(f5323,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X108),s('type.num.num',X109))))))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK16(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK17(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK18(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK19(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK20(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK21(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK22(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK23(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK24(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK25(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK26(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),sK15(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5257,f2852])).
fof(f5257,plain,(
  ( ! [X111,X109,X110,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X108),s('type.num.num',X109))))))) | s('type.list.list'(X110),X111) = s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK16(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK17(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK18(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK19(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK20(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK21(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK22(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK23(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK24(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK25(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),'const.list.CONS_2'(s(X110,sK26(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)),s('type.list.list'(X110),sK15(X111,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f148])).
fof(f5322,plain,(
  ( ! [X107,X105,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X106),X107) = s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK16(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK17(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK18(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK19(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK20(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK21(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK22(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK23(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK24(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK25(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK26(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),sK15(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5256,f115])).
fof(f5256,plain,(
  ( ! [X107,X105,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X106),X107) = s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK16(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK17(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK18(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK19(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK20(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK21(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK22(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK23(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK24(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK25(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),'const.list.CONS_2'(s(X106,sK26(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106)),s('type.list.list'(X106),sK15(X107,'const.arithmetic.*_2'(s('type.num.num',X105),s('type.num.num','const.num.|48|_0')),X106))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f112])).
fof(f5321,plain,(
  ( ! [X103,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X103),X104) = s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK16(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK17(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK18(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK19(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK20(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK21(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK22(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK23(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK24(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK25(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK26(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),sK15(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5255,f115])).
fof(f5255,plain,(
  ( ! [X103,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X103),X104) = s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK16(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK17(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK18(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK19(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK20(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK21(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK22(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK23(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK24(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK25(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),'const.list.CONS_2'(s(X103,sK26(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103)),s('type.list.list'(X103),sK15(X104,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X102)),X103))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f111])).
fof(f5320,plain,(
  ( ! [X101,X99,X100,X98] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X98),s('type.num.num',X99))))))) | s('type.list.list'(X100),X101) = s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK16(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK17(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK18(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK19(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK20(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK21(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK22(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK23(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK24(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK25(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK26(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),sK15(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5254,f2852])).
fof(f5254,plain,(
  ( ! [X101,X99,X100,X98] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X98),s('type.num.num',X99))))))) | s('type.list.list'(X100),X101) = s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK16(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK17(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK18(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK19(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK20(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK21(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK22(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK23(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK24(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK25(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),'const.list.CONS_2'(s(X100,sK26(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100)),s('type.list.list'(X100),sK15(X101,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99)))),X100))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f150])).
fof(f5319,plain,(
  ( ! [X97,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X96),X97) = s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK16(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK17(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK18(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK19(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK20(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK21(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK22(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK23(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK24(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK25(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK26(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),sK15(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5253,f115])).
fof(f5253,plain,(
  ( ! [X97,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X96),X97) = s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK16(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK17(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK18(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK19(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK20(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK21(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK22(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK23(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK24(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK25(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),'const.list.CONS_2'(s(X96,sK26(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96)),s('type.list.list'(X96),sK15(X97,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X96))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f347])).
fof(f5318,plain,(
  ( ! [X94,X95,X93] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X94),X95) = s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK16(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK17(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK18(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK19(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK20(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK21(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK22(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK23(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK24(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK25(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK26(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),sK15(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5252,f115])).
fof(f5252,plain,(
  ( ! [X94,X95,X93] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X94),X95) = s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK16(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK17(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK18(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK19(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK20(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK21(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK22(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK23(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK24(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK25(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),'const.list.CONS_2'(s(X94,sK26(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94)),s('type.list.list'(X94),sK15(X95,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))))),X94))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f121])).
fof(f5317,plain,(
  ( ! [X92,X90,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X91),X92) = s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK16(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK17(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK18(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK19(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK20(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK21(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK22(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK23(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK24(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK25(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK26(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),sK15(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5251,f115])).
fof(f5251,plain,(
  ( ! [X92,X90,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X91),X92) = s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK16(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK17(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK18(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK19(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK20(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK21(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK22(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK23(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK24(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK25(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),'const.list.CONS_2'(s(X91,sK26(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91)),s('type.list.list'(X91),sK15(X92,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X90)))))),X91))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f118])).
fof(f5316,plain,(
  ( ! [X88,X87,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK16(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK17(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK18(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK19(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK20(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK21(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK22(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK23(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK24(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK25(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK26(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),sK15(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5315,f2853])).
fof(f5315,plain,(
  ( ! [X88,X87,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK16(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK17(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK18(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK19(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK20(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK21(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK22(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK23(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK24(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK25(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK26(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),sK15(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5250,f146])).
fof(f5250,plain,(
  ( ! [X88,X87,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X88),X89) = s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK16(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK17(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK18(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK19(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK20(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK21(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK22(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK23(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK24(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK25(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,sK26(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88)),s('type.list.list'(X88),sK15(X89,'const.arithmetic.EXP_2'(s('type.num.num',X87),s('type.num.num','const.num.|48|_0')),X88))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f161])).
fof(f5314,plain,(
  ( ! [X85,X83,X86,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X83),s('type.num.num',X84))))))) | s('type.list.list'(X85),X86) = s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK16(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK17(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK18(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK19(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK20(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK21(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK22(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK23(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK24(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK25(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK26(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),sK15(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5249,f2852])).
fof(f5249,plain,(
  ( ! [X85,X83,X86,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X85),X86))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X83),s('type.num.num',X84))))))) | s('type.list.list'(X85),X86) = s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK16(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK17(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK18(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK19(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK20(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK21(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK22(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK23(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK24(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK25(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),'const.list.CONS_2'(s(X85,sK26(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85)),s('type.list.list'(X85),sK15(X86,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X83))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X84)))),X85))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f149])).
fof(f5248,plain,(
  ( ! [X80,X81,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X81),X82))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X80))) | s('type.list.list'(X81),X82) = s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK16(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK17(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK18(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK19(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK20(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK21(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK22(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK23(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK24(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK25(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),'const.list.CONS_2'(s(X81,sK26(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81)),s('type.list.list'(X81),sK15(X82,'const.arithmetic.-_2'(s('type.num.num',X80),s('type.num.num','const.num.|48|_0')),X81))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f116])).
fof(f5313,plain,(
  ( ! [X78,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),X79))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X78),X79) = s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK16(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK17(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK18(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK19(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK20(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK21(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK22(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK23(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK24(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK25(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK26(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),sK15(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5247,f115])).
fof(f5247,plain,(
  ( ! [X78,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X78),X79))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X78),X79) = s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK16(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK17(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK18(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK19(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK20(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK21(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK22(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK23(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK24(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK25(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),'const.list.CONS_2'(s(X78,sK26(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78)),s('type.list.list'(X78),sK15(X79,'const.arithmetic.-_2'(s('type.num.num',X77),s('type.num.num',X77)),X78))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f114])).
fof(f5312,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),X76))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X75),X76) = s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK16(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK17(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK18(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK19(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK20(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK21(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK22(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK23(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK24(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK25(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK26(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),sK15(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5246,f115])).
fof(f5246,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X75),X76))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X75),X76) = s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK16(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK17(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK18(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK19(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK20(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK21(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK22(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK23(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK24(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK25(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),'const.list.CONS_2'(s(X75,sK26(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75)),s('type.list.list'(X75),sK15(X76,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X74)),X75))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f113])).
fof(f5240,plain,(
  ( ! [X61,X59,X62,X60,X58,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X59))) | s('type.list.list'(X62),X63) = s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK16(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK17(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK18(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK19(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK20(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK21(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK22(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK23(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK24(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK25(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),'const.list.CONS_2'(s(X62,sK26(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)),s('type.list.list'(X62),sK15(X63,'const.list.LENGTH_1'(s('type.list.list'(X58),sK31(X59,X60,X61,X58))),X62)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X58),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num',X59)))) )),
  inference(superposition,[],[f131,f141])).
fof(f5239,plain,(
  ( ! [X57,X54,X52,X56,X55,X53] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X54))) | s('type.list.list'(X56),X57) = s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK16(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK17(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK18(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK19(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK20(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK21(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK22(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK23(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK24(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK25(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),'const.list.CONS_2'(s(X56,sK26(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)),s('type.list.list'(X56),sK15(X57,'const.list.LENGTH_1'(s('type.list.list'(X52),sK30(X53,X54,X55,X52))),X56)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X55))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X53)))) )),
  inference(superposition,[],[f131,f140])).
fof(f5301,plain,(
  ( ! [X50,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X51))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X50),X51) = s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK16(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK17(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK18(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK19(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK20(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK21(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK22(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK23(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK24(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK25(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK26(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),sK15(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5238,f115])).
fof(f5238,plain,(
  ( ! [X50,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X51))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X50),X51) = s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK16(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK17(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK18(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK19(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK20(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK21(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK22(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK23(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK24(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK25(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),'const.list.CONS_2'(s(X50,sK26(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50)),s('type.list.list'(X50),sK15(X51,'const.list.LENGTH_1'(s('type.list.list'(X49),'const.list.NIL_0')),X50))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f687])).
fof(f5236,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X44))) | s('type.list.list'(X45),X46) = s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK16(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK17(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK18(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK19(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK20(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK21(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK22(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK23(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK24(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK25(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK26(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45)),s('type.list.list'(X45),sK15(X46,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X44)),X45))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f110])).
fof(f5298,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num',X39))))))) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK16(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK17(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK18(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK19(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK20(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK21(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK22(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK23(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK24(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK25(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK26(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),sK15(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5234,f2852])).
fof(f5234,plain,(
  ( ! [X39,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X41))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num',X39))))))) | s('type.list.list'(X40),X41) = s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK16(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK17(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK18(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK19(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK20(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK21(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK22(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK23(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK24(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK25(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,sK26(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40)),s('type.list.list'(X40),sK15(X41,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2852])).
fof(f5232,plain,(
  ( ! [X30,X33,X31,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X30))))) | s('type.list.list'(X32),X33) = s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK16(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK17(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK18(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK19(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK20(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK21(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK22(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK23(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK24(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK25(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),'const.list.CONS_2'(s(X32,sK26(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32)),s('type.list.list'(X32),sK15(X33,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31)),X32))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f146])).
fof(f5231,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X29))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X27))) | s('type.list.list'(X28),X29) = s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK16(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK17(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK18(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK19(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK20(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK21(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK22(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK23(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK24(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK25(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),'const.list.CONS_2'(s(X28,sK26(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28)),s('type.list.list'(X28),sK15(X29,'const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')),X28))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f115])).
fof(f5297,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X26))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X25),X26) = s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK16(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK17(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK18(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK19(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK20(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK21(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK22(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK23(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK24(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK25(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK26(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),sK15(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5296,f3465])).
fof(f5296,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X26))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X25),X26) = s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK16(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK17(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK18(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK19(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK20(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK21(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK22(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK23(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK24(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK25(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK26(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),sK15(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5230,f146])).
fof(f5230,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X26))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.list.list'(X25),X26) = s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK16(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK17(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK18(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK19(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK20(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK21(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK22(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK23(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK24(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK25(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,sK26(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)),s('type.list.list'(X25),sK15(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2348])).
fof(f5295,plain,(
  ( ! [X24,X23,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))))) | s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK16(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK17(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK18(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK19(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK20(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK21(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK22(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK23(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK24(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK25(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK26(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),sK15(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5229,f2852])).
fof(f5229,plain,(
  ( ! [X24,X23,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))))) | s('type.list.list'(X23),X24) = s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK16(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK17(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK18(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK19(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK20(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK21(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK22(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK23(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK24(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK25(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),'const.list.CONS_2'(s(X23,sK26(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)),s('type.list.list'(X23),sK15(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2978])).
fof(f5294,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X20),X21) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK16(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK17(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK18(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK19(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK20(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK21(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK22(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK23(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK24(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK25(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK26(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),sK15(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5293,f2857])).
fof(f5293,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X20),X21) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK16(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK17(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK18(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK19(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK20(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK21(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK22(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK23(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK24(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK25(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK26(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),sK15(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5228,f146])).
fof(f5228,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.list.list'(X20),X21) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK16(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK17(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK18(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK19(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK20(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK21(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK22(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK23(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK24(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK25(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK26(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)),s('type.list.list'(X20),sK15(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2301])).
fof(f5292,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK16(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK17(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK18(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK19(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK20(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK21(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK22(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK23(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK24(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK25(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK26(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),sK15(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5291,f2856])).
fof(f5291,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK16(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK17(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK18(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK19(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK20(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK21(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK22(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK23(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK24(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK25(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK26(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),sK15(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5227,f146])).
fof(f5227,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X18),X19) = s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK16(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK17(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK18(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK19(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK20(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK21(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK22(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK23(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK24(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK25(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,sK26(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)),s('type.list.list'(X18),sK15(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2154])).
fof(f5290,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK16(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK17(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK18(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK19(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK20(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK21(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK22(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK23(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK24(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK25(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK26(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),sK15(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5289,f2857])).
fof(f5289,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK16(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK17(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK18(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK19(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK20(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK21(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK22(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK23(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK24(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK25(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK26(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),sK15(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5226,f146])).
fof(f5226,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK16(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK17(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK18(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK19(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK20(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK21(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK22(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK23(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK24(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK25(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK26(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)),s('type.list.list'(X16),sK15(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f387])).
fof(f5288,plain,(
  ( ! [X14,X15,X13] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X13))))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK16(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK17(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK18(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK19(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK20(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK21(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK22(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK23(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK24(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK25(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK26(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),sK15(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5225,f2852])).
fof(f5225,plain,(
  ( ! [X14,X15,X13] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))))) | s('type.list.list'(X14),X15) = s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK16(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK17(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK18(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK19(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK20(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK21(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK22(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK23(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK24(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK25(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,sK26(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)),s('type.list.list'(X14),sK15(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2851])).
fof(f5287,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))) | s('type.list.list'(X11),X12) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK16(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK17(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK18(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK19(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK20(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK21(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK22(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK23(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK24(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK25(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK26(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),sK15(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5224,f2852])).
fof(f5224,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))) | s('type.list.list'(X11),X12) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK16(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK17(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK18(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK19(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK20(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK21(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK22(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK23(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK24(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK25(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK26(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)),s('type.list.list'(X11),sK15(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2979])).
fof(f5286,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X8),X9) = s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK16(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK17(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK18(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK19(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK20(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK21(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK22(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK23(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK24(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK25(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK26(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),sK15(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5285,f3513])).
fof(f5285,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X8),X9) = s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK16(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK17(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK18(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK19(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK20(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK21(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK22(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK23(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK24(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK25(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK26(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),sK15(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5223,f146])).
fof(f5223,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.list.list'(X8),X9) = s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK16(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK17(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK18(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK19(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK20(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK21(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK22(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK23(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK24(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK25(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,sK26(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)),s('type.list.list'(X8),sK15(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2349])).
fof(f5284,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK16(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK17(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK18(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK19(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK20(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK21(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK22(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK23(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK24(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK25(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK26(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),sK15(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5283,f2853])).
fof(f5283,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK16(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK17(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK18(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK19(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK20(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK21(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK22(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK23(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK24(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK25(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK26(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),sK15(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5222,f146])).
fof(f5222,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK16(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK17(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK18(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK19(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK20(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK21(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK22(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK23(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK24(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK25(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK26(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)),s('type.list.list'(X6),sK15(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2153])).
fof(f5282,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.list.list'(X4),X5) = s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK16(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK17(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK18(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK19(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK20(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK21(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK22(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK23(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK24(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK25(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK26(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),sK15(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5221,f115])).
fof(f5221,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X4),X5) = s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK16(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK17(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK18(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK19(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK20(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK21(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK22(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK23(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK24(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK25(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),'const.list.CONS_2'(s(X4,sK26(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)),s('type.list.list'(X4),sK15(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2146])).
fof(f5281,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X2),X3) = s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK16(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK17(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK18(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK19(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK20(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK21(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK22(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK23(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK24(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK25(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK26(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),sK15(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5280,f2852])).
fof(f5280,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X2),X3) = s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK16(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK17(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK18(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK19(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK20(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK21(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK22(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK23(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK24(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK25(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK26(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),sK15(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5220,f146])).
fof(f5220,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.list.list'(X2),X3) = s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK16(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK17(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK18(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK19(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK20(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK21(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK22(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK23(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK24(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK25(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK26(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)),s('type.list.list'(X2),sK15(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f2340])).
fof(f5279,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK16(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),sK15(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5278,f2853])).
fof(f5278,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK16(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),sK15(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5219,f146])).
fof(f5219,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK16(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)),s('type.list.list'(X0),sK15(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f108])).
fof(f5216,plain,(
  ( ! [X10,X8,X7,X11,X9] : (s('type.num.num',X8) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X11))) | s('type.list.list'(X7),sK31(X8,X9,X10,X7)) = s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK16(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK17(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK18(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK19(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK20(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK21(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK22(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK23(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK24(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK25(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK26(sK31(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),sK15(sK31(X8,X9,X10,X7),X11,X7)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8)))) )),
  inference(superposition,[],[f131,f141])).
fof(f5215,plain,(
  ( ! [X6,X4,X2,X5,X3] : (s('type.num.num',X4) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X6))) | s('type.list.list'(X2),sK30(X3,X4,X5,X2)) = s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK16(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK17(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK18(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK19(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK20(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK21(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK22(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK23(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK24(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK25(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK26(sK30(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),sK15(sK30(X3,X4,X5,X2),X6,X2)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3)))) )),
  inference(superposition,[],[f131,f140])).
fof(f5214,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK16('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),sK15('const.list.NIL_0',X1,X0))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f687])).
fof(f5277,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.list.list'(X12),X14) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK16('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK17('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK18('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK19('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK20('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK21('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK22('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK23('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK24('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK25('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK26('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),sK15('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X15)))) )),
  inference(forward_demodulation,[],[f5213,f127])).
fof(f5213,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X15))) | s('type.list.list'(X12),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14))) = s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK16('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK17('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK18('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK19('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK20('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK21('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK22('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK23('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK24('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK25('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),'const.list.CONS_2'(s(X12,sK26('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12)),s('type.list.list'(X12),sK15('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f127])).
fof(f5276,plain,(
  ( ! [X11] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),sK15('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X11)))) ) | $spl4),
  inference(forward_demodulation,[],[f5212,f158])).
fof(f5212,plain,(
  ( ! [X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X11))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3))))))))))))))))))))))) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0)),s('type.list.list'(sK0),sK15('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0))))))))))))))))))))))))) ) | $spl4),
  inference(superposition,[],[f131,f158])).
fof(f5211,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X10))) | s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK16('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK17('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK18('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK19('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK20('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK21('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK22('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK23('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK24('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK25('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK26('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),sK15('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7)))) )),
  inference(superposition,[],[f131,f142])).
fof(f5275,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),'const.list.NIL_0') = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK16(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK17(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK18(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK19(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK20(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK21(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK22(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK23(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK24(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK25(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK26(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK15(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X5)))) )),
  inference(forward_demodulation,[],[f5274,f3380])).
fof(f5274,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X5))) | s('type.list.list'(X3),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3)) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK16(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK17(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK18(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK19(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK20(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK21(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK22(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK23(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK24(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK25(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK26(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK15(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5210,f687])).
fof(f5210,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X5))) | s('type.list.list'(X3),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3)) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK16(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK17(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK18(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK19(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK20(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK21(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK22(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK23(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK24(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK25(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK26(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK15(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f3380])).
fof(f5273,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK16(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK15(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X2)))) )),
  inference(forward_demodulation,[],[f5272,f3280])).
fof(f5272,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X2))) | s('type.list.list'(X0),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK16(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK15(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5209,f687])).
fof(f5209,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X2))) | s('type.list.list'(X0),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK16(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK15(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))))))))))))))))))))))) )),
  inference(superposition,[],[f131,f3280])).
fof(f5074,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X13))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X13)))))) )),
  inference(equality_resolution,[],[f132])).
fof(f5068,plain,(
  ( ! [X39,X37,X35,X33,X47,X45,X43,X41,X31,X38,X36,X34,X32,X46,X44,X42,X40] : (s('type.num.num',X32) != s('type.num.num',X35) | s('type.list.list'(X31),X36) != s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X37),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X38),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X39),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X40),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X41),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X42),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X43),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X44),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X45),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X46),s('type.list.list'(X31),'const.list.CONS_2'(s(X31,X47),s('type.list.list'(X31),sK31(X32,X33,X34,X31)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X36))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X35))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X34))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X32)))) )),
  inference(superposition,[],[f132,f141])).
fof(f5067,plain,(
  ( ! [X30,X28,X26,X24,X14,X23,X21,X19,X17,X29,X27,X25,X15,X22,X20,X18,X16] : (s('type.num.num',X16) != s('type.num.num',X18) | s('type.list.list'(X14),X19) != s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X20),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X21),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X22),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X23),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X24),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X25),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X26),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X27),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X28),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X29),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X30),s('type.list.list'(X14),sK30(X15,X16,X17,X14)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X19))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X18))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X15)))) )),
  inference(superposition,[],[f132,f140])).
fof(f5063,plain,(
  ( ! [X30,X39,X37,X35,X33,X45,X43,X41,X31,X38,X36,X34,X32,X46,X44,X42,X40] : (s('type.num.num',X34) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X33))) | s('type.list.list'(X30),X35) != s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X36),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X37),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X38),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X39),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X40),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X41),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X42),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X43),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X44),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X45),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,X46),s('type.list.list'(X30),'const.list.APPEND_2'(s('type.list.list'(X30),sK30(X31,X32,X33,X30)),s('type.list.list'(X30),sK31(X31,X32,X33,X30)))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X35))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X34))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X32),s('type.num.num',X31)))) )),
  inference(superposition,[],[f132,f142])).
fof(f5174,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X2)))) )),
  inference(forward_demodulation,[],[f5173,f3280])).
fof(f5173,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X2)))) )),
  inference(forward_demodulation,[],[f5061,f687])).
fof(f5061,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f132,f3280])).
fof(f5160,plain,(
  ( ! [X499,X505,X492,X494,X500,X502,X496,X498,X504,X493,X495,X501,X503,X497] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X492),X494))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X492),X493))) | s('type.list.list'(X492),X494) != s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X495),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X496),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X497),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X498),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X499),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X500),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X501),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X502),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X503),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X504),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X505),s('type.list.list'(X492),X493)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5159,f110])).
fof(f5159,plain,(
  ( ! [X499,X505,X492,X494,X500,X502,X496,X498,X504,X493,X495,X501,X503,X497] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X492),X494))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X492),X493))) | s('type.list.list'(X492),X494) != s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X495),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X496),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X497),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X498),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X499),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X500),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X501),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X502),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X503),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X504),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X505),s('type.list.list'(X492),X493)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5158,f347])).
fof(f5158,plain,(
  ( ! [X499,X505,X492,X494,X500,X502,X496,X498,X504,X493,X495,X501,X503,X497] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X492),X494))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X492),X493))) | s('type.list.list'(X492),X494) != s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X495),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X496),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X497),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X498),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X499),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X500),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X501),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X502),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X503),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X504),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X505),s('type.list.list'(X492),X493)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5049,f146])).
fof(f5049,plain,(
  ( ! [X499,X505,X492,X494,X500,X502,X496,X498,X504,X493,X495,X501,X503,X497] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X492),X493))) | s('type.list.list'(X492),X494) != s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X495),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X496),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X497),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X498),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X499),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X500),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X501),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X502),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X503),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X504),s('type.list.list'(X492),'const.list.CONS_2'(s(X492,X505),s('type.list.list'(X492),X493))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X492),X494))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f132,f347])).
fof(f5036,plain,(
  ( ! [X313,X315,X300,X302,X298,X308,X310,X304,X306,X312,X314,X301,X303,X299,X309,X311,X305,X307] : (s('type.num.num',X299) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X302),X303))) | s('type.list.list'(X302),X304) != s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X305),s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X306),s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X307),s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X308),s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X309),s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X310),s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X311),s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X312),s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X313),s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X314),s('type.list.list'(X302),'const.list.CONS_2'(s(X302,X315),s('type.list.list'(X302),X303))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X302),X304))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X298),sK31(X299,X300,X301,X298)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X298),X301))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X300),s('type.num.num',X299)))) )),
  inference(superposition,[],[f132,f141])).
fof(f5035,plain,(
  ( ! [X280,X282,X292,X288,X290,X294,X296,X285,X287,X281,X293,X295,X289,X291,X283,X297,X284,X286] : (s('type.num.num',X282) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X284),X285))) | s('type.list.list'(X284),X286) != s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X287),s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X288),s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X289),s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X290),s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X291),s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X292),s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X293),s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X294),s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X295),s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X296),s('type.list.list'(X284),'const.list.CONS_2'(s(X284,X297),s('type.list.list'(X284),X285))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X284),X286))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X280),sK30(X281,X282,X283,X280)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X280),X283))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X282),s('type.num.num',X281)))) )),
  inference(superposition,[],[f132,f140])).
fof(f5028,plain,(
  ( ! [X177,X189,X187,X185,X175,X182,X180,X178,X176,X188,X186,X184,X174,X183,X181,X179] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X176),X177))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X175),s('type.num.num',X174))) | s('type.list.list'(X176),X178) != s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X179),s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X180),s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X181),s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X182),s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X183),s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X184),s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X185),s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X186),s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X187),s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X188),s('type.list.list'(X176),'const.list.CONS_2'(s(X176,X189),s('type.list.list'(X176),X177))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X176),X178))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X174),s('type.num.num',X175)))))) )),
  inference(superposition,[],[f132,f146])).
fof(f5130,plain,(
  ( ! [X146,X158,X156,X154,X152,X151,X149,X147,X145,X157,X155,X153,X150,X148] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),X147))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),X146))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X145),X147) != s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X148),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X149),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X150),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X151),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X152),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X153),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X154),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X155),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X156),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X157),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X158),s('type.list.list'(X145),X146)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5129,f2852])).
fof(f5129,plain,(
  ( ! [X146,X158,X156,X154,X152,X151,X149,X147,X145,X157,X155,X153,X150,X148] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),X147))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),X146))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X145),X147) != s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X148),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X149),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X150),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X151),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X152),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X153),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X154),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X155),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X156),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X157),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X158),s('type.list.list'(X145),X146)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5026,f146])).
fof(f5026,plain,(
  ( ! [X146,X158,X156,X154,X152,X151,X149,X147,X145,X157,X155,X153,X150,X148] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),X146))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X145),X147) != s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X148),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X149),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X150),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X151),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X152),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X153),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X154),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X155),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X156),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X157),s('type.list.list'(X145),'const.list.CONS_2'(s(X145,X158),s('type.list.list'(X145),X146))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X145),X147))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(superposition,[],[f132,f2348])).
fof(f5124,plain,(
  ( ! [X103,X111,X109,X107,X105,X114,X112,X102,X110,X108,X106,X104,X115,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X104))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))) | s('type.list.list'(X102),X104) != s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X105),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X106),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X107),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X108),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X109),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X110),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X111),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X112),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X113),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X114),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X115),s('type.list.list'(X102),X103)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5123,f2852])).
fof(f5123,plain,(
  ( ! [X103,X111,X109,X107,X105,X114,X112,X102,X110,X108,X106,X104,X115,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X104))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))) | s('type.list.list'(X102),X104) != s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X105),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X106),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X107),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X108),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X109),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X110),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X111),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X112),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X113),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X114),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X115),s('type.list.list'(X102),X103)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5023,f146])).
fof(f5023,plain,(
  ( ! [X103,X111,X109,X107,X105,X114,X112,X102,X110,X108,X106,X104,X115,X113] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X103))) | s('type.list.list'(X102),X104) != s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X105),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X106),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X107),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X108),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X109),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X110),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X111),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X112),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X113),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X114),s('type.list.list'(X102),'const.list.CONS_2'(s(X102,X115),s('type.list.list'(X102),X103))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X102),X104))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f132,f2154])).
fof(f5122,plain,(
  ( ! [X94,X92,X90,X88,X101,X99,X97,X95,X93,X91,X89,X100,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X90))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X88),X90) != s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X91),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X92),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X93),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X94),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X95),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X96),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X97),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X98),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X99),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X100),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X101),s('type.list.list'(X88),X89)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5121,f2852])).
fof(f5121,plain,(
  ( ! [X94,X92,X90,X88,X101,X99,X97,X95,X93,X91,X89,X100,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X90))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X88),X90) != s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X91),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X92),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X93),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X94),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X95),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X96),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X97),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X98),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X99),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X100),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X101),s('type.list.list'(X88),X89)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5022,f146])).
fof(f5022,plain,(
  ( ! [X94,X92,X90,X88,X101,X99,X97,X95,X93,X91,X89,X100,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X88),X90) != s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X91),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X92),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X93),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X94),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X95),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X96),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X97),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X98),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X99),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X100),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X101),s('type.list.list'(X88),X89))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X90))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f132,f387])).
fof(f5118,plain,(
  ( ! [X57,X47,X45,X54,X52,X50,X48,X56,X46,X44,X55,X53,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X46))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X44),X46) != s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X47),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X48),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X49),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X50),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X51),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X52),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X53),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X54),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X55),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X56),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X57),s('type.list.list'(X44),X45)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5117,f2852])).
fof(f5117,plain,(
  ( ! [X57,X47,X45,X54,X52,X50,X48,X56,X46,X44,X55,X53,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X46))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X44),X46) != s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X47),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X48),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X49),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X50),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X51),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X52),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X53),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X54),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X55),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X56),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X57),s('type.list.list'(X44),X45)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5019,f146])).
fof(f5019,plain,(
  ( ! [X57,X47,X45,X54,X52,X50,X48,X56,X46,X44,X55,X53,X51,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.list.list'(X44),X46) != s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X47),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X48),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X49),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X50),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X51),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X52),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X53),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X54),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X55),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X56),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X57),s('type.list.list'(X44),X45))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X46))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(superposition,[],[f132,f2349])).
fof(f5113,plain,(
  ( ! [X26,X24,X14,X23,X21,X19,X17,X27,X25,X15,X22,X20,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X14),X16) != s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X18),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X19),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X20),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X21),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X22),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X23),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X24),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X25),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X26),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X27),s('type.list.list'(X14),X15)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5112,f3237])).
fof(f5112,plain,(
  ( ! [X26,X24,X14,X23,X21,X19,X17,X27,X25,X15,X22,X20,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X14),X16) != s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X18),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X19),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X20),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X21),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X22),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X23),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X24),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X25),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X26),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X27),s('type.list.list'(X14),X15)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5111,f2852])).
fof(f5111,plain,(
  ( ! [X26,X24,X14,X23,X21,X19,X17,X27,X25,X15,X22,X20,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X14),X16) != s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X18),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X19),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X20),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X21),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X22),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X23),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X24),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X25),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X26),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X27),s('type.list.list'(X14),X15)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5017,f146])).
fof(f5017,plain,(
  ( ! [X26,X24,X14,X23,X21,X19,X17,X27,X25,X15,X22,X20,X18,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.list.list'(X14),X16) != s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X17),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X18),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X19),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X20),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X21),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X22),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X23),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X24),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X25),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X26),s('type.list.list'(X14),'const.list.CONS_2'(s(X14,X27),s('type.list.list'(X14),X15))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f132,f2340])).
fof(f5110,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),X1)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5109,f2852])).
fof(f5109,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),X1)))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5016,f146])).
fof(f5016,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),X1))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f132,f108])).
fof(f5104,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X11,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5103,f115])).
fof(f5103,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X11,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5004,f127])).
fof(f5004,plain,(
  ( ! [X6,X4,X2,X0,X12,X10,X8,X7,X5,X3,X1,X11,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.NIL_0')))))))))))))))))))))))))))) )),
  inference(unit_resulting_resolution,[],[f687,f127,f132])).
fof(f5076,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X1,X13,X11,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X4),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X5),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X7),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X8),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X10),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X12),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X13),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X14),s('type.list.list'(X1),X2)))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5075,f127])).
fof(f5075,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X1,X13,X11,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X4),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X5),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X7),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X8),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X10),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X12),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X13),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X14),s('type.list.list'(X1),X2)))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f5015,f127])).
fof(f5015,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X13,X11,X9] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X4),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X5),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X7),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X8),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X9),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X10),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X11),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X12),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X13),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X14),s('type.list.list'(X1),X2)))))))))))))))))))))))))))) )),
  inference(unit_resulting_resolution,[],[f127,f127,f132])).
fof(f4478,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f143])).
fof(f4477,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),X4) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK31(X1,X2,X3,X0)))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK30(X1,X2,X3,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f143,f142])).
fof(f4474,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X17),s('type.list.list'(X12),X15))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK30(X13,X14,X15,X12)),s('type.list.list'(X12),sK31(X13,X14,X15,X12)))))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f143,f142])).
fof(f4469,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X15),s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK30(X13,X14,X15,X12)),s('type.list.list'(X12),sK31(X13,X14,X15,X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f143,f142])).
fof(f4464,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X15) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X16),s('type.list.list'(X12),X17))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK30(X13,X14,X15,X12)),s('type.list.list'(X12),sK31(X13,X14,X15,X12)))))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f143,f142])).
fof(f4749,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f4748,f110])).
fof(f4748,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f4362,f127])).
fof(f4362,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))))) )),
  inference(unit_resulting_resolution,[],[f687,f687,f127,f143])).
fof(f4726,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f4725,f115])).
fof(f4725,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f4724,f127])).
fof(f4724,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f4371,f127])).
fof(f4371,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))))) )),
  inference(unit_resulting_resolution,[],[f127,f687,f127,f143])).
fof(f4506,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f4505,f110])).
fof(f4505,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f4504,f127])).
fof(f4504,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))))))) )),
  inference(forward_demodulation,[],[f4452,f127])).
fof(f4452,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))))) )),
  inference(unit_resulting_resolution,[],[f687,f127,f127,f143])).
fof(f4481,plain,(
  ( ! [X2,X0,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f4480,f127])).
fof(f4480,plain,(
  ( ! [X4,X2,X0,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f4479,f127])).
fof(f4479,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) )),
  inference(forward_demodulation,[],[f4461,f127])).
fof(f4461,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))))) )),
  inference(unit_resulting_resolution,[],[f127,f127,f127,f143])).
fof(f4260,plain,(
  ( ! [X59,X57,X47,X54,X52,X50,X48,X60,X58,X56,X55,X53,X51,X49] : (s('type.num.num',sK1) != s('type.num.num',X47) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X50),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X51),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X52),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X53),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X54),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X55),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X56),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X57),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X58),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X59),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X60),s('type.list.list'(sK0),sK31(X47,X48,X49,sK0)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X48),s('type.num.num',X47)))) ) | $spl2),
  inference(superposition,[],[f156,f141])).
fof(f4259,plain,(
  ( ! [X39,X37,X35,X33,X45,X43,X41,X38,X36,X34,X46,X44,X42,X40] : (s('type.num.num',sK1) != s('type.num.num',X34) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),sK30(X33,X34,X35,sK0)))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',X33)))) ) | $spl2),
  inference(superposition,[],[f156,f140])).
fof(f4254,plain,(
  ( ! [X39,X37,X35,X47,X45,X43,X41,X48,X38,X36,X46,X44,X42,X40] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X37))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK30(X35,X36,X37,sK0)),s('type.list.list'(sK0),sK31(X35,X36,X37,sK0)))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X36),s('type.num.num',X35)))) ) | $spl2),
  inference(superposition,[],[f156,f142])).
fof(f4101,plain,(
  ( ! [X47,X48,X46,X49] : (s(bool,X47) = s(bool,sK27('const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X47)),X48,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,'T_0')))) | s(bool,X47) = s(bool,happ(s(fun('type.num.num',bool),X49),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X49,'type.num.num'))) ) | $spl6),
  inference(forward_demodulation,[],[f4018,f127])).
fof(f4018,plain,(
  ( ! [X47,X48,X46,X49] : (~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,'T_0')))) | s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X47))) = s(bool,sK27('const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X47)),X48,bool)) | s(bool,X47) = s(bool,happ(s(fun('type.num.num',bool),X49),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X49,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f134,f1093])).
fof(f4100,plain,(
  ( ! [X45,X43,X44,X42] : (s(bool,X42) != s(bool,X44) | ~p(s(bool,happ(s(fun(bool,bool),X43),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X43),s(bool,X44)))) | s(bool,X42) = s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X45,'type.num.num'))) ) | $spl6),
  inference(forward_demodulation,[],[f4017,f127])).
fof(f4017,plain,(
  ( ! [X45,X43,X41,X44,X42] : (~p(s(bool,happ(s(fun(bool,bool),X43),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X43),s(bool,X44)))) | s(bool,X44) != s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X41),s(bool,X42))) | s(bool,X42) = s(bool,happ(s(fun('type.num.num',bool),X45),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X45,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f133,f1093])).
fof(f4097,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK29('const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X10)),X12,X11))))) | ~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13)))) | s(bool,X10) = s(bool,happ(s(fun('type.num.num',bool),X14),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X14,'type.num.num'))) ) | $spl6),
  inference(subsumption_resolution,[],[f4010,f106])).
fof(f4010,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK29('const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X10)),X12,X11))))) | ~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13)))) | s(bool,X10) = s(bool,happ(s(fun('type.num.num',bool),X14),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X14,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f138,f1093])).
fof(f4096,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK28('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X4)),X6,X5))))) | ~p(s(bool,happ(s(fun(X5,bool),X6),s(X5,X7)))) | s(bool,X4) = s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X8,'type.num.num'))) ) | $spl6),
  inference(subsumption_resolution,[],[f4009,f106])).
fof(f4009,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK28('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X4)),X6,X5))))) | ~p(s(bool,happ(s(fun(X5,bool),X6),s(X5,X7)))) | s(bool,X4) = s(bool,happ(s(fun('type.num.num',bool),X8),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X8,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f136,f1093])).
fof(f3984,plain,(
  ( ! [X146,X144,X147,X145,X148] : (s(X146,f(s(bool,happ(s(fun('type.num.num',bool),X147),s('type.num.num',sK1))))) != s(X146,g(s(bool,happ(s(fun('type.num.num',bool),X147),s('type.num.num',sK1))))) | s(fun(bool,X146),X144) = s(fun(bool,X146),X145) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X148),s(bool,sK32(X144,X145,X146,bool)))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X147,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f153,f1093])).
fof(f3981,plain,(
  ( ! [X134,X132,X135,X133,X131] : (s(bool,f(s(X131,sK32(X132,X133,bool,X131)))) != s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num',sK1))) | s(fun(X131,bool),X132) = s(fun(X131,bool),X133) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X135),s(bool,g(s(X131,sK32(X132,X133,bool,X131)))))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X134,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f153,f1093])).
fof(f3946,plain,(
  ( ! [X74,X72,X71,X73] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,X72))) | s(bool,happ(s(fun('type.num.num',bool),X74),s('type.num.num',sK1))) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X71),s(bool,X72))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X74,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1093,f127])).
fof(f3916,plain,(
  ( ! [X30,X28,X31,X29] : (s(bool,X28) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29))) | s(bool,X29) = s(bool,happ(s(fun('type.num.num',bool),X30),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X30,'type.num.num')) | s(bool,X28) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) ) | $spl6),
  inference(superposition,[],[f1093,f225])).
fof(f3903,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f1093,f124])).
fof(f3892,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1093,f127])).
fof(f3833,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK15(X7,X5,X6))))) )),
  inference(superposition,[],[f130,f146])).
fof(f3832,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK15(X4,'const.num.|48|_0',X3))))) )),
  inference(superposition,[],[f130,f115])).
fof(f3831,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK15(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1))))) )),
  inference(superposition,[],[f130,f2852])).
fof(f3875,plain,(
  ( ! [X123,X121,X122,X120] : (s('type.num.num',X121) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),sK15(X123,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num',X121)),X122)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X121)))) )),
  inference(forward_demodulation,[],[f3830,f127])).
fof(f3830,plain,(
  ( ! [X123,X121,X122,X120] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),X123))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X121))) | s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num',X121))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X122),sK15(X123,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X120),s('type.num.num',X121)),X122))))) )),
  inference(superposition,[],[f130,f127])).
fof(f3873,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X113))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK15(X115,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113)))),X114)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X113)))))))) )),
  inference(forward_demodulation,[],[f3828,f119])).
fof(f3828,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X113))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK15(X115,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113)))),X114))))) )),
  inference(superposition,[],[f130,f119])).
fof(f3872,plain,(
  ( ! [X111,X112] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK15(X112,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X111)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f3827,f431])).
fof(f3827,plain,(
  ( ! [X111,X112] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK15(X112,'const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X111))))) )),
  inference(superposition,[],[f130,f431])).
fof(f3871,plain,(
  ( ! [X109,X110,X108] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X108))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),sK15(X110,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108)))),X109)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),X110))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X108)))))))) )),
  inference(forward_demodulation,[],[f3826,f120])).
fof(f3826,plain,(
  ( ! [X109,X110,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),X110))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X108))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X109),sK15(X110,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X108)))),X109))))) )),
  inference(superposition,[],[f130,f120])).
fof(f3870,plain,(
  ( ! [X107,X105,X106] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK15(X107,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105)))),X106)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105)))))) )),
  inference(forward_demodulation,[],[f3825,f117])).
fof(f3825,plain,(
  ( ! [X107,X105,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),X107))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X105))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X106),sK15(X107,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X105)))),X106))))) )),
  inference(superposition,[],[f130,f117])).
fof(f3869,plain,(
  ( ! [X103,X102,X104] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X102))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK15(X104,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102)))),X103)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X102)))))))) )),
  inference(forward_demodulation,[],[f3824,f122])).
fof(f3824,plain,(
  ( ! [X103,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X102))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK15(X104,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102)))),X103))))) )),
  inference(superposition,[],[f130,f122])).
fof(f3868,plain,(
  ( ! [X101,X100] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK15(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f3823,f107])).
fof(f3823,plain,(
  ( ! [X101,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),X101))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X100),sK15(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100))))) )),
  inference(superposition,[],[f130,f107])).
fof(f3867,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num',X97))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK15(X99,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X96))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))),X98)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num',X97)))))))) )),
  inference(forward_demodulation,[],[f3822,f148])).
fof(f3822,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X96),s('type.num.num',X97))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X96))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK15(X99,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X96))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97)))),X98))))) )),
  inference(superposition,[],[f130,f148])).
fof(f3866,plain,(
  ( ! [X94,X95,X93] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK15(X95,'const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num','const.num.|48|_0')),X94)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3821,f112])).
fof(f3821,plain,(
  ( ! [X94,X95,X93] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK15(X95,'const.arithmetic.*_2'(s('type.num.num',X93),s('type.num.num','const.num.|48|_0')),X94))))) )),
  inference(superposition,[],[f130,f112])).
fof(f3865,plain,(
  ( ! [X92,X90,X91] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),sK15(X92,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X90)),X91)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3820,f111])).
fof(f3820,plain,(
  ( ! [X92,X90,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),X92))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X90))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X91),sK15(X92,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X90)),X91))))) )),
  inference(superposition,[],[f130,f111])).
fof(f3864,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X86),s('type.num.num',X87))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK15(X89,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X87)))),X88)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X86),s('type.num.num',X87)))))))) )),
  inference(forward_demodulation,[],[f3819,f150])).
fof(f3819,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X86),s('type.num.num',X87))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X87))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),sK15(X89,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X87)))),X88))))) )),
  inference(superposition,[],[f130,f150])).
fof(f3863,plain,(
  ( ! [X85,X84] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK15(X85,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X84)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3818,f347])).
fof(f3818,plain,(
  ( ! [X85,X84] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),X85))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X84),sK15(X85,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X84))))) )),
  inference(superposition,[],[f130,f347])).
fof(f3862,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK15(X83,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81)))))),X82)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f3861,f121])).
fof(f3861,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK15(X83,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81)))))),X82))))) )),
  inference(forward_demodulation,[],[f3817,f115])).
fof(f3817,plain,(
  ( ! [X83,X81,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),X83))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X82),sK15(X83,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X81)))))),X82))))) )),
  inference(superposition,[],[f130,f121])).
fof(f3860,plain,(
  ( ! [X80,X78,X79] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK15(X80,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78)))))),X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f3859,f118])).
fof(f3859,plain,(
  ( ! [X80,X78,X79] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK15(X80,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78)))))),X79))))) )),
  inference(forward_demodulation,[],[f3816,f115])).
fof(f3816,plain,(
  ( ! [X80,X78,X79] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK15(X80,'const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78)))))),X79))))) )),
  inference(superposition,[],[f130,f118])).
fof(f3858,plain,(
  ( ! [X76,X77,X75] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),sK15(X77,'const.arithmetic.EXP_2'(s('type.num.num',X75),s('type.num.num','const.num.|48|_0')),X76)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f3815,f161])).
fof(f3815,plain,(
  ( ! [X76,X77,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),X77))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X75),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X76),sK15(X77,'const.arithmetic.EXP_2'(s('type.num.num',X75),s('type.num.num','const.num.|48|_0')),X76))))) )),
  inference(superposition,[],[f130,f161])).
fof(f3857,plain,(
  ( ! [X74,X72,X71,X73] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num',X72))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),sK15(X74,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),X73)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),X74))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num',X72)))))))) )),
  inference(forward_demodulation,[],[f3814,f149])).
fof(f3814,plain,(
  ( ! [X74,X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),X74))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X71),s('type.num.num',X72))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X73),sK15(X74,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72)))),X73))))) )),
  inference(superposition,[],[f130,f149])).
fof(f3856,plain,(
  ( ! [X70,X68,X69] : (s('type.num.num',X68) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK15(X70,'const.arithmetic.-_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X69)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X68)))) )),
  inference(forward_demodulation,[],[f3813,f116])).
fof(f3813,plain,(
  ( ! [X70,X68,X69] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X68))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK15(X70,'const.arithmetic.-_2'(s('type.num.num',X68),s('type.num.num','const.num.|48|_0')),X69))))) )),
  inference(superposition,[],[f130,f116])).
fof(f3855,plain,(
  ( ! [X66,X67,X65] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),sK15(X67,'const.arithmetic.-_2'(s('type.num.num',X65),s('type.num.num',X65)),X66)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),X67))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3812,f114])).
fof(f3812,plain,(
  ( ! [X66,X67,X65] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),X67))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X65),s('type.num.num',X65))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X66),sK15(X67,'const.arithmetic.-_2'(s('type.num.num',X65),s('type.num.num',X65)),X66))))) )),
  inference(superposition,[],[f130,f114])).
fof(f3854,plain,(
  ( ! [X64,X62,X63] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK15(X64,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X62)),X63)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3811,f113])).
fof(f3811,plain,(
  ( ! [X64,X62,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),X64))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X62))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X63),sK15(X64,'const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X62)),X63))))) )),
  inference(superposition,[],[f130,f113])).
fof(f3810,plain,(
  ( ! [X61,X59,X57,X60,X58,X56] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X57))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK31(X57,X58,X59,X56)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK15(X61,'const.list.LENGTH_1'(s('type.list.list'(X56),sK31(X57,X58,X59,X56))),X60)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X59))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num',X57)))) )),
  inference(superposition,[],[f130,f141])).
fof(f3809,plain,(
  ( ! [X54,X52,X50,X55,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),X55))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X52))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),sK30(X51,X52,X53,X50)))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X54),sK15(X55,'const.list.LENGTH_1'(s('type.list.list'(X50),sK30(X51,X52,X53,X50))),X54)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X50),X53))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X52),s('type.num.num',X51)))) )),
  inference(superposition,[],[f130,f140])).
fof(f3853,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK15(X49,'const.list.LENGTH_1'(s('type.list.list'(X47),'const.list.NIL_0')),X48)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3808,f687])).
fof(f3808,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK15(X49,'const.list.LENGTH_1'(s('type.list.list'(X47),'const.list.NIL_0')),X48))))) )),
  inference(superposition,[],[f130,f687])).
fof(f3852,plain,(
  ( ! [X45,X46] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK15(X46,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X45)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1)))) ) | $spl6),
  inference(forward_demodulation,[],[f3807,f160])).
fof(f3807,plain,(
  ( ! [X45,X46] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK15(X46,'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X45))))) ) | $spl6),
  inference(superposition,[],[f130,f160])).
fof(f3851,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK15(X44,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X43)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42)))))))) )),
  inference(forward_demodulation,[],[f3806,f2852])).
fof(f3806,plain,(
  ( ! [X43,X41,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num',X42))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK15(X44,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42)))),X43))))) )),
  inference(superposition,[],[f130,f2852])).
fof(f3804,plain,(
  ( ! [X35,X33,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',X33))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X34))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK15(X36,'const.arithmetic.+_2'(s('type.num.num',X33),s('type.num.num',X34)),X35))))) )),
  inference(superposition,[],[f130,f146])).
fof(f3850,plain,(
  ( ! [X30,X31,X32] : (s('type.num.num',X30) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK15(X32,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.num.|48|_0')),X31)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X30)))) )),
  inference(forward_demodulation,[],[f3803,f115])).
fof(f3803,plain,(
  ( ! [X30,X31,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),X32))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X30))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X31),sK15(X32,'const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num','const.num.|48|_0')),X31))))) )),
  inference(superposition,[],[f130,f115])).
fof(f3849,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num',X27) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),sK15(X29,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)),X28)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X29))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X27)))) )),
  inference(forward_demodulation,[],[f3802,f110])).
fof(f3802,plain,(
  ( ! [X28,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),X29))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X27))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X28),sK15(X29,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)),X28))))) )),
  inference(superposition,[],[f130,f110])).
fof(f3848,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),sK15(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X26))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f3801,f2348])).
fof(f3801,plain,(
  ( ! [X26,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X26))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),sK15(X26,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X25))))) )),
  inference(superposition,[],[f130,f2348])).
fof(f3847,plain,(
  ( ! [X24,X23,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK15(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22)))))))) )),
  inference(forward_demodulation,[],[f3800,f2978])).
fof(f3800,plain,(
  ( ! [X24,X23,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X23),sK15(X24,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X22)))))),X23))))) )),
  inference(superposition,[],[f130,f2978])).
fof(f3846,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK15(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f3799,f2301])).
fof(f3799,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK15(X21,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X20))))) )),
  inference(superposition,[],[f130,f2301])).
fof(f3845,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK15(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f3798,f2154])).
fof(f3798,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK15(X19,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X18))))) )),
  inference(superposition,[],[f130,f2154])).
fof(f3844,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK15(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f3797,f387])).
fof(f3797,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK15(X17,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X16))))) )),
  inference(superposition,[],[f130,f387])).
fof(f3843,plain,(
  ( ! [X14,X15,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),sK15(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))) )),
  inference(forward_demodulation,[],[f3796,f2851])).
fof(f3796,plain,(
  ( ! [X14,X15,X13] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X14),sK15(X15,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X13)))),X14))))) )),
  inference(superposition,[],[f130,f2851])).
fof(f3842,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK15(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10)))))))) )),
  inference(forward_demodulation,[],[f3795,f2979])).
fof(f3795,plain,(
  ( ! [X12,X10,X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK15(X12,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10)))))),X11))))) )),
  inference(superposition,[],[f130,f2979])).
fof(f3841,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK15(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f3794,f2349])).
fof(f3794,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK15(X9,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X8))))) )),
  inference(superposition,[],[f130,f2349])).
fof(f3840,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK15(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f3793,f2153])).
fof(f3793,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK15(X7,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X6))))) )),
  inference(superposition,[],[f130,f2153])).
fof(f3839,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK15(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3792,f2146])).
fof(f3792,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK15(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X4))))) )),
  inference(superposition,[],[f130,f2146])).
fof(f3838,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK15(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f3791,f2340])).
fof(f3791,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK15(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X2))))) )),
  inference(superposition,[],[f130,f2340])).
fof(f3837,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f3790,f108])).
fof(f3790,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0))))) )),
  inference(superposition,[],[f130,f108])).
fof(f3789,plain,(
  ( ! [X12,X10,X8,X11,X9] : (s('type.num.num',X9) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),sK15(sK31(X9,X10,X11,X8),X12,X8)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f130,f141])).
fof(f3788,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.num.num',X5) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK15(sK30(X4,X5,X6,X3),X7,X3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4)))) )),
  inference(superposition,[],[f130,f140])).
fof(f3787,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK15('const.list.NIL_0',X2,X1))))) )),
  inference(superposition,[],[f130,f687])).
fof(f3786,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK15('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X12),X13),s('type.list.list'(X12),X14)),X15,X12))))) )),
  inference(superposition,[],[f130,f127])).
fof(f3785,plain,(
  ( ! [X11] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X11,sK0))))) ) | $spl4),
  inference(superposition,[],[f130,f158])).
fof(f3784,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK15('const.list.APPEND_2'(s('type.list.list'(X6),sK30(X7,X8,X9,X6)),s('type.list.list'(X6),sK31(X7,X8,X9,X6))),X10,X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7)))) )),
  inference(superposition,[],[f130,f142])).
fof(f3836,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK15(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))) )),
  inference(forward_demodulation,[],[f3783,f687])).
fof(f3783,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK15(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))) )),
  inference(superposition,[],[f130,f3380])).
fof(f3835,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))) )),
  inference(forward_demodulation,[],[f3782,f687])).
fof(f3782,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))) )),
  inference(superposition,[],[f130,f3280])).
fof(f3779,plain,(
  ( ! [X2] : (s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),sK27('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X2,'type.list.list'(sK0))) | ~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X2),s('type.list.list'(sK0),sK2))))) ) | $spl4),
  inference(forward_demodulation,[],[f3770,f158])).
fof(f3770,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun('type.list.list'(sK0),bool),X2),s('type.list.list'(sK0),sK2)))) | s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3))))))))))))))))))))))) = s('type.list.list'(sK0),sK27('const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),X2,'type.list.list'(sK0)))) ) | $spl4),
  inference(superposition,[],[f134,f158])).
fof(f3766,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK30('const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)),'const.num.|48|_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),sK0)) | $spl4),
  inference(superposition,[],[f3280,f158])).
fof(f3765,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3)))))))))))))))))))))),sK0)) | $spl4),
  inference(superposition,[],[f3380,f158])).
fof(f3764,plain,(
  ( ! [X70,X71] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X70)))))),X71,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70))))))))) )),
  inference(forward_demodulation,[],[f3750,f2979])).
fof(f3750,plain,(
  ( ! [X70,X71] : (~p(s(bool,happ(s(fun('type.num.num',bool),X71),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X70)))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X70))))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X70)))))),X71,'type.num.num'))) )),
  inference(superposition,[],[f134,f2979])).
fof(f3762,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X16)))))))))) )),
  inference(forward_demodulation,[],[f3715,f2852])).
fof(f3715,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X16))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16)))))))) )),
  inference(superposition,[],[f2852,f2979])).
fof(f3761,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))),s('type.num.num',X15))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X14))))),s('type.num.num',X15)))))) )),
  inference(forward_demodulation,[],[f3714,f2852])).
fof(f3714,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X14))))),s('type.num.num',X15))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f2852,f2979])).
fof(f3760,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12)))))))))) )),
  inference(forward_demodulation,[],[f3713,f150])).
fof(f3713,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12)))))))) )),
  inference(superposition,[],[f150,f2979])).
fof(f3759,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))))),s('type.num.num',X11)))))) )),
  inference(forward_demodulation,[],[f3712,f150])).
fof(f3712,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) )),
  inference(superposition,[],[f150,f2979])).
fof(f3758,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8)))))))))) )),
  inference(forward_demodulation,[],[f3711,f149])).
fof(f3711,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))))) )),
  inference(superposition,[],[f149,f2979])).
fof(f3757,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))))),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f3710,f149])).
fof(f3710,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))))),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f149,f2979])).
fof(f3756,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4)))))))))) )),
  inference(forward_demodulation,[],[f3709,f148])).
fof(f3709,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))) )),
  inference(superposition,[],[f148,f2979])).
fof(f3755,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))))),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f3708,f148])).
fof(f3708,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f148,f2979])).
fof(f3754,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f3707,f120])).
fof(f3707,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))))) )),
  inference(superposition,[],[f120,f2979])).
fof(f3753,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))))) )),
  inference(forward_demodulation,[],[f3706,f119])).
fof(f3706,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))))) )),
  inference(superposition,[],[f119,f2979])).
fof(f3664,plain,(
  ( ! [X70,X69] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X69)))))),X70,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X70),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69))))))))) )),
  inference(forward_demodulation,[],[f3650,f2978])).
fof(f3650,plain,(
  ( ! [X70,X69] : (~p(s(bool,happ(s(fun('type.num.num',bool),X70),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X69)))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X69))))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X69)))))),X70,'type.num.num'))) )),
  inference(superposition,[],[f134,f2978])).
fof(f3662,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X16)))))))))) )),
  inference(forward_demodulation,[],[f3616,f2852])).
fof(f3616,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X16))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16)))))))) )),
  inference(superposition,[],[f2852,f2978])).
fof(f3661,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))),s('type.num.num',X15))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X14))))),s('type.num.num',X15)))))) )),
  inference(forward_demodulation,[],[f3615,f2852])).
fof(f3615,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X14))))),s('type.num.num',X15))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f2852,f2978])).
fof(f3660,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12)))))))))) )),
  inference(forward_demodulation,[],[f3614,f150])).
fof(f3614,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12)))))))) )),
  inference(superposition,[],[f150,f2978])).
fof(f3659,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X10))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))))),s('type.num.num',X11)))))) )),
  inference(forward_demodulation,[],[f3613,f150])).
fof(f3613,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X10))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) )),
  inference(superposition,[],[f150,f2978])).
fof(f3658,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8)))))))))) )),
  inference(forward_demodulation,[],[f3612,f149])).
fof(f3612,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8)))))))) )),
  inference(superposition,[],[f149,f2978])).
fof(f3657,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X6))),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))))),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f3611,f149])).
fof(f3611,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))))),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f149,f2978])).
fof(f3656,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4)))))))))) )),
  inference(forward_demodulation,[],[f3610,f148])).
fof(f3610,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X4)))))))) )),
  inference(superposition,[],[f148,f2978])).
fof(f3655,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X2))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))))),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f3609,f148])).
fof(f3609,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f148,f2978])).
fof(f3654,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f3608,f120])).
fof(f3608,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))))) )),
  inference(superposition,[],[f120,f2978])).
fof(f3653,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))))) )),
  inference(forward_demodulation,[],[f3607,f119])).
fof(f3607,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))))) )),
  inference(superposition,[],[f119,f2978])).
fof(f3562,plain,(
  ( ! [X26,X24,X23,X25,X22] : (~p(s(bool,happ(s(fun('type.list.list'(X22),bool),X26),s('type.list.list'(X22),X25)))) | s('type.list.list'(X22),'const.list.APPEND_2'(s('type.list.list'(X22),sK30(X23,X24,X25,X22)),s('type.list.list'(X22),sK31(X23,X24,X25,X22)))) = s('type.list.list'(X22),sK27('const.list.APPEND_2'(s('type.list.list'(X22),sK30(X23,X24,X25,X22)),s('type.list.list'(X22),sK31(X23,X24,X25,X22))),X26,'type.list.list'(X22))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X23)))) )),
  inference(superposition,[],[f134,f142])).
fof(f3561,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (~p(s(bool,happ(s(fun('type.list.list'(X16),bool),X20),s('type.list.list'(X16),X19)))) | p(s(bool,happ(s(fun('type.list.list'(X16),bool),X20),s('type.list.list'(X16),X21)))) | s('type.list.list'(X16),X21) != s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),sK30(X17,X18,X19,X16)),s('type.list.list'(X16),sK31(X17,X18,X19,X16)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X17)))) )),
  inference(superposition,[],[f133,f142])).
fof(f3560,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) | s('type.list.list'(X12),'const.list.NIL_0') = s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK30(X13,X14,X15,X12)),s('type.list.list'(X12),sK31(X13,X14,X15,X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f125,f142])).
fof(f3559,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.list.list'(X8),'const.list.NIL_0') != s('type.list.list'(X8),X11) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),sK30(X9,X10,X11,X8)),s('type.list.list'(X8),sK31(X9,X10,X11,X8)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f126,f142])).
fof(f3558,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),sK30('const.list.LENGTH_1'(s('type.list.list'(X4),X7)),'const.num.|48|_0','const.list.APPEND_2'(s('type.list.list'(X4),sK30(X5,X6,X7,X4)),s('type.list.list'(X4),sK31(X5,X6,X7,X4))),X4)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))) )),
  inference(superposition,[],[f3280,f142])).
fof(f3557,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X3)),'const.list.APPEND_2'(s('type.list.list'(X0),sK30(X1,X2,X3,X0)),s('type.list.list'(X0),sK31(X1,X2,X3,X0))),X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f3380,f142])).
fof(f3566,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),sK31('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(forward_demodulation,[],[f3553,f3280])).
fof(f3553,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)),s('type.list.list'(X0),sK31('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f110,f142])).
fof(f3565,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK30('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f3554,f3380])).
fof(f3554,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK30('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f115,f142])).
fof(f3552,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(forward_demodulation,[],[f3548,f2349])).
fof(f3548,plain,(
  ( ! [X26] : (~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num'))) )),
  inference(superposition,[],[f134,f2349])).
fof(f3514,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f2852,f2349])).
fof(f3513,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f2852,f2349])).
fof(f3512,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f150,f2349])).
fof(f3511,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2349])).
fof(f3510,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f149,f2349])).
fof(f3509,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2349])).
fof(f3508,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f148,f2349])).
fof(f3507,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2349])).
fof(f3506,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f120,f2349])).
fof(f3505,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f119,f2349])).
fof(f3504,plain,(
  ( ! [X26] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(forward_demodulation,[],[f3500,f2348])).
fof(f3500,plain,(
  ( ! [X26] : (~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num'))) )),
  inference(superposition,[],[f134,f2348])).
fof(f3466,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f2852,f2348])).
fof(f3465,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f2852,f2348])).
fof(f3464,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f150,f2348])).
fof(f3463,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2348])).
fof(f3462,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f149,f2348])).
fof(f3461,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2348])).
fof(f3460,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f148,f2348])).
fof(f3459,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2348])).
fof(f3458,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f120,f2348])).
fof(f3457,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f119,f2348])).
fof(f3456,plain,(
  ( ! [X21,X22,X20] : (s(bool,'F_0') != s(bool,f(s(X20,sK32(X21,X22,bool,X20)))) | s(fun(X20,bool),X21) = s(fun(X20,bool),X22) | s(bool,'T_0') = s(bool,g(s(X20,sK32(X21,X22,bool,X20))))) )),
  inference(superposition,[],[f153,f124])).
fof(f3454,plain,(
  ( ! [X14,X12,X15,X13] : (s(bool,X15) != s(bool,f(s(X12,sK32(X13,X14,bool,X12)))) | s(fun(X12,bool),X13) = s(fun(X12,bool),X14) | s(bool,'T_0') = s(bool,g(s(X12,sK32(X13,X14,bool,X12)))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f153,f225])).
fof(f3452,plain,(
  ( ! [X6,X4,X7,X5] : (s(bool,'T_0') != s(bool,f(s(X4,sK32(X5,X6,bool,X4)))) | s(fun(X4,bool),X5) = s(fun(X4,bool),X6) | s(bool,X7) = s(bool,g(s(X4,sK32(X5,X6,bool,X4)))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f153,f225])).
fof(f3451,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,f(s(X0,sK32(X1,X2,bool,X0)))) != s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num',sK1))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num')) | s(bool,'T_0') = s(bool,g(s(X0,sK32(X1,X2,bool,X0))))) ) | $spl6),
  inference(superposition,[],[f153,f1082])).
fof(f3450,plain,(
  ( ! [X21,X22,X20] : (s(X22,f(s(bool,'F_0'))) != s(X22,g(s(bool,'F_0'))) | s(fun(bool,X22),X20) = s(fun(bool,X22),X21) | s(bool,'T_0') = s(bool,sK32(X20,X21,X22,bool))) )),
  inference(superposition,[],[f153,f124])).
fof(f3448,plain,(
  ( ! [X14,X12,X15,X13] : (s(X14,f(s(bool,X15))) != s(X14,g(s(bool,X15))) | s(fun(bool,X14),X12) = s(fun(bool,X14),X13) | s(bool,'T_0') = s(bool,sK32(X12,X13,X14,bool)) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f153,f225])).
fof(f3446,plain,(
  ( ! [X6,X4,X7,X5] : (s(X6,f(s(bool,'T_0'))) != s(X6,g(s(bool,'T_0'))) | s(fun(bool,X6),X4) = s(fun(bool,X6),X5) | s(bool,X7) = s(bool,sK32(X4,X5,X6,bool)) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f153,f225])).
fof(f3445,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num',sK1))))) != s(X2,g(s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num',sK1))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num')) | s(bool,'T_0') = s(bool,sK32(X0,X1,X2,bool))) ) | $spl6),
  inference(superposition,[],[f153,f1082])).
fof(f3444,plain,(
  ( ! [X14,X12,X13] : (s('type.list.list'(X12),'const.list.NIL_0') = s('type.list.list'(X12),sK27(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X12),X13)),X13,X12),X14,'type.list.list'(X12))) | ~p(s(bool,happ(s(fun('type.list.list'(X12),bool),X14),s('type.list.list'(X12),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f3435,f3380])).
fof(f3435,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,happ(s(fun('type.list.list'(X12),bool),X14),s('type.list.list'(X12),'const.list.NIL_0')))) | s('type.list.list'(X12),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X12),X13)),X13,X12)) = s('type.list.list'(X12),sK27(sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X12),X13)),X13,X12),X14,'type.list.list'(X12)))) )),
  inference(superposition,[],[f134,f3380])).
fof(f3431,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK30('const.list.LENGTH_1'(s('type.list.list'(X2),'const.list.NIL_0')),'const.num.|48|_0',sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),X3,X2),X2))) )),
  inference(superposition,[],[f3280,f3380])).
fof(f3429,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X4),X6)),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))) )),
  inference(superposition,[],[f3380,f127])).
fof(f3428,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),'const.list.NIL_0')),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),X3,X2),X2))) )),
  inference(superposition,[],[f3380,f3380])).
fof(f3427,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))) )),
  inference(superposition,[],[f3380,f3280])).
fof(f3382,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X4)),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)),X2))))) )),
  inference(superposition,[],[f3342,f127])).
fof(f3381,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))))) )),
  inference(superposition,[],[f3342,f3280])).
fof(f3380,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))) )),
  inference(unit_resulting_resolution,[],[f3342,f125])).
fof(f3377,plain,(
  ( ! [X158,X156,X154,X157,X155] : (~p(s(bool,happ(s(fun('type.num.num',bool),X158),s('type.num.num',X155)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),sK31(X155,X156,X157,X154)))) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(X154),sK31(X155,X156,X157,X154))),X158,'type.num.num')) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X157))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X156),s('type.num.num',X155)))) )),
  inference(superposition,[],[f134,f141])).
fof(f3376,plain,(
  ( ! [X152,X151,X149,X153,X150,X148] : (~p(s(bool,happ(s(fun('type.num.num',bool),X152),s('type.num.num',X149)))) | p(s(bool,happ(s(fun('type.num.num',bool),X152),s('type.num.num',X153)))) | s('type.num.num',X153) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK31(X149,X150,X151,X148)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X151))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X150),s('type.num.num',X149)))) )),
  inference(superposition,[],[f133,f141])).
fof(f3343,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK31(X1,X2,X3,X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f125,f141])).
fof(f3341,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK31('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f110,f141])).
fof(f3342,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK31('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f115,f141])).
fof(f3340,plain,(
  ( ! [X12,X10,X11] : (s('type.list.list'(X10),'const.list.NIL_0') = s('type.list.list'(X10),sK27(sK30('const.list.LENGTH_1'(s('type.list.list'(X10),X11)),'const.num.|48|_0',X11,X10),X12,'type.list.list'(X10))) | ~p(s(bool,happ(s(fun('type.list.list'(X10),bool),X12),s('type.list.list'(X10),'const.list.NIL_0'))))) )),
  inference(forward_demodulation,[],[f3332,f3280])).
fof(f3332,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,happ(s(fun('type.list.list'(X10),bool),X12),s('type.list.list'(X10),'const.list.NIL_0')))) | s('type.list.list'(X10),sK30('const.list.LENGTH_1'(s('type.list.list'(X10),X11)),'const.num.|48|_0',X11,X10)) = s('type.list.list'(X10),sK27(sK30('const.list.LENGTH_1'(s('type.list.list'(X10),X11)),'const.num.|48|_0',X11,X10),X12,'type.list.list'(X10)))) )),
  inference(superposition,[],[f134,f3280])).
fof(f3327,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK30('const.list.LENGTH_1'(s('type.list.list'(X2),X4)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)),X2))) )),
  inference(superposition,[],[f3280,f127])).
fof(f3326,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),'const.num.|48|_0',sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))) )),
  inference(superposition,[],[f3280,f3280])).
fof(f3281,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X2)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)),X0))))) )),
  inference(superposition,[],[f3241,f127])).
fof(f3280,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))) )),
  inference(unit_resulting_resolution,[],[f3241,f125])).
fof(f3277,plain,(
  ( ! [X158,X156,X154,X157,X155] : (~p(s(bool,happ(s(fun('type.num.num',bool),X158),s('type.num.num',X156)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),sK30(X155,X156,X157,X154)))) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(X154),sK30(X155,X156,X157,X154))),X158,'type.num.num')) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X154),X157))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X156),s('type.num.num',X155)))) )),
  inference(superposition,[],[f134,f140])).
fof(f3276,plain,(
  ( ! [X152,X151,X149,X153,X150,X148] : (~p(s(bool,happ(s(fun('type.num.num',bool),X152),s('type.num.num',X150)))) | p(s(bool,happ(s(fun('type.num.num',bool),X152),s('type.num.num',X153)))) | s('type.num.num',X153) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),sK30(X149,X150,X151,X148)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X148),X151))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X150),s('type.num.num',X149)))) )),
  inference(superposition,[],[f133,f140])).
fof(f3243,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK30(X1,X2,X3,X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f125,f140])).
fof(f3241,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK30('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f110,f140])).
fof(f3242,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK30('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f115,f140])).
fof(f3240,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X26,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f3224,f2340])).
fof(f3224,plain,(
  ( ! [X26] : (~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X26,'type.num.num'))) )),
  inference(superposition,[],[f134,f2340])).
fof(f3238,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f3190,f2852])).
fof(f3190,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f2852,f2340])).
fof(f3237,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f3189,f2852])).
fof(f3189,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f2852,f2340])).
fof(f3236,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f3188,f150])).
fof(f3188,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f150,f2340])).
fof(f3235,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f3187,f150])).
fof(f3187,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2340])).
fof(f3234,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f3186,f149])).
fof(f3186,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f149,f2340])).
fof(f3233,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f3185,f149])).
fof(f3185,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2340])).
fof(f3232,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(forward_demodulation,[],[f3184,f148])).
fof(f3184,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(superposition,[],[f148,f2340])).
fof(f3231,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f3183,f148])).
fof(f3183,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2340])).
fof(f3230,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(forward_demodulation,[],[f3229,f107])).
fof(f3229,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(forward_demodulation,[],[f3228,f122])).
fof(f3228,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(forward_demodulation,[],[f3182,f120])).
fof(f3182,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f120,f2340])).
fof(f3227,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(forward_demodulation,[],[f3181,f119])).
fof(f3181,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f119,f2340])).
fof(f3180,plain,(
  ( ! [X26] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(forward_demodulation,[],[f3168,f2301])).
fof(f3168,plain,(
  ( ! [X26] : (~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),X26,'type.num.num'))) )),
  inference(superposition,[],[f134,f2301])).
fof(f3178,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f3134,f2896])).
fof(f3134,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f2852,f2301])).
fof(f3177,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X6)))))) )),
  inference(forward_demodulation,[],[f3133,f2857])).
fof(f3133,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f2852,f2301])).
fof(f3176,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f3132,f2593])).
fof(f3132,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f150,f2301])).
fof(f3175,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f3131,f2592])).
fof(f3131,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2301])).
fof(f3174,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f3130,f2591])).
fof(f3130,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f149,f2301])).
fof(f3173,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f3129,f2590])).
fof(f3129,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2301])).
fof(f3172,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(forward_demodulation,[],[f3128,f2589])).
fof(f3128,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f148,f2301])).
fof(f3171,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f3127,f2588])).
fof(f3127,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2301])).
fof(f3126,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f120,f2301])).
fof(f3125,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(superposition,[],[f119,f2301])).
fof(f3079,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f2852,f146])).
fof(f3122,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X3)))))))) )),
  inference(forward_demodulation,[],[f3076,f2852])).
fof(f3076,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f2852,f2851])).
fof(f3119,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X3))),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f3037,f2852])).
fof(f3037,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X3))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f2852,f2851])).
fof(f2987,plain,(
  ( ! [X61,X60] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X60)))),X61,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60))))))) )),
  inference(forward_demodulation,[],[f2975,f2851])).
fof(f2975,plain,(
  ( ! [X61,X60] : (~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X60))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X60)))),X61,'type.num.num'))) )),
  inference(superposition,[],[f134,f2851])).
fof(f2985,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num',X12))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12)))))))) )),
  inference(forward_demodulation,[],[f2944,f150])).
fof(f2944,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X12))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))) )),
  inference(superposition,[],[f150,f2851])).
fof(f2984,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X10),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))),s('type.num.num',X11)))))) )),
  inference(forward_demodulation,[],[f2943,f150])).
fof(f2943,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X10))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) )),
  inference(superposition,[],[f150,f2851])).
fof(f2983,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8)))))))) )),
  inference(forward_demodulation,[],[f2942,f149])).
fof(f2942,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) )),
  inference(superposition,[],[f149,f2851])).
fof(f2982,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))),s('type.num.num',X7)))))) )),
  inference(forward_demodulation,[],[f2941,f149])).
fof(f2941,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X6))),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f149,f2851])).
fof(f2981,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4)))))))) )),
  inference(forward_demodulation,[],[f2940,f148])).
fof(f2940,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X4))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f148,f2851])).
fof(f2980,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))),s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f2939,f148])).
fof(f2939,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X2))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f148,f2851])).
fof(f2979,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))) )),
  inference(forward_demodulation,[],[f2938,f120])).
fof(f2938,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f120,f2851])).
fof(f2978,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f2937,f119])).
fof(f2937,plain,(
  ( ! [X0] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f119,f2851])).
fof(f2904,plain,(
  ( ! [X80,X81,X82] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X80),s('type.num.num',X81))))) = s('type.num.num',sK27('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X80),s('type.num.num',X81))))))))) )),
  inference(forward_demodulation,[],[f2903,f2852])).
fof(f2903,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X80),s('type.num.num',X81)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))))) = s('type.num.num',sK27('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num'))) )),
  inference(forward_demodulation,[],[f2847,f2851])).
fof(f2847,plain,(
  ( ! [X80,X81,X82] : (~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X80),s('type.num.num',X81)))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))))) = s('type.num.num',sK27('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X80))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num'))) )),
  inference(superposition,[],[f134,f151])).
fof(f2897,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))))) )),
  inference(forward_demodulation,[],[f2813,f2852])).
fof(f2813,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f151,f146])).
fof(f2896,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2812,f2851])).
fof(f2812,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) )),
  inference(superposition,[],[f151,f387])).
fof(f2895,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f2811,f2851])).
fof(f2811,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(superposition,[],[f151,f2154])).
fof(f2894,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2893,f2890])).
fof(f2893,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f2810,f2851])).
fof(f2810,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) )),
  inference(superposition,[],[f151,f2153])).
fof(f2890,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f2808,f2851])).
fof(f2808,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f151,f108])).
fof(f2857,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f2775,f2851])).
fof(f2775,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4)))))))) )),
  inference(superposition,[],[f151,f387])).
fof(f2856,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(forward_demodulation,[],[f2774,f2851])).
fof(f2774,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X3)))))))) )),
  inference(superposition,[],[f151,f2154])).
fof(f2855,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f2854,f2853])).
fof(f2854,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f2773,f2851])).
fof(f2773,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f151,f2153])).
fof(f2853,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(backward_demodulation,[],[f2851,f2771])).
fof(f2852,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(backward_demodulation,[],[f2851,f151])).
fof(f2851,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f2850,f110])).
fof(f2850,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f2772,f110])).
fof(f2772,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))))))) )),
  inference(superposition,[],[f151,f2146])).
fof(f2771,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))))))) )),
  inference(superposition,[],[f151,f108])).
fof(f2721,plain,(
  ( ! [X2,X0,X1] : (s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num'))) ) | $spl6),
  inference(forward_demodulation,[],[f2704,f127])).
fof(f2704,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1))),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1130,f127])).
fof(f2697,plain,(
  ( ! [X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | p(s(bool,happ(s(fun(X73,bool),X74),s(X73,sK29('const.bool.COND_3'(s(bool,'F_0'),s(bool,X71),s(bool,X72)),X74,X73))))) | ~p(s(bool,happ(s(fun(X73,bool),X74),s(X73,X75))))) )),
  inference(superposition,[],[f138,f127])).
fof(f2696,plain,(
  ( ! [X70,X68,X66,X69,X67] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X67),s('type.num.num',X66)))) | p(s(bool,happ(s(fun(X68,bool),X69),s(X68,sK29('const.arithmetic.>_2'(s('type.num.num',X66),s('type.num.num',X67)),X69,X68))))) | ~p(s(bool,happ(s(fun(X68,bool),X69),s(X68,X70))))) )),
  inference(superposition,[],[f138,f144])).
fof(f2695,plain,(
  ( ! [X61,X64,X62,X65,X63] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X62),s('type.num.num',X61)))) | p(s(bool,happ(s(fun(X63,bool),X64),s(X63,sK29('const.arithmetic.>=_2'(s('type.num.num',X61),s('type.num.num',X62)),X64,X63))))) | ~p(s(bool,happ(s(fun(X63,bool),X64),s(X63,X65))))) )),
  inference(superposition,[],[f138,f145])).
fof(f2694,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X57)))) | p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK29('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X57)),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) )),
  inference(superposition,[],[f138,f815])).
fof(f2693,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X52),s('type.num.num',X53)))) | p(s(bool,happ(s(fun(X54,bool),X55),s(X54,sK29('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num',X53)),X55,X54))))) | ~p(s(bool,happ(s(fun(X54,bool),X55),s(X54,X56))))) )),
  inference(superposition,[],[f138,f147])).
fof(f2698,plain,(
  ( ! [X6,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK29(X5,X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X5) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(subsumption_resolution,[],[f2683,f106])).
fof(f2683,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK29(X5,X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X5) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f138,f225])).
fof(f2681,plain,(
  ( ! [X21,X22] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X21))) = s(bool,sK27('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21)),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X21))))))) )),
  inference(forward_demodulation,[],[f2675,f815])).
fof(f2675,plain,(
  ( ! [X21,X22] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X21)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21))) = s(bool,sK27('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X21)),X22,bool))) )),
  inference(superposition,[],[f134,f815])).
fof(f2666,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) | p(s(bool,happ(s(fun(X2,bool),X3),s(X2,sK28('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)),X3,X2))))) | ~p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X4))))) )),
  inference(superposition,[],[f136,f815])).
fof(f2664,plain,(
  ( ! [X11] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X11)))) )),
  inference(superposition,[],[f815,f124])).
fof(f2662,plain,(
  ( ! [X8,X7] : (s(bool,X8) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X7))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f815,f225])).
fof(f2660,plain,(
  ( ! [X4,X3] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X3))) | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f815,f225])).
fof(f2659,plain,(
  ( ! [X2,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))) ) | $spl6),
  inference(superposition,[],[f815,f1082])).
fof(f2627,plain,(
  ( ! [X22] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X22,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) )),
  inference(forward_demodulation,[],[f2623,f387])).
fof(f2623,plain,(
  ( ! [X22] : (~p(s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),X22,'type.num.num'))) )),
  inference(superposition,[],[f134,f387])).
fof(f2593,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f150,f387])).
fof(f2592,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f387])).
fof(f2591,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f149,f387])).
fof(f2590,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f387])).
fof(f2589,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f148,f387])).
fof(f2588,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f387])).
fof(f2587,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f120,f387])).
fof(f2586,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f119,f387])).
fof(f2579,plain,(
  ( ! [X70,X68,X71,X69,X67] : (~p(s(bool,X68)) | p(s(bool,happ(s(fun(X69,bool),X70),s(X69,sK28('const.bool.COND_3'(s(bool,'F_0'),s(bool,X67),s(bool,X68)),X70,X69))))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) )),
  inference(superposition,[],[f136,f127])).
fof(f2578,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X63),s('type.num.num',X62)))) | p(s(bool,happ(s(fun(X64,bool),X65),s(X64,sK28('const.arithmetic.>_2'(s('type.num.num',X62),s('type.num.num',X63)),X65,X64))))) | ~p(s(bool,happ(s(fun(X64,bool),X65),s(X64,X66))))) )),
  inference(superposition,[],[f136,f144])).
fof(f2577,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X58),s('type.num.num',X57)))) | p(s(bool,happ(s(fun(X59,bool),X60),s(X59,sK28('const.arithmetic.>=_2'(s('type.num.num',X57),s('type.num.num',X58)),X60,X59))))) | ~p(s(bool,happ(s(fun(X59,bool),X60),s(X59,X61))))) )),
  inference(superposition,[],[f136,f145])).
fof(f2576,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X52),s('type.num.num',X53)))) | p(s(bool,happ(s(fun(X54,bool),X55),s(X54,sK28('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X52))),s('type.num.num',X53)),X55,X54))))) | ~p(s(bool,happ(s(fun(X54,bool),X55),s(X54,X56))))) )),
  inference(superposition,[],[f136,f147])).
fof(f2580,plain,(
  ( ! [X6,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK28(X5,X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X5) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(subsumption_resolution,[],[f2566,f106])).
fof(f2566,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK28(X5,X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | s(bool,X5) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f136,f225])).
fof(f2522,plain,(
  ( ! [X30,X28,X31,X29] : (~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,X29)))) | p(s(bool,happ(s(fun(bool,bool),X30),s(bool,X31)))) | s(bool,X31) != s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X28,'type.num.num')) | s(bool,'T_0') = s(bool,X29)) ) | $spl6),
  inference(superposition,[],[f133,f1082])).
fof(f2505,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,happ(s(fun(bool,bool),X56),s(bool,happ(s(fun('type.num.num',bool),X55),s('type.num.num',sK1)))))) | p(s(bool,happ(s(fun(bool,bool),X56),s(bool,X57)))) | s(bool,X54) != s(bool,X57) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X55,'type.num.num')) | s(bool,'T_0') = s(bool,X54)) ) | $spl6),
  inference(superposition,[],[f133,f1082])).
fof(f2468,plain,(
  ( ! [X6,X4,X2,X5,X3] : (p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X5)))) | s(X2,X4) != s(X2,X5) | s(bool,X6) = s(bool,happ(s(fun(X2,bool),X3),s(X2,X4))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f2432,f106])).
fof(f2432,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X5)))) | s(X2,X4) != s(X2,X5) | s(bool,X6) = s(bool,happ(s(fun(X2,bool),X3),s(X2,X4))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f133,f225])).
fof(f2425,plain,(
  ( ! [X114,X112,X113] : (~p(s(bool,happ(s(fun(bool,bool),X113),s(bool,X112)))) | p(s(bool,happ(s(fun(bool,bool),X113),s(bool,X114)))) | s(bool,'F_0') != s(bool,X114) | s(bool,'T_0') = s(bool,X112)) )),
  inference(superposition,[],[f133,f124])).
fof(f2423,plain,(
  ( ! [X107,X105,X106,X104] : (~p(s(bool,happ(s(fun(bool,bool),X105),s(bool,X104)))) | p(s(bool,happ(s(fun(bool,bool),X105),s(bool,X106)))) | s(bool,'T_0') != s(bool,X106) | s(bool,X104) = s(bool,X107) | s(bool,'T_0') = s(bool,X107)) )),
  inference(superposition,[],[f133,f225])).
fof(f2422,plain,(
  ( ! [X103,X101,X102] : (~p(s(bool,happ(s(fun(bool,bool),X102),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X102),s(bool,X103)))) | s(bool,X101) != s(bool,X103) | s(bool,'T_0') = s(bool,X101)) )),
  inference(superposition,[],[f133,f124])).
fof(f2420,plain,(
  ( ! [X94,X95,X93,X96] : (~p(s(bool,happ(s(fun(bool,bool),X95),s(bool,X94)))) | p(s(bool,happ(s(fun(bool,bool),X95),s(bool,X96)))) | s(bool,X93) != s(bool,X96) | s(bool,'T_0') = s(bool,X93) | s(bool,'T_0') = s(bool,X94)) )),
  inference(superposition,[],[f133,f225])).
fof(f2418,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,happ(s(fun(bool,bool),X86),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X86),s(bool,X87)))) | s(bool,X85) != s(bool,X87) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f133,f225])).
fof(f2395,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X14)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',X17)))) | s('type.num.num',X17) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15)))) )),
  inference(superposition,[],[f133,f146])).
fof(f2387,plain,(
  ( ! [X20] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X20,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f2384,f2154])).
fof(f2384,plain,(
  ( ! [X20] : (~p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),X20,'type.num.num'))) )),
  inference(superposition,[],[f134,f2154])).
fof(f2355,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f150,f2154])).
fof(f2354,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2154])).
fof(f2353,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f149,f2154])).
fof(f2352,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2154])).
fof(f2351,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f148,f2154])).
fof(f2350,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2154])).
fof(f2349,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f120,f2154])).
fof(f2348,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f119,f2154])).
fof(f2347,plain,(
  ( ! [X20] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X20,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f2337,f2153])).
fof(f2337,plain,(
  ( ! [X20] : (~p(s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X20,'type.num.num'))) )),
  inference(superposition,[],[f134,f2153])).
fof(f2346,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2308,f2267])).
fof(f2308,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f150,f2153])).
fof(f2345,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X4)))))) )),
  inference(forward_demodulation,[],[f2307,f2237])).
fof(f2307,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4)))))) )),
  inference(superposition,[],[f150,f2153])).
fof(f2344,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2306,f2116])).
fof(f2306,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f149,f2153])).
fof(f2343,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2)))))) )),
  inference(forward_demodulation,[],[f2305,f2089])).
fof(f2305,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f2153])).
fof(f2342,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(forward_demodulation,[],[f2304,f1924])).
fof(f2304,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f148,f2153])).
fof(f2341,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f2303,f1897])).
fof(f2303,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f2153])).
fof(f2340,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(forward_demodulation,[],[f2302,f431])).
fof(f2302,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f120,f2153])).
fof(f2301,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(superposition,[],[f119,f2153])).
fof(f2300,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X64),s('type.num.num',X65))))) = s('type.num.num',sK27('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X65)))),X66,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X66),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X64),s('type.num.num',X65))))))))) )),
  inference(forward_demodulation,[],[f2295,f150])).
fof(f2295,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,happ(s(fun('type.num.num',bool),X66),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X64),s('type.num.num',X65)))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X65))))) = s('type.num.num',sK27('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X64))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X65)))),X66,'type.num.num'))) )),
  inference(superposition,[],[f134,f150])).
fof(f2267,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f150,f108])).
fof(f2238,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f150,f2146])).
fof(f2237,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f150,f108])).
fof(f2191,plain,(
  ( ! [X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X16,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f2181,f2146])).
fof(f2181,plain,(
  ( ! [X16] : (~p(s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')),X16,'type.num.num'))) )),
  inference(superposition,[],[f134,f2146])).
fof(f2154,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f119,f2146])).
fof(f2153,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f120,f2146])).
fof(f2148,plain,(
  ( ! [X61,X59,X60] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X59),s('type.num.num',X60))))) = s('type.num.num',sK27('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X61,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X59),s('type.num.num',X60))))))))) )),
  inference(forward_demodulation,[],[f2143,f149])).
fof(f2143,plain,(
  ( ! [X61,X59,X60] : (~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X59),s('type.num.num',X60)))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60))))) = s('type.num.num',sK27('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X60)))),X61,'type.num.num'))) )),
  inference(superposition,[],[f134,f149])).
fof(f2146,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f2117,f114])).
fof(f2117,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f149,f114])).
fof(f2116,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f149,f108])).
fof(f2089,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f149,f108])).
fof(f767,plain,(
  ( ! [X11] : (~p(s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1)))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num'))) ) | $spl6),
  inference(forward_demodulation,[],[f741,f160])).
fof(f741,plain,(
  ( ! [X11] : (~p(s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f134,f160])).
fof(f1082,plain,(
  ( ! [X21,X20] : (s(bool,X21) = s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X20,'type.num.num')) | s(bool,'T_0') = s(bool,X21)) ) | $spl6),
  inference(subsumption_resolution,[],[f954,f106])).
fof(f954,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X20,'type.num.num')) | s(bool,X21) = s(bool,happ(s(fun('type.num.num',bool),X20),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X21)) ) | $spl6),
  inference(superposition,[],[f767,f225])).
fof(f1090,plain,(
  ( ! [X28,X26,X27] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num',X27))) = s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X28,'type.num.num')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))),s('type.num.num',X27)))) ) | $spl6),
  inference(superposition,[],[f1082,f147])).
fof(f1091,plain,(
  ( ! [X30,X31,X29] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X29))) = s(bool,happ(s(fun('type.num.num',bool),X31),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X31,'type.num.num')) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num',X30)))) ) | $spl6),
  inference(superposition,[],[f1082,f145])).
fof(f1092,plain,(
  ( ! [X33,X34,X32] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X33),s('type.num.num',X32))) = s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X34,'type.num.num')) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X32),s('type.num.num',X33)))) ) | $spl6),
  inference(superposition,[],[f1082,f144])).
fof(f1093,plain,(
  ( ! [X37,X35,X36] : (s(bool,X36) = s(bool,happ(s(fun('type.num.num',bool),X37),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,X36))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X37,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1082,f127])).
fof(f1114,plain,(
  ( ! [X43,X44,X42] : (~p(s(bool,happ(s(fun(bool,bool),X44),s(bool,happ(s(fun('type.num.num',bool),X43),s('type.num.num',sK1)))))) | s(bool,X42) = s(bool,sK27(X42,X44,bool)) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X43,'type.num.num')) | s(bool,'T_0') = s(bool,X42)) ) | $spl6),
  inference(superposition,[],[f134,f1082])).
fof(f1127,plain,(
  ( ! [X24,X23,X25] : (~p(s(bool,happ(s(fun(bool,bool),X25),s(bool,X24)))) | s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num',sK1))) = s(bool,sK27(happ(s(fun('type.num.num',bool),X23),s('type.num.num',sK1)),X25,bool)) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X23,'type.num.num')) | s(bool,'T_0') = s(bool,X24)) ) | $spl6),
  inference(superposition,[],[f134,f1082])).
fof(f1130,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,X0) = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) | $spl6),
  inference(equality_factoring,[],[f1082])).
fof(f1812,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,happ(s(fun(bool,bool),X3),s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num',sK1)))))) | ~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X2)))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num')) | s(bool,'T_0') = s(bool,sK27(X2,X3,bool))) ) | $spl6),
  inference(superposition,[],[f135,f1082])).
fof(f787,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1)))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f767,f127])).
fof(f1950,plain,(
  ( ! [X54,X52,X53] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))))) = s('type.num.num',sK27('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53)))),X54,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X54),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53))))))))) )),
  inference(forward_demodulation,[],[f1947,f148])).
fof(f1947,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,happ(s(fun('type.num.num',bool),X54),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X52),s('type.num.num',X53)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53))))) = s('type.num.num',sK27('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X53)))),X54,'type.num.num'))) )),
  inference(superposition,[],[f134,f148])).
fof(f1924,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f148,f108])).
fof(f1897,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f148,f108])).
fof(f1832,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK27(X2,X1,X0)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(condensation,[],[f1831])).
fof(f1831,plain,(
  ( ! [X14,X12,X15,X13] : (~p(s(bool,happ(s(fun(X12,bool),X13),s(X12,X14)))) | s(bool,'T_0') = s(bool,happ(s(fun(X12,bool),X13),s(X12,sK27(X14,X13,X12)))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(subsumption_resolution,[],[f1821,f227])).
fof(f1821,plain,(
  ( ! [X14,X12,X15,X13] : (p(s(bool,X15)) | ~p(s(bool,happ(s(fun(X12,bool),X13),s(X12,X14)))) | s(bool,'T_0') = s(bool,happ(s(fun(X12,bool),X13),s(X12,sK27(X14,X13,X12)))) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f135,f225])).
fof(f1817,plain,(
  ( ! [X17,X18] : (p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,X17)))) | s(bool,'T_0') = s(bool,sK27(X17,X18,bool))) )),
  inference(superposition,[],[f135,f124])).
fof(f1815,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,happ(s(fun(bool,bool),X12),s(bool,X13)))) | ~p(s(bool,happ(s(fun(bool,bool),X12),s(bool,X11)))) | s(bool,'T_0') = s(bool,sK27(X11,X12,bool)) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f135,f225])).
fof(f1813,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'T_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X5)))) | s(bool,X7) = s(bool,sK27(X5,X6,bool)) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f135,f225])).
fof(f1824,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK27(X3,'const.bool.COND_3'(s(bool,'F_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0)))))) )),
  inference(forward_demodulation,[],[f1810,f127])).
fof(f1810,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK27(X3,'const.bool.COND_3'(s(bool,'F_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),'const.bool.COND_3'(s(bool,'F_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3))))) )),
  inference(superposition,[],[f135,f127])).
fof(f109,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67',aHL_FALSITY)).
fof(f298,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)))) )),
  inference(superposition,[],[f127,f124])).
fof(f536,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f144,f124])).
fof(f580,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f145,f124])).
fof(f678,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f125,f127])).
fof(f735,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | s(X0,X3) = s(X0,sK27(X3,'const.bool.COND_3'(s(bool,'F_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))) )),
  inference(superposition,[],[f134,f127])).
fof(f758,plain,(
  ( ! [X41,X42] : (~p(s(bool,happ(s(fun(bool,bool),X42),s(bool,'F_0')))) | s(bool,X41) = s(bool,sK27(X41,X42,bool)) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f134,f124])).
fof(f759,plain,(
  ( ! [X43,X44] : (~p(s(bool,happ(s(fun(bool,bool),X44),s(bool,X43)))) | s(bool,'F_0') = s(bool,sK27('F_0',X44,bool)) | s(bool,'T_0') = s(bool,X43)) )),
  inference(superposition,[],[f134,f124])).
fof(f786,plain,(
  ( ! [X54,X52,X53,X51] : (s(X51,X53) = s(X51,sK27('const.bool.COND_3'(s(bool,'F_0'),s(X51,X52),s(X51,X53)),X54,X51)) | ~p(s(bool,happ(s(fun(X51,bool),X54),s(X51,X53))))) )),
  inference(forward_demodulation,[],[f762,f127])).
fof(f762,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,happ(s(fun(X51,bool),X54),s(X51,X53)))) | s(X51,'const.bool.COND_3'(s(bool,'F_0'),s(X51,X52),s(X51,X53))) = s(X51,sK27('const.bool.COND_3'(s(bool,'F_0'),s(X51,X52),s(X51,X53)),X54,X51))) )),
  inference(superposition,[],[f134,f127])).
fof(f843,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3)))) )),
  inference(superposition,[],[f147,f124])).
fof(f865,plain,(
  ( ! [X30,X31,X29] : (s(bool,X30) = s(bool,X31) | s(bool,'T_0') = s(bool,X31) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X29),s(bool,X30)))) )),
  inference(superposition,[],[f225,f127])).
fof(f891,plain,(
  ( ! [X24,X23,X25] : (s(bool,'T_0') = s(bool,X24) | s(bool,X25) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,X24))) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f225,f127])).
fof(f1081,plain,(
  ( ! [X19,X17,X18] : (s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X18),s(fun('type.num.num',bool),X17)),'type.num.num')) | s(bool,X19) = s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X19)) ) | $spl6),
  inference(subsumption_resolution,[],[f953,f106])).
fof(f953,plain,(
  ( ! [X19,X17,X18] : (~p(s(bool,'T_0')) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X18),s(fun('type.num.num',bool),X17)),'type.num.num')) | s(bool,X19) = s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X19)) ) | $spl6),
  inference(superposition,[],[f787,f225])).
fof(f133,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK27(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK27(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK27])],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : ! [X30,X32] : (? [X7] : (s(X6,X7) = s(X6,X32) & p(s(bool,happ(s(fun(X6,bool),X30),s(X6,X7))))) <=> p(s(bool,happ(s(fun(X6,bool),X30),s(X6,X32)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.bool.UNWIND_THM2')).
fof(f134,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK27(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f94])).
fof(f135,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK27(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f136,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK28(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK28(X2,X1,X0))))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK29(X2,X1,X0))))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK28,sK29])],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f96])).
fof(f96,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6] : ! [X30,X31] : (? [X7] : (p(s(bool,happ(s(fun(X6,bool),X30),s(X6,X7)))) & p(s(bool,X31))) <=> (? [X7] : p(s(bool,happ(s(fun(X6,bool),X30),s(X6,X7)))) & p(s(bool,X31))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.bool.LEFT_EXISTS_AND_THM')).
fof(f138,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK29(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f771,plain,(
  ( ! [X19,X18] : (s('type.num.num',X18) = s('type.num.num',sK27('const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')),X19,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X19),s('type.num.num',X18))))) )),
  inference(forward_demodulation,[],[f745,f116])).
fof(f745,plain,(
  ( ! [X19,X18] : (~p(s(bool,happ(s(fun('type.num.num',bool),X19),s('type.num.num',X18)))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK27('const.arithmetic.-_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0')),X19,'type.num.num'))) )),
  inference(superposition,[],[f134,f116])).
fof(f766,plain,(
  ( ! [X4,X3] : (s('type.num.num',X3) = s('type.num.num',sK27('const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')),X4,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num',X3))))) )),
  inference(forward_demodulation,[],[f738,f115])).
fof(f738,plain,(
  ( ! [X4,X3] : (~p(s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num',X3)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK27('const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')),X4,'type.num.num'))) )),
  inference(superposition,[],[f134,f115])).
fof(f765,plain,(
  ( ! [X2,X1] : (s('type.num.num',X1) = s('type.num.num',sK27('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)),X2,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f737,f110])).
fof(f737,plain,(
  ( ! [X2,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))) = s('type.num.num',sK27('const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)),X2,'type.num.num'))) )),
  inference(superposition,[],[f134,f110])).
fof(f780,plain,(
  ( ! [X35,X34] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34))) = s('type.num.num',sK27('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))),X35,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X35),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34))))))) )),
  inference(forward_demodulation,[],[f754,f117])).
fof(f754,plain,(
  ( ! [X35,X34] : (~p(s(bool,happ(s(fun('type.num.num',bool),X35),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34))))) = s('type.num.num',sK27('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X34)))),X35,'type.num.num'))) )),
  inference(superposition,[],[f134,f117])).
fof(f778,plain,(
  ( ! [X31] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK27('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X31,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f752,f107])).
fof(f752,plain,(
  ( ! [X31] : (~p(s(bool,happ(s(fun('type.num.num',bool),X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK27('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X31,'type.num.num'))) )),
  inference(superposition,[],[f134,f107])).
fof(f779,plain,(
  ( ! [X33,X32] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))))) = s('type.num.num',sK27('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))),X33,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X33),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X32))))))))) )),
  inference(forward_demodulation,[],[f753,f122])).
fof(f753,plain,(
  ( ! [X33,X32] : (~p(s(bool,happ(s(fun('type.num.num',bool),X33),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X32)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32))))) = s('type.num.num',sK27('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X32)))),X33,'type.num.num'))) )),
  inference(superposition,[],[f134,f122])).
fof(f781,plain,(
  ( ! [X37,X36] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))))) = s('type.num.num',sK27('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))),X37,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X37),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))))))))) )),
  inference(forward_demodulation,[],[f755,f120])).
fof(f755,plain,(
  ( ! [X37,X36] : (~p(s(bool,happ(s(fun('type.num.num',bool),X37),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36))))) = s('type.num.num',sK27('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X36)))),X37,'type.num.num'))) )),
  inference(superposition,[],[f134,f120])).
fof(f782,plain,(
  ( ! [X38] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK27('const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X38,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) )),
  inference(forward_demodulation,[],[f756,f431])).
fof(f756,plain,(
  ( ! [X38] : (~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK27('const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X38,'type.num.num'))) )),
  inference(superposition,[],[f134,f431])).
fof(f783,plain,(
  ( ! [X39,X40] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X39))))) = s('type.num.num',sK27('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X40),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X39))))))))) )),
  inference(forward_demodulation,[],[f757,f119])).
fof(f757,plain,(
  ( ! [X39,X40] : (~p(s(bool,happ(s(fun('type.num.num',bool),X40),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X39)))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))))) = s('type.num.num',sK27('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39)))),X40,'type.num.num'))) )),
  inference(superposition,[],[f134,f119])).
fof(f739,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,happ(s(fun('type.num.num',bool),X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) = s('type.num.num',sK27('const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6)),X7,'type.num.num'))) )),
  inference(superposition,[],[f134,f146])).
fof(f768,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.NIL_0')),X13,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f742,f687])).
fof(f742,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.NIL_0'))) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.NIL_0')),X13,'type.num.num'))) )),
  inference(superposition,[],[f134,f687])).
fof(f769,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK27('const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)),X15,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X15),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f743,f113])).
fof(f743,plain,(
  ( ! [X14,X15] : (~p(s(bool,happ(s(fun('type.num.num',bool),X15),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14))) = s('type.num.num',sK27('const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)),X15,'type.num.num'))) )),
  inference(superposition,[],[f134,f113])).
fof(f770,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK27('const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num',X16)),X17,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f744,f114])).
fof(f744,plain,(
  ( ! [X17,X16] : (~p(s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num',X16))) = s('type.num.num',sK27('const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num',X16)),X17,'type.num.num'))) )),
  inference(superposition,[],[f134,f114])).
fof(f773,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK27('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))))),X23,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f747,f118])).
fof(f747,plain,(
  ( ! [X23,X22] : (~p(s(bool,happ(s(fun('type.num.num',bool),X23),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))))))) = s('type.num.num',sK27('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22)))))),X23,'type.num.num'))) )),
  inference(superposition,[],[f134,f118])).
fof(f774,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK27('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24)))))),X25,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X25),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f748,f121])).
fof(f748,plain,(
  ( ! [X24,X25] : (~p(s(bool,happ(s(fun('type.num.num',bool),X25),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24))))))) = s('type.num.num',sK27('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24)))))),X25,'type.num.num'))) )),
  inference(superposition,[],[f134,f121])).
fof(f775,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK27('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X26,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f749,f347])).
fof(f749,plain,(
  ( ! [X26] : (~p(s(bool,happ(s(fun('type.num.num',bool),X26),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num',sK27('const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),X26,'type.num.num'))) )),
  inference(superposition,[],[f134,f347])).
fof(f776,plain,(
  ( ! [X28,X27] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK27('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)),X28,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f750,f111])).
fof(f750,plain,(
  ( ! [X28,X27] : (~p(s(bool,happ(s(fun('type.num.num',bool),X28),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27))) = s('type.num.num',sK27('const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)),X28,'type.num.num'))) )),
  inference(superposition,[],[f134,f111])).
fof(f777,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',sK27('const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0')),X30,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X30),s('type.num.num','const.num.|48|_0'))))) )),
  inference(forward_demodulation,[],[f751,f112])).
fof(f751,plain,(
  ( ! [X30,X29] : (~p(s(bool,happ(s(fun('type.num.num',bool),X30),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK27('const.arithmetic.*_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0')),X30,'type.num.num'))) )),
  inference(superposition,[],[f134,f112])).
fof(f772,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK27('const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')),X21,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f746,f161])).
fof(f746,plain,(
  ( ! [X21,X20] : (~p(s(bool,happ(s(fun('type.num.num',bool),X21),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK27('const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')),X21,'type.num.num'))) )),
  inference(superposition,[],[f134,f161])).
fof(f764,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f736,f108])).
fof(f736,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK27('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X0,'type.num.num'))) )),
  inference(superposition,[],[f134,f108])).
fof(f942,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X5)))) | s(bool,'T_0') = s(bool,sK27('T_0',X6,bool)) | s(bool,X5) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f134,f225])).
fof(f919,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,happ(s(fun(bool,bool),X34),s(bool,X33)))) | s(bool,X32) = s(bool,sK27(X32,X34,bool)) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f134,f225])).
fof(f958,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) | s(bool,X31) = s(bool,sK27(X31,X32,bool)) | s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f134,f225])).
fof(f850,plain,(
  ( ! [X6,X4,X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X5))) = s(bool,sK27('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))),s('type.num.num',X5)),X6,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X5))))))) )),
  inference(forward_demodulation,[],[f846,f147])).
fof(f846,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X5)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))),s('type.num.num',X5))) = s(bool,sK27('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))),s('type.num.num',X5)),X6,bool))) )),
  inference(superposition,[],[f134,f147])).
fof(f785,plain,(
  ( ! [X50,X48,X49] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X49),s('type.num.num',X48))) = s(bool,sK27('const.arithmetic.>_2'(s('type.num.num',X48),s('type.num.num',X49)),X50,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X50),s(bool,'const.prim_rec.<_2'(s('type.num.num',X49),s('type.num.num',X48))))))) )),
  inference(forward_demodulation,[],[f761,f144])).
fof(f761,plain,(
  ( ! [X50,X48,X49] : (~p(s(bool,happ(s(fun(bool,bool),X50),s(bool,'const.prim_rec.<_2'(s('type.num.num',X49),s('type.num.num',X48)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num',X48),s('type.num.num',X49))) = s(bool,sK27('const.arithmetic.>_2'(s('type.num.num',X48),s('type.num.num',X49)),X50,bool))) )),
  inference(superposition,[],[f134,f144])).
fof(f784,plain,(
  ( ! [X47,X45,X46] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X46),s('type.num.num',X45))) = s(bool,sK27('const.arithmetic.>=_2'(s('type.num.num',X45),s('type.num.num',X46)),X47,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X47),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X46),s('type.num.num',X45))))))) )),
  inference(forward_demodulation,[],[f760,f145])).
fof(f760,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,happ(s(fun(bool,bool),X47),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X46),s('type.num.num',X45)))))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num',X45),s('type.num.num',X46))) = s(bool,sK27('const.arithmetic.>=_2'(s('type.num.num',X45),s('type.num.num',X46)),X47,bool))) )),
  inference(superposition,[],[f134,f145])).
fof(f144,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X26,X25] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X25),s('type.num.num',X26))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X26),s('type.num.num',X25)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.arithmetic.GREATER_DEF')).
fof(f147,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X26,X25] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num',X25))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X26))),s('type.num.num',X25)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.arithmetic.LESS_EQ')).
fof(f862,plain,(
  ( ! [X21,X22,X20] : (s(bool,X22) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21))) | s(bool,'T_0') = s(bool,X22) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21)))) )),
  inference(superposition,[],[f225,f147])).
fof(f864,plain,(
  ( ! [X28,X26,X27] : (s(bool,X28) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X27),s('type.num.num',X26))) | s(bool,'T_0') = s(bool,X28) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X26),s('type.num.num',X27)))) )),
  inference(superposition,[],[f225,f144])).
fof(f888,plain,(
  ( ! [X14,X15,X16] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X14),s('type.num.num',X15))) | s(bool,X16) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))),s('type.num.num',X15))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f225,f147])).
fof(f890,plain,(
  ( ! [X21,X22,X20] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20))) | s(bool,X22) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X20),s('type.num.num',X21))) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f225,f144])).
fof(f815,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f147,f107])).
fof(f816,plain,(
  ( ! [X2,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f147,f122])).
fof(f817,plain,(
  ( ! [X4,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num',X4))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num',X4)))) )),
  inference(superposition,[],[f147,f117])).
fof(f818,plain,(
  ( ! [X6,X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f147,f120])).
fof(f819,plain,(
  ( ! [X7] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X7)))) )),
  inference(superposition,[],[f147,f431])).
fof(f145,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X25,X26] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X26),s('type.num.num',X25))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X25),s('type.num.num',X26)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.arithmetic.GREATER_EQ')).
fof(f863,plain,(
  ( ! [X24,X23,X25] : (s(bool,X25) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X24),s('type.num.num',X23))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X24)))) )),
  inference(superposition,[],[f225,f145])).
fof(f889,plain,(
  ( ! [X19,X17,X18] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X17))) | s(bool,X19) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X17),s('type.num.num',X18))) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f225,f145])).
fof(f1080,plain,(
  ( ! [X14,X15,X13,X16] : (s(X13,X15) = s(X13,sK27(X15,X14,X13)) | s(bool,X16) = s(bool,happ(s(fun(X13,bool),X14),s(X13,X15))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f952,f106])).
fof(f952,plain,(
  ( ! [X14,X15,X13,X16] : (~p(s(bool,'T_0')) | s(X13,X15) = s(X13,sK27(X15,X14,X13)) | s(bool,X16) = s(bool,happ(s(fun(X13,bool),X14),s(X13,X15))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f134,f225])).
fof(f940,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f106,f225])).
fof(f878,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f225,f225])).
fof(f687,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f684,f127])).
fof(f684,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(unit_resulting_resolution,[],[f127,f126])).
fof(f431,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f417,f117])).
fof(f417,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f120,f108])).
fof(f387,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f119,f108])).
fof(f347,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f118,f108])).
fof(f268,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f127,f124])).
fof(f227,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f109,f124])).
fof(f225,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f124,f124])).
fof(f153,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK32(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK32(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK32(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK32(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK32])],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67',aHL_EXT)).
fof(f151,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X25,X26] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|2')).
fof(f150,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X25,X26] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X25),s('type.num.num',X26))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|12')).
fof(f149,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X25,X26] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X25),s('type.num.num',X26))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|8')).
fof(f148,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X25,X26] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num',X26))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|5')).
fof(f146,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X26,X25] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X26))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X25)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.arithmetic.ADD_SYM')).
fof(f140,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK30(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK30(X3,X2,X1,X0)))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK31(X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK30(X3,X2,X1,X0)),s('type.list.list'(X0),sK31(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK30,sK31])],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X6,X7] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(rectify,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X8,X21,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num',X22))) <=> ? [X23,X24] : (s('type.num.num',X21) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X23))) & s('type.num.num',X22) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X24))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X23),s('type.list.list'(X6),X24)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.list.LENGTH_EQ_SUM')).
fof(f141,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK31(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f142,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK30(X3,X2,X1,X0)),s('type.list.list'(X0),sK31(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f143,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f130,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f131,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK16(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK17(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK19(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK20(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X2,X1,X0)),s('type.list.list'(X0),sK15(X2,X1,X0))))))))))))))))))))))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f125,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.list.LENGTH_NIL')).
fof(f126,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f87])).
fof(f124,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67',aHL_BOOL_CASES)).
fof(f161,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f123,f108])).
fof(f123,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X25] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X25),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|11')).
fof(f122,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X25] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_suc|split|2')).
fof(f121,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X25] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|10')).
fof(f120,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X25] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|14')).
fof(f119,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X25] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X25))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|16')).
fof(f118,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X25] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|9')).
fof(f117,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X25] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X25)))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_suc|split|1')).
fof(f116,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X25] : s('type.num.num',X25) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X25),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|7')).
fof(f115,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X25] : s('type.num.num',X25) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|1')).
fof(f114,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X29] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.arithmetic.SUB_EQUAL_|48|')).
fof(f113,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X25] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X25)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|6')).
fof(f112,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X25] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|4')).
fof(f111,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X25] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X25)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.arithmetic.MULT|split|0')).
fof(f110,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X25] : s('type.num.num',X25) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X25)))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.arithmetic.ADD|split|0')).
fof(f108,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f21])).
fof(f21,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_distrib|split|13')).
fof(f107,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f38])).
fof(f38,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.numeral.numeral_suc|split|0')).
fof(f106,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67',aHL_TRUTH)).
fof(f5336,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(global_subsumption,[],[f105,f104,f103,f106,f107,f108,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f161,f124,f126,f125,f132,f131,f130,f143,f142,f141,f140,f146,f148,f149,f150,f151,f153,f158,f225,f227,f230,f268,f347,f387,f431,f679,f687,f878,f940,f1153,f1148,f1142,f1080,f889,f863,f145,f819,f818,f817,f816,f815,f890,f888,f864,f862,f147,f144,f784,f785,f850,f958,f919,f942,f764,f772,f777,f776,f775,f774,f773,f770,f769,f768,f739,f783,f782,f781,f779,f778,f780,f765,f766,f771,f138,f136,f135,f134,f133,f1081,f891,f865,f843,f786,f759,f758,f735,f678,f580,f536,f298,f127,f109,f1824,f1813,f1815,f1817,f1828,f1832,f1897,f1924,f1950,f787,f1812,f1130,f1127,f1114,f1093,f1092,f1091,f1090,f1082,f767,f2089,f2116,f2146,f2148,f2153,f2154,f2191,f2237,f2238,f2267,f2300,f2301,f2340,f2341,f2342,f2343,f2344,f2345,f2346,f2347,f2348,f2349,f2350,f2351,f2352,f2353,f2354,f2355,f2387,f2395,f2418,f2420,f2422,f2423,f2425,f2468,f2505,f2522,f2580,f2582,f2585,f2576,f2577,f2578,f2579,f2586,f2587,f2588,f2589,f2590,f2591,f2592,f2593,f2627,f2659,f2660,f2662,f2664,f2666,f2681,f2698,f2700,f2703,f2693,f2694,f2695,f2696,f2697,f2721,f2718,f2771,f2851,f2852,f2853,f2855,f2856,f2857,f2890,f2894,f2895,f2896,f2897,f2904,f2978,f2979,f2980,f2981,f2982,f2983,f2984,f2985,f2987,f3119,f3122,f3079,f3125,f3126,f3171,f3172,f3173,f3174,f3175,f3176,f3177,f3178,f3180,f3227,f3230,f3231,f3232,f3233,f3234,f3235,f3236,f3237,f3238,f3240,f3242,f3241,f3243,f3276,f3277,f3280,f3281,f3326,f3327,f3340,f3342,f3341,f3343,f3376,f3377,f3380,f3381,f3382,f3427,f3428,f3429,f3431,f3444,f3445,f3446,f3448,f3450,f3451,f3452,f3454,f3456,f3457,f3458,f3459,f3460,f3461,f3462,f3463,f3464,f3465,f3466,f3504,f3505,f3506,f3507,f3508,f3509,f3510,f3511,f3512,f3513,f3514,f3552,f3565,f3566,f3557,f3558,f3559,f3560,f3561,f3562,f3653,f3654,f3655,f3656,f3657,f3658,f3659,f3660,f3661,f3662,f3664,f3753,f3754,f3755,f3756,f3757,f3758,f3759,f3760,f3761,f3762,f3764,f3765,f3766,f3768,f3779,f3835,f3836,f3784,f3785,f3786,f3787,f3788,f3789,f3837,f3838,f3839,f3840,f3841,f3842,f3843,f3844,f3845,f3846,f3847,f3848,f3849,f3850,f3804,f3851,f3852,f3853,f3809,f3810,f3854,f3855,f3856,f3857,f3858,f3860,f3862,f3863,f3864,f3865,f3866,f3867,f3868,f3869,f3870,f3871,f3872,f3873,f3875,f3831,f3832,f3833,f3892,f4051,f3903,f3916,f3946,f3981,f3984,f4027,f4096,f4097,f4100,f4101,f156,f4254,f4259,f4260,f4481,f4506,f4726,f4749,f4464,f4469,f4474,f4477,f4478,f5076,f5104,f5105,f5110,f5113,f5118,f5122,f5124,f5130,f5028,f5035,f5036,f5160,f5174,f5063,f5067,f5068,f5074,f5273,f5275,f5211,f5276,f5277,f5214,f5215,f5216,f5279,f5281,f5282,f5284,f5286,f5287,f5288,f5290,f5292,f5294,f5295,f5297,f5231,f5232,f5298,f5236,f5301,f5239,f5240,f5312,f5313,f5248,f5314,f5316,f5317,f5318,f5319,f5320,f5321,f5322,f5323,f5324,f5259,f5260,f5325,f5327,f5328,f5265,f5266,f5268,f5269,f4250,f160])).
fof(f5335,plain,(
  $false | ($spl2 | $spl4 | $spl6 | $spl22)),
  inference(global_subsumption,[],[f1829,f105,f104,f103,f106,f107,f108,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f161,f124,f126,f125,f132,f131,f130,f143,f142,f141,f140,f146,f148,f149,f150,f151,f153,f160,f158,f225,f227,f230,f268,f347,f387,f431,f679,f687,f878,f940,f1153,f1148,f1142,f1080,f889,f863,f145,f819,f818,f817,f816,f815,f890,f888,f864,f862,f147,f144,f784,f785,f850,f958,f919,f942,f764,f772,f777,f776,f775,f774,f773,f770,f769,f768,f739,f783,f782,f781,f779,f778,f780,f765,f766,f771,f138,f136,f135,f134,f133,f1081,f891,f865,f843,f786,f759,f758,f735,f678,f580,f536,f298,f127,f109,f1824,f1813,f1815,f1817,f1828,f1832,f1897,f1924,f1950,f787,f1812,f1130,f1127,f1114,f1093,f1092,f1091,f1090,f1082,f767,f2089,f2116,f2146,f2148,f2153,f2154,f2191,f2237,f2238,f2267,f2300,f2301,f2340,f2341,f2342,f2343,f2344,f2345,f2346,f2347,f2348,f2349,f2350,f2351,f2352,f2353,f2354,f2355,f2387,f2395,f2418,f2420,f2422,f2423,f2425,f2468,f2505,f2522,f2580,f2582,f2585,f2576,f2577,f2578,f2579,f2586,f2587,f2588,f2589,f2590,f2591,f2592,f2593,f2627,f2659,f2660,f2662,f2664,f2666,f2681,f2698,f2700,f2703,f2693,f2694,f2695,f2696,f2697,f2721,f2718,f2771,f2851,f2852,f2853,f2855,f2856,f2857,f2890,f2894,f2895,f2896,f2897,f2904,f2978,f2979,f2980,f2981,f2982,f2983,f2984,f2985,f2987,f3119,f3122,f3079,f3125,f3126,f3171,f3172,f3173,f3174,f3175,f3176,f3177,f3178,f3180,f3227,f3230,f3231,f3232,f3233,f3234,f3235,f3236,f3237,f3238,f3240,f3242,f3241,f3243,f3276,f3277,f3280,f3281,f3326,f3327,f3340,f3342,f3341,f3343,f3376,f3377,f3380,f3381,f3382,f3427,f3428,f3429,f3431,f3444,f3445,f3446,f3448,f3450,f3451,f3452,f3454,f3456,f3457,f3458,f3459,f3460,f3461,f3462,f3463,f3464,f3465,f3466,f3504,f3505,f3506,f3507,f3508,f3509,f3510,f3511,f3512,f3513,f3514,f3552,f3565,f3566,f3557,f3558,f3559,f3560,f3561,f3562,f3653,f3654,f3655,f3656,f3657,f3658,f3659,f3660,f3661,f3662,f3664,f3753,f3754,f3755,f3756,f3757,f3758,f3759,f3760,f3761,f3762,f3764,f3765,f3766,f3768,f3779,f3835,f3836,f3784,f3785,f3786,f3787,f3788,f3789,f3837,f3838,f3839,f3840,f3841,f3842,f3843,f3844,f3845,f3846,f3847,f3848,f3849,f3850,f3804,f3851,f3852,f3853,f3809,f3810,f3854,f3855,f3856,f3857,f3858,f3860,f3862,f3863,f3864,f3865,f3866,f3867,f3868,f3869,f3870,f3871,f3872,f3873,f3875,f3831,f3832,f3833,f3892,f4051,f3903,f3916,f3946,f3981,f3984,f4027,f4096,f4097,f4100,f4101,f156,f4254,f4259,f4260,f4481,f4506,f4726,f4749,f4464,f4469,f4474,f4477,f4478,f5076,f5104,f5105,f5110,f5113,f5118,f5122,f5124,f5130,f5028,f5035,f5036,f5160,f5174,f5063,f5067,f5068,f5074,f5273,f5275,f5211,f5276,f5277,f5214,f5215,f5216,f5279,f5281,f5282,f5284,f5286,f5287,f5288,f5290,f5292,f5294,f5295,f5297,f5231,f5232,f5298,f5236,f5301,f5239,f5240,f5312,f5313,f5248,f5314,f5316,f5317,f5318,f5319,f5320,f5321,f5322,f5323,f5324,f5259,f5260,f5325,f5327,f5328,f5265,f5266,f5268,f5269,f4250])).
fof(f5334,plain,(
  $false | ($spl2 | $spl4 | $spl6 | $spl26)),
  inference(global_subsumption,[],[f2052,f105,f104,f103,f106,f107,f108,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f161,f124,f126,f125,f132,f131,f130,f143,f142,f141,f140,f146,f148,f149,f150,f151,f153,f160,f158,f225,f227,f230,f268,f347,f387,f431,f679,f687,f878,f940,f1153,f1148,f1142,f1080,f889,f863,f145,f819,f818,f817,f816,f815,f890,f888,f864,f862,f147,f144,f784,f785,f850,f958,f919,f942,f764,f772,f777,f776,f775,f774,f773,f770,f769,f768,f739,f783,f782,f781,f779,f778,f780,f765,f766,f771,f138,f136,f135,f134,f133,f1081,f891,f865,f843,f786,f759,f758,f735,f678,f580,f536,f298,f127,f109,f1824,f1813,f1815,f1817,f1828,f1832,f1897,f1924,f1950,f787,f1812,f1130,f1127,f1114,f1093,f1092,f1091,f1090,f1082,f767,f2089,f2116,f2146,f2148,f2153,f2154,f2191,f2237,f2238,f2267,f2300,f2301,f2340,f2341,f2342,f2343,f2344,f2345,f2346,f2347,f2348,f2349,f2350,f2351,f2352,f2353,f2354,f2355,f2387,f2395,f2418,f2420,f2422,f2423,f2425,f2468,f2505,f2522,f2580,f2582,f2585,f2576,f2577,f2578,f2579,f2586,f2587,f2588,f2589,f2590,f2591,f2592,f2593,f2627,f2659,f2660,f2662,f2664,f2666,f2681,f2698,f2700,f2703,f2693,f2694,f2695,f2696,f2697,f2721,f2718,f2771,f2851,f2852,f2853,f2855,f2856,f2857,f2890,f2894,f2895,f2896,f2897,f2904,f2978,f2979,f2980,f2981,f2982,f2983,f2984,f2985,f2987,f3119,f3122,f3079,f3125,f3126,f3171,f3172,f3173,f3174,f3175,f3176,f3177,f3178,f3180,f3227,f3230,f3231,f3232,f3233,f3234,f3235,f3236,f3237,f3238,f3240,f3242,f3241,f3243,f3276,f3277,f3280,f3281,f3326,f3327,f3340,f3342,f3341,f3343,f3376,f3377,f3380,f3381,f3382,f3427,f3428,f3429,f3431,f3444,f3445,f3446,f3448,f3450,f3451,f3452,f3454,f3456,f3457,f3458,f3459,f3460,f3461,f3462,f3463,f3464,f3465,f3466,f3504,f3505,f3506,f3507,f3508,f3509,f3510,f3511,f3512,f3513,f3514,f3552,f3565,f3566,f3557,f3558,f3559,f3560,f3561,f3562,f3653,f3654,f3655,f3656,f3657,f3658,f3659,f3660,f3661,f3662,f3664,f3753,f3754,f3755,f3756,f3757,f3758,f3759,f3760,f3761,f3762,f3764,f3765,f3766,f3768,f3779,f3835,f3836,f3784,f3785,f3786,f3787,f3788,f3789,f3837,f3838,f3839,f3840,f3841,f3842,f3843,f3844,f3845,f3846,f3847,f3848,f3849,f3850,f3804,f3851,f3852,f3853,f3809,f3810,f3854,f3855,f3856,f3857,f3858,f3860,f3862,f3863,f3864,f3865,f3866,f3867,f3868,f3869,f3870,f3871,f3872,f3873,f3875,f3831,f3832,f3833,f3892,f4051,f3903,f3916,f3946,f3981,f3984,f4027,f4096,f4097,f4100,f4101,f156,f4254,f4259,f4260,f4481,f4506,f4726,f4749,f4464,f4469,f4474,f4477,f4478,f5076,f5104,f5105,f5110,f5113,f5118,f5122,f5124,f5130,f5028,f5035,f5036,f5160,f5174,f5063,f5067,f5068,f5074,f5273,f5275,f5211,f5276,f5277,f5214,f5215,f5216,f5279,f5281,f5282,f5284,f5286,f5287,f5288,f5290,f5292,f5294,f5295,f5297,f5231,f5232,f5298,f5236,f5301,f5239,f5240,f5312,f5313,f5248,f5314,f5316,f5317,f5318,f5319,f5320,f5321,f5322,f5323,f5324,f5259,f5260,f5325,f5327,f5328,f5265,f5266,f5268,f5269,f4250])).
fof(f5333,plain,(
  $false | ($spl2 | $spl4 | $spl6 | $spl28)),
  inference(global_subsumption,[],[f2053,f105,f104,f103,f106,f107,f108,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f161,f124,f126,f125,f132,f131,f130,f143,f142,f141,f140,f146,f148,f149,f150,f151,f153,f160,f158,f225,f227,f230,f268,f347,f387,f431,f679,f687,f878,f940,f1153,f1148,f1142,f1080,f889,f863,f145,f819,f818,f817,f816,f815,f890,f888,f864,f862,f147,f144,f784,f785,f850,f958,f919,f942,f764,f772,f777,f776,f775,f774,f773,f770,f769,f768,f739,f783,f782,f781,f779,f778,f780,f765,f766,f771,f138,f136,f135,f134,f133,f1081,f891,f865,f843,f786,f759,f758,f735,f678,f580,f536,f298,f127,f109,f1824,f1813,f1815,f1817,f1828,f1832,f1897,f1924,f1950,f787,f1812,f1130,f1127,f1114,f1093,f1092,f1091,f1090,f1082,f767,f2089,f2116,f2146,f2148,f2153,f2154,f2191,f2237,f2238,f2267,f2300,f2301,f2340,f2341,f2342,f2343,f2344,f2345,f2346,f2347,f2348,f2349,f2350,f2351,f2352,f2353,f2354,f2355,f2387,f2395,f2418,f2420,f2422,f2423,f2425,f2468,f2505,f2522,f2580,f2582,f2585,f2576,f2577,f2578,f2579,f2586,f2587,f2588,f2589,f2590,f2591,f2592,f2593,f2627,f2659,f2660,f2662,f2664,f2666,f2681,f2698,f2700,f2703,f2693,f2694,f2695,f2696,f2697,f2721,f2718,f2771,f2851,f2852,f2853,f2855,f2856,f2857,f2890,f2894,f2895,f2896,f2897,f2904,f2978,f2979,f2980,f2981,f2982,f2983,f2984,f2985,f2987,f3119,f3122,f3079,f3125,f3126,f3171,f3172,f3173,f3174,f3175,f3176,f3177,f3178,f3180,f3227,f3230,f3231,f3232,f3233,f3234,f3235,f3236,f3237,f3238,f3240,f3242,f3241,f3243,f3276,f3277,f3280,f3281,f3326,f3327,f3340,f3342,f3341,f3343,f3376,f3377,f3380,f3381,f3382,f3427,f3428,f3429,f3431,f3444,f3445,f3446,f3448,f3450,f3451,f3452,f3454,f3456,f3457,f3458,f3459,f3460,f3461,f3462,f3463,f3464,f3465,f3466,f3504,f3505,f3506,f3507,f3508,f3509,f3510,f3511,f3512,f3513,f3514,f3552,f3565,f3566,f3557,f3558,f3559,f3560,f3561,f3562,f3653,f3654,f3655,f3656,f3657,f3658,f3659,f3660,f3661,f3662,f3664,f3753,f3754,f3755,f3756,f3757,f3758,f3759,f3760,f3761,f3762,f3764,f3765,f3766,f3768,f3779,f3835,f3836,f3784,f3785,f3786,f3787,f3788,f3789,f3837,f3838,f3839,f3840,f3841,f3842,f3843,f3844,f3845,f3846,f3847,f3848,f3849,f3850,f3804,f3851,f3852,f3853,f3809,f3810,f3854,f3855,f3856,f3857,f3858,f3860,f3862,f3863,f3864,f3865,f3866,f3867,f3868,f3869,f3870,f3871,f3872,f3873,f3875,f3831,f3832,f3833,f3892,f4051,f3903,f3916,f3946,f3981,f3984,f4027,f4096,f4097,f4100,f4101,f156,f4254,f4259,f4260,f4481,f4506,f4726,f4749,f4464,f4469,f4474,f4477,f4478,f5076,f5104,f5105,f5110,f5113,f5118,f5122,f5124,f5130,f5028,f5035,f5036,f5160,f5174,f5063,f5067,f5068,f5074,f5273,f5275,f5211,f5276,f5277,f5214,f5215,f5216,f5279,f5281,f5282,f5284,f5286,f5287,f5288,f5290,f5292,f5294,f5295,f5297,f5231,f5232,f5298,f5236,f5301,f5239,f5240,f5312,f5313,f5248,f5314,f5316,f5317,f5318,f5319,f5320,f5321,f5322,f5323,f5324,f5259,f5260,f5325,f5327,f5328,f5265,f5266,f5268,f5269,f4250])).
fof(f5332,plain,(
  $false | ($spl2 | $spl4 | $spl6 | $spl44)),
  inference(global_subsumption,[],[f4083,f105,f104,f103,f106,f107,f108,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f161,f124,f126,f125,f132,f131,f130,f143,f142,f141,f140,f146,f148,f149,f150,f151,f153,f160,f158,f225,f227,f230,f268,f347,f387,f431,f679,f687,f878,f940,f1153,f1148,f1142,f1080,f889,f863,f145,f819,f818,f817,f816,f815,f890,f888,f864,f862,f147,f144,f784,f785,f850,f958,f919,f942,f764,f772,f777,f776,f775,f774,f773,f770,f769,f768,f739,f783,f782,f781,f779,f778,f780,f765,f766,f771,f138,f136,f135,f134,f133,f1081,f891,f865,f843,f786,f759,f758,f735,f678,f580,f536,f298,f127,f109,f1824,f1813,f1815,f1817,f1828,f1832,f1897,f1924,f1950,f787,f1812,f1130,f1127,f1114,f1093,f1092,f1091,f1090,f1082,f767,f2089,f2116,f2146,f2148,f2153,f2154,f2191,f2237,f2238,f2267,f2300,f2301,f2340,f2341,f2342,f2343,f2344,f2345,f2346,f2347,f2348,f2349,f2350,f2351,f2352,f2353,f2354,f2355,f2387,f2395,f2418,f2420,f2422,f2423,f2425,f2468,f2505,f2522,f2580,f2582,f2585,f2576,f2577,f2578,f2579,f2586,f2587,f2588,f2589,f2590,f2591,f2592,f2593,f2627,f2659,f2660,f2662,f2664,f2666,f2681,f2698,f2700,f2703,f2693,f2694,f2695,f2696,f2697,f2721,f2718,f2771,f2851,f2852,f2853,f2855,f2856,f2857,f2890,f2894,f2895,f2896,f2897,f2904,f2978,f2979,f2980,f2981,f2982,f2983,f2984,f2985,f2987,f3119,f3122,f3079,f3125,f3126,f3171,f3172,f3173,f3174,f3175,f3176,f3177,f3178,f3180,f3227,f3230,f3231,f3232,f3233,f3234,f3235,f3236,f3237,f3238,f3240,f3242,f3241,f3243,f3276,f3277,f3280,f3281,f3326,f3327,f3340,f3342,f3341,f3343,f3376,f3377,f3380,f3381,f3382,f3427,f3428,f3429,f3431,f3444,f3445,f3446,f3448,f3450,f3451,f3452,f3454,f3456,f3457,f3458,f3459,f3460,f3461,f3462,f3463,f3464,f3465,f3466,f3504,f3505,f3506,f3507,f3508,f3509,f3510,f3511,f3512,f3513,f3514,f3552,f3565,f3566,f3557,f3558,f3559,f3560,f3561,f3562,f3653,f3654,f3655,f3656,f3657,f3658,f3659,f3660,f3661,f3662,f3664,f3753,f3754,f3755,f3756,f3757,f3758,f3759,f3760,f3761,f3762,f3764,f3765,f3766,f3768,f3779,f3835,f3836,f3784,f3785,f3786,f3787,f3788,f3789,f3837,f3838,f3839,f3840,f3841,f3842,f3843,f3844,f3845,f3846,f3847,f3848,f3849,f3850,f3804,f3851,f3852,f3853,f3809,f3810,f3854,f3855,f3856,f3857,f3858,f3860,f3862,f3863,f3864,f3865,f3866,f3867,f3868,f3869,f3870,f3871,f3872,f3873,f3875,f3831,f3832,f3833,f3892,f4051,f3903,f3916,f3946,f3981,f3984,f4027,f4096,f4097,f4100,f4101,f156,f4254,f4259,f4260,f4481,f4506,f4726,f4749,f4464,f4469,f4474,f4477,f4478,f5076,f5104,f5105,f5110,f5113,f5118,f5122,f5124,f5130,f5028,f5035,f5036,f5160,f5174,f5063,f5067,f5068,f5074,f5273,f5275,f5211,f5276,f5277,f5214,f5215,f5216,f5279,f5281,f5282,f5284,f5286,f5287,f5288,f5290,f5292,f5294,f5295,f5297,f5231,f5232,f5298,f5236,f5301,f5239,f5240,f5312,f5313,f5248,f5314,f5316,f5317,f5318,f5319,f5320,f5321,f5322,f5323,f5324,f5259,f5260,f5325,f5327,f5328,f5265,f5266,f5268,f5269,f4250])).
fof(f5331,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(global_subsumption,[],[f105,f104,f103,f106,f107,f108,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f161,f124,f126,f125,f132,f131,f130,f143,f142,f141,f140,f146,f148,f149,f150,f151,f153,f160,f158,f225,f227,f230,f268,f347,f387,f431,f679,f687,f878,f940,f1153,f1148,f1142,f1080,f889,f863,f145,f819,f818,f817,f816,f815,f890,f888,f864,f862,f147,f144,f784,f785,f850,f958,f919,f942,f764,f772,f777,f776,f775,f774,f773,f770,f769,f768,f739,f783,f782,f781,f779,f778,f780,f765,f766,f771,f138,f136,f135,f134,f133,f1081,f891,f865,f843,f786,f759,f758,f735,f678,f580,f536,f298,f127,f109,f1824,f1813,f1815,f1817,f1828,f1832,f1897,f1924,f1950,f787,f1812,f1130,f1127,f1114,f1093,f1092,f1091,f1090,f1082,f767,f2089,f2116,f2146,f2148,f2153,f2154,f2191,f2237,f2238,f2267,f2300,f2301,f2340,f2341,f2342,f2343,f2344,f2345,f2346,f2347,f2348,f2349,f2350,f2351,f2352,f2353,f2354,f2355,f2387,f2395,f2418,f2420,f2422,f2423,f2425,f2468,f2505,f2522,f2580,f2582,f2585,f2576,f2577,f2578,f2579,f2586,f2587,f2588,f2589,f2590,f2591,f2592,f2593,f2627,f2659,f2660,f2662,f2664,f2666,f2681,f2698,f2700,f2703,f2693,f2694,f2695,f2696,f2697,f2721,f2718,f2771,f2851,f2852,f2853,f2855,f2856,f2857,f2890,f2894,f2895,f2896,f2897,f2904,f2978,f2979,f2980,f2981,f2982,f2983,f2984,f2985,f2987,f3119,f3122,f3079,f3125,f3126,f3171,f3172,f3173,f3174,f3175,f3176,f3177,f3178,f3180,f3227,f3230,f3231,f3232,f3233,f3234,f3235,f3236,f3237,f3238,f3240,f3242,f3241,f3243,f3276,f3277,f3280,f3281,f3326,f3327,f3340,f3342,f3341,f3343,f3376,f3377,f3380,f3381,f3382,f3427,f3428,f3429,f3431,f3444,f3445,f3446,f3448,f3450,f3451,f3452,f3454,f3456,f3457,f3458,f3459,f3460,f3461,f3462,f3463,f3464,f3465,f3466,f3504,f3505,f3506,f3507,f3508,f3509,f3510,f3511,f3512,f3513,f3514,f3552,f3565,f3566,f3557,f3558,f3559,f3560,f3561,f3562,f3653,f3654,f3655,f3656,f3657,f3658,f3659,f3660,f3661,f3662,f3664,f3753,f3754,f3755,f3756,f3757,f3758,f3759,f3760,f3761,f3762,f3764,f3765,f3766,f3768,f3779,f3835,f3836,f3784,f3785,f3786,f3787,f3788,f3789,f3837,f3838,f3839,f3840,f3841,f3842,f3843,f3844,f3845,f3846,f3847,f3848,f3849,f3850,f3804,f3851,f3852,f3853,f3809,f3810,f3854,f3855,f3856,f3857,f3858,f3860,f3862,f3863,f3864,f3865,f3866,f3867,f3868,f3869,f3870,f3871,f3872,f3873,f3875,f3831,f3832,f3833,f3892,f4051,f3903,f3916,f3946,f3981,f3984,f4027,f4096,f4097,f4100,f4101,f156,f4254,f4259,f4260,f4481,f4506,f4726,f4749,f4464,f4469,f4474,f4477,f4478,f5076,f5104,f5105,f5110,f5113,f5118,f5122,f5124,f5130,f5028,f5035,f5036,f5160,f5174,f5063,f5067,f5068,f5074,f5273,f5275,f5211,f5276,f5277,f5214,f5215,f5216,f5279,f5281,f5282,f5284,f5286,f5287,f5288,f5290,f5292,f5294,f5295,f5297,f5231,f5232,f5298,f5236,f5301,f5239,f5240,f5312,f5313,f5248,f5314,f5316,f5317,f5318,f5319,f5320,f5321,f5322,f5323,f5324,f5259,f5260,f5325,f5327,f5328,f5265,f5266,f5268,f5269,f4250])).
fof(f5271,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f5208,f4248])).
fof(f4248,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK15(sK2,sK1,sK0))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f4103,f156])).
fof(f4103,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15(sK2,sK1,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f154,f130])).
fof(f5208,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK20(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK2,sK1,sK0)),s('type.list.list'(sK0),sK15(sK2,sK1,sK0)))))))))))))))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f154,f131])).
fof(f5207,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15(sK31(sK1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK2,sK0),sK1,sK0)))) | $spl58),
  inference(cnf_transformation,[],[f5207_D])).
fof(f5207_D,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15(sK31(sK1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK2,sK0),sK1,sK0)))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f5199,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl51),
  inference(cnf_transformation,[],[f5199_D])).
fof(f5199_D,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f5191,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15(sK31(sK1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK2,sK0),sK1,sK0)))) | $spl0),
  inference(superposition,[],[f4109,f4105])).
fof(f4105,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK31(sK1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK2,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f154,f141])).
fof(f4109,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK15(X1,sK1,X0))))) ) | $spl0),
  inference(superposition,[],[f130,f154])).
fof(f5205,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15(sK30('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK1,sK2,sK0),sK1,sK0)))) | $spl56),
  inference(cnf_transformation,[],[f5205_D])).
fof(f5205_D,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15(sK30('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK1,sK2,sK0),sK1,sK0)))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f5190,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15(sK30('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK1,sK2,sK0),sK1,sK0)))) | $spl0),
  inference(superposition,[],[f4109,f4269])).
fof(f4269,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK30('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),sK1,sK2,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f4107,f140])).
fof(f4107,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl0),
  inference(superposition,[],[f154,f146])).
fof(f5203,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15(sK15(sK2,sK1,sK0),sK1,sK0)))) | $spl54),
  inference(cnf_transformation,[],[f5203_D])).
fof(f5203_D,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15(sK15(sK2,sK1,sK0),sK1,sK0)))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f5189,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15(sK15(sK2,sK1,sK0),sK1,sK0)))) | $spl0),
  inference(superposition,[],[f4109,f4103])).
fof(f5201,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15('const.list.APPEND_2'(s('type.list.list'(sK0),sK15(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.NIL_0')),sK1,sK0)))) | $spl52),
  inference(cnf_transformation,[],[f5201_D])).
fof(f5201_D,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15('const.list.APPEND_2'(s('type.list.list'(sK0),sK15(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.NIL_0')),sK1,sK0)))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f5188,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15('const.list.APPEND_2'(s('type.list.list'(sK0),sK15(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.NIL_0')),sK1,sK0)))) | $spl0),
  inference(superposition,[],[f4109,f4747])).
fof(f4747,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK15(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl0),
  inference(forward_demodulation,[],[f4746,f115])).
fof(f4746,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK15(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.NIL_0'))))) | $spl0),
  inference(forward_demodulation,[],[f4363,f127])).
fof(f4363,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),sK15(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.NIL_0')))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f4103,f687,f127,f143])).
fof(f5197,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15('const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK15(sK2,sK1,sK0))),sK1,sK0)))) | $spl48),
  inference(cnf_transformation,[],[f5197_D])).
fof(f5197_D,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15('const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK15(sK2,sK1,sK0))),sK1,sK0)))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f5187,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK15('const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK15(sK2,sK1,sK0))),sK1,sK0)))) | $spl0),
  inference(superposition,[],[f4109,f4723])).
fof(f4723,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK15(sK2,sK1,sK0)))))) | $spl0),
  inference(forward_demodulation,[],[f4722,f110])).
fof(f4722,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK15(sK2,sK1,sK0)))))) | $spl0),
  inference(forward_demodulation,[],[f4372,f127])).
fof(f4372,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(sK0),X0),s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK15(sK2,sK1,sK0))))))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f687,f4103,f127,f143])).
fof(f4084,plain,(
  ( ! [X14,X12] : (s(bool,'T_0') != s(bool,X12) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X12)))) ) | $spl46),
  inference(cnf_transformation,[],[f4084_D])).
fof(f4084_D,plain,(
  ( ! [X14,X12] : (s(bool,'T_0') != s(bool,X12) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X12)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f1829,plain,(
  ( ! [X3] : (s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'))) ) | $spl22),
  inference(cnf_transformation,[],[f1829_D])).
fof(f1829_D,plain,(
  ( ! [X3] : (s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f4085,plain,(
  ( ! [X24,X21,X22] : (s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X21,'type.num.num')) | s(bool,'T_0') != s(bool,X22) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,X22)))) ) | ($spl6 | $spl34)),
  inference(global_subsumption,[],[f105,f104,f103,f106,f107,f108,f110,f111,f112,f113,f114,f115,f116,f117,f118,f119,f120,f121,f122,f161,f124,f126,f125,f132,f131,f130,f143,f142,f141,f140,f146,f148,f149,f150,f151,f153,f160,f225,f227,f230,f268,f347,f387,f431,f679,f687,f878,f940,f1153,f1148,f1142,f1080,f889,f863,f145,f819,f818,f817,f816,f815,f890,f888,f864,f862,f147,f144,f784,f785,f850,f958,f919,f942,f764,f772,f777,f776,f775,f774,f773,f770,f769,f768,f739,f783,f782,f781,f779,f778,f780,f765,f766,f771,f138,f136,f135,f134,f133,f1081,f891,f865,f843,f786,f759,f758,f735,f678,f580,f536,f298,f127,f109,f1824,f1813,f1815,f1817,f1828,f1832,f1897,f1924,f1950,f787,f1812,f1130,f1127,f1114,f1093,f1092,f1091,f1090,f1082,f767,f2089,f2116,f2146,f2148,f2153,f2154,f2191,f2237,f2238,f2267,f2300,f2301,f2340,f2341,f2342,f2343,f2344,f2345,f2346,f2347,f2348,f2349,f2350,f2351,f2352,f2353,f2354,f2355,f2387,f2395,f2418,f2420,f2422,f2423,f2425,f2468,f2505,f2522,f2580,f2582,f2585,f2576,f2577,f2578,f2579,f2586,f2587,f2588,f2589,f2590,f2591,f2592,f2593,f2627,f2659,f2660,f2662,f2664,f2666,f2681,f2698,f2700,f2703,f2693,f2694,f2695,f2696,f2697,f2721,f2718,f2722,f2724,f2771,f2851,f2852,f2853,f2855,f2856,f2857,f2890,f2894,f2895,f2896,f2897,f2904,f2978,f2979,f2980,f2981,f2982,f2983,f2984,f2985,f2987,f3119,f3122,f3079,f3125,f3126,f3171,f3172,f3173,f3174,f3175,f3176,f3177,f3178,f3180,f3227,f3230,f3231,f3232,f3233,f3234,f3235,f3236,f3237,f3238,f3240,f3242,f3241,f3243,f3276,f3277,f3280,f3281,f3326,f3327,f3340,f3342,f3341,f3343,f3376,f3377,f3380,f3381,f3382,f3427,f3428,f3429,f3431,f3444,f3445,f3446,f3448,f3450,f3451,f3452,f3454,f3456,f3457,f3458,f3459,f3460,f3461,f3462,f3463,f3464,f3465,f3466,f3504,f3505,f3506,f3507,f3508,f3509,f3510,f3511,f3512,f3513,f3514,f3552,f3565,f3566,f3557,f3558,f3559,f3560,f3561,f3562,f3653,f3654,f3655,f3656,f3657,f3658,f3659,f3660,f3661,f3662,f3664,f3753,f3754,f3755,f3756,f3757,f3758,f3759,f3760,f3761,f3762,f3764,f3835,f3836,f3784,f3786,f3787,f3788,f3789,f3837,f3838,f3839,f3840,f3841,f3842,f3843,f3844,f3845,f3846,f3847,f3848,f3849,f3850,f3804,f3851,f3852,f3853,f3809,f3810,f3854,f3855,f3856,f3857,f3858,f3860,f3862,f3863,f3864,f3865,f3866,f3867,f3868,f3869,f3870,f3871,f3872,f3873,f3875,f3831,f3832,f3833,f3892,f4051,f3903,f3916,f3946,f3981,f3984,f4027,f4025,f3991])).
fof(f3991,plain,(
  ( ! [X24,X23,X21,X22] : (s(bool,'T_0') != s(bool,X22) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X23),s(fun('type.num.num',bool),X21)),'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,X22))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X21,'type.num.num'))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f2724,f1093])).
fof(f2724,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.bool.COND_3'(s(bool,'F_0'),s(fun('type.num.num',bool),X0),s(fun('type.num.num',bool),X1)),'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f2722,f127])).
fof(f4025,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') != s(bool,X19) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X18,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X20),s(bool,X19)))) ) | ($spl6 | $spl34)),
  inference(duplicate_literal_removal,[],[f3990])).
fof(f3990,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') != s(bool,X19) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X18,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X20),s(bool,X19))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X18,'type.num.num'))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f2722,f1093])).
fof(f4083,plain,(
  ( ! [X13,X11] : (s(bool,X13) = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num'))) ) | $spl44),
  inference(cnf_transformation,[],[f4083_D])).
fof(f4083_D,plain,(
  ( ! [X13,X11] : (s(bool,X13) = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num'))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f4027,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'T_0') != s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X12)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f3988])).
fof(f3988,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,'T_0') != s(bool,X12) | s(bool,X13) = s(bool,happ(s(fun('type.num.num',bool),X11),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X12))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X11,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1130,f1093])).
fof(f4061,plain,(
  ( ! [X4,X2,X3,X1] : (s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X4),s(bool,X1))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2)))) ) | $spl42),
  inference(cnf_transformation,[],[f4061_D])).
fof(f4061_D,plain,(
  ( ! [X4,X2,X3,X1] : (s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X4),s(bool,X1))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2)))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f4051,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X4),s(bool,X1)))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f3893])).
fof(f3893,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num')) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X4),s(bool,X1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num'))) ) | $spl6),
  inference(superposition,[],[f1093,f1093])).
fof(f3775,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3))))))))))))))))))))))) | $spl38),
  inference(cnf_transformation,[],[f3775_D])).
fof(f3775_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3))))))))))))))))))))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f3777,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl41),
  inference(cnf_transformation,[],[f3777_D])).
fof(f3777_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f3768,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f125,f158])).
fof(f2722,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) | $spl34),
  inference(cnf_transformation,[],[f2722_D])).
fof(f2722_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2723,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num'))) ) | $spl36),
  inference(cnf_transformation,[],[f2723_D])).
fof(f2723_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num'))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2718,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X0,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) | $spl6),
  inference(condensation,[],[f2707])).
fof(f2707,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') != s(bool,happ(s(fun('type.num.num',bool),X6),s('type.num.num',sK1))) | s(bool,X7) = s(bool,happ(s(fun('type.num.num',bool),X5),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X5,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X6,'type.num.num')) | s(bool,'T_0') = s(bool,happ(s(fun('type.num.num',bool),X5),s('type.num.num',sK1)))) ) | $spl6),
  inference(superposition,[],[f1130,f1082])).
fof(f2701,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK29('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl32),
  inference(cnf_transformation,[],[f2701_D])).
fof(f2701_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK29('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f1154,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f1154_D])).
fof(f1154_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2703,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK29('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f2702])).
fof(f2702,plain,(
  ( ! [X37,X35,X38,X36,X34] : (p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK29('T_0',X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | s(bool,X34) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f2689,f940])).
fof(f2689,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,X34)) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK29('T_0',X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | s(bool,X34) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f138,f225])).
fof(f2700,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK29('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f2699])).
fof(f2699,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK29('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f2688,f940])).
fof(f2688,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK29('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f138,f225])).
fof(f2583,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK28('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl30),
  inference(cnf_transformation,[],[f2583_D])).
fof(f2583_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK28('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2585,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK28('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f2584])).
fof(f2584,plain,(
  ( ! [X37,X35,X38,X36,X34] : (p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK28('T_0',X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | s(bool,X34) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f2572,f940])).
fof(f2572,plain,(
  ( ! [X37,X35,X38,X36,X34] : (~p(s(bool,X34)) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK28('T_0',X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | s(bool,X34) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f136,f225])).
fof(f2582,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK28('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f2581])).
fof(f2581,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK28('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f2571,f940])).
fof(f2571,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK28('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f136,f225])).
fof(f2053,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X23,'type.num.num'),X22,'type.num.num'))) ) | $spl28),
  inference(cnf_transformation,[],[f2053_D])).
fof(f2053_D,plain,(
  ( ! [X23,X22] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X23,'type.num.num'),X22,'type.num.num'))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2040,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num'),X1,'type.num.num'))) ) | $spl22),
  inference(duplicate_literal_removal,[],[f1998])).
fof(f1998,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num'),X1,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl22),
  inference(superposition,[],[f124,f1870])).
fof(f1870,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'),X0,'type.num.num')) | s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X2)) ) | $spl22),
  inference(subsumption_resolution,[],[f1865,f106])).
fof(f1865,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'),X0,'type.num.num')) | s(bool,X2) = s(bool,happ(s(fun('type.num.num',bool),X0),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X2)) ) | $spl22),
  inference(superposition,[],[f1863,f225])).
fof(f1863,plain,(
  ( ! [X33,X34] : (~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num',sK1)))) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X33,'type.num.num'),X34,'type.num.num'))) ) | $spl22),
  inference(forward_demodulation,[],[f1859,f1829])).
fof(f1859,plain,(
  ( ! [X33,X34] : (~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num',sK1)))) | s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X33,'type.num.num')) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X33,'type.num.num'),X34,'type.num.num'))) ) | $spl22),
  inference(superposition,[],[f134,f1829])).
fof(f2046,plain,(
  ( ! [X23,X21,X22] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X23,'type.num.num'),X22,'type.num.num')) | s(bool,'T_0') = s(bool,X21)) ) | $spl22),
  inference(duplicate_literal_removal,[],[f1956])).
fof(f1956,plain,(
  ( ! [X23,X21,X22] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X22),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X23,'type.num.num'),X22,'type.num.num')) | s(bool,'T_0') = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) ) | $spl22),
  inference(superposition,[],[f1870,f124])).
fof(f2052,plain,(
  ( ! [X4,X2,X3,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num'),X1,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'),X2,'type.num.num'))) ) | $spl26),
  inference(cnf_transformation,[],[f2052_D])).
fof(f2052_D,plain,(
  ( ! [X4,X2,X3,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num'),X1,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'),X2,'type.num.num'))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2051,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'),X2,'type.num.num')) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num'),X1,'type.num.num'))) ) | $spl22),
  inference(duplicate_literal_removal,[],[f1951])).
fof(f1951,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num'),X2,'type.num.num')) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK27(sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X4,'type.num.num'),X1,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl22),
  inference(superposition,[],[f1870,f1870])).
fof(f1830,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK27(X2,X1,X0))))) ) | $spl24),
  inference(cnf_transformation,[],[f1830_D])).
fof(f1830_D,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK27(X2,X1,X0))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1828,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num')) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK27(X2,X1,X0))))) ) | $spl6),
  inference(subsumption_resolution,[],[f1818,f767])).
fof(f1818,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),X3),s('type.num.num',sK1)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X3,'type.num.num')) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK27(X2,X1,X0))))) ) | $spl6),
  inference(superposition,[],[f135,f1082])).
fof(f1230,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f1157,f106])).
fof(f1157,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f1154,f109])).
fof(f1156,plain,(
  ( ! [X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X16,'type.num.num'))) ) | $spl20),
  inference(cnf_transformation,[],[f1156_D])).
fof(f1156_D,plain,(
  ( ! [X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X16,'type.num.num'))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1142,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f1102])).
fof(f1102,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f124,f1082])).
fof(f1148,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X16,'type.num.num')) | s(bool,'T_0') = s(bool,X15)) ) | $spl6),
  inference(duplicate_literal_removal,[],[f1088])).
fof(f1088,plain,(
  ( ! [X15,X16] : (s(bool,'F_0') = s(bool,happ(s(fun('type.num.num',bool),X16),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X16,'type.num.num')) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) ) | $spl6),
  inference(superposition,[],[f1082,f124])).
fof(f1155,plain,(
  ( ! [X2,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num'))) ) | $spl18),
  inference(cnf_transformation,[],[f1155_D])).
fof(f1155_D,plain,(
  ( ! [X2,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num')) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num'))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1153,plain,(
  ( ! [X2,X0,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num')) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num'))) ) | $spl6),
  inference(duplicate_literal_removal,[],[f1083])).
fof(f1083,plain,(
  ( ! [X2,X0,X1] : (s(bool,happ(s(fun('type.num.num',bool),X1),s('type.num.num',sK1))) = s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK1))) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'type.num.num')) | s(bool,'T_0') = s(bool,X0) | s('type.num.num',sK1) = s('type.num.num',sK27('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X1,'type.num.num')) | s(bool,'T_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f1082,f1082])).
fof(f681,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3) | $spl12),
  inference(cnf_transformation,[],[f681_D])).
fof(f681_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f683,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) | $spl15),
  inference(cnf_transformation,[],[f683_D])).
fof(f683_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f679,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK1) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK3) | $spl6),
  inference(superposition,[],[f125,f160])).
fof(f231,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f231_D])).
fof(f231_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f233,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f233_D])).
fof(f233_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f230,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f124])).
fof(f154,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1))) | $spl0),
  inference(cnf_transformation,[],[f154_D])).
fof(f154_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f160,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl6),
  inference(cnf_transformation,[],[f160_D])).
fof(f160_D,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f103,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1))) | (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) & s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3))))))))))))))))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),X3)))))))))))))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14])],[f85])).
fof(f85,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) | ? [X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25,X26] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X15))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X20),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),X15))))))))))))))))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3))))))))))))))))))))))))))),
  inference(rectify,[],[f84])).
fof(f84,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) | ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3))))))))))))))))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3))))))))))))))))))))))))))),
  inference(nnf_transformation,[],[f82])).
fof(f82,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) <~> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3)))))))))))))))))))))))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3)))))))))))))))))))))))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X1))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X3)))))))))))))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X7))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),X9)))))))))))))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',X7))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),X9)))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_|49|5|split|67','thm.quantHeuristics.LIST_LENGTH_|49|5|split|67')).
fof(f158,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3))))))))))))))))))))))) | $spl4),
  inference(cnf_transformation,[],[f158_D])).
fof(f158_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3))))))))))))))))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f104,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),sK3))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f86])).
fof(f155,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1))) | $spl1),
  inference(cnf_transformation,[],[f155_D])).
fof(f155_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f156,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),X3)))))))))))))))))))))))) ) | $spl2),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),X3)))))))))))))))))))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f105,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X7,X5,X3,X13,X11,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),X3))))))))))))))))))))))) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num',sK1)))) )),
  inference(cnf_transformation,[],[f86])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 110
% Passive clauses: 725
% Generated clauses: 5318
% Final active clauses: 71
% Final passive clauses: 367
% Input formulas: 37
% Initial clauses: 51
% 
% Duplicate literals: 126
% Trivial inequalities: 18
% Fw subsumption resolutions: 61
% Fw demodulations: 947
% Bw demodulations: 81
% Condensations: 122
% Global subsumptions: 8
% 
% Simple tautologies: 32
% Equational tautologies: 27
% Forward subsumptions: 3190
% Fw demodulations to eq. taut.: 25
% Bw demodulations to eq. taut.: 24
% 
% Unit resulting resolution: 201
% Forward superposition: 1698
% Backward superposition: 1747
% Self superposition: 87
% Equality factoring: 34
% Equality resolution: 4
% 
% Split clauses: 27
% Split components: 54
% SAT solver clauses: 799
% SAT solver unit clauses: 187
% SAT solver binary clauses: 300
% 
% Sat splits: 27
% Sat splitting refutations: 10
% 
% Memory used [KB]: 11513
% Time elapsed: 0.289 s
% ------------------------------
% ------------------------------
% Success in time 1.59 s
