Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.integer
% (93080)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 204
% Passive clauses: 1921
% Generated clauses: 27422
% Final active clauses: 172
% Final passive clauses: 1453
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 1065
% Trivial inequalities: 275
% Fw subsumption resolutions: 4196
% Fw demodulations: 5969
% Bw demodulations: 29
% 
% Simple tautologies: 474
% Equational tautologies: 26
% Forward subsumptions: 11988
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 416
% Forward superposition: 8825
% Backward superposition: 6137
% Self superposition: 139
% Equality factoring: 61
% Equality resolution: 58
% 
% Split clauses: 772
% Split components: 1553
% SAT solver clauses: 1749
% SAT solver unit clauses: 13
% SAT solver binary clauses: 127
% 
% Sat splits: 772
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 1748
% TWLsolver calls for satisfiability: 252
% 
% Memory used [KB]: 11641
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f2584,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2575,f163,f168,f75,f121,f85,f131,f531,f542,f77,f123,f82,f128,f1005,f1029,f79,f126,f110,f140,f2451,f2461,f153,f157,f74,f117,f86,f130,f1619,f1623,f1621,f142,f145,f73,f119,f947,f959,f106,f138,f1637,f1639,f80,f127,f2423,f78,f125,f1216,f1233,f111,f141])).
fof(f141,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) | $spl32),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f111,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X11,X6,X7,X10] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',X6)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',X10))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X10)))))))),
  file('thm.integer.INT_LT_ADD|49|','thm.integer.INT_LT_ADD2')).
fof(f1233,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) | $spl148),
  inference(cnf_transformation,[],[f1233_D])).
fof(f1233_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f1216,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) | ($spl10 | $spl32)),
  inference(superposition,[],[f141,f126])).
fof(f125,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f125_D])).
fof(f125_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f78,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.INT_LT_ADD|49|',aHL_FALSITY)).
fof(f2423,plain,(
  $false | ($spl4 | $spl9 | $spl36 | $spl70 | $spl148 | $spl228)),
  inference(subsumption_resolution,[],[f2422,f121])).
fof(f2422,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl9 | $spl36 | $spl70 | $spl148 | $spl228)),
  inference(forward_demodulation,[],[f2421,f1639])).
fof(f2421,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | ($spl4 | $spl9 | $spl36 | $spl70 | $spl148)),
  inference(subsumption_resolution,[],[f2420,f121])).
fof(f2420,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | ($spl9 | $spl36 | $spl70 | $spl148)),
  inference(forward_demodulation,[],[f2419,f542])).
fof(f2419,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | ($spl9 | $spl36 | $spl148)),
  inference(subsumption_resolution,[],[f2396,f125])).
fof(f2396,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | ($spl36 | $spl148)),
  inference(superposition,[],[f1233,f157])).
fof(f127,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f127_D])).
fof(f127_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f80,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integer.INT_LT_ADD|49|',aHL_BOOL_CASES)).
fof(f1639,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl228),
  inference(cnf_transformation,[],[f1639_D])).
fof(f1639_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f1637,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | ($spl12 | $spl225)),
  inference(trivial_inequality_removal,[],[f1632])).
fof(f1632,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | ($spl12 | $spl225)),
  inference(superposition,[],[f1621,f127])).
fof(f138,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) | $spl26),
  inference(cnf_transformation,[],[f138_D])).
fof(f138_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f106,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int',X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int',X1)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int',X1)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) | s('type.integer.int',X6) = s('type.integer.int',X7)))),
  file('thm.integer.INT_LT_ADD|49|','thm.integer.INT_LE_LT')).
fof(f959,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | s('type.integer.int',X2) = s('type.integer.int',X3) | s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) | $spl92),
  inference(cnf_transformation,[],[f959_D])).
fof(f959_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | s('type.integer.int',X2) = s('type.integer.int',X3) | s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f947,plain,(
  ( ! [X2,X3] : (s('type.integer.int',X2) = s('type.integer.int',X3) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) | ($spl20 | $spl26)),
  inference(resolution,[],[f138,f131])).
fof(f119,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) | $spl2),
  inference(cnf_transformation,[],[f119_D])).
fof(f119_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f73,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f45])).
fof(f45,plain,(
  ? [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))),
  file('thm.integer.INT_LT_ADD|49|','thm.integer.INT_LT_ADD|49|')).
fof(f145,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl34),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f142,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | ($spl2 | $spl14)),
  inference(resolution,[],[f128,f119])).
fof(f1621,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | $spl225),
  inference(cnf_transformation,[],[f1621_D])).
fof(f1621_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) <=> ~$spl225),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl225])])).
fof(f1623,plain,(
  s('type.integer.int',sK0) = s('type.integer.int',sK1) | $spl226),
  inference(cnf_transformation,[],[f1623_D])).
fof(f1623_D,plain,(
  s('type.integer.int',sK0) = s('type.integer.int',sK1) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f1619,plain,(
  s('type.integer.int',sK0) = s('type.integer.int',sK1) | s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | ($spl4 | $spl34 | $spl92)),
  inference(subsumption_resolution,[],[f1600,f121])).
fof(f1600,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int',sK0) = s('type.integer.int',sK1) | s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))) | ($spl34 | $spl92)),
  inference(superposition,[],[f959,f145])).
fof(f130,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f130_D])).
fof(f130_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f86,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.integer.INT_LT_ADD|49|','thm.bool.EQ_CLAUSES|split|3')).
fof(f117,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl1),
  inference(cnf_transformation,[],[f117_D])).
fof(f117_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f74,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(cnf_transformation,[],[f54])).
fof(f157,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl36),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f153,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl1 | $spl18)),
  inference(resolution,[],[f130,f117])).
fof(f2461,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl314),
  inference(cnf_transformation,[],[f2461_D])).
fof(f2461_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f2451,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl36 | $spl226)),
  inference(backward_demodulation,[],[f1623,f157])).
fof(f140,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))) ) | $spl30),
  inference(cnf_transformation,[],[f140_D])).
fof(f140_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f110,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X2))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6,X7,X10] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',X10))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X10)))))),
  file('thm.integer.INT_LT_ADD|49|','thm.integer.INT_LT_LADD')).
fof(f126,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl10),
  inference(cnf_transformation,[],[f126_D])).
fof(f126_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f79,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.integer.INT_LT_ADD|49|','thm.integer.INT_ADD_RID')).
fof(f1029,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) ) | $spl102),
  inference(cnf_transformation,[],[f1029_D])).
fof(f1029_D,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f1005,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) ) | ($spl10 | $spl30)),
  inference(superposition,[],[f140,f126])).
fof(f128,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f128_D])).
fof(f128_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f82,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.integer.INT_LT_ADD|49|','thm.bool.EQ_CLAUSES|split|1')).
fof(f123,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | $spl6),
  inference(cnf_transformation,[],[f123_D])).
fof(f123_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f77,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(cnf_transformation,[],[f21])).
fof(f21,axiom,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  file('thm.integer.INT_LT_ADD|49|','thm.integer.INT_LT_|48||49|')).
fof(f542,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl70),
  inference(cnf_transformation,[],[f542_D])).
fof(f542_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f531,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl6 | $spl14)),
  inference(resolution,[],[f123,f128])).
fof(f131,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) ) | $spl20),
  inference(cnf_transformation,[],[f131_D])).
fof(f131_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f85,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f57])).
fof(f121,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f121_D])).
fof(f121_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f75,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_LT_ADD|49|',aHL_TRUTH)).
fof(f168,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl39),
  inference(cnf_transformation,[],[f168_D])).
fof(f168_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f163,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl4 | $spl20)),
  inference(resolution,[],[f131,f121])).
fof(f2575,plain,(
  $false | ($spl39 | $spl70 | $spl102 | $spl314)),
  inference(subsumption_resolution,[],[f2574,f168])).
fof(f2574,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl70 | $spl102 | $spl314)),
  inference(forward_demodulation,[],[f2548,f542])).
fof(f2548,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl102 | $spl314)),
  inference(superposition,[],[f2461,f1029])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 70
% Passive clauses: 166
% Generated clauses: 2494
% Final active clauses: 42
% Final passive clauses: 70
% Input formulas: 21
% Initial clauses: 39
% 
% Duplicate literals: 156
% Trivial inequalities: 44
% Fw subsumption resolutions: 172
% Fw demodulations: 228
% Bw demodulations: 47
% Condensations: 231
% Global subsumptions: 4
% 
% Simple tautologies: 54
% Equational tautologies: 20
% Forward subsumptions: 1026
% 
% Binary resolution: 53
% Forward superposition: 672
% Backward superposition: 555
% Self superposition: 41
% Equality factoring: 34
% Equality resolution: 7
% 
% Split clauses: 75
% Split components: 156
% SAT solver clauses: 419
% SAT solver unit clauses: 55
% SAT solver binary clauses: 29
% SAT solver learnt clauses: 10
% SAT solver learnt literals: 1
% 
% Sat splits: 75
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 400
% TWLsolver calls for satisfiability: 169
% 
% Memory used [KB]: 2302
% Time elapsed: 0.046 s
% ------------------------------
% ------------------------------
% Success in time 0.659 s
