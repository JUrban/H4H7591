Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.measure
% (54941)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 143
% Passive clauses: 1723
% Generated clauses: 23212
% Final active clauses: 97
% Final passive clauses: 1423
% Input formulas: 16
% Initial clauses: 24
% 
% Duplicate literals: 1248
% Trivial inequalities: 407
% Fw subsumption resolutions: 3653
% Fw demodulations: 2744
% Bw demodulations: 45
% 
% Simple tautologies: 476
% Equational tautologies: 59
% Forward subsumptions: 11039
% 
% Binary resolution: 196
% Forward superposition: 7143
% Backward superposition: 7136
% Self superposition: 237
% Equality factoring: 167
% Equality resolution: 26
% 
% Split clauses: 1257
% Split components: 2572
% SAT solver clauses: 1974
% SAT solver unit clauses: 58
% SAT solver binary clauses: 255
% 
% Sat splits: 1257
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1973
% TWLsolver calls for satisfiability: 162
% 
% Memory used [KB]: 9850
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.measure
% (54976)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 78
% Passive clauses: 233
% Generated clauses: 10051
% Final active clauses: 67
% Final passive clauses: 145
% Input formulas: 16
% Initial clauses: 24
% 
% Duplicate literals: 1336
% Trivial inequalities: 149
% Fw subsumption resolutions: 942
% Fw demodulations: 258
% Bw demodulations: 20
% Condensations: 2058
% 
% Simple tautologies: 233
% Equational tautologies: 61
% Forward subsumptions: 4114
% 
% Binary resolution: 31
% Forward superposition: 2092
% Backward superposition: 2591
% Self superposition: 214
% Equality factoring: 168
% Equality resolution: 21
% 
% Split clauses: 147
% Split components: 301
% SAT solver clauses: 704
% SAT solver unit clauses: 35
% SAT solver binary clauses: 65
% 
% Sat splits: 147
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 704
% TWLsolver calls for satisfiability: 150
% 
% Memory used [KB]: 6652
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.measure
% (55013)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 308
% Passive clauses: 2925
% Generated clauses: 121906
% Final active clauses: 123
% Final passive clauses: 636
% Input formulas: 16
% Initial clauses: 24
% Discarded non-redundant clauses: 258
% 
% Duplicate literals: 9083
% Trivial inequalities: 951
% Fw subsumption resolutions: 13183
% Fw demodulations: 11453
% Bw demodulations: 1750
% Condensations: 20487
% Global subsumptions: 641
% 
% Simple tautologies: 1413
% Equational tautologies: 748
% Forward subsumptions: 60269
% Fw demodulations to eq. taut.: 11
% Bw demodulations to eq. taut.: 23
% 
% Unit resulting resolution: 2724
% Forward superposition: 33861
% Backward superposition: 25942
% Self superposition: 897
% Equality factoring: 625
% Equality resolution: 97
% 
% Split clauses: 440
% Split components: 889
% SAT solver clauses: 5012
% SAT solver unit clauses: 51
% SAT solver binary clauses: 167
% 
% Sat splits: 440
% Sat splitting refutations: 564
% 
% Memory used [KB]: 53218
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f302,plain,(
  $false),
  inference(subsumption_resolution,[],[f301,f70])).
fof(f70,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.measure.STRONG_MEASURE_SPACE_SUBSET','thm.bool.TRUTH')).
fof(f301,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f300,f74])).
fof(f74,plain,(
  s(bool,'T_0') = s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))),
  inference(resolution,[],[f50,f67])).
fof(f67,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.measure.STRONG_MEASURE_SPACE_SUBSET','thm.bool.EQ_CLAUSES|split|1')).
fof(f50,plain,(
  p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(sK0,bool),sK2),s(fun(sK0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) & ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f40])).
fof(f40,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X2),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X2))),s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) & ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X2),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X2))),s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))))))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X2),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X2))),s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))))))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ~! [X0] : ! [X1,X2] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X2),s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X2))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X2),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X2))),s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X8),s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),'const.pred_set.POW_1'(s(fun(X6,bool),X8))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X6,bool),bool),'const.pred_set.POW_1'(s(fun(X6,bool),X8))),s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X8),s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),'const.pred_set.POW_1'(s(fun(X6,bool),X8))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7))))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X6,bool),X8),s('type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X6,bool),bool),'const.pred_set.POW_1'(s(fun(X6,bool),X8))),s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))))))))),
  file('thm.measure.STRONG_MEASURE_SPACE_SUBSET','thm.measure.STRONG_MEASURE_SPACE_SUBSET')).
fof(f300,plain,(
  ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(subsumption_resolution,[],[f299,f72])).
fof(f72,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f58])).
fof(f58,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X9] : (s(X6,X9) = s(X6,X9) <=> p(s(bool,'T_0')))),
  file('thm.measure.STRONG_MEASURE_SPACE_SUBSET','thm.bool.REFL_CLAUSE')).
fof(f299,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(forward_demodulation,[],[f297,f144])).
fof(f144,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))),
  inference(resolution,[],[f51,f67])).
fof(f51,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))),
  inference(cnf_transformation,[],[f43])).
fof(f297,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1)))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))),
  inference(equality_resolution,[],[f207])).
fof(f207,plain,(
  ( ! [X0] : (s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) != s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0)))))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0))))) )),
  inference(subsumption_resolution,[],[f206,f57])).
fof(f57,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X1))))))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X1))))))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : ! [X1] : p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.pred_set.POW_1'(s(fun(X0,bool),X1))))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X11] : p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X11),s(fun(fun(X6,bool),bool),'const.pred_set.POW_1'(s(fun(X6,bool),X11))))))))),
  file('thm.measure.STRONG_MEASURE_SPACE_SUBSET','thm.measure.POW_SIGMA_ALGEBRA')).
fof(f206,plain,(
  ( ! [X0] : (~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2)))))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0)))))) | s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) != s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0))))) )),
  inference(forward_demodulation,[],[f205,f55])).
fof(f55,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X1),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),'type.realax.real'),X3)))))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2,X3] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X1),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),'type.realax.real'),X3)))))))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X1),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),'type.realax.real'),X3)))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X11,X12,X13] : s(fun(X6,bool),X11) = s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X6,bool),X11),s('type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X6,bool),bool),X12),s(fun(fun(X6,bool),'type.realax.real'),X13)))))))),
  file('thm.measure.STRONG_MEASURE_SPACE_SUBSET','thm.measure.m_space_def')).
fof(f205,plain,(
  ( ! [X0] : (~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))),s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2)))))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0)))))) | s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) != s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0))))) )),
  inference(forward_demodulation,[],[f204,f54])).
fof(f54,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(fun(X0,bool),bool),X2) = s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X1),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),'type.realax.real'),X3)))))))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1,X2,X3] : s(fun(fun(X0,bool),bool),X2) = s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X1),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),'type.realax.real'),X3)))))))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(fun(X0,bool),bool),X2) = s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X1),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),'type.realax.real'),X3)))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X11,X12,X13] : s(fun(fun(X6,bool),bool),X12) = s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X6,bool),X11),s('type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X6,bool),bool),X12),s(fun(fun(X6,bool),'type.realax.real'),X13)))))))),
  file('thm.measure.STRONG_MEASURE_SPACE_SUBSET','thm.measure.measurable_sets_def')).
fof(f204,plain,(
  ( ! [X0] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0)))))) | s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) != s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))))))))) )),
  inference(forward_demodulation,[],[f203,f54])).
fof(f203,plain,(
  ( ! [X0] : (s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))) != s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0)))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0)))))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))))))))) )),
  inference(forward_demodulation,[],[f192,f53])).
fof(f53,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(fun(X0,bool),'type.realax.real'),X3) = s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X1),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),'type.realax.real'),X3)))))))) )),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2,X3] : s(fun(fun(X0,bool),'type.realax.real'),X3) = s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X1),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),'type.realax.real'),X3)))))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0] : ! [X1,X2,X3] : s(fun(fun(X0,bool),'type.realax.real'),X3) = s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X0,bool),X1),s('type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X0,bool),bool),X2),s(fun(fun(X0,bool),'type.realax.real'),X3)))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : ! [X11,X12,X13] : s(fun(fun(X6,bool),'type.realax.real'),X13) = s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(X6,bool),X11),s('type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(X6,bool),bool),X12),s(fun(fun(X6,bool),'type.realax.real'),X13)))))))),
  file('thm.measure.STRONG_MEASURE_SPACE_SUBSET','thm.measure.measure_def')).
fof(f192,plain,(
  ( ! [X0] : (~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0)))) | s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0))) != s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),X0)))))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))),s(fun(fun(sK0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))))))))) )),
  inference(resolution,[],[f52,f56])).
fof(f56,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) | s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) != s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) | s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) != s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))) | p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) | s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) != s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) | ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) | p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(ennf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) & s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ! [X0] : ! [X1,X2] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))),s(fun(fun(X0,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2)))))) & s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))) = s(fun(fun(X0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X2))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X14,X15] : ((p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.measure.m_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X14))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X14)))))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X14))),s(fun(fun(X6,bool),bool),'const.measure.measurable_sets_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X15)))))) & s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X14))) = s(fun(fun(X6,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X15))) & p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X15))))) => p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X14)))))),
  file('thm.measure.STRONG_MEASURE_SPACE_SUBSET','thm.measure.MEASURE_DOWN')).
fof(f52,plain,(
  ~p(s(bool,'const.measure.measure_space_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),'const.pair.,_2'(s(fun(sK0,bool),sK2),s('type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real')),'const.pair.,_2'(s(fun(fun(sK0,bool),bool),'const.pred_set.POW_1'(s(fun(sK0,bool),sK2))),s(fun(fun(sK0,bool),'type.realax.real'),'const.measure.measure_1'(s('type.pair.prod'(fun(sK0,bool),'type.pair.prod'(fun(fun(sK0,bool),bool),fun(fun(sK0,bool),'type.realax.real'))),sK1))))))))))),
  inference(cnf_transformation,[],[f43])).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 29
% Passive clauses: 32
% Generated clauses: 233
% Final active clauses: 25
% Final passive clauses: 4
% Input formulas: 16
% Initial clauses: 23
% 
% Selected by SInE selection: 15
% SInE iterations: 1
% 
% Trivial inequalities: 14
% Fw subsumption resolutions: 28
% Fw demodulations: 49
% Bw demodulations: 4
% 
% Simple tautologies: 2
% Equational tautologies: 1
% Forward subsumptions: 125
% 
% Binary resolution: 18
% Forward superposition: 51
% Backward superposition: 65
% Equality resolution: 1
% 
% SAT solver clauses: 1
% 
% Memory used [KB]: 1151
% Time elapsed: 0.007 s
% ------------------------------
% ------------------------------
% Success in time 11.722 s
