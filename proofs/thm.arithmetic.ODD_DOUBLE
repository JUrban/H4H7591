Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f184,plain,(
  $false),
  inference(subsumption_resolution,[],[f179,f142])).
fof(f142,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))) )),
  inference(resolution,[],[f54,f64])).
fof(f64,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) <=> ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) <=> ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))) <=> ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X6)))))),
  file('thm.arithmetic.ODD_DOUBLE','thm.arithmetic.EVEN_ODD')).
fof(f54,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))))))),
  file('thm.arithmetic.ODD_DOUBLE','thm.arithmetic.EVEN_DOUBLE')).
fof(f179,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))))),
  inference(resolution,[],[f49,f67])).
fof(f67,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) <=> ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) <=> ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) <=> ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X6)))))),
  file('thm.arithmetic.ODD_DOUBLE','thm.arithmetic.ODD|split|1')).
fof(f49,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))))))),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',sK0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f36])).
fof(f36,plain,(
  ? [X0] : ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ~! [X0] : p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X6))))))))),
  file('thm.arithmetic.ODD_DOUBLE','thm.arithmetic.ODD_DOUBLE')).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 26
% Passive clauses: 56
% Generated clauses: 135
% Final active clauses: 26
% Final passive clauses: 22
% Input formulas: 16
% Initial clauses: 24
% 
% Duplicate literals: 1
% Trivial inequalities: 5
% Fw subsumption resolutions: 9
% Fw demodulations: 4
% 
% Simple tautologies: 12
% Equational tautologies: 3
% Forward subsumptions: 48
% 
% Binary resolution: 39
% Forward superposition: 26
% Backward superposition: 22
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 1
% 
% Memory used [KB]: 639
% Time elapsed: 0.015 s
% ------------------------------
% ------------------------------
% Success in time 0.033 s
