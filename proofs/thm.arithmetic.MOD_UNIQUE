Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (116601)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 306
% Passive clauses: 4306
% Generated clauses: 23652
% Final active clauses: 176
% Final passive clauses: 1855
% Input formulas: 25
% Initial clauses: 43
% 
% Duplicate literals: 278
% Trivial inequalities: 115
% Fw subsumption resolutions: 1004
% Fw demodulations: 6500
% Bw demodulations: 43
% 
% Simple tautologies: 179
% Equational tautologies: 21
% Forward subsumptions: 11206
% Fw demodulations to eq. taut.: 32
% 
% Binary resolution: 266
% Forward superposition: 7761
% Backward superposition: 7155
% Self superposition: 79
% Equality factoring: 32
% Equality resolution: 27
% 
% Split clauses: 194
% Split components: 395
% SAT solver clauses: 317
% SAT solver unit clauses: 3
% SAT solver binary clauses: 38
% 
% Sat splits: 194
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 316
% TWLsolver calls for satisfiability: 117
% 
% Memory used [KB]: 19957
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% (116624)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 162
% Passive clauses: 1706
% Generated clauses: 15059
% Final active clauses: 136
% Final passive clauses: 1406
% Input formulas: 25
% Initial clauses: 43
% 
% Duplicate literals: 107
% Trivial inequalities: 46
% Fw subsumption resolutions: 328
% Fw demodulations: 4866
% Bw demodulations: 164
% Condensations: 126
% Global subsumptions: 4
% 
% Simple tautologies: 87
% Equational tautologies: 18
% Forward subsumptions: 5629
% Fw demodulations to eq. taut.: 20
% 
% Binary resolution: 77
% Forward superposition: 4478
% Backward superposition: 2975
% Self superposition: 53
% Equality factoring: 26
% Equality resolution: 20
% 
% Split clauses: 60
% Split components: 125
% SAT solver clauses: 2158
% SAT solver unit clauses: 64
% SAT solver binary clauses: 28
% SAT solver learnt clauses: 8
% 
% Sat splits: 60
% 
% TWLsolver clauses: 2142
% TWLsolver calls for satisfiability: 258
% 
% Memory used [KB]: 18549
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.arithmetic
% (116643)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 809
% Passive clauses: 8867
% Generated clauses: 90171
% Final active clauses: 121
% Final passive clauses: 784
% Input formulas: 25
% Initial clauses: 43
% 
% Duplicate literals: 167
% Trivial inequalities: 268
% Fw subsumption resolutions: 3115
% Fw demodulations: 36402
% Bw demodulations: 5622
% Condensations: 112
% Global subsumptions: 2398
% 
% Simple tautologies: 158
% Equational tautologies: 389
% Forward subsumptions: 34898
% Fw demodulations to eq. taut.: 281
% Bw demodulations to eq. taut.: 12
% 
% Unit resulting resolution: 9006
% Forward superposition: 14037
% Backward superposition: 13501
% Self superposition: 84
% Equality factoring: 28
% Equality resolution: 45
% 
% Split clauses: 150
% Split components: 301
% SAT solver clauses: 14020
% SAT solver unit clauses: 397
% SAT solver binary clauses: 5564
% 
% Sat splits: 150
% Sat splitting refutations: 2452
% 
% Memory used [KB]: 149293
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.arithmetic
% (116910)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1808
% Passive clauses: 34975
% Generated clauses: 110181
% Final active clauses: 1148
% Final passive clauses: 22350
% Input formulas: 25
% Initial clauses: 41
% 
% Selected by SInE selection: 23
% SInE iterations: 1
% 
% Duplicate literals: 92
% Trivial inequalities: 1563
% Fw subsumption resolutions: 1308
% Fw demodulations: 25554
% Bw demodulations: 238
% 
% Simple tautologies: 108
% Equational tautologies: 6
% Forward subsumptions: 47154
% Fw demodulations to eq. taut.: 57
% 
% Binary resolution: 972
% Forward superposition: 58580
% Backward superposition: 19721
% Self superposition: 11
% Equality resolution: 550
% 
% Split clauses: 341
% Split components: 682
% SAT solver clauses: 358
% SAT solver unit clauses: 6
% SAT solver binary clauses: 131
% 
% Sat splits: 341
% Sat splitting refutations: 16
% 
% Memory used [KB]: 49636
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.arithmetic
% (117012)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 105
% Passive clauses: 2125
% Generated clauses: 13235
% Final active clauses: 102
% Final passive clauses: 2010
% Input formulas: 25
% Initial clauses: 43
% 
% Duplicate literals: 69
% Trivial inequalities: 36
% Fw subsumption resolutions: 133
% Fw demodulations: 3268
% Bw demodulations: 9
% 
% Simple tautologies: 95
% Equational tautologies: 110
% Forward subsumptions: 7052
% Fw demodulations to eq. taut.: 210
% 
% Unit resulting resolution: 2447
% Forward superposition: 4066
% Backward superposition: 2991
% Self superposition: 139
% Equality factoring: 18
% Equality resolution: 12
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 2131
% SAT solver unit clauses: 82
% SAT solver binary clauses: 589
% 
% Sat splits: 4
% 
% Memory used [KB]: 11897
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f10864,plain,(
  $false),
  inference(subsumption_resolution,[],[f147,f10838])).
fof(f10838,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num',sK0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4)))))))) )),
  inference(superposition,[],[f10713,f118])).
fof(f118,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X10] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X6)))))),
  file('thm.arithmetic.MOD_UNIQUE','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f10713,plain,(
  ( ! [X2,X3] : (s('type.num.num',sK0) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f10685,f118])).
fof(f10685,plain,(
  ( ! [X0] : (s('type.num.num',sK0) != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f10676,f89])).
fof(f89,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.arithmetic.MOD_UNIQUE','thm.arithmetic.ADD_|48|')).
fof(f10676,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f10552,f89])).
fof(f10552,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(resolution,[],[f4543,f90])).
fof(f90,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X6] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))),
  file('thm.arithmetic.MOD_UNIQUE','thm.prim_rec.LESS_|48|')).
fof(f4543,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f4533,f122])).
fof(f122,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(nnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X10,X6,X11] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X11))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))) <=> s('type.num.num',X6) = s('type.num.num',X10))),
  file('thm.arithmetic.MOD_UNIQUE','thm.arithmetic.EQ_MONO_ADD_EQ')).
fof(f4533,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(subsumption_resolution,[],[f4532,f226])).
fof(f226,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3),s('type.num.num',sK0)))))),
  inference(superposition,[],[f82,f117])).
fof(f117,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X10,X6] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X10))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X6)))),
  file('thm.arithmetic.MOD_UNIQUE','thm.arithmetic.ADD_SYM')).
fof(f82,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3),s('type.num.num',sK0))),s('type.num.num',sK2)))),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  (s('type.num.num',sK1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3),s('type.num.num',sK0))),s('type.num.num',sK2))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num',sK0))))) & s('type.num.num',sK2) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f53])).
fof(f53,plain,(
  ? [X0,X1,X2] : (? [X3] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.num.num',X2))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X0))))) & s('type.num.num',X2) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f27])).
fof(f27,plain,(
  ~! [X0,X1,X2] : (? [X3] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.num.num',X2))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X0))))) => s('type.num.num',X2) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (? [X9] : (s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X6))),s('type.num.num',X8))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X6))))) => s('type.num.num',X8) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (? [X9] : (s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X6))),s('type.num.num',X8))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X6))))) => s('type.num.num',X8) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))))),
  file('thm.arithmetic.MOD_UNIQUE','thm.arithmetic.MOD_UNIQUE')).
fof(f4532,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3),s('type.num.num',sK0))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(forward_demodulation,[],[f4527,f455])).
fof(f455,plain,(
  s('type.num.num',sK3) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),
  inference(forward_demodulation,[],[f454,f226])).
fof(f454,plain,(
  s('type.num.num',sK3) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3),s('type.num.num',sK0))))),s('type.num.num',sK0)))),
  inference(forward_demodulation,[],[f450,f117])).
fof(f450,plain,(
  s('type.num.num',sK3) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3),s('type.num.num',sK0))),s('type.num.num',sK2))),s('type.num.num',sK0)))),
  inference(trivial_inequality_removal,[],[f441])).
fof(f441,plain,(
  s('type.num.num',sK1) != s('type.num.num',sK1) | s('type.num.num',sK3) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3),s('type.num.num',sK0))),s('type.num.num',sK2))),s('type.num.num',sK0)))),
  inference(superposition,[],[f284,f82])).
fof(f284,plain,(
  ( ! [X0] : (s('type.num.num',sK1) != s('type.num.num',X0) | s('type.num.num',sK3) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',sK0)))) )),
  inference(subsumption_resolution,[],[f283,f85])).
fof(f85,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.MOD_UNIQUE',aHL_TRUTH)).
fof(f283,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num',sK1) != s('type.num.num',X0) | s('type.num.num',sK3) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',sK0)))) )),
  inference(forward_demodulation,[],[f231,f135])).
fof(f135,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num',sK0)))),
  inference(resolution,[],[f83,f97])).
fof(f97,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.arithmetic.MOD_UNIQUE','thm.bool.EQ_CLAUSES|split|1')).
fof(f83,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f64])).
fof(f231,plain,(
  ( ! [X0] : (s('type.num.num',sK1) != s('type.num.num',X0) | s('type.num.num',sK3) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',sK0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK2),s('type.num.num',sK0))))) )),
  inference(superposition,[],[f124,f82])).
fof(f124,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X0)))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num',X1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num',X3))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X0)))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num',X1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num',X3))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X0))))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num',X3))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X0))))) => s('type.num.num',X2) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6,X7,X9,X8] : ((s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X6))),s('type.num.num',X8))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X6))))) => s('type.num.num',X9) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num',X6))))),
  file('thm.arithmetic.MOD_UNIQUE','thm.arithmetic.arithmetic_232_prove_ltb')).
fof(f4527,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',sK0))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(superposition,[],[f4484,f92])).
fof(f92,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1] : (s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X7] : (s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X6))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X6))))))),
  file('thm.arithmetic.MOD_UNIQUE','thm.arithmetic.DIVISION')).
fof(f4484,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK0)))))) )),
  inference(superposition,[],[f4434,f117])).
fof(f4434,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',X0)))) )),
  inference(equality_resolution,[],[f158])).
fof(f158,plain,(
  ( ! [X2,X3] : (s('type.num.num',sK2) != s('type.num.num',X2) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num',X3)))) )),
  inference(superposition,[],[f84,f122])).
fof(f84,plain,(
  s('type.num.num',sK2) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK1),s('type.num.num',sK0)))),
  inference(cnf_transformation,[],[f64])).
fof(f147,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK4(sK2,sK0)),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(forward_demodulation,[],[f130,f86])).
fof(f86,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.arithmetic.MOD_UNIQUE','thm.arithmetic.ONE')).
fof(f130,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK4(sK2,sK0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(resolution,[],[f83,f120])).
fof(f120,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK4(X1,X0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK4(X1,X0)),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4])],[f60])).
fof(f60,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ? [X2] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(ennf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) => ? [X2] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X10,X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X10)))) => ? [X11] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),
  file('thm.arithmetic.MOD_UNIQUE','thm.arithmetic.LESS_ADD_|49|')).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 233
% Passive clauses: 2472
% Generated clauses: 10715
% Final active clauses: 214
% Final passive clauses: 2050
% Input formulas: 25
% Initial clauses: 43
% 
% Trivial inequalities: 84
% Fw subsumption resolutions: 45
% Bw subsumption resolutions: 16
% Fw demodulations: 3339
% Bw demodulations: 5
% Condensations: 7
% 
% Simple tautologies: 20
% Forward subsumptions: 4743
% Backward subsumptions: 213
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 74
% Forward superposition: 6539
% Backward superposition: 514
% Self superposition: 1
% Equality resolution: 89
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 2481
% SAT solver unit clauses: 58
% SAT solver binary clauses: 518
% 
% Sat splits: 7
% 
% Memory used [KB]: 10746
% Time elapsed: 0.763 s
% ------------------------------
% ------------------------------
% Success in time 17.192 s
