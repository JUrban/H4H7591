Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f10083,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f10082,f8393,f354,f628,f624,f355,f626,f625])).
fof(f625,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))) | $spl1),
  inference(cnf_transformation,[],[f625_D])).
fof(f625_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f626,plain,(
  ( ! [X2] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) ) | $spl2),
  inference(cnf_transformation,[],[f626_D])).
fof(f626_D,plain,(
  ( ! [X2] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f355,plain,(
  ( ! [X2] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK13))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK14),s('type.integer.int',sK13)))) )),
  inference(cnf_transformation,[],[f227])).
fof(f227,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))) | ! [X2] : s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15])],[f226])).
fof(f226,plain,(
  ? [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & ? [X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | ? [X3] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',X0)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | ! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))))))),
  inference(rectify,[],[f225])).
fof(f225,plain,(
  ? [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & ? [X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | ! [X2] : s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))))))),
  inference(nnf_transformation,[],[f171])).
fof(f171,plain,(
  ? [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & ? [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) <~> ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) <=> ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) <=> ? [X2] : s('type.integer.int',X1) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X6))) <=> ? [X8] : s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X6))) <=> ? [X8] : s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',X6)))))),
  file('thm.integer.INT_MOD_EQ|48|','thm.integer.INT_MOD_EQ|48|')).
fof(f624,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))) | $spl0),
  inference(cnf_transformation,[],[f624_D])).
fof(f624_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f628,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))) | $spl4),
  inference(cnf_transformation,[],[f628_D])).
fof(f628_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f354,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK15),s('type.integer.int',sK13))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK14),s('type.integer.int',sK13)))),
  inference(cnf_transformation,[],[f227])).
fof(f8393,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f8392,f353])).
fof(f353,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f227])).
fof(f8392,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f8341,f625])).
fof(f8341,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl4),
  inference(superposition,[],[f381,f628])).
fof(f381,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f180])).
fof(f180,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))),
  inference(ennf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : (~s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X6] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X7))))),
  file('thm.integer.INT_MOD_EQ|48|','thm.integer.INT_MOD_COMMON_FACTOR')).
fof(f10082,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f10081,f353])).
fof(f10081,plain,(
  s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f10070,f626])).
fof(f10070,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))),s('type.integer.int',sK13))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(trivial_inequality_removal,[],[f10069])).
fof(f10069,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))),s('type.integer.int',sK13))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(superposition,[],[f469,f624])).
fof(f469,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f191])).
fof(f191,plain,(
  ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))),
  inference(flattening,[],[f190])).
fof(f190,plain,(
  ! [X0,X1] : ((s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))),
  inference(ennf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1] : ((s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))),
  inference(flattening,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : ((~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6] : ((~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X6)))) => s('type.integer.int',X7) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X7),s('type.integer.int',X6))),s('type.integer.int',X6))))),
  file('thm.integer.INT_MOD_EQ|48|','thm.integer.INT_DIV_MUL_ID')).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 572
% Passive clauses: 3129
% Generated clauses: 9740
% Final active clauses: 538
% Final passive clauses: 2263
% Input formulas: 69
% Initial clauses: 264
% 
% Duplicate literals: 225
% Trivial inequalities: 14
% Fw subsumption resolutions: 700
% Fw demodulations: 519
% Bw demodulations: 31
% 
% Simple tautologies: 220
% Equational tautologies: 40
% Forward subsumptions: 4803
% 
% Binary resolution: 4709
% Factoring: 1244
% Forward superposition: 1071
% Backward superposition: 854
% Self superposition: 15
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 156
% Split components: 313
% SAT solver clauses: 342
% SAT solver unit clauses: 11
% SAT solver binary clauses: 61
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 156
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 337
% TWLsolver calls for satisfiability: 268
% 
% Memory used [KB]: 4861
% Time elapsed: 0.212 s
% ------------------------------
% ------------------------------
% Success in time 0.221 s
