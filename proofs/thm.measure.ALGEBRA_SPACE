Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.measure
% (90226)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 749
% Passive clauses: 8492
% Generated clauses: 19889
% Final active clauses: 740
% Final passive clauses: 7282
% Input formulas: 59
% Initial clauses: 236
% 
% Duplicate literals: 592
% Trivial inequalities: 126
% Fw subsumption resolutions: 2003
% Fw demodulations: 348
% Bw demodulations: 9
% 
% Simple tautologies: 272
% Equational tautologies: 58
% Forward subsumptions: 7412
% 
% Binary resolution: 10269
% Factoring: 1401
% Forward superposition: 2720
% Backward superposition: 4149
% Self superposition: 45
% Equality factoring: 28
% Equality resolution: 31
% 
% Split clauses: 583
% Split components: 1176
% SAT solver clauses: 1057
% SAT solver unit clauses: 26
% SAT solver binary clauses: 218
% 
% Sat splits: 583
% 
% TWLsolver clauses: 1056
% TWLsolver calls for satisfiability: 431
% 
% Memory used [KB]: 9466
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f8837,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f8836,f311,f574,f401,f611,f705,f707,f309,f572,f332,f583,f8824,f8826,f575,f577,f1082,f1092,f310,f570,f336,f585,f2442,f2443,f388,f599,f393,f607,f392,f608])).
fof(f608,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) ) | $spl36),
  inference(cnf_transformation,[],[f608_D])).
fof(f608_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f392,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f248])).
fof(f248,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X7] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X5,X6] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X6),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X5),s(fun(X0,bool),X6))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK15(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),sK15(X1,X0)))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK16(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK17(X1,X0)),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),sK16(X1,X0)),s(fun(X0,bool),sK17(X1,X0)))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | sP0(X0,X1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16,sK17])],[f247])).
fof(f247,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X7] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X5,X6] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X6),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X5),s(fun(X0,bool),X6))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | sP0(X0,X1)))),
  inference(rectify,[],[f246])).
fof(f246,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & (~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | sP0(X0,X1)))),
  inference(flattening,[],[f245])).
fof(f245,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))))) & ((~p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | ? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f607,plain,(
  ( ! [X0,X7,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) ) | $spl34),
  inference(cnf_transformation,[],[f607_D])).
fof(f607_D,plain,(
  ( ! [X0,X7,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f393,plain,(
  ( ! [X0,X7,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X7))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X7),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f248])).
fof(f599,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl18),
  inference(cnf_transformation,[],[f599_D])).
fof(f599_D,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f388,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(flattening,[],[f106])).
fof(f106,plain,(
  ! [X0] : ! [X1] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6] : ! [X18] : s(fun(X6,bool),X18) = s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),X18),s(fun(X6,bool),'const.pred_set.EMPTY_0')))),
  file('thm.measure.ALGEBRA_SPACE','thm.pred_set.DIFF_EMPTY')).
fof(f2443,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) ) | $spl962),
  inference(cnf_transformation,[],[f2443_D])).
fof(f2443_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) ) <=> ~$spl962),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl962])])).
fof(f2442,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) ) | ($spl18 | $spl34 | $spl36)),
  inference(subsumption_resolution,[],[f2423,f608])).
fof(f2423,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~sP0(X0,X1)) ) | ($spl18 | $spl34)),
  inference(superposition,[],[f607,f599])).
fof(f585,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f585_D])).
fof(f585_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f336,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f210])).
fof(f210,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.measure.ALGEBRA_SPACE','thm.bool.EQ_CLAUSES|split|2')).
fof(f570,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK13,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))),s(fun(fun(sK13,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14)))))) | $spl1),
  inference(cnf_transformation,[],[f570_D])).
fof(f570_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK13,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))),s(fun(fun(sK13,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f310,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK13,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))),s(fun(fun(sK13,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))))))),
  inference(cnf_transformation,[],[f205])).
fof(f205,plain,(
  p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14)))) & ~p(s(bool,'const.bool.IN_2'(s(fun(sK13,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))),s(fun(fun(sK13,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14])],[f146])).
fof(f146,plain,(
  ? [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(ennf_transformation,[],[f62])).
fof(f62,plain,(
  ~! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))))),
  file('thm.measure.ALGEBRA_SPACE','thm.measure.ALGEBRA_SPACE')).
fof(f1092,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK13,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))),s(fun(fun(sK13,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))))) | $spl372),
  inference(cnf_transformation,[],[f1092_D])).
fof(f1092_D,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK13,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))),s(fun(fun(sK13,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))))) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f1082,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK13,bool),'const.measure.space_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))),s(fun(fun(sK13,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))))) | ($spl1 | $spl14)),
  inference(resolution,[],[f570,f585])).
fof(f577,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f577_D])).
fof(f577_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f575,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f314,f311])).
fof(f314,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f206])).
fof(f206,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f30])).
fof(f30,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.measure.ALGEBRA_SPACE','thm.bool.NOT_CLAUSES|split|1')).
fof(f8826,plain,(
  ~sP0(sK13,sK14) | $spl2637),
  inference(cnf_transformation,[],[f8826_D])).
fof(f8826_D,plain,(
  ~sP0(sK13,sK14) <=> ~$spl2637),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2637])])).
fof(f8824,plain,(
  ~sP0(sK13,sK14) | ($spl7 | $spl372 | $spl962)),
  inference(subsumption_resolution,[],[f8809,f577])).
fof(f8809,plain,(
  p(s(bool,'F_0')) | ~sP0(sK13,sK14) | ($spl372 | $spl962)),
  inference(superposition,[],[f2443,f1092])).
fof(f583,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl10),
  inference(cnf_transformation,[],[f583_D])).
fof(f583_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f332,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.measure.ALGEBRA_SPACE','thm.bool.EQ_CLAUSES|split|1')).
fof(f572,plain,(
  p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14)))) | $spl2),
  inference(cnf_transformation,[],[f572_D])).
fof(f572_D,plain,(
  p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f309,plain,(
  p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))))),
  inference(cnf_transformation,[],[f205])).
fof(f707,plain,(
  s(bool,'T_0') = s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))) | $spl208),
  inference(cnf_transformation,[],[f707_D])).
fof(f707_D,plain,(
  s(bool,'T_0') = s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f705,plain,(
  s(bool,'T_0') = s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14))) | ($spl2 | $spl10)),
  inference(resolution,[],[f583,f572])).
fof(f611,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) ) | $spl42),
  inference(cnf_transformation,[],[f611_D])).
fof(f611_D,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f401,plain,(
  ( ! [X0,X1] : (sP0(X0,X1) | ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))) )),
  inference(cnf_transformation,[],[f249])).
fof(f249,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) | sP0(X0,X1)) & (~sP0(X0,X1) | p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))),
  inference(nnf_transformation,[],[f186])).
fof(f186,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> sP0(X0,X1))),
  inference(definition_folding,[],[f162,f185])).
fof(f162,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f161])).
fof(f161,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(ennf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(flattening,[],[f110])).
fof(f110,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & ! [X4] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.DIFF_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(X0,bool),X4))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) & ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))) <=> (p(s(bool,'const.measure.subset_class_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.EMPTY_0'),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))) & ! [X18] : (p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X18),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.DIFF_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))),s(fun(X6,bool),X18))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))))))) & ! [X18,X8] : ((p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X18),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7))))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X18),s(fun(X6,bool),X8))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X7)))))))))),
  file('thm.measure.ALGEBRA_SPACE','thm.measure.algebra_def')).
fof(f574,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f574_D])).
fof(f574_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f311,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  p(s(bool,'T_0'))),
  file('thm.measure.ALGEBRA_SPACE','thm.bool.TRUTH')).
fof(f8836,plain,(
  $false | ($spl4 | $spl42 | $spl208 | $spl2637)),
  inference(subsumption_resolution,[],[f8835,f574])).
fof(f8835,plain,(
  ~p(s(bool,'T_0')) | ($spl42 | $spl208 | $spl2637)),
  inference(forward_demodulation,[],[f8834,f707])).
fof(f8834,plain,(
  ~p(s(bool,'const.measure.algebra_1'(s('type.pair.prod'(fun(sK13,bool),fun(fun(sK13,bool),bool)),sK14)))) | ($spl42 | $spl2637)),
  inference(resolution,[],[f8826,f611])).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 378
% Passive clauses: 1250
% Generated clauses: 8502
% Final active clauses: 355
% Final passive clauses: 818
% Input formulas: 59
% Initial clauses: 236
% 
% Duplicate literals: 309
% Trivial inequalities: 42
% Fw subsumption resolutions: 817
% Fw demodulations: 292
% Bw demodulations: 64
% Condensations: 280
% Global subsumptions: 22
% 
% Simple tautologies: 288
% Equational tautologies: 20
% Forward subsumptions: 3622
% 
% Binary resolution: 2243
% Factoring: 207
% Forward superposition: 778
% Backward superposition: 1709
% Self superposition: 48
% Equality factoring: 32
% Equality resolution: 8
% 
% Split clauses: 39
% Split components: 78
% SAT solver clauses: 1828
% SAT solver unit clauses: 228
% SAT solver binary clauses: 74
% SAT solver learnt clauses: 46
% SAT solver learnt literals: 11
% 
% Sat splits: 39
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 1738
% TWLsolver calls for satisfiability: 2055
% 
% Memory used [KB]: 7419
% Time elapsed: 0.338 s
% ------------------------------
% ------------------------------
% Success in time 0.949 s
