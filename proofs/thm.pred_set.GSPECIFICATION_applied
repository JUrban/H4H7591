Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.pred_set
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pred_set
% SZS output start Proof for thm.pred_set
fof(f4148,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f31,f41,f4103,f1229,f4104,f42,f1186,f291,f30,f44,f40,f4083])).
fof(f4083,plain,(
  $false | ($spl2 | $spl16)),
  inference(subsumption_resolution,[],[f4082,f42])).
fof(f4082,plain,(
  s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) = s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,sK6(sK3,sK2,sK1,sK0)))) | $spl16),
  inference(subsumption_resolution,[],[f4042,f32])).
fof(f32,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.pred_set.GSPECIFICATION_applied',aHL_TRUTH)).
fof(f4042,plain,(
  ~p(s(bool,'T_0')) | s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) = s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,sK6(sK3,sK2,sK1,sK0)))) | $spl16),
  inference(superposition,[],[f3920,f291])).
fof(f3920,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X0,X3)))) | s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,sK6(X3,X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f3919,f36])).
fof(f36,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.pred_set.GSPEC_2'(s(fun(X0,'type.pair.prod'(X1,bool)),X2),s(X1,X3))) = s(bool,happ(s(fun(X1,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X1,bool)),X2))),s(X1,X3)))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1,X2,X3] : s(bool,'const.pred_set.GSPEC_2'(s(fun(X0,'type.pair.prod'(X1,bool)),X2),s(X1,X3))) = s(bool,happ(s(fun(X1,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X1,bool)),X2))),s(X1,X3)))),
  inference(flattening,[],[f15])).
fof(f15,plain,(
  ! [X0,X1] : ! [X2,X3] : s(bool,'const.pred_set.GSPEC_2'(s(fun(X0,'type.pair.prod'(X1,bool)),X2),s(X1,X3))) = s(bool,happ(s(fun(X1,bool),'const.pred_set.GSPEC_1'(s(fun(X0,'type.pair.prod'(X1,bool)),X2))),s(X1,X3)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X7,X6] : ! [X12,X13] : s(bool,'const.pred_set.GSPEC_2'(s(fun(X7,'type.pair.prod'(X6,bool)),X12),s(X6,X13))) = s(bool,happ(s(fun(X6,bool),'const.pred_set.GSPEC_1'(s(fun(X7,'type.pair.prod'(X6,bool)),X12))),s(X6,X13)))),
  file('thm.pred_set.GSPECIFICATION_applied','ARITY_1_2_const.pred_set.GSPEC')).
fof(f3919,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2))),s(X0,X3)))) | s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,sK6(X3,X2,X1,X0))))) )),
  inference(forward_demodulation,[],[f38,f35])).
fof(f35,plain,(
  ( ! [X2,X0,X1] : (s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))) = s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))) )),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0,X1,X2] : s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))) = s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))),
  inference(flattening,[],[f13])).
fof(f13,plain,(
  ! [X0] : ! [X1,X2] : s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))) = s(bool,'const.bool.IN_2'(s(X0,X2),s(fun(X0,bool),X1)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X11,X10] : s(bool,happ(s(fun(X6,bool),X11),s(X6,X10))) = s(bool,'const.bool.IN_2'(s(X6,X10),s(fun(X6,bool),X11)))),
  file('thm.pred_set.GSPECIFICATION_applied','thm.pred_set.SPECIFICATION')).
fof(f38,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,sK6(X3,X2,X1,X0)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2))))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) | s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,sK6(X3,X2,X1,X0))))) & (! [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) | ? [X5] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X5)))) & (! [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2))))))))),
  inference(rectify,[],[f27])).
fof(f27,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) | ? [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4)))) & (! [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2))))))))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) <=> ? [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) <=> ? [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.bool.IN_2'(s(X6,X9),s(fun(X6,bool),'const.pred_set.GSPEC_1'(s(fun(X7,'type.pair.prod'(X6,bool)),X8)))))) <=> ? [X10] : s('type.pair.prod'(X6,bool),'const.pair.,_2'(s(X6,X9),s(bool,'T_0'))) = s('type.pair.prod'(X6,bool),happ(s(fun(X7,'type.pair.prod'(X6,bool)),X8),s(X7,X10))))),
  file('thm.pred_set.GSPECIFICATION_applied','thm.pred_set.GSPECIFICATION')).
fof(f40,plain,(
  p(s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3)))) | $spl0),
  inference(cnf_transformation,[],[f40_D])).
fof(f40_D,plain,(
  p(s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f44,plain,(
  s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) = s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,sK4))) | $spl4),
  inference(cnf_transformation,[],[f44_D])).
fof(f44_D,plain,(
  s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) = s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,sK4))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f30,plain,(
  s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) = s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,sK4))) | p(s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3))))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  (p(s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3)))) | s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) = s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,sK4)))) & (~p(s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3)))) | ! [X4] : s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) != s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,X4))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f24])).
fof(f24,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X0,X3)))) | ? [X5] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X5)))) & (~p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X0,X3)))) | ! [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4)))))),
  inference(rectify,[],[f23])).
fof(f23,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X0,X3)))) | ? [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4)))) & (~p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X0,X3)))) | ! [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4)))))),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X0,X3)))) <~> ? [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X0,X3)))) <=> ? [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))))),
  inference(flattening,[],[f10])).
fof(f10,plain,(
  ~! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X0,X3)))) <=> ? [X4] : s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) = s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X7,'type.pair.prod'(X6,bool)),X8),s(X6,X9)))) <=> ? [X10] : s('type.pair.prod'(X6,bool),'const.pair.,_2'(s(X6,X9),s(bool,'T_0'))) = s('type.pair.prod'(X6,bool),happ(s(fun(X7,'type.pair.prod'(X6,bool)),X8),s(X7,X10))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : (p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X7,'type.pair.prod'(X6,bool)),X8),s(X6,X9)))) <=> ? [X10] : s('type.pair.prod'(X6,bool),'const.pair.,_2'(s(X6,X9),s(bool,'T_0'))) = s('type.pair.prod'(X6,bool),happ(s(fun(X7,'type.pair.prod'(X6,bool)),X8),s(X7,X10))))),
  file('thm.pred_set.GSPECIFICATION_applied','thm.pred_set.GSPECIFICATION_applied')).
fof(f291,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3))) | $spl16),
  inference(cnf_transformation,[],[f291_D])).
fof(f291_D,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1186,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3))) | $spl0),
  inference(resolution,[],[f40,f47])).
fof(f47,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f33,f34])).
fof(f34,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.pred_set.GSPECIFICATION_applied',aHL_BOOL_CASES)).
fof(f33,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.pred_set.GSPECIFICATION_applied',aHL_FALSITY)).
fof(f42,plain,(
  ( ! [X4] : (s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) != s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,X4)))) ) | $spl2),
  inference(cnf_transformation,[],[f42_D])).
fof(f42_D,plain,(
  ( ! [X4] : (s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) != s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,X4)))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f4104,plain,(
  ( ! [X0] : (s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) != s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,X0)))) ) | $spl1),
  inference(resolution,[],[f41,f2834])).
fof(f2834,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.pred_set.GSPEC_2'(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X0,X3)))) | s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4)))) )),
  inference(forward_demodulation,[],[f2833,f36])).
fof(f2833,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2))),s(X0,X3)))) | s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4)))) )),
  inference(forward_demodulation,[],[f39,f35])).
fof(f39,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),'const.pred_set.GSPEC_1'(s(fun(X1,'type.pair.prod'(X0,bool)),X2)))))) | s('type.pair.prod'(X0,bool),'const.pair.,_2'(s(X0,X3),s(bool,'T_0'))) != s('type.pair.prod'(X0,bool),happ(s(fun(X1,'type.pair.prod'(X0,bool)),X2),s(X1,X4)))) )),
  inference(cnf_transformation,[],[f29])).
fof(f1229,plain,(
  $false | ($spl2 | $spl4)),
  inference(trivial_inequality_removal,[],[f1228])).
fof(f1228,plain,(
  s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) != s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) | ($spl2 | $spl4)),
  inference(superposition,[],[f42,f44])).
fof(f4103,plain,(
  $false | ($spl1 | $spl16)),
  inference(subsumption_resolution,[],[f4102,f32])).
fof(f4102,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl16)),
  inference(forward_demodulation,[],[f41,f291])).
fof(f41,plain,(
  ~p(s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3)))) | $spl1),
  inference(cnf_transformation,[],[f41_D])).
fof(f41_D,plain,(
  ~p(s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f31,plain,(
  ( ! [X4] : (s('type.pair.prod'(sK0,bool),'const.pair.,_2'(s(sK0,sK3),s(bool,'T_0'))) != s('type.pair.prod'(sK0,bool),happ(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK1,X4))) | ~p(s(bool,'const.pred_set.GSPEC_2'(s(fun(sK1,'type.pair.prod'(sK0,bool)),sK2),s(sK0,sK3))))) )),
  inference(cnf_transformation,[],[f25])).
% SZS output end Proof for thm.pred_set
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 43
% Passive clauses: 900
% Generated clauses: 4019
% Final active clauses: 25
% Final passive clauses: 754
% Input formulas: 8
% Initial clauses: 10
% 
% Duplicate literals: 380
% Trivial inequalities: 45
% Fw subsumption resolutions: 370
% Fw demodulations: 77
% Bw demodulations: 7
% 
% Simple tautologies: 100
% Equational tautologies: 82
% Forward subsumptions: 1551
% 
% Binary resolution: 31
% Forward superposition: 1334
% Backward superposition: 1272
% Self superposition: 234
% Equality factoring: 208
% Equality resolution: 2
% 
% Split clauses: 202
% Split components: 404
% SAT solver clauses: 541
% SAT solver unit clauses: 237
% SAT solver binary clauses: 137
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 3
% 
% Sat splits: 202
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 538
% TWLsolver calls for satisfiability: 25
% 
% Memory used [KB]: 2302
% Time elapsed: 0.158 s
% ------------------------------
% ------------------------------
% Success in time 0.163 s
