Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f9211,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f9206])).
fof(f9206,plain,(
  s('type.pair.prod'(fun(sK10,bool),fun(fun(sK10,bool),bool)),'const.measure.sigma_2'(s(fun(sK10,bool),sK11),s(fun(fun(sK10,bool),bool),sK12))) != s('type.pair.prod'(fun(sK10,bool),fun(fun(sK10,bool),bool)),'const.measure.sigma_2'(s(fun(sK10,bool),sK11),s(fun(fun(sK10,bool),bool),sK12)))),
  inference(superposition,[],[f255,f4031])).
fof(f4031,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2))) = s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))))) )),
  inference(superposition,[],[f332,f337])).
fof(f337,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0] : ! [X1,X2] : s(fun(X0,bool),X1) = s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6] : ! [X7,X8] : s(fun(X6,bool),X7) = s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.measure.sigma_2'(s(fun(X6,bool),X7),s(fun(fun(X6,bool),bool),X8)))))),
  file('thm.measure.SIGMA_REDUCE','thm.measure.SPACE_SIGMA')).
fof(f332,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1) = s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1) = s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ! [X0] : ! [X1] : s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1) = s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1))),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),X1)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6] : ! [X8] : s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X8) = s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),'const.measure.space_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X8))),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),X8)))))),
  file('thm.measure.SIGMA_REDUCE','thm.measure.SPACE')).
fof(f255,plain,(
  s('type.pair.prod'(fun(sK10,bool),fun(fun(sK10,bool),bool)),'const.measure.sigma_2'(s(fun(sK10,bool),sK11),s(fun(fun(sK10,bool),bool),sK12))) != s('type.pair.prod'(fun(sK10,bool),fun(fun(sK10,bool),bool)),'const.pair.,_2'(s(fun(sK10,bool),sK11),s(fun(fun(sK10,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK10,bool),fun(fun(sK10,bool),bool)),'const.measure.sigma_2'(s(fun(sK10,bool),sK11),s(fun(fun(sK10,bool),bool),sK12)))))))),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  s('type.pair.prod'(fun(sK10,bool),fun(fun(sK10,bool),bool)),'const.measure.sigma_2'(s(fun(sK10,bool),sK11),s(fun(fun(sK10,bool),bool),sK12))) != s('type.pair.prod'(fun(sK10,bool),fun(fun(sK10,bool),bool)),'const.pair.,_2'(s(fun(sK10,bool),sK11),s(fun(fun(sK10,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(sK10,bool),fun(fun(sK10,bool),bool)),'const.measure.sigma_2'(s(fun(sK10,bool),sK11),s(fun(fun(sK10,bool),bool),sK12)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11,sK12])],[f125])).
fof(f125,plain,(
  ? [X0,X1,X2] : s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2))) != s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))))),
  inference(ennf_transformation,[],[f54])).
fof(f54,plain,(
  ~! [X0,X1,X2] : s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2))) = s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ~! [X0] : ! [X1,X2] : s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2))) = s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.measure.sigma_2'(s(fun(X0,bool),X1),s(fun(fun(X0,bool),bool),X2)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.measure.sigma_2'(s(fun(X6,bool),X7),s(fun(fun(X6,bool),bool),X8))) = s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X7),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.measure.sigma_2'(s(fun(X6,bool),X7),s(fun(fun(X6,bool),bool),X8)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.measure.sigma_2'(s(fun(X6,bool),X7),s(fun(fun(X6,bool),bool),X8))) = s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X7),s(fun(fun(X6,bool),bool),'const.measure.subsets_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.measure.sigma_2'(s(fun(X6,bool),X7),s(fun(fun(X6,bool),bool),X8)))))))),
  file('thm.measure.SIGMA_REDUCE','thm.measure.SIGMA_REDUCE')).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 487
% Passive clauses: 3188
% Generated clauses: 8942
% Final active clauses: 448
% Final passive clauses: 2368
% Input formulas: 51
% Initial clauses: 188
% 
% Duplicate literals: 226
% Trivial inequalities: 70
% Fw subsumption resolutions: 945
% Fw demodulations: 53
% Bw demodulations: 38
% 
% Simple tautologies: 187
% Equational tautologies: 60
% Forward subsumptions: 4061
% 
% Binary resolution: 4492
% Factoring: 903
% Forward superposition: 901
% Backward superposition: 926
% Self superposition: 27
% Equality factoring: 26
% Equality resolution: 29
% 
% Split clauses: 229
% Split components: 464
% SAT solver clauses: 439
% SAT solver unit clauses: 9
% SAT solver binary clauses: 111
% 
% Sat splits: 229
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 437
% TWLsolver calls for satisfiability: 267
% 
% Memory used [KB]: 4093
% Time elapsed: 0.219 s
% ------------------------------
% ------------------------------
% Success in time 0.225 s
