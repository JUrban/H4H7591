Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (117549)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 438
% Passive clauses: 4013
% Generated clauses: 33445
% Final active clauses: 334
% Final passive clauses: 3286
% Input formulas: 69
% Initial clauses: 90
% 
% Duplicate literals: 401
% Trivial inequalities: 180
% Fw subsumption resolutions: 1307
% Fw demodulations: 4928
% Bw demodulations: 94
% 
% Simple tautologies: 202
% Equational tautologies: 37
% Forward subsumptions: 22277
% Fw demodulations to eq. taut.: 9
% 
% Binary resolution: 235
% Factoring: 1
% Forward superposition: 13811
% Backward superposition: 12104
% Self superposition: 116
% Equality factoring: 62
% Equality resolution: 14
% 
% Split clauses: 122
% Split components: 244
% SAT solver clauses: 292
% SAT solver unit clauses: 12
% SAT solver binary clauses: 45
% 
% Sat splits: 122
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 292
% TWLsolver calls for satisfiability: 83
% 
% Memory used [KB]: 23027
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (117571)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 289
% Passive clauses: 1902
% Generated clauses: 21302
% Final active clauses: 205
% Final passive clauses: 1228
% Input formulas: 69
% Initial clauses: 90
% 
% Duplicate literals: 143
% Trivial inequalities: 306
% Fw subsumption resolutions: 422
% Fw demodulations: 3870
% Bw demodulations: 424
% Condensations: 121
% 
% Simple tautologies: 39
% Equational tautologies: 22
% Forward subsumptions: 12008
% Fw demodulations to eq. taut.: 10
% Bw demodulations to eq. taut.: 39
% 
% Binary resolution: 136
% Factoring: 1
% Forward superposition: 5553
% Backward superposition: 8189
% Self superposition: 91
% Equality factoring: 32
% Equality resolution: 14
% 
% Split clauses: 38
% Split components: 76
% SAT solver clauses: 2539
% SAT solver unit clauses: 136
% SAT solver binary clauses: 43
% 
% Sat splits: 38
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 2539
% TWLsolver calls for satisfiability: 500
% 
% Memory used [KB]: 20212
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f17683,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f173,f263,f262,f172,f265,f171,f267,f261,f381,f386,f418,f420,f419,f466,f471,f516,f962,f980,f978,f963,f981,f965,f984,f966,f987,f985,f967,f988,f968,f989,f973,f983,f992,f975,f996,f994,f1062,f3263,f3269,f3267,f5684,f5745,f5743,f6032,f6096,f6094,f7149,f7150,f384,f7171,f7173,f7181,f7184,f7352,f7358,f8288,f8325,f8323,f14029,f14032,f14034,f14037,f14036,f14044,f14047,f14046,f14056,f14057,f14070,f14071,f14031,f15197,f15201,f15205,f15209,f15213,f15218,f15220,f15395,f15398,f15401,f15404,f15405,f15406,f15407,f15408,f15409,f15410,f15411,f15412,f15413,f15414,f15415,f15416,f15417,f15418,f15419,f15420,f15421,f15422,f15423,f15424,f15427,f15434,f15435,f15439,f15440,f15441,f15442,f15443,f15444,f15445,f15446,f15447,f15448,f15449,f15450,f15451,f15452,f15453,f15454,f15455,f15456,f15457,f15458,f15459,f15460,f15461,f15462,f15463,f15464,f15465,f15466,f15467,f15468,f15469,f15470,f15471,f15472,f15473,f15474,f15475,f15476,f15477,f15478,f15479,f15480,f15481,f15482,f15483,f15484,f15485,f15486,f15487,f15488,f15489,f15490,f15491,f15492,f15493,f15494,f15495,f15496,f15497,f15498,f15499,f15500,f15501,f15502,f15564,f15581,f15584,f15587,f15590,f15593,f15596,f15600,f15601,f15575,f15607,f15576,f15609,f15611,f15646,f15654,f15929,f15932,f15931,f17670])).
fof(f17670,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f17636,f15937])).
fof(f15937,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),sK8(sK2,sK1,sK0))))))))))) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f15674,f263])).
fof(f15674,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK8(sK2,sK1,sK0)))) | $spl0),
  inference(unit_resulting_resolution,[],[f261,f218])).
fof(f218,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK8(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) | (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK8(X2,X1,X0)))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK9(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X2,X1,X0)),s('type.list.list'(X0),sK8(X2,X1,X0)))))))))))) & (! [X3,X4,X5,X6,X7] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9,sK10,sK11,sK12])],[f156])).
fof(f156,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) | ? [X8,X9,X10,X11,X12] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X8))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X8))))))))))) & (! [X3,X4,X5,X6,X7] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))),
  inference(rectify,[],[f155])).
fof(f155,plain,(
  ! [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) | ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))) & (! [X3,X4,X5,X6,X7] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) <=> ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(flattening,[],[f109])).
fof(f109,plain,(
  ! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) <=> ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7))) <=> ? [X9,X10,X11,X12,X13] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.quantHeuristics.LIST_LENGTH_4|split|10')).
fof(f17636,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK2,sK1,sK0)),s('type.list.list'(sK0),sK8(sK2,sK1,sK0)))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f261,f219])).
fof(f219,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK9(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X2,X1,X0)),s('type.list.list'(X0),sK8(X2,X1,X0)))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f15931,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl81),
  inference(cnf_transformation,[],[f15931_D])).
fof(f15931_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) <=> ~$spl81),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl81])])).
fof(f15932,plain,(
  ( ! [X74] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)),'const.list.NIL_0',X74))))) ) | $spl82),
  inference(cnf_transformation,[],[f15932_D])).
fof(f15932_D,plain,(
  ( ! [X74] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)),'const.list.NIL_0',X74))))) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f15929,plain,(
  ( ! [X74] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)),'const.list.NIL_0',X74)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) ) | ($spl0 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15928,f15700])).
fof(f15700,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl0),
  inference(superposition,[],[f261,f235])).
fof(f235,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X23,X20] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X23))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.arithmetic.ADD_SYM')).
fof(f15928,plain,(
  ( ! [X74] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)),'const.list.NIL_0',X74)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2)))))) ) | ($spl0 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15927,f235])).
fof(f15927,plain,(
  ( ! [X74] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)),'const.list.NIL_0',X74))))) ) | ($spl0 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15831,f235])).
fof(f15831,plain,(
  ( ! [X74] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)),'const.list.NIL_0',X74))))) ) | ($spl0 | $spl6 | $spl34)),
  inference(superposition,[],[f13272,f261])).
fof(f13272,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',sK1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X2,'const.list.NIL_0',X1))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13117,f3290])).
fof(f3290,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f3284,f217])).
fof(f217,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f67])).
fof(f67,axiom,(
  ! [X6] : ! [X18,X19] : s(X6,X18) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X18),s(X6,X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.bool.COND_CLAUSES|split|0')).
fof(f3284,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f217,f1096])).
fof(f1096,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f216])).
fof(f216,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f154])).
fof(f154,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f105])).
fof(f105,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.list.LENGTH_NIL')).
fof(f1076,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl34),
  inference(backward_demodulation,[],[f992,f176])).
fof(f176,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f65])).
fof(f65,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.prim_rec.PRE|split|0')).
fof(f13117,plain,(
  ( ! [X33,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X34),s('type.num.num',sK1))) | s('type.num.num',X34) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),X34,X33,X32))))) ) | $spl6),
  inference(superposition,[],[f228,f267])).
fof(f228,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X3,X2,X1,X0)))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16(X3,X2,X1,X0)),s('type.list.list'(X0),sK17(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16,sK17])],[f166])).
fof(f166,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X6,X7] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(rectify,[],[f165])).
fof(f165,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f115])).
fof(f115,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X8,X14,X15] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))) <=> ? [X16,X17] : (s('type.num.num',X14) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X16))) & s('type.num.num',X15) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X17))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X17)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.list.LENGTH_EQ_SUM')).
fof(f15654,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15645,f267])).
fof(f15645,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f265,f263])).
fof(f15646,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f267,f265,f263])).
fof(f15611,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) | $spl78),
  inference(cnf_transformation,[],[f15611_D])).
fof(f15611_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f15609,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl77),
  inference(cnf_transformation,[],[f15609_D])).
fof(f15609_D,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f15576,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) | ($spl4 | $spl6 | $spl34)),
  inference(superposition,[],[f13328,f265])).
fof(f13328,plain,(
  ( ! [X30,X29] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0',X30,X29))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f13327,f1076])).
fof(f13327,plain,(
  ( ! [X30,X29] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0',X30,X29))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f13283,f2219])).
fof(f2219,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(superposition,[],[f235,f1083])).
fof(f1083,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f187])).
fof(f187,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X20] : s('type.num.num',X20) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|1')).
fof(f13283,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',sK1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.|48|_0',X30,X29))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13117,f1076])).
fof(f15607,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) | $spl74),
  inference(cnf_transformation,[],[f15607_D])).
fof(f15607_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f15575,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0','const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3)))))))),sK0)))) | ($spl4 | $spl6 | $spl34)),
  inference(superposition,[],[f13310,f265])).
fof(f13310,plain,(
  ( ! [X6,X7] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.ZERO_0',X7,X6))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13117,f2219])).
fof(f15601,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15556,f262])).
fof(f15556,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f267,f265,f220])).
fof(f220,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f15600,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15599,f262])).
fof(f15599,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15598,f267])).
fof(f15598,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15597,f2219])).
fof(f15597,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15557,f235])).
fof(f15557,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f1083,f265,f220])).
fof(f15596,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15595,f262])).
fof(f15595,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15594,f267])).
fof(f15594,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15558,f2219])).
fof(f15558,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f2219,f265,f220])).
fof(f15593,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15592,f262])).
fof(f15592,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15591,f267])).
fof(f15591,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15559,f1082])).
fof(f1082,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f186])).
fof(f186,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X20] : s('type.num.num',X20) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|7')).
fof(f15559,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f1082,f265,f220])).
fof(f15590,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34)),
  inference(subsumption_resolution,[],[f15589,f262])).
fof(f15589,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl4 | $spl6 | $spl34)),
  inference(forward_demodulation,[],[f15588,f267])).
fof(f15588,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | ($spl4 | $spl34)),
  inference(forward_demodulation,[],[f15560,f12130])).
fof(f12130,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f12046,f255])).
fof(f255,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X20,X23] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) <=> s('type.num.num',X20) = s('type.num.num',X23))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|19')).
fof(f12046,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12045,f2219])).
fof(f12045,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(forward_demodulation,[],[f11890,f2219])).
fof(f11890,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))))) ) | $spl34),
  inference(superposition,[],[f247,f1113])).
fof(f1113,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1076,f1020])).
fof(f1020,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1001,f217])).
fof(f1001,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f217,f210])).
fof(f210,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X20] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X20))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|17')).
fof(f247,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X23))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|2')).
fof(f15560,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) | ($spl4 | $spl34)),
  inference(unit_resulting_resolution,[],[f12130,f265,f220])).
fof(f15587,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15586,f262])).
fof(f15586,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f15585,f267])).
fof(f15585,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | $spl4),
  inference(forward_demodulation,[],[f15561,f196])).
fof(f196,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X20] : s('type.num.num',X20) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_22_prove_ltb|split|1')).
fof(f15561,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl4),
  inference(unit_resulting_resolution,[],[f196,f265,f220])).
fof(f15584,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15583,f262])).
fof(f15583,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl4 | $spl6)),
  inference(forward_demodulation,[],[f15582,f267])).
fof(f15582,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | $spl4),
  inference(forward_demodulation,[],[f15562,f217])).
fof(f15562,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',X0)))))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f217,f265,f220])).
fof(f15581,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f15563,f267])).
fof(f15563,plain,(
  s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f262,f265,f220])).
fof(f15564,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(unit_resulting_resolution,[],[f267,f262,f265,f220])).
fof(f15502,plain,(
  $false | ($spl43 | $spl48)),
  inference(global_subsumption,[],[f3269,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15389,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15363])).
fof(f15363,plain,(
  ( ! [X158,X159,X157,X155] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X155)) | ~p(s(bool,happ(s(fun(X157,bool),X158),s(X157,X159))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11514])).
fof(f15362,plain,(
  ( ! [X154,X152,X151,X153,X150] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X151),s('type.num.num',X150)))) | ~p(s(bool,happ(s(fun(X152,bool),X153),s(X152,X154))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11513])).
fof(f15361,plain,(
  ( ! [X146,X149,X147,X145,X148] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X146),s('type.num.num',X145)))) | ~p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X149))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11512])).
fof(f15359,plain,(
  ( ! [X132,X130,X133,X131,X129] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X129),s('type.num.num',X130)))) | ~p(s(bool,happ(s(fun(X131,bool),X132),s(X131,X133))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11508])).
fof(f15358,plain,(
  ( ! [X121,X118,X120,X119,X117] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X117),s('type.num.num',X118)))) | ~p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11505])).
fof(f15355,plain,(
  ( ! [X90,X88,X91,X89] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X88)))) | ~p(s(bool,happ(s(fun(X89,bool),X90),s(X89,X91))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11497])).
fof(f15354,plain,(
  ( ! [X80,X78,X76,X79,X77] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X76)))) | ~p(s(bool,happ(s(fun(X78,bool),X79),s(X78,X80))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11494])).
fof(f15352,plain,(
  ( ! [X70,X68,X71,X69,X67] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X68),s('type.num.num',X67)))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11492])).
fof(f15351,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X59)))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11490])).
fof(f15349,plain,(
  ( ! [X54,X52,X55,X53,X51] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11488])).
fof(f15348,plain,(
  ( ! [X47,X50,X48,X46,X49] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11487])).
fof(f15347,plain,(
  ( ! [X45,X43,X41,X44,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11486])).
fof(f15346,plain,(
  ( ! [X39,X37,X38,X36,X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37)))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11485])).
fof(f15344,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11519])).
fof(f15343,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f11518])).
fof(f15390,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15342])).
fof(f15342,plain,(
  ( ! [X4,X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f226])).
fof(f15391,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15341])).
fof(f15341,plain,(
  ( ! [X167,X165,X163,X166] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X163)) | ~p(s(bool,happ(s(fun(X165,bool),X166),s(X165,X167))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7141])).
fof(f15340,plain,(
  ( ! [X156,X154,X157,X155,X153] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X154),s('type.num.num',X153)))) | ~p(s(bool,happ(s(fun(X155,bool),X156),s(X155,X157))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7139])).
fof(f15339,plain,(
  ( ! [X152,X151,X149,X150,X148] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X149),s('type.num.num',X148)))) | ~p(s(bool,happ(s(fun(X150,bool),X151),s(X150,X152))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7138])).
fof(f15337,plain,(
  ( ! [X134,X132,X136,X135,X133] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X132),s('type.num.num',X133)))) | ~p(s(bool,happ(s(fun(X134,bool),X135),s(X134,X136))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7134])).
fof(f15335,plain,(
  ( ! [X118,X116,X119,X117,X115] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X115),s('type.num.num',X116)))) | ~p(s(bool,happ(s(fun(X117,bool),X118),s(X117,X119))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7130])).
fof(f15333,plain,(
  ( ! [X92,X90,X93,X91] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X90)))) | ~p(s(bool,happ(s(fun(X91,bool),X92),s(X91,X93))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7123])).
fof(f15332,plain,(
  ( ! [X80,X78,X76,X79,X77] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X76)))) | ~p(s(bool,happ(s(fun(X78,bool),X79),s(X78,X80))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7120])).
fof(f15331,plain,(
  ( ! [X88,X87,X85,X89,X86] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X86),s('type.num.num',X85)))) | ~p(s(bool,happ(s(fun(X87,bool),X88),s(X87,X89))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7122])).
fof(f15329,plain,(
  ( ! [X61,X64,X62,X63] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X61)))) | ~p(s(bool,happ(s(fun(X62,bool),X63),s(X62,X64))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7116])).
fof(f15327,plain,(
  ( ! [X59,X57,X60,X58,X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num',X57)))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7115])).
fof(f15326,plain,(
  ( ! [X47,X50,X48,X46,X49] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7113])).
fof(f15325,plain,(
  ( ! [X54,X52,X55,X53,X51] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7114])).
fof(f15324,plain,(
  ( ! [X45,X43,X41,X44,X42] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7112])).
fof(f15322,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7147])).
fof(f15321,plain,(
  ( ! [X35,X36,X34] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X34,bool),X35),s(X34,X36))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f7148])).
fof(f15392,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl48),
  inference(condensation,[],[f15320])).
fof(f15320,plain,(
  ( ! [X6,X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,X2)) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f224])).
fof(f15319,plain,(
  ( ! [X0,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f5291])).
fof(f15317,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f223])).
fof(f15316,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32)),X33,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3467])).
fof(f15312,plain,(
  ( ! [X23,X22] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22))) = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3460])).
fof(f15311,plain,(
  ( ! [X14,X15] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14))) = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))),X15,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3455])).
fof(f15304,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20)),X21,bool))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3459])).
fof(f15301,plain,(
  ( ! [X294,X296,X295] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X294),s('type.num.num',X295))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X294))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X295)))),X296,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f13987])).
fof(f15300,plain,(
  ( ! [X78,X79] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X79,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3490])).
fof(f15299,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40)),X41,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3426])).
fof(f15298,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num',X135)))) | s('type.num.num',X135) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X133)))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f6718])).
fof(f15297,plain,(
  ( ! [X81,X82] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81))))) = s('type.num.num',sK13('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3492])).
fof(f15296,plain,(
  ( ! [X72,X71] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71)))),X72,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3487])).
fof(f15295,plain,(
  ( ! [X198,X199,X197] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198))))) = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198)))),X199,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f5919])).
fof(f15294,plain,(
  ( ! [X191,X192,X193] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192)))),X193,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f5527])).
fof(f15293,plain,(
  ( ! [X206,X204,X205] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205))))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205)))),X206,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f6277])).
fof(f15290,plain,(
  ( ! [X68,X67] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))),X68,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3485])).
fof(f15289,plain,(
  ( ! [X304,X303,X305] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304)))),X305,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f14321])).
fof(f15288,plain,(
  ( ! [X310,X309,X311] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310)))),X311,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f14561])).
fof(f15285,plain,(
  ( ! [X66] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X66,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3484])).
fof(f15284,plain,(
  ( ! [X70,X69] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X69)))),X70,'type.num.num'))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f3486])).
fof(f15282,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f258])).
fof(f15281,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f257])).
fof(f15403,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15402])).
fof(f15402,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15280,f6094])).
fof(f15280,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f4993])).
fof(f15400,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15399])).
fof(f15399,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15279,f6094])).
fof(f15279,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f5172])).
fof(f15397,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15396])).
fof(f15396,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15278,f6094])).
fof(f15278,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f4963])).
fof(f15394,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(duplicate_literal_removal,[],[f15393])).
fof(f15393,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl48),
  inference(forward_demodulation,[],[f15277,f6094])).
fof(f15277,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))))) ) | $spl48),
  inference(backward_demodulation,[],[f6094,f5142])).
fof(f15175,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),X6))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6)))))) )),
  inference(equality_resolution,[],[f220])).
fof(f15171,plain,(
  ( ! [X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (s('type.num.num',X22) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X21))) | s('type.list.list'(X18),X23) != s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X24),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X25),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X26),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X27),s('type.list.list'(X18),'const.list.APPEND_2'(s('type.list.list'(X18),sK16(X19,X20,X21,X18)),s('type.list.list'(X18),sK17(X19,X20,X21,X18)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X23))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X22))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X19)))) )),
  inference(superposition,[],[f220,f230])).
fof(f15137,plain,(
  ( ! [X30,X28,X26,X24,X31,X29,X27,X25,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X27))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X25),s('type.num.num',X24))) | s('type.list.list'(X26),X28) != s('type.list.list'(X26),'const.list.CONS_2'(s(X26,X29),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,X30),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,X31),s('type.list.list'(X26),'const.list.CONS_2'(s(X26,X32),s('type.list.list'(X26),X27))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),X28))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X24),s('type.num.num',X25)))))) )),
  inference(superposition,[],[f220,f235])).
fof(f15177,plain,(
  ( ! [X6,X4,X0,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X1)))))))))))) )),
  inference(forward_demodulation,[],[f15176,f217])).
fof(f15176,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X1)))))))))))) )),
  inference(forward_demodulation,[],[f15133,f217])).
fof(f15133,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),X1))))))))),s('type.list.list'(X0),X7)))))) )),
  inference(unit_resulting_resolution,[],[f217,f217,f220])).
fof(f14862,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f231])).
fof(f14861,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),X4) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X1,X2,X3,X0)))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X1,X2,X3,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f231,f230])).
fof(f14859,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X17),s('type.list.list'(X12),X15))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK16(X13,X14,X15,X12)),s('type.list.list'(X12),sK17(X13,X14,X15,X12)))))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f231,f230])).
fof(f14854,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X15),s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK16(X13,X14,X15,X12)),s('type.list.list'(X12),sK17(X13,X14,X15,X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f231,f230])).
fof(f14849,plain,(
  ( ! [X14,X12,X10,X17,X15,X13,X11,X16] : (s('type.list.list'(X10),X13) != s('type.list.list'(X10),'const.list.APPEND_2'(s('type.list.list'(X10),X14),s('type.list.list'(X10),X15))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num',X17))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),'const.list.APPEND_2'(s('type.list.list'(X10),sK16(X11,X12,X13,X10)),s('type.list.list'(X10),sK17(X11,X12,X13,X10)))))) | s('type.num.num',X17) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X15))) | s('type.num.num',X16) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X14))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X13))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X11)))) )),
  inference(superposition,[],[f231,f230])).
fof(f14865,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) )),
  inference(forward_demodulation,[],[f14864,f217])).
fof(f14864,plain,(
  ( ! [X4,X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) )),
  inference(forward_demodulation,[],[f14863,f217])).
fof(f14863,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X4))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f14846,f217])).
fof(f14846,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X4))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X5)))))) )),
  inference(unit_resulting_resolution,[],[f217,f217,f217,f231])).
fof(f14742,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,happ(s(fun('type.list.list'(X44),bool),X48),s('type.list.list'(X44),X47)))) | s('type.list.list'(X44),'const.list.APPEND_2'(s('type.list.list'(X44),sK16(X45,X46,X47,X44)),s('type.list.list'(X44),sK17(X45,X46,X47,X44)))) = s('type.list.list'(X44),sK13('const.list.APPEND_2'(s('type.list.list'(X44),sK16(X45,X46,X47,X44)),s('type.list.list'(X44),sK17(X45,X46,X47,X44))),X48,'type.list.list'(X44))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X47))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X45)))) )),
  inference(superposition,[],[f222,f230])).
fof(f14741,plain,(
  ( ! [X39,X43,X41,X38,X42,X40] : (~p(s(bool,happ(s(fun('type.list.list'(X38),bool),X42),s('type.list.list'(X38),X41)))) | p(s(bool,happ(s(fun('type.list.list'(X38),bool),X42),s('type.list.list'(X38),X43)))) | s('type.list.list'(X38),X43) != s('type.list.list'(X38),'const.list.APPEND_2'(s('type.list.list'(X38),sK16(X39,X40,X41,X38)),s('type.list.list'(X38),sK17(X39,X40,X41,X38)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X41))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num',X39)))) )),
  inference(superposition,[],[f221,f230])).
fof(f14735,plain,(
  ( ! [X14,X12,X15,X13,X11,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X16))) | s('type.num.num',X16) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK17(X16,X15,'const.list.APPEND_2'(s('type.list.list'(X11),sK16(X12,X13,X14,X11)),s('type.list.list'(X11),sK17(X12,X13,X14,X11))),X11)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X12)))) )),
  inference(superposition,[],[f229,f230])).
fof(f14734,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))) | s('type.num.num',X9) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK16(X10,X9,'const.list.APPEND_2'(s('type.list.list'(X5),sK16(X6,X7,X8,X5)),s('type.list.list'(X5),sK17(X6,X7,X8,X5))),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))) )),
  inference(superposition,[],[f228,f230])).
fof(f14733,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK8('const.list.APPEND_2'(s('type.list.list'(X0),sK16(X1,X2,X3,X0)),s('type.list.list'(X0),sK17(X1,X2,X3,X0))),X4,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f218,f230])).
fof(f14646,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK8(X7,X5,X6))))) )),
  inference(superposition,[],[f218,f235])).
fof(f14694,plain,(
  ( ! [X114,X112,X115,X113] : (s('type.num.num',X112) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK8(X115,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113)),X114)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X112)))) )),
  inference(forward_demodulation,[],[f14643,f217])).
fof(f14643,plain,(
  ( ! [X114,X112,X115,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),X115))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X112))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X114),sK8(X115,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X112),s('type.num.num',X113)),X114))))) )),
  inference(superposition,[],[f218,f217])).
fof(f14693,plain,(
  ( ! [X111,X109,X110] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X109))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK8(X111,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X109)))))))) )),
  inference(forward_demodulation,[],[f14642,f198])).
fof(f14642,plain,(
  ( ! [X111,X109,X110] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),X111))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X109))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X110),sK8(X111,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X109)))),X110))))) )),
  inference(superposition,[],[f218,f198])).
fof(f14691,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X103),s('type.num.num',X104))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),sK8(X106,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104)))),X105)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X103),s('type.num.num',X104)))))))) )),
  inference(forward_demodulation,[],[f14640,f249])).
fof(f14640,plain,(
  ( ! [X103,X105,X106,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),X106))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X103),s('type.num.num',X104))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X105),sK8(X106,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X103))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X104)))),X105))))) )),
  inference(superposition,[],[f218,f249])).
fof(f14690,plain,(
  ( ! [X101,X102,X100] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X100))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),sK8(X102,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0')),X101)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X100)))))) )),
  inference(forward_demodulation,[],[f14639,f207])).
fof(f14639,plain,(
  ( ! [X101,X102,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),X102))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X100))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X101),sK8(X102,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X100))),s('type.num.num','const.arithmetic.ZERO_0')),X101))))) )),
  inference(superposition,[],[f218,f207])).
fof(f14686,plain,(
  ( ! [X94,X92,X95,X93] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X92),s('type.num.num',X93))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK8(X95,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))),X94)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X92),s('type.num.num',X93)))))))) )),
  inference(forward_demodulation,[],[f14637,f250])).
fof(f14637,plain,(
  ( ! [X94,X92,X95,X93] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),X95))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X92),s('type.num.num',X93))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X94),sK8(X95,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X92))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X93)))),X94))))) )),
  inference(superposition,[],[f218,f250])).
fof(f14685,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X88),s('type.num.num',X89))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK8(X91,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X88),s('type.num.num',X89)))))))) )),
  inference(forward_demodulation,[],[f14636,f248])).
fof(f14636,plain,(
  ( ! [X90,X88,X91,X89] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),X91))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X88),s('type.num.num',X89))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X90),sK8(X91,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X88))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X89)))),X90))))) )),
  inference(superposition,[],[f218,f248])).
fof(f14684,plain,(
  ( ! [X87,X85,X86] : (s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),sK8(X87,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0')),X86)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X85)))) )),
  inference(forward_demodulation,[],[f14635,f196])).
fof(f14635,plain,(
  ( ! [X87,X85,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),X87))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X85))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X86),sK8(X87,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0')),X86))))) )),
  inference(superposition,[],[f218,f196])).
fof(f14683,plain,(
  ( ! [X83,X84,X82] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X82))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK8(X84,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X82)))),X83)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X82)))))))) )),
  inference(forward_demodulation,[],[f14634,f199])).
fof(f14634,plain,(
  ( ! [X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X82))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X82))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK8(X84,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X82)))),X83))))) )),
  inference(superposition,[],[f218,f199])).
fof(f14682,plain,(
  ( ! [X80,X81,X79] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X79))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),sK8(X81,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X79)))),X80)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),X81))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X79)))))))) )),
  inference(forward_demodulation,[],[f14633,f202])).
fof(f14633,plain,(
  ( ! [X80,X81,X79] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),X81))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X79))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X79))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X80),sK8(X81,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X79)))),X80))))) )),
  inference(superposition,[],[f218,f202])).
fof(f14681,plain,(
  ( ! [X78,X76,X77] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X76))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),sK8(X78,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X76)))),X77)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),X78))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X76)))))) )),
  inference(forward_demodulation,[],[f14632,f197])).
fof(f14632,plain,(
  ( ! [X78,X76,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),X78))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X76))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X76))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X77),sK8(X78,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X76)))),X77))))) )),
  inference(superposition,[],[f218,f197])).
fof(f14680,plain,(
  ( ! [X74,X75] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK8(X75,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X74)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f14631,f177])).
fof(f14631,plain,(
  ( ! [X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK8(X75,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X74))))) )),
  inference(superposition,[],[f218,f177])).
fof(f14678,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK8(X70,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X69)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68)))))))) )),
  inference(forward_demodulation,[],[f14629,f245])).
fof(f14629,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),X70))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X67),s('type.num.num',X68))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X69),sK8(X70,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X67))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X68)))),X69))))) )),
  inference(superposition,[],[f218,f245])).
fof(f14675,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X57),s('type.num.num',X58))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK8(X60,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))),X59)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X57),s('type.num.num',X58)))))))) )),
  inference(forward_demodulation,[],[f14626,f244])).
fof(f14626,plain,(
  ( ! [X59,X57,X60,X58] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),X60))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X57),s('type.num.num',X58))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X59),sK8(X60,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X58)))),X59))))) )),
  inference(superposition,[],[f218,f244])).
fof(f14661,plain,(
  ( ! [X43,X41,X42,X40] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),sK8(X43,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))),X42)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41)))))))) )),
  inference(forward_demodulation,[],[f14620,f246])).
fof(f14620,plain,(
  ( ! [X43,X41,X42,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X40),s('type.num.num',X41))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X42),sK8(X43,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X40))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41)))),X42))))) )),
  inference(superposition,[],[f218,f246])).
fof(f14610,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK8(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10)),X11))))) )),
  inference(superposition,[],[f218,f235])).
fof(f14604,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK8('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X3),X4),s('type.list.list'(X3),X5)),X6,X3))))) )),
  inference(superposition,[],[f218,f217])).
fof(f14561,plain,(
  ( ! [X310,X309,X311] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310)))),X311,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310))))))))) )),
  inference(forward_demodulation,[],[f14536,f250])).
fof(f14536,plain,(
  ( ! [X310,X309,X311] : (~p(s(bool,happ(s(fun('type.num.num',bool),X311),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X309),s('type.num.num',X310)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X309))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X310)))),X311,'type.num.num'))) )),
  inference(superposition,[],[f222,f250])).
fof(f14460,plain,(
  ( ! [X142,X143,X141] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X143))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X141),s('type.num.num',X142))))))) | s('type.num.num',X143) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X141))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X142)))))) )),
  inference(superposition,[],[f255,f250])).
fof(f14540,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X41,X40,X39)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38)))))))) )),
  inference(forward_demodulation,[],[f14426,f250])).
fof(f14426,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f229,f250])).
fof(f14425,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK17(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f229,f250])).
fof(f14424,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X31,X30,X29))))) )),
  inference(superposition,[],[f228,f250])).
fof(f14539,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f14423,f250])).
fof(f14423,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))),X25,X24))))) )),
  inference(superposition,[],[f228,f250])).
fof(f14321,plain,(
  ( ! [X304,X303,X305] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304)))),X305,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X305),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304))))))))) )),
  inference(forward_demodulation,[],[f14296,f249])).
fof(f14296,plain,(
  ( ! [X304,X303,X305] : (~p(s(bool,happ(s(fun('type.num.num',bool),X305),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X303),s('type.num.num',X304)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X303))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X304)))),X305,'type.num.num'))) )),
  inference(superposition,[],[f222,f249])).
fof(f14220,plain,(
  ( ! [X136,X135,X137] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X137))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X135),s('type.num.num',X136))))))) | s('type.num.num',X137) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X135))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X136)))))) )),
  inference(superposition,[],[f255,f249])).
fof(f14300,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38)))))))) )),
  inference(forward_demodulation,[],[f14188,f249])).
fof(f14188,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f229,f249])).
fof(f14187,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK17(X36,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f229,f249])).
fof(f14186,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28)))),X31,X30,X29))))) )),
  inference(superposition,[],[f228,f249])).
fof(f14299,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f14185,f249])).
fof(f14185,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24))))) )),
  inference(superposition,[],[f228,f249])).
fof(f14098,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f249,f208])).
fof(f13987,plain,(
  ( ! [X294,X296,X295] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X294),s('type.num.num',X295))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X294))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X295)))),X296,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X296),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X294),s('type.num.num',X295))))))))) )),
  inference(forward_demodulation,[],[f13964,f248])).
fof(f13964,plain,(
  ( ! [X294,X296,X295] : (~p(s(bool,happ(s(fun('type.num.num',bool),X296),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X294),s('type.num.num',X295)))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X294))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X295))))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X294))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X295)))),X296,'type.num.num'))) )),
  inference(superposition,[],[f222,f248])).
fof(f13889,plain,(
  ( ! [X130,X131,X129] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X131))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X129),s('type.num.num',X130))))))) | s('type.num.num',X131) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X129))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X130)))))) )),
  inference(superposition,[],[f255,f248])).
fof(f13968,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38)))))))) )),
  inference(forward_demodulation,[],[f13859,f248])).
fof(f13859,plain,(
  ( ! [X39,X37,X41,X38,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num',X38))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X38)))),X41,X40,X39))))) )),
  inference(superposition,[],[f229,f248])).
fof(f13858,plain,(
  ( ! [X35,X33,X36,X34,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),X35))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X32),s('type.num.num',X33))))),s('type.num.num',X36))) | s('type.num.num',X36) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X34),sK17(X36,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X32))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33)))),X35,X34))))) )),
  inference(superposition,[],[f229,f248])).
fof(f13857,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X28)))),X31,X30,X29))))) )),
  inference(superposition,[],[f228,f248])).
fof(f13967,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26)))) )),
  inference(forward_demodulation,[],[f13856,f248])).
fof(f13856,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X22),s('type.num.num',X23))))),s('type.num.num',X26))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))),X25,X24))))) )),
  inference(superposition,[],[f228,f248])).
fof(f13545,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK18(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0))))) )),
  inference(forward_demodulation,[],[f13536,f184])).
fof(f13536,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))) != s(bool,f(s(X0,sK18(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK18(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f260,f5562])).
fof(f13541,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK18(X0,X1,X2,bool))) )),
  inference(forward_demodulation,[],[f13531,f184])).
fof(f13531,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))))) != s(X2,g(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK18(X0,X1,X2,bool))) )),
  inference(superposition,[],[f260,f5562])).
fof(f13449,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK17(X4,X3,X6,X5))))) )),
  inference(superposition,[],[f229,f235])).
fof(f13512,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num',X134) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK17('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X138,X137,X136)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X134)))) )),
  inference(forward_demodulation,[],[f13447,f217])).
fof(f13447,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X134))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK17('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X138,X137,X136))))) )),
  inference(superposition,[],[f229,f217])).
fof(f13511,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK17('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X133,X132,X131)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130)))))))) )),
  inference(forward_demodulation,[],[f13446,f198])).
fof(f13446,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK17('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X133,X132,X131))))) )),
  inference(superposition,[],[f229,f198])).
fof(f13508,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK17('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125,X124)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123)))))) )),
  inference(forward_demodulation,[],[f13444,f207])).
fof(f13444,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK17('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125,X124))))) )),
  inference(superposition,[],[f229,f207])).
fof(f13505,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num',X114) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116,X115)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num',X114)))) )),
  inference(forward_demodulation,[],[f13442,f196])).
fof(f13442,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num',X114))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK17('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116,X115))))) )),
  inference(superposition,[],[f229,f196])).
fof(f13504,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X113,X112,X111)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110)))))))) )),
  inference(forward_demodulation,[],[f13441,f199])).
fof(f13441,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X113,X112,X111))))) )),
  inference(superposition,[],[f229,f199])).
fof(f13503,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X109,X108,X107)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106)))))))) )),
  inference(forward_demodulation,[],[f13440,f202])).
fof(f13440,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X109,X108,X107))))) )),
  inference(superposition,[],[f229,f202])).
fof(f13502,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X105,X104,X103)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102)))))) )),
  inference(forward_demodulation,[],[f13439,f197])).
fof(f13439,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X105,X104,X103))))) )),
  inference(superposition,[],[f229,f197])).
fof(f13501,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X101,X100,X99)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f13438,f177])).
fof(f13438,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK17('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X101,X100,X99))))) )),
  inference(superposition,[],[f229,f177])).
fof(f13499,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK17('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X94,X93,X92)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91)))))))) )),
  inference(forward_demodulation,[],[f13436,f245])).
fof(f13436,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK17('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X94,X93,X92))))) )),
  inference(superposition,[],[f229,f245])).
fof(f13494,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X81,X80,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78)))))))) )),
  inference(forward_demodulation,[],[f13433,f244])).
fof(f13433,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X81,X80,X79))))) )),
  inference(superposition,[],[f229,f244])).
fof(f13484,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK17('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X58,X57,X56)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55)))))))) )),
  inference(forward_demodulation,[],[f13427,f246])).
fof(f13427,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK17('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X58,X57,X56))))) )),
  inference(superposition,[],[f229,f246])).
fof(f13417,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK17('const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X17,X16,X15))))) )),
  inference(superposition,[],[f229,f235])).
fof(f13412,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X134),s('type.num.num',X138))) | s('type.num.num',X138) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK17(X138,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X137,X136))))) )),
  inference(superposition,[],[f229,f217])).
fof(f13411,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))),s('type.num.num',X133))) | s('type.num.num',X133) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK17(X133,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X132,X131))))) )),
  inference(superposition,[],[f229,f198])).
fof(f13409,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))),s('type.num.num',X126))) | s('type.num.num',X126) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK17(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X125,X124))))) )),
  inference(superposition,[],[f229,f207])).
fof(f13407,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',X117))) | s('type.num.num',X117) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK17(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X116,X115))))) )),
  inference(superposition,[],[f229,f196])).
fof(f13406,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))),s('type.num.num',X113))) | s('type.num.num',X113) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK17(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X112,X111))))) )),
  inference(superposition,[],[f229,f199])).
fof(f13405,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))),s('type.num.num',X109))) | s('type.num.num',X109) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK17(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X108,X107))))) )),
  inference(superposition,[],[f229,f202])).
fof(f13404,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num',X105))) | s('type.num.num',X105) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK17(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X104,X103))))) )),
  inference(superposition,[],[f229,f197])).
fof(f13403,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X101))) | s('type.num.num',X101) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK17(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100,X99))))) )),
  inference(superposition,[],[f229,f177])).
fof(f13401,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))),s('type.num.num',X94))) | s('type.num.num',X94) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK17(X94,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X93,X92))))) )),
  inference(superposition,[],[f229,f245])).
fof(f13398,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))),s('type.num.num',X81))) | s('type.num.num',X81) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK17(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X80,X79))))) )),
  inference(superposition,[],[f229,f244])).
fof(f13392,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))),s('type.num.num',X58))) | s('type.num.num',X58) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK17(X58,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57,X56))))) )),
  inference(superposition,[],[f229,f246])).
fof(f13382,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))),s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK17(X17,'const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X16,X15))))) )),
  inference(superposition,[],[f229,f235])).
fof(f13376,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK17(X8,X7,'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))))) )),
  inference(superposition,[],[f229,f217])).
fof(f13145,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK16(X4,X3,X6,X5))))) )),
  inference(superposition,[],[f228,f235])).
fof(f13143,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X138),s('type.num.num',X134))) | s('type.num.num',X138) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK16('const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X138,X137,X136))))) )),
  inference(superposition,[],[f228,f217])).
fof(f13142,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))))) | s('type.num.num',X133) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK16('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X133,X132,X131))))) )),
  inference(superposition,[],[f228,f198])).
fof(f13140,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X126),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))))) | s('type.num.num',X126) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK16('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X126,X125,X124))))) )),
  inference(superposition,[],[f228,f207])).
fof(f13138,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X117),s('type.num.num',X114))) | s('type.num.num',X117) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK16('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X117,X116,X115))))) )),
  inference(superposition,[],[f228,f196])).
fof(f13137,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))))) | s('type.num.num',X113) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK16('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X113,X112,X111))))) )),
  inference(superposition,[],[f228,f199])).
fof(f13136,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X109),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))))) | s('type.num.num',X109) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK16('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X109,X108,X107))))) )),
  inference(superposition,[],[f228,f202])).
fof(f13135,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X105),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))))) | s('type.num.num',X105) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK16('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X105,X104,X103))))) )),
  inference(superposition,[],[f228,f197])).
fof(f13134,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X101),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X101) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK16('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X101,X100,X99))))) )),
  inference(superposition,[],[f228,f177])).
fof(f13132,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X94),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))))) | s('type.num.num',X94) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X94,X93,X92))))) )),
  inference(superposition,[],[f228,f245])).
fof(f13129,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X81),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))))) | s('type.num.num',X81) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X81,X80,X79))))) )),
  inference(superposition,[],[f228,f244])).
fof(f13123,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X58),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))))) | s('type.num.num',X58) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK16('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X58,X57,X56))))) )),
  inference(superposition,[],[f228,f246])).
fof(f13113,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))))) | s('type.num.num',X17) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK16('const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X17,X16,X15))))) )),
  inference(superposition,[],[f228,f235])).
fof(f13195,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num',X134) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK16(X138,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X137,X136)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X134),s('type.num.num',X138)))) )),
  inference(forward_demodulation,[],[f13108,f217])).
fof(f13108,plain,(
  ( ! [X134,X138,X136,X135,X137] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),X137))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X134),s('type.num.num',X138))) | s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X136),sK16(X138,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X134),s('type.num.num',X135)),X137,X136))))) )),
  inference(superposition,[],[f228,f217])).
fof(f13194,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK16(X133,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X132,X131)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))),s('type.num.num',X133)))) )),
  inference(forward_demodulation,[],[f13107,f198])).
fof(f13107,plain,(
  ( ! [X132,X130,X133,X131] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),X132))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X130))))),s('type.num.num',X133))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X131),sK16(X133,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X130)))),X132,X131))))) )),
  inference(superposition,[],[f228,f198])).
fof(f13191,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK16(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X125,X124)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))),s('type.num.num',X126)))) )),
  inference(forward_demodulation,[],[f13105,f207])).
fof(f13105,plain,(
  ( ! [X125,X123,X126,X124] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),X125))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X123))),s('type.num.num',X126))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X124),sK16(X126,'const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X123))),s('type.num.num','const.arithmetic.ZERO_0')),X125,X124))))) )),
  inference(superposition,[],[f228,f207])).
fof(f13188,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num',X114) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK16(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X116,X115)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',X117)))) )),
  inference(forward_demodulation,[],[f13103,f196])).
fof(f13103,plain,(
  ( ! [X116,X114,X117,X115] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),X116))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X114),s('type.num.num',X117))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X115),sK16(X117,'const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X114),s('type.num.num','const.arithmetic.ZERO_0')),X116,X115))))) )),
  inference(superposition,[],[f228,f196])).
fof(f13187,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK16(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X112,X111)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))),s('type.num.num',X113)))) )),
  inference(forward_demodulation,[],[f13102,f199])).
fof(f13102,plain,(
  ( ! [X111,X112,X110,X113] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X110))))),s('type.num.num',X113))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),sK16(X113,'const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X110)))),X112,X111))))) )),
  inference(superposition,[],[f228,f199])).
fof(f13186,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK16(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X108,X107)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))),s('type.num.num',X109)))) )),
  inference(forward_demodulation,[],[f13101,f202])).
fof(f13101,plain,(
  ( ! [X109,X107,X108,X106] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X106))))),s('type.num.num',X109))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK16(X109,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X106)))),X108,X107))))) )),
  inference(superposition,[],[f228,f202])).
fof(f13185,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK16(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X104,X103)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num',X105)))) )),
  inference(forward_demodulation,[],[f13100,f197])).
fof(f13100,plain,(
  ( ! [X103,X105,X102,X104] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),X104))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X102))),s('type.num.num',X105))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X103),sK16(X105,'const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X102)))),X104,X103))))) )),
  inference(superposition,[],[f228,f197])).
fof(f13184,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK16(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100,X99)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X101)))) )),
  inference(forward_demodulation,[],[f13099,f177])).
fof(f13099,plain,(
  ( ! [X101,X99,X100] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),X100))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X101))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X99),sK16(X101,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X100,X99))))) )),
  inference(superposition,[],[f228,f177])).
fof(f13182,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK16(X94,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X93,X92)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))),s('type.num.num',X94)))) )),
  inference(forward_demodulation,[],[f13097,f245])).
fof(f13097,plain,(
  ( ! [X94,X92,X90,X93,X91] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),X93))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X90),s('type.num.num',X91))))),s('type.num.num',X94))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X92),sK16(X94,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91)))),X93,X92))))) )),
  inference(superposition,[],[f228,f245])).
fof(f13177,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK16(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X80,X79)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))),s('type.num.num',X81)))) )),
  inference(forward_demodulation,[],[f13094,f244])).
fof(f13094,plain,(
  ( ! [X80,X78,X81,X79,X77] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),X80))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X77),s('type.num.num',X78))))),s('type.num.num',X81))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X79),sK16(X81,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X78)))),X80,X79))))) )),
  inference(superposition,[],[f228,f244])).
fof(f13167,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK16(X58,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57,X56)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))),s('type.num.num',X58)))) )),
  inference(forward_demodulation,[],[f13088,f246])).
fof(f13088,plain,(
  ( ! [X57,X54,X58,X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),X57))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X54),s('type.num.num',X55))))),s('type.num.num',X58))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X56),sK16(X58,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X55)))),X57,X56))))) )),
  inference(superposition,[],[f228,f246])).
fof(f13078,plain,(
  ( ! [X14,X17,X15,X13,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X16))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))),s('type.num.num',X17))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK16(X17,'const.arithmetic.+_2'(s('type.num.num',X13),s('type.num.num',X14)),X16,X15))))) )),
  inference(superposition,[],[f228,f235])).
fof(f13072,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))) | s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK16(X8,X7,'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))))) )),
  inference(superposition,[],[f228,f217])).
fof(f13068,plain,(
  ( ! [X47,X48,X46] : (s(bool,'F_0') = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,X47)))) | s(bool,'T_0') = s(bool,X47)) )),
  inference(forward_demodulation,[],[f12984,f184])).
fof(f12984,plain,(
  ( ! [X47,X48,X46] : (~p(s(bool,happ(s(fun(bool,bool),X48),s(bool,X47)))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,bool)) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f222,f5562])).
fof(f12860,plain,(
  ( ! [X87,X85,X86] : (s(bool,X85) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X87),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X85),s(bool,X86)))) )),
  inference(superposition,[],[f5562,f217])).
fof(f11514,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,X155)) | p(s(bool,happ(s(fun(X157,bool),X158),s(X157,sK15('const.bool.COND_3'(s(bool,'T_0'),s(bool,X155),s(bool,X156)),X158,X157))))) | ~p(s(bool,happ(s(fun(X157,bool),X158),s(X157,X159))))) )),
  inference(superposition,[],[f226,f217])).
fof(f11513,plain,(
  ( ! [X154,X152,X151,X153,X150] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X151),s('type.num.num',X150)))) | p(s(bool,happ(s(fun(X152,bool),X153),s(X152,sK15('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X150))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X151)))),X153,X152))))) | ~p(s(bool,happ(s(fun(X152,bool),X153),s(X152,X154))))) )),
  inference(superposition,[],[f226,f238])).
fof(f11512,plain,(
  ( ! [X146,X149,X147,X145,X148] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X146),s('type.num.num',X145)))) | p(s(bool,happ(s(fun(X147,bool),X148),s(X147,sK15('const.arithmetic.>=_2'(s('type.num.num',X145),s('type.num.num',X146)),X148,X147))))) | ~p(s(bool,happ(s(fun(X147,bool),X148),s(X147,X149))))) )),
  inference(superposition,[],[f226,f234])).
fof(f11508,plain,(
  ( ! [X132,X130,X133,X131,X129] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X129),s('type.num.num',X130)))) | p(s(bool,happ(s(fun(X131,bool),X132),s(X131,sK15('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X129))),s('type.num.num',X130)),X132,X131))))) | ~p(s(bool,happ(s(fun(X131,bool),X132),s(X131,X133))))) )),
  inference(superposition,[],[f226,f236])).
fof(f11505,plain,(
  ( ! [X121,X118,X120,X119,X117] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X117),s('type.num.num',X118)))) | p(s(bool,happ(s(fun(X119,bool),X120),s(X119,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X117))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X118)))),X120,X119))))) | ~p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121))))) )),
  inference(superposition,[],[f226,f241])).
fof(f11497,plain,(
  ( ! [X90,X88,X91,X89] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X88)))) | p(s(bool,happ(s(fun(X89,bool),X90),s(X89,sK15('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X88)))),X90,X89))))) | ~p(s(bool,happ(s(fun(X89,bool),X90),s(X89,X91))))) )),
  inference(superposition,[],[f226,f193])).
fof(f11494,plain,(
  ( ! [X80,X78,X76,X79,X77] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X76)))) | p(s(bool,happ(s(fun(X78,bool),X79),s(X78,sK15('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X76))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X77)))),X79,X78))))) | ~p(s(bool,happ(s(fun(X78,bool),X79),s(X78,X80))))) )),
  inference(superposition,[],[f226,f237])).
fof(f11492,plain,(
  ( ! [X70,X68,X71,X69,X67] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X68),s('type.num.num',X67)))) | p(s(bool,happ(s(fun(X69,bool),X70),s(X69,sK15('const.arithmetic.>_2'(s('type.num.num',X67),s('type.num.num',X68)),X70,X69))))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) )),
  inference(superposition,[],[f226,f233])).
fof(f11490,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X59)))) | p(s(bool,happ(s(fun(X60,bool),X61),s(X60,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X59)))),X61,X60))))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) )),
  inference(superposition,[],[f226,f195])).
fof(f11488,plain,(
  ( ! [X54,X52,X55,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | p(s(bool,happ(s(fun(X53,bool),X54),s(X53,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X52)))),X54,X53))))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) )),
  inference(superposition,[],[f226,f243])).
fof(f11487,plain,(
  ( ! [X47,X50,X48,X46,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X47)))),X49,X48))))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) )),
  inference(superposition,[],[f226,f240])).
fof(f11486,plain,(
  ( ! [X45,X43,X41,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | p(s(bool,happ(s(fun(X43,bool),X44),s(X43,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X42)))),X44,X43))))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) )),
  inference(superposition,[],[f226,f239])).
fof(f11485,plain,(
  ( ! [X39,X37,X38,X36,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37)))) | p(s(bool,happ(s(fun(X38,bool),X39),s(X38,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X36))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X37)))),X39,X38))))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40))))) )),
  inference(superposition,[],[f226,f242])).
fof(f11519,plain,(
  ( ! [X30,X28,X31,X29] : (p(s(bool,happ(s(fun(X29,bool),X30),s(X29,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X30,X29))))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31))))) )),
  inference(subsumption_resolution,[],[f11483,f174])).
fof(f11483,plain,(
  ( ! [X30,X28,X31,X29] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X29,bool),X30),s(X29,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X28)))),X30,X29))))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31))))) )),
  inference(superposition,[],[f226,f194])).
fof(f11518,plain,(
  ( ! [X26,X24,X27,X25] : (p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))),X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27))))) )),
  inference(subsumption_resolution,[],[f11482,f174])).
fof(f11482,plain,(
  ( ! [X26,X24,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))),X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27))))) )),
  inference(superposition,[],[f226,f192])).
fof(f233,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X23,X20] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X23),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.arithmetic.GREATER_DEF')).
fof(f236,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X23,X20] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X20))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.arithmetic.LESS_EQ')).
fof(f237,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X20,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X20))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|25')).
fof(f239,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X20,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_lt|split|4')).
fof(f240,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X20,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_lt|split|6')).
fof(f242,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X20,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_lt|split|3')).
fof(f243,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X20,X23] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|22')).
fof(f257,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X20,X23] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))) <=> ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_lt|split|5')).
fof(f258,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f169])).
fof(f2064,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X4)))) )),
  inference(superposition,[],[f233,f208])).
fof(f3459,plain,(
  ( ! [X21,X19,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20)),X21,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f3414,f233])).
fof(f3414,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20)),X21,bool))) )),
  inference(superposition,[],[f222,f233])).
fof(f3575,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3)))) )),
  inference(superposition,[],[f236,f208])).
fof(f3597,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21)),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21))))))) )),
  inference(forward_demodulation,[],[f3585,f236])).
fof(f3585,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X21)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num',X21)),X22,bool))) )),
  inference(superposition,[],[f222,f236])).
fof(f3974,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f237,f208])).
fof(f3992,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f3983,f237])).
fof(f3983,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X20)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool))) )),
  inference(superposition,[],[f222,f237])).
fof(f4348,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f239,f208])).
fof(f4364,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4356,f239])).
fof(f4356,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f239])).
fof(f4449,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f240,f208])).
fof(f4465,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4457,f240])).
fof(f4457,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f240])).
fof(f4740,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f242,f208])).
fof(f4756,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4748,f242])).
fof(f4748,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f242])).
fof(f4896,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f243,f208])).
fof(f4913,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4904,f243])).
fof(f4904,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f243])).
fof(f5255,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(subsumption_resolution,[],[f5198,f179])).
fof(f5198,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f258,f208])).
fof(f7112,plain,(
  ( ! [X45,X43,X41,X44,X42] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X41),s('type.num.num',X42)))) | p(s(bool,happ(s(fun(X43,bool),X44),s(X43,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X41))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X42)))),X44,X43))))) | ~p(s(bool,happ(s(fun(X43,bool),X44),s(X43,X45))))) )),
  inference(superposition,[],[f224,f242])).
fof(f7113,plain,(
  ( ! [X47,X50,X48,X46,X49] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X46),s('type.num.num',X47)))) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X46))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))),X49,X48))))) | ~p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X50))))) )),
  inference(superposition,[],[f224,f239])).
fof(f7114,plain,(
  ( ! [X54,X52,X55,X53,X51] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X51),s('type.num.num',X52)))) | p(s(bool,happ(s(fun(X53,bool),X54),s(X53,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X51))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X52)))),X54,X53))))) | ~p(s(bool,happ(s(fun(X53,bool),X54),s(X53,X55))))) )),
  inference(superposition,[],[f224,f240])).
fof(f7115,plain,(
  ( ! [X59,X57,X60,X58,X56] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X56),s('type.num.num',X57)))) | p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X56))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X57)))),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60))))) )),
  inference(superposition,[],[f224,f243])).
fof(f7120,plain,(
  ( ! [X80,X78,X76,X79,X77] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X77),s('type.num.num',X76)))) | p(s(bool,happ(s(fun(X78,bool),X79),s(X78,sK14('const.arithmetic.>_2'(s('type.num.num',X76),s('type.num.num',X77)),X79,X78))))) | ~p(s(bool,happ(s(fun(X78,bool),X79),s(X78,X80))))) )),
  inference(superposition,[],[f224,f233])).
fof(f7122,plain,(
  ( ! [X88,X87,X85,X89,X86] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X86),s('type.num.num',X85)))) | p(s(bool,happ(s(fun(X87,bool),X88),s(X87,sK14('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X85))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X86)))),X88,X87))))) | ~p(s(bool,happ(s(fun(X87,bool),X88),s(X87,X89))))) )),
  inference(superposition,[],[f224,f237])).
fof(f7134,plain,(
  ( ! [X134,X132,X136,X135,X133] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X132),s('type.num.num',X133)))) | p(s(bool,happ(s(fun(X134,bool),X135),s(X134,sK14('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X132))),s('type.num.num',X133)),X135,X134))))) | ~p(s(bool,happ(s(fun(X134,bool),X135),s(X134,X136))))) )),
  inference(superposition,[],[f224,f236])).
fof(f5142,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))))) )),
  inference(superposition,[],[f258,f235])).
fof(f4963,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))))))) )),
  inference(superposition,[],[f257,f235])).
fof(f3543,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f236,f177])).
fof(f5172,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f258,f235])).
fof(f4993,plain,(
  ( ! [X6,X7,X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) )),
  inference(superposition,[],[f257,f235])).
fof(f3544,plain,(
  ( ! [X2,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(superposition,[],[f236,f197])).
fof(f3545,plain,(
  ( ! [X4,X3] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num',X4))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))),s('type.num.num',X4)))) )),
  inference(superposition,[],[f236,f202])).
fof(f3546,plain,(
  ( ! [X6,X5] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X5))))),s('type.num.num',X6)))) )),
  inference(superposition,[],[f236,f199])).
fof(f7116,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X61)))) | p(s(bool,happ(s(fun(X62,bool),X63),s(X62,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X61)))),X63,X62))))) | ~p(s(bool,happ(s(fun(X62,bool),X63),s(X62,X64))))) )),
  inference(superposition,[],[f224,f195])).
fof(f3455,plain,(
  ( ! [X14,X15] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14))) = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))),X15,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X15),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14))))))) )),
  inference(forward_demodulation,[],[f3411,f195])).
fof(f3411,plain,(
  ( ! [X14,X15] : (~p(s(bool,happ(s(fun(bool,bool),X15),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))))) = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))),X15,bool))) )),
  inference(superposition,[],[f222,f195])).
fof(f731,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f195,f208])).
fof(f195,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X20] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X20))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|33')).
fof(f221,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | (s(X0,X2) = s(X0,sK13(X2,X1,X0)) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13])],[f159])).
fof(f159,plain,(
  ! [X0,X1,X2] : ((! [X4] : (s(X0,X2) != s(X0,X4) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(rectify,[],[f158])).
fof(f158,plain,(
  ! [X0,X1,X2] : ((! [X3] : (s(X0,X2) != s(X0,X3) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) & (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(flattening,[],[f111])).
fof(f111,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (s(X0,X2) = s(X0,X3) & p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) <=> p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X6] : ! [X26,X27] : (? [X7] : (s(X6,X7) = s(X6,X27) & p(s(bool,happ(s(fun(X6,bool),X26),s(X6,X7))))) <=> p(s(bool,happ(s(fun(X6,bool),X26),s(X6,X27)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.bool.UNWIND_THM2')).
fof(f222,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(X0,X2) = s(X0,sK13(X2,X1,X0))) )),
  inference(cnf_transformation,[],[f160])).
fof(f223,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))) )),
  inference(cnf_transformation,[],[f160])).
fof(f224,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK14(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) )),
  inference(cnf_transformation,[],[f164])).
fof(f164,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK14(X2,X1,X0))))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK14,sK15])],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f162])).
fof(f162,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f161])).
fof(f161,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X6] : ! [X26,X28] : (? [X7] : (p(s(bool,happ(s(fun(X6,bool),X26),s(X6,X7)))) & p(s(bool,X28))) <=> (? [X7] : p(s(bool,happ(s(fun(X6,bool),X26),s(X6,X7)))) & p(s(bool,X28))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.bool.LEFT_EXISTS_AND_THM')).
fof(f226,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f164])).
fof(f3404,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | s(X0,X3) = s(X0,sK13(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))) )),
  inference(superposition,[],[f222,f217])).
fof(f3451,plain,(
  ( ! [X2,X0,X3,X1] : (s(X0,X1) = s(X0,sK13('const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)),X3,X0)) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f3405,f217])).
fof(f3405,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X1)))) | s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2))) = s(X0,sK13('const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)),X3,X0))) )),
  inference(superposition,[],[f222,f217])).
fof(f5291,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0)))))) )),
  inference(forward_demodulation,[],[f5288,f217])).
fof(f5288,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X3,'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2)),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),'const.bool.COND_3'(s(bool,'T_0'),s(fun(X0,bool),X1),s(fun(X0,bool),X2))),s(X0,X3))))) )),
  inference(superposition,[],[f223,f217])).
fof(f5292,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))) )),
  inference(subsumption_resolution,[],[f5290,f179])).
fof(f5290,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),X1),s(X0,sK13(X2,X1,X0))))) )),
  inference(superposition,[],[f223,f208])).
fof(f7123,plain,(
  ( ! [X92,X90,X93,X91] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X90)))) | p(s(bool,happ(s(fun(X91,bool),X92),s(X91,sK14('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X90)))),X92,X91))))) | ~p(s(bool,happ(s(fun(X91,bool),X92),s(X91,X93))))) )),
  inference(superposition,[],[f224,f193])).
fof(f7130,plain,(
  ( ! [X118,X116,X119,X117,X115] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X115),s('type.num.num',X116)))) | p(s(bool,happ(s(fun(X117,bool),X118),s(X117,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X115))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X116)))),X118,X117))))) | ~p(s(bool,happ(s(fun(X117,bool),X118),s(X117,X119))))) )),
  inference(superposition,[],[f224,f241])).
fof(f7138,plain,(
  ( ! [X152,X151,X149,X150,X148] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X149),s('type.num.num',X148)))) | p(s(bool,happ(s(fun(X150,bool),X151),s(X150,sK14('const.arithmetic.>=_2'(s('type.num.num',X148),s('type.num.num',X149)),X151,X150))))) | ~p(s(bool,happ(s(fun(X150,bool),X151),s(X150,X152))))) )),
  inference(superposition,[],[f224,f234])).
fof(f7139,plain,(
  ( ! [X156,X154,X157,X155,X153] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X154),s('type.num.num',X153)))) | p(s(bool,happ(s(fun(X155,bool),X156),s(X155,sK14('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X153))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X154)))),X156,X155))))) | ~p(s(bool,happ(s(fun(X155,bool),X156),s(X155,X157))))) )),
  inference(superposition,[],[f224,f238])).
fof(f7141,plain,(
  ( ! [X167,X165,X163,X166,X164] : (~p(s(bool,X163)) | p(s(bool,happ(s(fun(X165,bool),X166),s(X165,sK14('const.bool.COND_3'(s(bool,'T_0'),s(bool,X163),s(bool,X164)),X166,X165))))) | ~p(s(bool,happ(s(fun(X165,bool),X166),s(X165,X167))))) )),
  inference(superposition,[],[f224,f217])).
fof(f7147,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32))))) )),
  inference(subsumption_resolution,[],[f7109,f174])).
fof(f7109,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X29)))),X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32))))) )),
  inference(superposition,[],[f224,f192])).
fof(f7148,plain,(
  ( ! [X35,X33,X36,X34] : (p(s(bool,happ(s(fun(X34,bool),X35),s(X34,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) | ~p(s(bool,happ(s(fun(X34,bool),X35),s(X34,X36))))) )),
  inference(subsumption_resolution,[],[f7110,f174])).
fof(f7110,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X34,bool),X35),s(X34,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X33)))),X35,X34))))) | ~p(s(bool,happ(s(fun(X34,bool),X35),s(X34,X36))))) )),
  inference(superposition,[],[f224,f194])).
fof(f3407,plain,(
  ( ! [X6,X7] : (~p(s(bool,happ(s(fun(bool,bool),X7),s(bool,X6)))) | s(bool,'F_0') = s(bool,sK13('F_0',X7,bool)) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f222,f208])).
fof(f5289,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | s(bool,'T_0') = s(bool,sK13(X0,X1,bool))) )),
  inference(superposition,[],[f223,f208])).
fof(f6680,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X16),s(bool,X17)))) | s(bool,X15) != s(bool,X17) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f221,f208])).
fof(f6681,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X19),s(bool,X18)))) | p(s(bool,happ(s(fun(bool,bool),X19),s(bool,X20)))) | s(bool,'F_0') != s(bool,X20) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f221,f208])).
fof(f3453,plain,(
  ( ! [X10,X11] : (s(bool,'T_0') = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))),X11,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f3409,f192])).
fof(f3409,plain,(
  ( ! [X10,X11] : (~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))),X11,bool))) )),
  inference(superposition,[],[f222,f192])).
fof(f3454,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12)))),X13,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'T_0'))))) )),
  inference(forward_demodulation,[],[f3410,f194])).
fof(f3410,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'T_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12)))),X13,bool))) )),
  inference(superposition,[],[f222,f194])).
fof(f3406,plain,(
  ( ! [X4,X5] : (~p(s(bool,happ(s(fun(bool,bool),X5),s(bool,'F_0')))) | s(bool,X4) = s(bool,sK13(X4,X5,bool)) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f222,f208])).
fof(f3452,plain,(
  ( ! [X8,X9] : (s(bool,'F_0') = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')),X9,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X9),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f3408,f184])).
fof(f3408,plain,(
  ( ! [X8,X9] : (~p(s(bool,happ(s(fun(bool,bool),X9),s(bool,'F_0')))) | s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')),X9,bool))) )),
  inference(superposition,[],[f222,f184])).
fof(f3460,plain,(
  ( ! [X23,X22] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22))) = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X23),s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22))))))) )),
  inference(forward_demodulation,[],[f3415,f193])).
fof(f3415,plain,(
  ( ! [X23,X22] : (~p(s(bool,happ(s(fun(bool,bool),X23),s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X22)))))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))))) = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))),X23,bool))) )),
  inference(superposition,[],[f222,f193])).
fof(f4634,plain,(
  ( ! [X19,X20,X18] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(forward_demodulation,[],[f4622,f241])).
fof(f4622,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,happ(s(fun(bool,bool),X20),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X18),s('type.num.num',X19)))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))),X20,bool))) )),
  inference(superposition,[],[f222,f241])).
fof(f4166,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f4165,f241])).
fof(f4165,plain,(
  ( ! [X21,X22,X20] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20))))))) )),
  inference(forward_demodulation,[],[f4149,f234])).
fof(f4149,plain,(
  ( ! [X21,X22,X20] : (~p(s(bool,happ(s(fun(bool,bool),X22),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X21),s('type.num.num',X20)))))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22,bool))) )),
  inference(superposition,[],[f222,f238])).
fof(f3467,plain,(
  ( ! [X33,X31,X32] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32)),X33,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X33),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31))))))) )),
  inference(forward_demodulation,[],[f3421,f234])).
fof(f3421,plain,(
  ( ! [X33,X31,X32] : (~p(s(bool,happ(s(fun(bool,bool),X33),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X32),s('type.num.num',X31)))))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X32)),X33,bool))) )),
  inference(superposition,[],[f222,f234])).
fof(f6718,plain,(
  ( ! [X134,X132,X135,X133] : (~p(s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X133),s('type.num.num',X132)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X134),s('type.num.num',X135)))) | s('type.num.num',X135) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X132),s('type.num.num',X133)))) )),
  inference(superposition,[],[f221,f235])).
fof(f3488,plain,(
  ( ! [X74,X73] : (s('type.num.num',X73) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X74),s('type.num.num',X73))))) )),
  inference(forward_demodulation,[],[f3444,f196])).
fof(f3444,plain,(
  ( ! [X74,X73] : (~p(s(bool,happ(s(fun('type.num.num',bool),X74),s('type.num.num',X73)))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0')),X74,'type.num.num'))) )),
  inference(superposition,[],[f222,f196])).
fof(f3489,plain,(
  ( ! [X76,X77,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,X75),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76)),X77,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X77),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(forward_demodulation,[],[f3445,f232])).
fof(f3445,plain,(
  ( ! [X76,X77,X75] : (~p(s(bool,happ(s(fun('type.num.num',bool),X77),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X75),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,X75),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76)),X77,'type.num.num'))) )),
  inference(superposition,[],[f222,f232])).
fof(f3484,plain,(
  ( ! [X66] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X66,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X66),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(forward_demodulation,[],[f3440,f177])).
fof(f3440,plain,(
  ( ! [X66] : (~p(s(bool,happ(s(fun('type.num.num',bool),X66),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X66,'type.num.num'))) )),
  inference(superposition,[],[f222,f177])).
fof(f3486,plain,(
  ( ! [X70,X69] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X69)))),X70,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X70),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69))))))))) )),
  inference(forward_demodulation,[],[f3442,f202])).
fof(f3442,plain,(
  ( ! [X70,X69] : (~p(s(bool,happ(s(fun('type.num.num',bool),X70),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X69)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X69))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X69)))),X70,'type.num.num'))) )),
  inference(superposition,[],[f222,f202])).
fof(f3485,plain,(
  ( ! [X68,X67] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))),X68,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X68),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67))))))) )),
  inference(forward_demodulation,[],[f3441,f197])).
fof(f3441,plain,(
  ( ! [X68,X67] : (~p(s(bool,happ(s(fun('type.num.num',bool),X68),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X67)))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))),X68,'type.num.num'))) )),
  inference(superposition,[],[f222,f197])).
fof(f6277,plain,(
  ( ! [X206,X204,X205] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205))))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205)))),X206,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X206),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205))))))))) )),
  inference(forward_demodulation,[],[f6257,f246])).
fof(f6257,plain,(
  ( ! [X206,X204,X205] : (~p(s(bool,happ(s(fun('type.num.num',bool),X206),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X204),s('type.num.num',X205)))))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205))))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X204))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X205)))),X206,'type.num.num'))) )),
  inference(superposition,[],[f222,f246])).
fof(f5527,plain,(
  ( ! [X191,X192,X193] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192)))),X193,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X193),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192))))))))) )),
  inference(forward_demodulation,[],[f5510,f244])).
fof(f5510,plain,(
  ( ! [X191,X192,X193] : (~p(s(bool,happ(s(fun('type.num.num',bool),X193),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X191),s('type.num.num',X192)))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X191))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192)))),X193,'type.num.num'))) )),
  inference(superposition,[],[f222,f244])).
fof(f5919,plain,(
  ( ! [X198,X199,X197] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198))))) = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198)))),X199,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X199),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198))))))))) )),
  inference(forward_demodulation,[],[f5900,f245])).
fof(f5900,plain,(
  ( ! [X198,X199,X197] : (~p(s(bool,happ(s(fun('type.num.num',bool),X199),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X197),s('type.num.num',X198)))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198))))) = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X197))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198)))),X199,'type.num.num'))) )),
  inference(superposition,[],[f222,f245])).
fof(f3487,plain,(
  ( ! [X72,X71] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71)))),X72,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X72),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71))))))))) )),
  inference(forward_demodulation,[],[f3443,f199])).
fof(f3443,plain,(
  ( ! [X72,X71] : (~p(s(bool,happ(s(fun('type.num.num',bool),X72),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X71)))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71))))) = s('type.num.num',sK13('const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X71)))),X72,'type.num.num'))) )),
  inference(superposition,[],[f222,f199])).
fof(f3492,plain,(
  ( ! [X81,X82] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81))))) = s('type.num.num',sK13('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81))))))))) )),
  inference(forward_demodulation,[],[f3448,f198])).
fof(f3448,plain,(
  ( ! [X81,X82] : (~p(s(bool,happ(s(fun('type.num.num',bool),X82),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X81)))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))))) = s('type.num.num',sK13('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81)))),X82,'type.num.num'))) )),
  inference(superposition,[],[f222,f198])).
fof(f3426,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,happ(s(fun('type.num.num',bool),X41),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X40),s('type.num.num',X39)))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num',X40)),X41,'type.num.num'))) )),
  inference(superposition,[],[f222,f235])).
fof(f3490,plain,(
  ( ! [X78,X79] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X79,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X79),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78))))))) )),
  inference(forward_demodulation,[],[f3446,f207])).
fof(f3446,plain,(
  ( ! [X78,X79] : (~p(s(bool,happ(s(fun('type.num.num',bool),X79),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X78)))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X78))),s('type.num.num','const.arithmetic.ZERO_0')),X79,'type.num.num'))) )),
  inference(superposition,[],[f222,f207])).
fof(f689,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f193,f208])).
fof(f193,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X20] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X20))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|32')).
fof(f234,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1)))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X20,X23] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X20))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num',X23)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.arithmetic.GREATER_EQ')).
fof(f238,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X20,X23] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X23),s('type.num.num',X20))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|31')).
fof(f241,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X20,X23] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num',X23))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|28')).
fof(f2179,plain,(
  ( ! [X4,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X4),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',X4)))) )),
  inference(superposition,[],[f234,f208])).
fof(f4140,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))) )),
  inference(superposition,[],[f238,f208])).
fof(f4614,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f241,f208])).
fof(f6211,plain,(
  ( ! [X105,X106,X104] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X106))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X104),s('type.num.num',X105))))))) | s('type.num.num',X106) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X104))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X105)))))) )),
  inference(superposition,[],[f255,f246])).
fof(f5854,plain,(
  ( ! [X99,X97,X98] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X99))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X97),s('type.num.num',X98))))))) | s('type.num.num',X99) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X97))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X98)))))) )),
  inference(superposition,[],[f255,f245])).
fof(f5562,plain,(
  ( ! [X4,X5] : (s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f5533,f179])).
fof(f5533,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f417,f184])).
fof(f5464,plain,(
  ( ! [X92,X93,X91] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X93))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X91),s('type.num.num',X92))))))) | s('type.num.num',X93) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X91))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X92)))))) )),
  inference(superposition,[],[f255,f244])).
fof(f3343,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X24))))) | s('type.num.num',X25) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f255,f207])).
fof(f3296,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f207,f208])).
fof(f3025,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num',X6) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) )),
  inference(superposition,[],[f256,f235])).
fof(f3019,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f235,f256])).
fof(f2712,plain,(
  ( ! [X47,X45,X46] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X45))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X47))) | s('type.num.num',X47) = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X45),s('type.num.num',X46)))) )),
  inference(superposition,[],[f255,f217])).
fof(f2708,plain,(
  ( ! [X37,X38] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X38))) | s('type.num.num',X38) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f255,f196])).
fof(f2705,plain,(
  ( ! [X31,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X31))))) | s('type.num.num',X32) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X31)))))) )),
  inference(superposition,[],[f255,f197])).
fof(f2691,plain,(
  ( ! [X6,X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))) )),
  inference(superposition,[],[f255,f235])).
fof(f974,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X11),s('type.num.num',X12)))) )),
  inference(superposition,[],[f209,f217])).
fof(f971,plain,(
  ( ! [X8] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f209,f196])).
fof(f970,plain,(
  ( ! [X7] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) )),
  inference(superposition,[],[f209,f197])).
fof(f964,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f186])).
fof(f961,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f187])).
fof(f849,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(superposition,[],[f217,f208])).
fof(f730,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f195,f178])).
fof(f688,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f193,f178])).
fof(f179,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11',aHL_FALSITY)).
fof(f183,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X20] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|23')).
fof(f184,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X20] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_lt|split|2')).
fof(f191,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X20] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|20')).
fof(f207,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X20] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X20))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.iSUB_THM|split|2')).
fof(f249,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.iSUB_THM|split|4')).
fof(f250,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f68])).
fof(f68,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.iSUB_THM|split|5')).
fof(f395,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(unit_resulting_resolution,[],[f179,f180,f251])).
fof(f422,plain,(
  ( ! [X5] : (p(s(bool,X5)) | s(bool,'F_0') = s(bool,X5)) )),
  inference(forward_demodulation,[],[f421,f184])).
fof(f421,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(subsumption_resolution,[],[f402,f179])).
fof(f402,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | p(s(bool,X5)) | s(bool,X5) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f251,f184])).
fof(f206,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X20] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X20))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|24')).
fof(f204,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X20] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X20))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|21')).
fof(f205,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X20] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|27')).
fof(f270,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(backward_demodulation,[],[f234,f214])).
fof(f269,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(backward_demodulation,[],[f234,f213])).
fof(f248,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X20,X23] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.iSUB_THM|split|3')).
fof(f192,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X20] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_lt|split|0')).
fof(f197,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X20] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_suc|split|1')).
fof(f203,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|9')).
fof(f178,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f50])).
fof(f50,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|13')).
fof(f177,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f59])).
fof(f59,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_suc|split|0')).
fof(f202,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X20] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_suc|split|2')).
fof(f194,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X20] : s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_lt|split|1')).
fof(f200,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|10')).
fof(f198,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X20] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X20))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|16')).
fof(f199,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X20] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|14')).
fof(f244,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|12')).
fof(f245,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|5')).
fof(f246,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X20,X23] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X20),s('type.num.num',X23))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|8')).
fof(f256,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f168])).
fof(f229,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f167])).
fof(f230,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16(X3,X2,X1,X0)),s('type.list.list'(X0),sK17(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f167])).
fof(f231,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f167])).
fof(f268,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f201,f178])).
fof(f201,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X20] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|11')).
fof(f417,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f400,f179])).
fof(f400,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f251,f208])).
fof(f382,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(subsumption_resolution,[],[f376,f179])).
fof(f376,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f175,f208])).
fof(f374,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f179,f208])).
fof(f370,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f208,f208])).
fof(f260,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK18(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK18(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f170])).
fof(f170,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK18(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK18(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18])],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11',aHL_EXT)).
fof(f251,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X18,X19] : ((p(s(bool,X18)) => p(s(bool,X19))) => ((p(s(bool,X19)) => p(s(bool,X18))) => s(bool,X18) = s(bool,X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.bool.IMP_ANTISYM_AX')).
fof(f254,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f146])).
fof(f232,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X1),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X1),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X7,X24] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,X24),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X7)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.iSUB_THM|split|0')).
fof(f215,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f154])).
fof(f213,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X20] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X20))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|30')).
fof(f214,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f153])).
fof(f209,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f151])).
fof(f208,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11',aHL_BOOL_CASES)).
fof(f190,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X20] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|29')).
fof(f189,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X20] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|26')).
fof(f188,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|6')).
fof(f185,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X25] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X25),s('type.num.num',X25)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.arithmetic.SUB_EQUAL_|48|')).
fof(f182,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.arithmetic.MULT|split|0')).
fof(f181,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X20),s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|4')).
fof(f180,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f20])).
fof(f20,axiom,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|34')).
fof(f175,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f37])).
fof(f37,axiom,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.numeral.numeral_distrib|split|35')).
fof(f174,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11',aHL_TRUTH)).
fof(f15501,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15379,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15379,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20)))))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11752])).
fof(f11752,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11751,f245])).
fof(f11751,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11578,f1091])).
fof(f1091,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f205])).
fof(f11578,plain,(
  ( ! [X19,X20] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X19),s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))))) ) | $spl34),
  inference(superposition,[],[f3774,f245])).
fof(f3774,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) ) | $spl34),
  inference(superposition,[],[f1116,f1091])).
fof(f1116,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl34),
  inference(forward_demodulation,[],[f1098,f1076])).
fof(f1098,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f269])).
fof(f15500,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15378,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15378,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16)))))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11744])).
fof(f11744,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11743,f244])).
fof(f11743,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11575,f1091])).
fof(f11575,plain,(
  ( ! [X15,X16] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num',X16))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))))) ) | $spl34),
  inference(superposition,[],[f3774,f244])).
fof(f15499,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15377,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15377,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11)))))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11729])).
fof(f11729,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11728,f246])).
fof(f11728,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11569,f1091])).
fof(f11569,plain,(
  ( ! [X10,X11] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))))) ) | $spl34),
  inference(superposition,[],[f3774,f246])).
fof(f15498,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15376,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15376,plain,(
  ( ! [X61,X60] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num',X61)))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f2294])).
fof(f2294,plain,(
  ( ! [X61,X60] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X61),s('type.num.num',X60))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X60),s('type.num.num',X61)))) ) | $spl34),
  inference(superposition,[],[f1116,f235])).
fof(f15497,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15375,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15375,plain,(
  ( ! [X62,X63] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X63)))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f2295])).
fof(f2295,plain,(
  ( ! [X62,X63] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X63),s('type.num.num',X62))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num',X63)))) ) | $spl34),
  inference(superposition,[],[f1117,f235])).
fof(f1117,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl34),
  inference(forward_demodulation,[],[f1099,f1076])).
fof(f1099,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f270])).
fof(f15496,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15374,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15374,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11395])).
fof(f11395,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f3773,f235])).
fof(f3773,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f1117,f1091])).
fof(f15495,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15373,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15373,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11560])).
fof(f11560,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f3774,f235])).
fof(f15494,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15372,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15372,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f10994])).
fof(f10994,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9750,f1116])).
fof(f9750,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4203,f197])).
fof(f4203,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl34),
  inference(superposition,[],[f2022,f199])).
fof(f2022,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))) ) | $spl34),
  inference(superposition,[],[f1992,f199])).
fof(f1992,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21)))))) ) | $spl34),
  inference(subsumption_resolution,[],[f1983,f1934])).
fof(f1934,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f1910,f199])).
fof(f1910,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(subsumption_resolution,[],[f1909,f179])).
fof(f1909,plain,(
  ( ! [X23] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1908,f184])).
fof(f1908,plain,(
  ( ! [X23] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1907,f236])).
fof(f1907,plain,(
  ( ! [X23] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1896,f1091])).
fof(f1896,plain,(
  ( ! [X23] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X23))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl34),
  inference(superposition,[],[f1117,f199])).
fof(f1983,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X21)))))))) ) | $spl34),
  inference(superposition,[],[f1094,f202])).
fof(f1094,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f210])).
fof(f15493,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15371,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15371,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f9520])).
fof(f9520,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4167,f199])).
fof(f4167,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2022,f1116])).
fof(f15492,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15370,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15370,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f10955])).
fof(f10955,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9706,f1116])).
fof(f9706,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4202,f197])).
fof(f4202,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f2022,f202])).
fof(f15491,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15369,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15369,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f9519])).
fof(f9519,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4167,f202])).
fof(f15490,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15368,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15368,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f10902])).
fof(f10902,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9468,f1116])).
fof(f9468,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4072,f197])).
fof(f4072,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl34),
  inference(superposition,[],[f2021,f199])).
fof(f2021,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) ) | $spl34),
  inference(superposition,[],[f1992,f202])).
fof(f15489,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15367,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15367,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f9222])).
fof(f9222,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4036,f199])).
fof(f4036,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2021,f1116])).
fof(f15488,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15366,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15366,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f9221])).
fof(f9221,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f4036,f202])).
fof(f15487,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15365,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15365,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f10863])).
fof(f10863,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9307,f1116])).
fof(f9307,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(superposition,[],[f4071,f197])).
fof(f4071,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f2021,f202])).
fof(f15486,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15364,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15364,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f10725])).
fof(f10725,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f9306,f1116])).
fof(f9306,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl34),
  inference(superposition,[],[f4071,f177])).
fof(f15485,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362,f15389])).
fof(f15484,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361,f15362])).
fof(f15483,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359,f15361])).
fof(f15482,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15360,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359])).
fof(f15360,plain,(
  ( ! [X144,X142,X143] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11522])).
fof(f11522,plain,(
  ( ! [X144,X142,X143,X141] : (p(s(bool,happ(s(fun(X142,bool),X143),s(X142,sK15('const.arithmetic.>=_2'(s('type.num.num',X141),s('type.num.num','const.arithmetic.ZERO_0')),X143,X142))))) | ~p(s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))))) ) | $spl34),
  inference(subsumption_resolution,[],[f11511,f174])).
fof(f11511,plain,(
  ( ! [X144,X142,X143,X141] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X142,bool),X143),s(X142,sK15('const.arithmetic.>=_2'(s('type.num.num',X141),s('type.num.num','const.arithmetic.ZERO_0')),X143,X142))))) | ~p(s(bool,happ(s(fun(X142,bool),X143),s(X142,X144))))) ) | $spl34),
  inference(superposition,[],[f226,f1086])).
fof(f1086,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f190])).
fof(f15481,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358,f15359])).
fof(f15480,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355,f15358])).
fof(f15479,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15357,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355])).
fof(f15357,plain,(
  ( ! [X116,X114,X115,X113] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X114,bool),X115),s(X114,X116))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11504])).
fof(f11504,plain,(
  ( ! [X116,X114,X115,X113] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X114,bool),X115),s(X114,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.ZERO_0')),X115,X114))))) | ~p(s(bool,happ(s(fun(X114,bool),X115),s(X114,X116))))) ) | $spl34),
  inference(superposition,[],[f226,f1091])).
fof(f15478,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15356,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355])).
fof(f15356,plain,(
  ( ! [X94,X95,X93] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X93,bool),X94),s(X93,X95))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11521])).
fof(f11521,plain,(
  ( ! [X94,X92,X95,X93] : (p(s(bool,happ(s(fun(X93,bool),X94),s(X93,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X92)),X94,X93))))) | ~p(s(bool,happ(s(fun(X93,bool),X94),s(X93,X95))))) ) | $spl34),
  inference(subsumption_resolution,[],[f11498,f174])).
fof(f11498,plain,(
  ( ! [X94,X92,X95,X93] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X93,bool),X94),s(X93,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X92)),X94,X93))))) | ~p(s(bool,happ(s(fun(X93,bool),X94),s(X93,X95))))) ) | $spl34),
  inference(superposition,[],[f226,f1085])).
fof(f1085,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f189])).
fof(f15477,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354,f15355])).
fof(f15476,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352,f15354])).
fof(f15475,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15353,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352])).
fof(f15353,plain,(
  ( ! [X74,X72,X75,X73] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72)))) | ~p(s(bool,happ(s(fun(X73,bool),X74),s(X73,X75))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11493])).
fof(f11493,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X72)))) | p(s(bool,happ(s(fun(X73,bool),X74),s(X73,sK15('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X72))),s('type.num.num','const.arithmetic.ZERO_0')),X74,X73))))) | ~p(s(bool,happ(s(fun(X73,bool),X74),s(X73,X75))))) ) | $spl34),
  inference(superposition,[],[f226,f1092])).
fof(f1092,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f206])).
fof(f15474,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351,f15352])).
fof(f15473,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349,f15351])).
fof(f15472,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15350,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349])).
fof(f15350,plain,(
  ( ! [X57,X58,X56] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11520])).
fof(f11520,plain,(
  ( ! [X57,X58,X56] : (p(s(bool,happ(s(fun(X56,bool),X57),s(X56,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X57,X56))))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) ) | $spl34),
  inference(subsumption_resolution,[],[f11489,f174])).
fof(f11489,plain,(
  ( ! [X57,X58,X56] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X56,bool),X57),s(X56,sK15('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X57,X56))))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) ) | $spl34),
  inference(superposition,[],[f226,f1100])).
fof(f1100,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1076,f382])).
fof(f15471,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348,f15349])).
fof(f15470,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347,f15348])).
fof(f15469,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346,f15347])).
fof(f15468,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344,f15346])).
fof(f15467,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15345,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344])).
fof(f15345,plain,(
  ( ! [X35,X33,X34,X32] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)))) | ~p(s(bool,happ(s(fun(X33,bool),X34),s(X33,X35))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f11484])).
fof(f11484,plain,(
  ( ! [X35,X33,X34,X32] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X32)))) | p(s(bool,happ(s(fun(X33,bool),X34),s(X33,sK15('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))),X34,X33))))) | ~p(s(bool,happ(s(fun(X33,bool),X34),s(X33,X35))))) ) | $spl34),
  inference(superposition,[],[f226,f1090])).
fof(f1090,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f204])).
fof(f15466,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343,f15344])).
fof(f15465,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390,f15343])).
fof(f15464,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391,f15390])).
fof(f15463,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340,f15391])).
fof(f15462,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339,f15340])).
fof(f15461,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337,f15339])).
fof(f15460,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15338,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337])).
fof(f15338,plain,(
  ( ! [X146,X147,X145] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X145,bool),X146),s(X145,X147))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f7154])).
fof(f7154,plain,(
  ( ! [X146,X144,X147,X145] : (p(s(bool,happ(s(fun(X145,bool),X146),s(X145,sK14('const.arithmetic.>=_2'(s('type.num.num',X144),s('type.num.num','const.arithmetic.ZERO_0')),X146,X145))))) | ~p(s(bool,happ(s(fun(X145,bool),X146),s(X145,X147))))) ) | $spl34),
  inference(subsumption_resolution,[],[f7137,f174])).
fof(f7137,plain,(
  ( ! [X146,X144,X147,X145] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X145,bool),X146),s(X145,sK14('const.arithmetic.>=_2'(s('type.num.num',X144),s('type.num.num','const.arithmetic.ZERO_0')),X146,X145))))) | ~p(s(bool,happ(s(fun(X145,bool),X146),s(X145,X147))))) ) | $spl34),
  inference(superposition,[],[f224,f1086])).
fof(f15459,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335,f15337])).
fof(f15458,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15336,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335])).
fof(f15336,plain,(
  ( ! [X111,X114,X112,X113] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X111),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X112,bool),X113),s(X112,X114))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f7129])).
fof(f7129,plain,(
  ( ! [X111,X114,X112,X113] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X111),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X112,bool),X113),s(X112,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X111))),s('type.num.num','const.arithmetic.ZERO_0')),X113,X112))))) | ~p(s(bool,happ(s(fun(X112,bool),X113),s(X112,X114))))) ) | $spl34),
  inference(superposition,[],[f224,f1091])).
fof(f15457,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333,f15335])).
fof(f15456,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15334,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333])).
fof(f15334,plain,(
  ( ! [X99,X100,X98] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X98,bool),X99),s(X98,X100))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f7152])).
fof(f7152,plain,(
  ( ! [X99,X97,X100,X98] : (p(s(bool,happ(s(fun(X98,bool),X99),s(X98,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X99,X98))))) | ~p(s(bool,happ(s(fun(X98,bool),X99),s(X98,X100))))) ) | $spl34),
  inference(subsumption_resolution,[],[f7125,f174])).
fof(f7125,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X98,bool),X99),s(X98,sK14('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X99,X98))))) | ~p(s(bool,happ(s(fun(X98,bool),X99),s(X98,X100))))) ) | $spl34),
  inference(superposition,[],[f224,f1085])).
fof(f15455,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332,f15333])).
fof(f15454,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331,f15332])).
fof(f15453,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329,f15331])).
fof(f15452,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15330,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329])).
fof(f15330,plain,(
  ( ! [X83,X81,X84,X82] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X81)))) | ~p(s(bool,happ(s(fun(X82,bool),X83),s(X82,X84))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f7121])).
fof(f7121,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X81)))) | p(s(bool,happ(s(fun(X82,bool),X83),s(X82,sK14('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X81))),s('type.num.num','const.arithmetic.ZERO_0')),X83,X82))))) | ~p(s(bool,happ(s(fun(X82,bool),X83),s(X82,X84))))) ) | $spl34),
  inference(superposition,[],[f224,f1092])).
fof(f15451,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327,f15329])).
fof(f15450,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15328,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327])).
fof(f15328,plain,(
  ( ! [X70,X71,X69] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f7151])).
fof(f7151,plain,(
  ( ! [X70,X71,X69] : (p(s(bool,happ(s(fun(X69,bool),X70),s(X69,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X70,X69))))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) ) | $spl34),
  inference(subsumption_resolution,[],[f7118,f174])).
fof(f7118,plain,(
  ( ! [X70,X71,X69] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X69,bool),X70),s(X69,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X70,X69))))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) ) | $spl34),
  inference(superposition,[],[f224,f1100])).
fof(f15449,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326,f15327])).
fof(f15448,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325,f15326])).
fof(f15447,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324,f15325])).
fof(f15446,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322,f15324])).
fof(f15445,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15323,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322])).
fof(f15323,plain,(
  ( ! [X39,X37,X38,X40] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40))))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f7111])).
fof(f7111,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)))) | p(s(bool,happ(s(fun(X38,bool),X39),s(X38,sK14('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X37)))),X39,X38))))) | ~p(s(bool,happ(s(fun(X38,bool),X39),s(X38,X40))))) ) | $spl34),
  inference(superposition,[],[f224,f1090])).
fof(f15444,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321,f15322])).
fof(f15443,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392,f15321])).
fof(f15442,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319,f15392])).
fof(f15441,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317,f15319])).
fof(f15440,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316,f15317])).
fof(f15439,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312,f15316])).
fof(f15435,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311,f15312])).
fof(f15434,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304,f15311])).
fof(f15427,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301,f15304])).
fof(f15424,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300,f15301])).
fof(f15423,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299,f15300])).
fof(f15422,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298,f15299])).
fof(f15421,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297,f15298])).
fof(f15420,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296,f15297])).
fof(f15419,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295,f15296])).
fof(f15418,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294,f15295])).
fof(f15417,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293,f15294])).
fof(f15416,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290,f15293])).
fof(f15415,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15292,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290])).
fof(f15292,plain,(
  ( ! [X261,X259,X260] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num',X260))))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260)))),X261,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f12126])).
fof(f12126,plain,(
  ( ! [X261,X259,X260] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num',X260))))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260)))),X261,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X261),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num',X260))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f12125,f12047])).
fof(f12047,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(backward_demodulation,[],[f12046,f247])).
fof(f12125,plain,(
  ( ! [X261,X259,X260] : (~p(s(bool,happ(s(fun('type.num.num',bool),X261),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num',X260)))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260))))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260)))),X261,'type.num.num'))) ) | $spl34),
  inference(forward_demodulation,[],[f12042,f12046])).
fof(f12042,plain,(
  ( ! [X261,X259,X260] : (~p(s(bool,happ(s(fun('type.num.num',bool),X261),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X259),s('type.num.num',X260)))))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260))))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X259))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X260)))),X261,'type.num.num'))) )),
  inference(superposition,[],[f222,f247])).
fof(f15414,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15291,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290])).
fof(f15291,plain,(
  ( ! [X36] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X36,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f3470])).
fof(f3470,plain,(
  ( ! [X36] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X36,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X36),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3424,f1901])).
fof(f1901,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(forward_demodulation,[],[f1873,f197])).
fof(f1873,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f199,f1114])).
fof(f1114,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(forward_demodulation,[],[f1077,f177])).
fof(f1077,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(backward_demodulation,[],[f1076,f178])).
fof(f3424,plain,(
  ( ! [X36] : (~p(s(bool,happ(s(fun('type.num.num',bool),X36),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X36,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1901])).
fof(f15413,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289,f15290])).
fof(f15412,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288,f15289])).
fof(f15411,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285,f15288])).
fof(f15410,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15287,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285])).
fof(f15287,plain,(
  ( ! [X35] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X35,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f3469])).
fof(f3469,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X35,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X35),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3423,f1114])).
fof(f3423,plain,(
  ( ! [X35] : (~p(s(bool,happ(s(fun('type.num.num',bool),X35),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X35,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1114])).
fof(f15409,plain,(
  $false | ($spl34 | $spl48)),
  inference(global_subsumption,[],[f15286,f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285])).
fof(f15286,plain,(
  ( ! [X56,X55] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')),X56,'type.num.num'))) ) | ($spl34 | $spl48)),
  inference(backward_demodulation,[],[f6094,f3478])).
fof(f3478,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')),X56,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X56),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3434,f1115])).
fof(f1115,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f1097,f177])).
fof(f1097,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f268])).
fof(f3434,plain,(
  ( ! [X56,X55] : (~p(s(bool,happ(s(fun('type.num.num',bool),X56),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num',X55),s('type.num.num','const.arithmetic.ZERO_0')),X56,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1115])).
fof(f15408,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284,f15285])).
fof(f15407,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282,f15284])).
fof(f15406,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281,f15282])).
fof(f15405,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403,f15281])).
fof(f15404,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400,f15403])).
fof(f15401,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397,f15400])).
fof(f15398,plain,(
  $false | $spl48),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f2691,f2705,f2708,f2712,f3019,f3025,f3296,f3343,f5464,f5562,f5854,f6211,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3486,f3484,f3489,f3488,f6718,f3467,f4166,f4634,f3460,f3452,f3406,f3454,f3453,f6681,f6680,f5289,f3407,f7148,f7147,f7141,f7139,f7138,f7130,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3545,f3544,f4993,f5172,f3543,f4963,f5142,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f11518,f11519,f11485,f11486,f11487,f11488,f11490,f11492,f11494,f11497,f11505,f11508,f11512,f11513,f11514,f12860,f13068,f13072,f13078,f13167,f13177,f13182,f13184,f13185,f13186,f13187,f13188,f13191,f13194,f13195,f13113,f13123,f13129,f13132,f13134,f13135,f13136,f13137,f13138,f13140,f13142,f13143,f13145,f13376,f13382,f13392,f13398,f13401,f13403,f13404,f13405,f13406,f13407,f13409,f13411,f13412,f13417,f13484,f13494,f13499,f13501,f13502,f13503,f13504,f13505,f13508,f13511,f13512,f13449,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14321,f14539,f14424,f14425,f14540,f14460,f14561,f14604,f14610,f14661,f14675,f14678,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14690,f14691,f14693,f14694,f14646,f14733,f14734,f14735,f14741,f14742,f14865,f14849,f14854,f14859,f14861,f14862,f15177,f15137,f15171,f15175,f6094,f15394,f15397])).
fof(f15395,plain,(
  $false | ($spl34 | $spl43 | $spl48)),
  inference(global_subsumption,[],[f173,f172,f171,f174,f175,f176,f180,f181,f182,f185,f186,f187,f188,f189,f190,f196,f208,f210,f209,f214,f213,f216,f215,f217,f232,f254,f251,f260,f370,f374,f382,f381,f417,f418,f268,f235,f231,f230,f229,f228,f256,f255,f247,f246,f245,f244,f199,f198,f200,f194,f202,f177,f178,f220,f219,f218,f203,f197,f192,f248,f269,f270,f205,f204,f206,f422,f395,f250,f249,f207,f191,f184,f183,f179,f688,f730,f849,f961,f963,f964,f965,f966,f967,f968,f970,f971,f973,f974,f975,f1020,f992,f1076,f1114,f1078,f1079,f1080,f1081,f1082,f1083,f1084,f1085,f1086,f1088,f1089,f1093,f1094,f1095,f1096,f1115,f1100,f1101,f1118,f1119,f1106,f1107,f1108,f1111,f1113,f1729,f1797,f1901,f1910,f1935,f1933,f1934,f1940,f1992,f1996,f1995,f1998,f1997,f2019,f2020,f2021,f2022,f2080,f2104,f2133,f2195,f2218,f2217,f2219,f2291,f2292,f2398,f2491,f2490,f2518,f2571,f2626,f2823,f2824,f2690,f2691,f2693,f2827,f2697,f2828,f2829,f2830,f2831,f2832,f2833,f2834,f2705,f2708,f2837,f2838,f2712,f2714,f2919,f2918,f3019,f3025,f3127,f3128,f3187,f3130,f3189,f3255,f3264,f3269,f3274,f3270,f3280,f3286,f3290,f3296,f3343,f3358,f3386,f3464,f3499,f3509,f3661,f3675,f3735,f3800,f3902,f3900,f4029,f4030,f4069,f4070,f4071,f4072,f4201,f4202,f4203,f4279,f4385,f4483,f4482,f4670,f4678,f4791,f4828,f4914,f4915,f4954,f5091,f5261,f5349,f5393,f5394,f5395,f5428,f5429,f5464,f5486,f5562,f5569,f5574,f5576,f5577,f5580,f5781,f5782,f5816,f5817,f5854,f5876,f5962,f6032,f6133,f6134,f6169,f6170,f6211,f6233,f6324,f6325,f6579,f6630,f6672,f6674,f6754,f6793,f6879,f6880,f6887,f6892,f6899,f6903,f7034,f7035,f7036,f7037,f7038,f7039,f7040,f7041,f7042,f7043,f7044,f7045,f7046,f7047,f7048,f7049,f6942,f7063,f7072,f7074,f7079,f7087,f7094,f7096,f7099,f7100,f7143,f7149,f7156,f1827,f1829,f2294,f2295,f4793,f4167,f4036,f4757,f4674,f4106,f4613,f4105,f4612,f4104,f3774,f3773,f3772,f1117,f1116,f1091,f4614,f4140,f2179,f241,f238,f234,f193,f689,f3490,f3426,f3492,f3487,f5919,f5527,f6277,f3485,f3470,f3486,f3469,f3478,f3484,f4287,f3669,f3491,f3489,f3483,f3482,f3481,f3480,f3479,f3477,f3475,f3474,f3468,f3471,f3472,f3476,f3488,f6718,f3790,f3467,f4166,f4634,f3460,f5137,f3461,f3458,f3452,f3406,f3466,f3463,f3456,f3454,f3453,f6681,f6680,f5289,f3407,f7154,f7152,f7151,f7148,f7147,f7141,f7139,f7138,f7130,f7129,f7123,f5292,f5291,f3451,f3404,f226,f224,f223,f222,f221,f195,f731,f3455,f7116,f3546,f3972,f4862,f3545,f3971,f4154,f4628,f4861,f3544,f4993,f5172,f7121,f7111,f4153,f3859,f3842,f3727,f3711,f3543,f1092,f1090,f4963,f5142,f3940,f4895,f3939,f4894,f7134,f7122,f7120,f7115,f7114,f7113,f7112,f5255,f4913,f4896,f4756,f4740,f4465,f4449,f4364,f4348,f3992,f3974,f3597,f3575,f3459,f2064,f258,f257,f243,f242,f240,f239,f237,f236,f233,f8401,f8848,f8846,f8847,f8897,f9017,f9018,f9062,f9063,f9185,f9184,f9221,f9222,f9306,f9307,f9308,f9309,f9468,f9469,f9470,f9483,f9482,f9519,f9520,f9706,f9707,f9708,f9750,f9751,f9752,f9877,f9878,f9935,f9936,f10084,f10097,f10212,f10225,f10224,f10449,f10462,f10461,f10721,f10729,f10725,f10900,f10863,f10940,f10902,f10992,f10955,f11032,f10994,f11225,f11306,f11395,f11518,f11519,f11484,f11485,f11486,f11487,f11488,f11520,f11490,f11492,f11493,f11494,f11497,f11521,f11504,f11505,f11508,f11522,f11512,f11513,f11514,f11560,f11729,f11744,f11752,f11773,f11595,f12046,f12047,f12048,f12049,f12086,f12087,f12088,f12092,f12106,f12110,f12112,f12122,f12126,f12130,f12184,f12189,f12352,f12526,f12605,f12860,f13068,f13070,f13069,f13072,f13073,f13151,f13152,f13153,f13154,f13078,f13155,f13156,f13159,f13161,f13163,f13164,f13166,f13167,f13168,f13170,f13172,f13174,f13176,f13177,f13179,f13181,f13182,f13183,f13184,f13185,f13186,f13187,f13188,f13190,f13191,f13193,f13194,f13195,f13196,f13110,f13111,f13112,f13113,f13115,f13116,f13197,f13198,f13199,f13121,f13200,f13123,f13124,f13201,f13202,f13203,f13204,f13129,f13205,f13206,f13132,f13133,f13134,f13135,f13136,f13137,f13138,f13207,f13140,f13208,f13142,f13143,f13144,f13145,f13147,f13148,f13374,f13373,f13376,f13377,f13454,f13379,f13380,f13381,f13382,f13384,f13385,f13455,f13456,f13457,f13390,f13458,f13392,f13393,f13459,f13460,f13461,f13462,f13398,f13463,f13464,f13401,f13402,f13403,f13404,f13405,f13406,f13407,f13465,f13409,f13466,f13411,f13412,f13468,f13469,f13470,f13471,f13417,f13472,f13473,f13476,f13478,f13480,f13481,f13483,f13484,f13485,f13487,f13489,f13491,f13493,f13494,f13496,f13498,f13499,f13500,f13501,f13502,f13503,f13504,f13505,f13507,f13508,f13510,f13511,f13512,f13448,f13449,f13451,f13452,f13541,f13545,f13967,f13857,f13858,f13968,f13889,f13911,f13987,f14098,f14299,f14186,f14187,f14300,f14220,f14242,f14321,f14539,f14424,f14425,f14540,f14460,f14482,f14561,f14604,f14605,f14649,f14650,f14651,f14652,f14610,f14653,f14654,f14656,f14657,f14658,f14659,f14660,f14661,f14662,f14665,f14668,f14671,f14674,f14675,f14676,f14677,f14678,f14679,f14680,f14681,f14682,f14683,f14684,f14685,f14686,f14689,f14690,f14691,f14692,f14693,f14694,f14644,f14645,f14646,f14731,f14730,f14733,f14734,f14735,f14736,f14737,f14741,f14742,f14865,f14886,f15040,f15060,f14849,f14854,f14859,f14861,f14862,f15177,f15193,f15222,f15224,f15137,f15171,f15174,f15175,f6094,f15394])).
fof(f15174,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X7) | s('type.list.list'(X6),X8) != s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.NIL_0'))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7)))) ) | $spl34),
  inference(superposition,[],[f220,f3290])).
fof(f15224,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) | s('type.list.list'(X9),X11) != s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X12),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X13),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X14),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X15),s('type.list.list'(X9),X10)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15223,f12047])).
fof(f15223,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) | s('type.list.list'(X9),X11) != s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X12),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X13),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X14),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X15),s('type.list.list'(X9),X10)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15135,f235])).
fof(f15135,plain,(
  ( ! [X14,X12,X10,X15,X13,X11,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X10))) | s('type.list.list'(X9),X11) != s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X12),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X13),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X14),s('type.list.list'(X9),'const.list.CONS_2'(s(X9,X15),s('type.list.list'(X9),X10))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X11))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(superposition,[],[f220,f1901])).
fof(f15222,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X4))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) | s('type.list.list'(X2),X4) != s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X5),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X6),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X7),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X8),s('type.list.list'(X2),X3)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15221,f12047])).
fof(f15221,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) | s('type.list.list'(X2),X4) != s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X5),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X6),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X7),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X8),s('type.list.list'(X2),X3)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15134,f235])).
fof(f15134,plain,(
  ( ! [X6,X4,X2,X8,X7,X5,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) | s('type.list.list'(X2),X4) != s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X5),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X6),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X7),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,X8),s('type.list.list'(X2),X3))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(superposition,[],[f220,f1114])).
fof(f15193,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15192,f2219])).
fof(f15192,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15191,f235])).
fof(f15191,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.NIL_0')))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f15126,f217])).
fof(f15126,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.NIL_0'))))))))),s('type.list.list'(X0),X5)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3290,f217,f220])).
fof(f15060,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15059,f1083])).
fof(f15059,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14783,f217])).
fof(f14783,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3290,f3290,f217,f231])).
fof(f15040,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15039,f2219])).
fof(f15039,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15038,f235])).
fof(f15038,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f15037,f217])).
fof(f15037,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f14790,f217])).
fof(f14790,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),X3)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f217,f3290,f217,f231])).
fof(f14886,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(forward_demodulation,[],[f14885,f2219])).
fof(f14885,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))))) ) | $spl34),
  inference(forward_demodulation,[],[f14884,f217])).
fof(f14884,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2)))))) ) | $spl34),
  inference(forward_demodulation,[],[f14839,f217])).
fof(f14839,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num',X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X3)))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3290,f217,f217,f231])).
fof(f14737,plain,(
  ( ! [X24,X23,X21,X22] : (s('type.list.list'(X21),'const.list.NIL_0') != s('type.list.list'(X21),X24) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),'const.list.APPEND_2'(s('type.list.list'(X21),sK16(X22,X23,X24,X21)),s('type.list.list'(X21),sK17(X22,X23,X24,X21)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X22)))) ) | $spl34),
  inference(superposition,[],[f1096,f230])).
fof(f14736,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X20))) | s('type.list.list'(X17),'const.list.NIL_0') = s('type.list.list'(X17),'const.list.APPEND_2'(s('type.list.list'(X17),sK16(X18,X19,X20,X17)),s('type.list.list'(X17),sK17(X18,X19,X20,X17)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X20))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18)))) ) | $spl34),
  inference(superposition,[],[f1095,f230])).
fof(f14730,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),sK17('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1083,f230])).
fof(f14731,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK16('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0)),s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2219,f230])).
fof(f14645,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK8(X4,'const.arithmetic.ZERO_0',X3))))) ) | $spl34),
  inference(superposition,[],[f218,f1083])).
fof(f14644,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num',X0))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK8(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num',X0)),X1))))) ) | $spl34),
  inference(superposition,[],[f218,f12047])).
fof(f14692,plain,(
  ( ! [X107,X108] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK8(X108,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X107)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f14641,f1111])).
fof(f14641,plain,(
  ( ! [X107,X108] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),sK8(X108,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X107))))) ) | $spl34),
  inference(superposition,[],[f218,f1111])).
fof(f14689,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK8(X99,'const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X98)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14688,f232])).
fof(f14688,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK8(X99,'const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X98))))) ) | $spl34),
  inference(forward_demodulation,[],[f14687,f2219])).
fof(f14687,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK8(X99,'const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X98))))) )),
  inference(forward_demodulation,[],[f14638,f235])).
fof(f14638,plain,(
  ( ! [X99,X97,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),X99))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X98),sK8(X99,'const.numeral.iSUB_3'(s(bool,X96),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X97)),X98))))) )),
  inference(superposition,[],[f218,f232])).
fof(f14679,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X71) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK8(X73,'const.numeral.iZ_1'(s('type.num.num',X71)),X72)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X71)))) ) | $spl34),
  inference(forward_demodulation,[],[f14630,f12130])).
fof(f14630,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),X73))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X71))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X71))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X72),sK8(X73,'const.numeral.iZ_1'(s('type.num.num',X71)),X72))))) ) | $spl34),
  inference(superposition,[],[f218,f12130])).
fof(f14677,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK8(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f14628,f1079])).
fof(f14628,plain,(
  ( ! [X66,X64,X65] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),X66))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X65),sK8(X66,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65))))) ) | $spl34),
  inference(superposition,[],[f218,f1079])).
fof(f14676,plain,(
  ( ! [X61,X62,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK8(X63,'const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0')),X62)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f14627,f1078])).
fof(f14627,plain,(
  ( ! [X61,X62,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),X63))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X62),sK8(X63,'const.arithmetic.*_2'(s('type.num.num',X61),s('type.num.num','const.arithmetic.ZERO_0')),X62))))) ) | $spl34),
  inference(superposition,[],[f218,f1078])).
fof(f14674,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK8(X56,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X55)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14673,f3127])).
fof(f14673,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK8(X56,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X55))))) ) | $spl34),
  inference(forward_demodulation,[],[f14672,f2219])).
fof(f14672,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK8(X56,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X55))))) ) | $spl34),
  inference(forward_demodulation,[],[f14625,f235])).
fof(f14625,plain,(
  ( ! [X56,X55] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),X56))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X55),sK8(X56,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X55))))) ) | $spl34),
  inference(superposition,[],[f218,f3127])).
fof(f14671,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK8(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X53)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14670,f2571])).
fof(f14670,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK8(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X53))))) ) | $spl34),
  inference(forward_demodulation,[],[f14669,f2219])).
fof(f14669,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK8(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X53))))) ) | $spl34),
  inference(forward_demodulation,[],[f14624,f235])).
fof(f14624,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),X54))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X53),sK8(X54,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X53))))) ) | $spl34),
  inference(superposition,[],[f218,f2571])).
fof(f14668,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK8(X52,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))),X51)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14667,f1089])).
fof(f14667,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK8(X52,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))),X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f14666,f2219])).
fof(f14666,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK8(X52,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))),X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f14623,f235])).
fof(f14623,plain,(
  ( ! [X52,X50,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK8(X52,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X50)))))),X51))))) ) | $spl34),
  inference(superposition,[],[f218,f1089])).
fof(f14665,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK8(X49,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))),X48)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14664,f1088])).
fof(f14664,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK8(X49,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))),X48))))) ) | $spl34),
  inference(forward_demodulation,[],[f14663,f2219])).
fof(f14663,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK8(X49,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))),X48))))) ) | $spl34),
  inference(forward_demodulation,[],[f14622,f235])).
fof(f14622,plain,(
  ( ! [X47,X48,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),X49))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X48),sK8(X49,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X47)))))),X48))))) ) | $spl34),
  inference(superposition,[],[f218,f1088])).
fof(f14662,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK8(X46,'const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.ZERO_0')),X45)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14621,f1115])).
fof(f14621,plain,(
  ( ! [X45,X46,X44] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK8(X46,'const.arithmetic.EXP_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.ZERO_0')),X45))))) ) | $spl34),
  inference(superposition,[],[f218,f1115])).
fof(f14660,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK8(X39,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)),X38)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f14619,f1084])).
fof(f14619,plain,(
  ( ! [X39,X37,X38] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),X39))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X38),sK8(X39,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X37)),X38))))) ) | $spl34),
  inference(superposition,[],[f218,f1084])).
fof(f14659,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num',X34) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK8(X36,'const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0')),X35)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X34)))) ) | $spl34),
  inference(forward_demodulation,[],[f14618,f1082])).
fof(f14618,plain,(
  ( ! [X35,X36,X34] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X34))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK8(X36,'const.arithmetic.-_2'(s('type.num.num',X34),s('type.num.num','const.arithmetic.ZERO_0')),X35))))) ) | $spl34),
  inference(superposition,[],[f218,f1082])).
fof(f14658,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK8(X33,'const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31)),X32)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f14617,f1081])).
fof(f14617,plain,(
  ( ! [X33,X31,X32] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),X33))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X32),sK8(X33,'const.arithmetic.-_2'(s('type.num.num',X31),s('type.num.num',X31)),X32))))) ) | $spl34),
  inference(superposition,[],[f218,f1081])).
fof(f14657,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK8(X30,'const.num.|48|_0',X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f14616,f1076])).
fof(f14616,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK8(X30,'const.num.|48|_0',X29))))) ) | $spl34),
  inference(superposition,[],[f218,f1076])).
fof(f14656,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK8(X28,'const.list.LENGTH_1'(s('type.list.list'(X26),'const.list.NIL_0')),X27)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f14615,f3290])).
fof(f14615,plain,(
  ( ! [X28,X26,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X26),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK8(X28,'const.list.LENGTH_1'(s('type.list.list'(X26),'const.list.NIL_0')),X27))))) ) | $spl34),
  inference(superposition,[],[f218,f3290])).
fof(f14654,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),sK8(X23,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f14613,f12047])).
fof(f14613,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X21))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X22),sK8(X23,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))),X22))))) ) | $spl34),
  inference(superposition,[],[f218,f12047])).
fof(f14653,plain,(
  ( ! [X19,X17,X18] : (s('type.num.num',X17) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK8(X19,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X17)))) ) | $spl34),
  inference(forward_demodulation,[],[f14612,f2219])).
fof(f14612,plain,(
  ( ! [X19,X17,X18] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X17))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),sK8(X19,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18))))) ) | $spl34),
  inference(superposition,[],[f218,f2219])).
fof(f14652,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num',X6) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK8(X8,'const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')),X7)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X6)))) ) | $spl34),
  inference(forward_demodulation,[],[f14609,f1083])).
fof(f14609,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X6))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK8(X8,'const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')),X7))))) ) | $spl34),
  inference(superposition,[],[f218,f1083])).
fof(f14651,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK8(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14608,f1901])).
fof(f14608,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK8(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4))))) ) | $spl34),
  inference(superposition,[],[f218,f1901])).
fof(f14650,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK8(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f14607,f1114])).
fof(f14607,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK8(X3,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X2))))) ) | $spl34),
  inference(superposition,[],[f218,f1114])).
fof(f14649,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK8(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f14606,f1113])).
fof(f14606,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK8(X1,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X0))))) ) | $spl34),
  inference(superposition,[],[f218,f1113])).
fof(f14605,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK8('const.list.NIL_0',X2,X1))))) ) | $spl34),
  inference(superposition,[],[f218,f3290])).
fof(f14482,plain,(
  ( ! [X194,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X193),s('type.num.num',X194))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X193))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X194)))))) ) | $spl34),
  inference(superposition,[],[f1093,f250])).
fof(f14242,plain,(
  ( ! [X187,X188] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X187),s('type.num.num',X188))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X187))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X188)))))) ) | $spl34),
  inference(superposition,[],[f1093,f249])).
fof(f13911,plain,(
  ( ! [X182,X181] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X181),s('type.num.num',X182))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X181))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X182)))))) ) | $spl34),
  inference(superposition,[],[f1093,f248])).
fof(f13452,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num',X15)),'const.arithmetic.NUMERAL_1'(s('type.num.num',X14)),X17,X16))))) ) | $spl34),
  inference(superposition,[],[f229,f12047])).
fof(f13451,plain,(
  ( ! [X12,X13,X11] : (s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))) | s('type.num.num',X11) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK17(X11,'const.arithmetic.ZERO_0',X13,X12))))) ) | $spl34),
  inference(superposition,[],[f229,f2219])).
fof(f13448,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK17('const.arithmetic.ZERO_0',X0,X2,X1))))) ) | $spl34),
  inference(superposition,[],[f229,f1083])).
fof(f13510,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK17('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127)))) | s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128)))) ) | $spl34),
  inference(forward_demodulation,[],[f13509,f1111])).
fof(f13509,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK17('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13445,f1083])).
fof(f13445,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X129),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK17('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(superposition,[],[f229,f1111])).
fof(f13507,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK17('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120)))) | s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121)))) ) | $spl34),
  inference(forward_demodulation,[],[f13506,f232])).
fof(f13506,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK17('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13443,f1083])).
fof(f13443,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X122),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK17('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) )),
  inference(superposition,[],[f229,f232])).
fof(f13500,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num',X95) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK17('const.numeral.iZ_1'(s('type.num.num',X95)),X98,X97,X96)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X95)))) ) | $spl34),
  inference(forward_demodulation,[],[f13437,f12130])).
fof(f13437,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X95))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X95))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK17('const.numeral.iZ_1'(s('type.num.num',X95)),X98,X97,X96))))) ) | $spl34),
  inference(superposition,[],[f229,f12130])).
fof(f13498,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK17('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87)))) | s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))) ) | $spl34),
  inference(forward_demodulation,[],[f13497,f1079])).
fof(f13497,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK17('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13435,f1083])).
fof(f13435,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X89),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK17('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(superposition,[],[f229,f1079])).
fof(f13496,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK17('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83)))) | s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84)))) ) | $spl34),
  inference(forward_demodulation,[],[f13495,f1078])).
fof(f13495,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK17('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13434,f1083])).
fof(f13434,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK17('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(superposition,[],[f229,f1078])).
fof(f13493,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74)))) | s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75)))) ) | $spl34),
  inference(forward_demodulation,[],[f13492,f3127])).
fof(f13492,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13432,f1083])).
fof(f13432,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(superposition,[],[f229,f3127])).
fof(f13491,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71)))) | s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72)))) ) | $spl34),
  inference(forward_demodulation,[],[f13490,f2571])).
fof(f13490,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13431,f1083])).
fof(f13431,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(superposition,[],[f229,f2571])).
fof(f13489,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68)))) | s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69)))) ) | $spl34),
  inference(forward_demodulation,[],[f13488,f1089])).
fof(f13488,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13430,f1083])).
fof(f13430,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(superposition,[],[f229,f1089])).
fof(f13487,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64)))) | s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65)))) ) | $spl34),
  inference(forward_demodulation,[],[f13486,f1088])).
fof(f13486,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13429,f1083])).
fof(f13429,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK17('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(superposition,[],[f229,f1088])).
fof(f13485,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK17('const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61,X60)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f13428,f1115])).
fof(f13428,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK17('const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61,X60))))) ) | $spl34),
  inference(superposition,[],[f229,f1115])).
fof(f13483,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK17('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51)))) | s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52)))) ) | $spl34),
  inference(forward_demodulation,[],[f13482,f1084])).
fof(f13482,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK17('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13426,f1083])).
fof(f13426,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK17('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(superposition,[],[f229,f1084])).
fof(f13481,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK17('const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X49,X48,X47)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X46)))) ) | $spl34),
  inference(forward_demodulation,[],[f13425,f1082])).
fof(f13425,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X46))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK17('const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X49,X48,X47))))) ) | $spl34),
  inference(superposition,[],[f229,f1082])).
fof(f13480,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK17('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43)))) | s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44)))) ) | $spl34),
  inference(forward_demodulation,[],[f13479,f1081])).
fof(f13479,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK17('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13424,f1083])).
fof(f13424,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK17('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(superposition,[],[f229,f1081])).
fof(f13478,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.num.|48|_0',X41,X40,X39)))) | s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40)))) ) | $spl34),
  inference(forward_demodulation,[],[f13477,f1076])).
fof(f13477,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13423,f1083])).
fof(f13423,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(superposition,[],[f229,f1076])).
fof(f13476,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK17('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36)))) | s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37)))) ) | $spl34),
  inference(forward_demodulation,[],[f13475,f3290])).
fof(f13475,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK17('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13422,f1083])).
fof(f13422,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK17('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(superposition,[],[f229,f3290])).
fof(f13473,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK17('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X31,X30,X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f13420,f12047])).
fof(f13420,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK17('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X31,X30,X29))))) ) | $spl34),
  inference(superposition,[],[f229,f12047])).
fof(f13472,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num',X23) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK17('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X26,X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X23)))) ) | $spl34),
  inference(forward_demodulation,[],[f13419,f2219])).
fof(f13419,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X23))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK17('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X26,X25,X24))))) ) | $spl34),
  inference(superposition,[],[f229,f2219])).
fof(f13471,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num',X9) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK17('const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X12,X11,X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X9)))) ) | $spl34),
  inference(forward_demodulation,[],[f13416,f1083])).
fof(f13416,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X9))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK17('const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X12,X11,X10))))) ) | $spl34),
  inference(superposition,[],[f229,f1083])).
fof(f13470,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7,X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f13415,f1901])).
fof(f13415,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7,X6))))) ) | $spl34),
  inference(superposition,[],[f229,f1901])).
fof(f13469,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5,X4,X3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f13414,f1114])).
fof(f13414,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5,X4,X3))))) ) | $spl34),
  inference(superposition,[],[f229,f1114])).
fof(f13468,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0)))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl34),
  inference(forward_demodulation,[],[f13467,f1113])).
fof(f13467,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13413,f1083])).
fof(f13413,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(superposition,[],[f229,f1113])).
fof(f13466,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK17(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13410,f2219])).
fof(f13410,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X129))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK17(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(superposition,[],[f229,f1111])).
fof(f13465,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK17(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13408,f2219])).
fof(f13408,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X122))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK17(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) )),
  inference(superposition,[],[f229,f232])).
fof(f13402,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X98))) | s('type.num.num',X98) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK17(X98,'const.numeral.iZ_1'(s('type.num.num',X95)),X97,X96))))) ) | $spl34),
  inference(superposition,[],[f229,f12130])).
fof(f13464,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK17(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13400,f2219])).
fof(f13400,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK17(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(superposition,[],[f229,f1079])).
fof(f13463,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK17(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13399,f2219])).
fof(f13399,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X85))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK17(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(superposition,[],[f229,f1078])).
fof(f13462,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK17(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13397,f2219])).
fof(f13397,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK17(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(superposition,[],[f229,f3127])).
fof(f13461,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK17(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13396,f2219])).
fof(f13396,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK17(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(superposition,[],[f229,f2571])).
fof(f13460,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK17(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13395,f2219])).
fof(f13395,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X70))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK17(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(superposition,[],[f229,f1089])).
fof(f13459,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK17(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13394,f2219])).
fof(f13394,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X66))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK17(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(superposition,[],[f229,f1088])).
fof(f13393,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X62))) | s('type.num.num',X62) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK17(X62,'const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X61,X60))))) ) | $spl34),
  inference(superposition,[],[f229,f1115])).
fof(f13458,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK17(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13391,f2219])).
fof(f13391,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK17(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(superposition,[],[f229,f1084])).
fof(f13390,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X49))) | s('type.num.num',X49) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK17(X49,'const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,X47))))) ) | $spl34),
  inference(superposition,[],[f229,f1082])).
fof(f13457,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK17(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13389,f2219])).
fof(f13389,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK17(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(superposition,[],[f229,f1081])).
fof(f13456,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13388,f2219])).
fof(f13388,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK17(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(superposition,[],[f229,f1076])).
fof(f13455,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK17(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13387,f2219])).
fof(f13387,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK17(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(superposition,[],[f229,f3290])).
fof(f13385,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))),s('type.num.num',X31))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK17(X31,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X30,X29))))) ) | $spl34),
  inference(superposition,[],[f229,f12047])).
fof(f13384,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK17(X26,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X25,X24))))) ) | $spl34),
  inference(superposition,[],[f229,f2219])).
fof(f13381,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK17(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X11,X10))))) ) | $spl34),
  inference(superposition,[],[f229,f1083])).
fof(f13380,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK17(X8,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6))))) ) | $spl34),
  inference(superposition,[],[f229,f1901])).
fof(f13379,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK17(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,X3))))) ) | $spl34),
  inference(superposition,[],[f229,f1114])).
fof(f13454,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13378,f2219])).
fof(f13378,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(superposition,[],[f229,f1113])).
fof(f13377,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK17(X4,X3,'const.list.NIL_0',X2))))) ) | $spl34),
  inference(superposition,[],[f229,f3290])).
fof(f13373,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1083,f229])).
fof(f13374,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2219,f229])).
fof(f13148,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X15))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK16('const.arithmetic.NUMERAL_1'(s('type.num.num',X15)),'const.arithmetic.NUMERAL_1'(s('type.num.num',X14)),X17,X16))))) ) | $spl34),
  inference(superposition,[],[f228,f12047])).
fof(f13147,plain,(
  ( ! [X12,X13,X11] : (s('type.num.num',X11) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X13))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),sK16(X11,'const.arithmetic.ZERO_0',X13,X12))))) ) | $spl34),
  inference(superposition,[],[f228,f2219])).
fof(f13144,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) | s('type.num.num',X0) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.arithmetic.ZERO_0',X0,X2,X1))))) ) | $spl34),
  inference(superposition,[],[f228,f1083])).
fof(f13208,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK16('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13141,f1083])).
fof(f13141,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X129),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X129) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK16('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X129,X128,X127))))) ) | $spl34),
  inference(superposition,[],[f228,f1111])).
fof(f13207,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK16('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13139,f1083])).
fof(f13139,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X122),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X122) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK16('const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X122,X121,X120))))) )),
  inference(superposition,[],[f228,f232])).
fof(f13133,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X98),s('type.num.num',X95))) | s('type.num.num',X98) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK16('const.numeral.iZ_1'(s('type.num.num',X95)),X98,X97,X96))))) ) | $spl34),
  inference(superposition,[],[f228,f12130])).
fof(f13206,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13131,f1083])).
fof(f13131,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X89),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X89) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK16('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X89,X88,X87))))) ) | $spl34),
  inference(superposition,[],[f228,f1079])).
fof(f13205,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK16('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13130,f1083])).
fof(f13130,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X85),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X85) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK16('const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X85,X84,X83))))) ) | $spl34),
  inference(superposition,[],[f228,f1078])).
fof(f13204,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13128,f1083])).
fof(f13128,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X76),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X76) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X76,X75,X74))))) ) | $spl34),
  inference(superposition,[],[f228,f3127])).
fof(f13203,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13127,f1083])).
fof(f13127,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X73),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X73) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X73,X72,X71))))) ) | $spl34),
  inference(superposition,[],[f228,f2571])).
fof(f13202,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13126,f1083])).
fof(f13126,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X70) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X70,X69,X68))))) ) | $spl34),
  inference(superposition,[],[f228,f1089])).
fof(f13201,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13125,f1083])).
fof(f13125,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X66),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X66) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK16('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X66,X65,X64))))) ) | $spl34),
  inference(superposition,[],[f228,f1088])).
fof(f13124,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X62) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK16('const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X62,X61,X60))))) ) | $spl34),
  inference(superposition,[],[f228,f1115])).
fof(f13200,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK16('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13122,f1083])).
fof(f13122,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X53),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X53) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK16('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X53,X52,X51))))) ) | $spl34),
  inference(superposition,[],[f228,f1084])).
fof(f13121,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X49),s('type.num.num',X46))) | s('type.num.num',X49) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK16('const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X49,X48,X47))))) ) | $spl34),
  inference(superposition,[],[f228,f1082])).
fof(f13199,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK16('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13120,f1083])).
fof(f13120,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X45) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK16('const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X45,X44,X43))))) ) | $spl34),
  inference(superposition,[],[f228,f1081])).
fof(f13198,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK16('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13119,f1083])).
fof(f13119,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X41),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X41) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK16('const.num.|48|_0',X41,X40,X39))))) ) | $spl34),
  inference(superposition,[],[f228,f1076])).
fof(f13197,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK16('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13118,f1083])).
fof(f13118,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X38),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X38) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK16('const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X38,X37,X36))))) ) | $spl34),
  inference(superposition,[],[f228,f3290])).
fof(f13116,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X31,X30,X29))))) ) | $spl34),
  inference(superposition,[],[f228,f12047])).
fof(f13115,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X23))) | s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X26,X25,X24))))) ) | $spl34),
  inference(superposition,[],[f228,f2219])).
fof(f13112,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num',X9))) | s('type.num.num',X12) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK16('const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X12,X11,X10))))) ) | $spl34),
  inference(superposition,[],[f228,f1083])).
fof(f13111,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X8) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK16('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X8,X7,X6))))) ) | $spl34),
  inference(superposition,[],[f228,f1901])).
fof(f13110,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X5) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK16('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X5,X4,X3))))) ) | $spl34),
  inference(superposition,[],[f228,f1114])).
fof(f13196,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13109,f1083])).
fof(f13109,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X2,X1,X0))))) ) | $spl34),
  inference(superposition,[],[f228,f1113])).
fof(f13193,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK16(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127)))) | s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128)))) ) | $spl34),
  inference(forward_demodulation,[],[f13192,f1111])).
fof(f13192,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num',X129) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK16(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(forward_demodulation,[],[f13106,f2219])).
fof(f13106,plain,(
  ( ! [X127,X128,X129] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),X128))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X129))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X127),sK16(X129,'const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X128,X127))))) ) | $spl34),
  inference(superposition,[],[f228,f1111])).
fof(f13190,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK16(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120)))) | s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121)))) ) | $spl34),
  inference(forward_demodulation,[],[f13189,f232])).
fof(f13189,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num',X122) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK16(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) ) | $spl34),
  inference(forward_demodulation,[],[f13104,f2219])).
fof(f13104,plain,(
  ( ! [X121,X118,X122,X120,X119] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),X121))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X122))) | s('type.num.num','const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X120),sK16(X122,'const.numeral.iSUB_3'(s(bool,X118),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X119)),X121,X120))))) )),
  inference(superposition,[],[f228,f232])).
fof(f13183,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num',X95) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK16(X98,'const.numeral.iZ_1'(s('type.num.num',X95)),X97,X96)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X98)))) ) | $spl34),
  inference(forward_demodulation,[],[f13098,f12130])).
fof(f13098,plain,(
  ( ! [X97,X95,X98,X96] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),X97))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X95),s('type.num.num',X98))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X95))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X96),sK16(X98,'const.numeral.iZ_1'(s('type.num.num',X95)),X97,X96))))) ) | $spl34),
  inference(superposition,[],[f228,f12130])).
fof(f13181,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87)))) | s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88)))) ) | $spl34),
  inference(forward_demodulation,[],[f13180,f1079])).
fof(f13180,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num',X89) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(forward_demodulation,[],[f13096,f2219])).
fof(f13096,plain,(
  ( ! [X88,X87,X89,X86] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),X88))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X89))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X87),sK16(X89,'const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X86)),X88,X87))))) ) | $spl34),
  inference(superposition,[],[f228,f1079])).
fof(f13179,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK16(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83)))) | s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84)))) ) | $spl34),
  inference(forward_demodulation,[],[f13178,f1078])).
fof(f13178,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num',X85) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK16(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(forward_demodulation,[],[f13095,f2219])).
fof(f13095,plain,(
  ( ! [X85,X83,X84,X82] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),X84))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X85))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X83),sK16(X85,'const.arithmetic.*_2'(s('type.num.num',X82),s('type.num.num','const.arithmetic.ZERO_0')),X84,X83))))) ) | $spl34),
  inference(superposition,[],[f228,f1078])).
fof(f13176,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74)))) | s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75)))) ) | $spl34),
  inference(forward_demodulation,[],[f13175,f3127])).
fof(f13175,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(forward_demodulation,[],[f13093,f2219])).
fof(f13093,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),X75))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X76))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X74),sK16(X76,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X75,X74))))) ) | $spl34),
  inference(superposition,[],[f228,f3127])).
fof(f13174,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71)))) | s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72)))) ) | $spl34),
  inference(forward_demodulation,[],[f13173,f2571])).
fof(f13173,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num',X73) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(forward_demodulation,[],[f13092,f2219])).
fof(f13092,plain,(
  ( ! [X72,X71,X73] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),X72))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X73))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X71),sK16(X73,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X72,X71))))) ) | $spl34),
  inference(superposition,[],[f228,f2571])).
fof(f13172,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK16(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68)))) | s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69)))) ) | $spl34),
  inference(forward_demodulation,[],[f13171,f1089])).
fof(f13171,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num',X70) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK16(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(forward_demodulation,[],[f13091,f2219])).
fof(f13091,plain,(
  ( ! [X70,X68,X69,X67] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),X69))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X70))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X68),sK16(X70,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X67)))))),X69,X68))))) ) | $spl34),
  inference(superposition,[],[f228,f1089])).
fof(f13170,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK16(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64)))) | s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65)))) ) | $spl34),
  inference(forward_demodulation,[],[f13169,f1088])).
fof(f13169,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num',X66) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK16(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(forward_demodulation,[],[f13090,f2219])).
fof(f13090,plain,(
  ( ! [X66,X64,X65,X63] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),X65))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X66))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),sK16(X66,'const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X63)))))),X65,X64))))) ) | $spl34),
  inference(superposition,[],[f228,f1088])).
fof(f13168,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK16(X62,'const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X61,X60)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X62)))) ) | $spl34),
  inference(forward_demodulation,[],[f13089,f1115])).
fof(f13089,plain,(
  ( ! [X61,X59,X62,X60] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),X61))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X62))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X60),sK16(X62,'const.arithmetic.EXP_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')),X61,X60))))) ) | $spl34),
  inference(superposition,[],[f228,f1115])).
fof(f13166,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK16(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51)))) | s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52)))) ) | $spl34),
  inference(forward_demodulation,[],[f13165,f1084])).
fof(f13165,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num',X53) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK16(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f13087,f2219])).
fof(f13087,plain,(
  ( ! [X52,X50,X53,X51] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),X52))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X51),sK16(X53,'const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X50)),X52,X51))))) ) | $spl34),
  inference(superposition,[],[f228,f1084])).
fof(f13164,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num',X46) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK16(X49,'const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,X47)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X49)))) ) | $spl34),
  inference(forward_demodulation,[],[f13086,f1082])).
fof(f13086,plain,(
  ( ! [X47,X48,X46,X49] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X46),s('type.num.num',X49))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),sK16(X49,'const.arithmetic.-_2'(s('type.num.num',X46),s('type.num.num','const.arithmetic.ZERO_0')),X48,X47))))) ) | $spl34),
  inference(superposition,[],[f228,f1082])).
fof(f13163,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK16(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43)))) | s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44)))) ) | $spl34),
  inference(forward_demodulation,[],[f13162,f1081])).
fof(f13162,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num',X45) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK16(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(forward_demodulation,[],[f13085,f2219])).
fof(f13085,plain,(
  ( ! [X45,X43,X44,X42] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK16(X45,'const.arithmetic.-_2'(s('type.num.num',X42),s('type.num.num',X42)),X44,X43))))) ) | $spl34),
  inference(superposition,[],[f228,f1081])).
fof(f13161,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK16(X41,'const.num.|48|_0',X40,X39)))) | s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40)))) ) | $spl34),
  inference(forward_demodulation,[],[f13160,f1076])).
fof(f13160,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num',X41) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK16(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(forward_demodulation,[],[f13084,f2219])).
fof(f13084,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),X40))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X41))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X39),sK16(X41,'const.num.|48|_0',X40,X39))))) ) | $spl34),
  inference(superposition,[],[f228,f1076])).
fof(f13159,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK16(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36)))) | s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37)))) ) | $spl34),
  inference(forward_demodulation,[],[f13158,f3290])).
fof(f13158,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num',X38) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK16(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(forward_demodulation,[],[f13083,f2219])).
fof(f13083,plain,(
  ( ! [X37,X35,X38,X36] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),X37))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X38))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X36),sK16(X38,'const.list.LENGTH_1'(s('type.list.list'(X35),'const.list.NIL_0')),X37,X36))))) ) | $spl34),
  inference(superposition,[],[f228,f3290])).
fof(f13156,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16(X31,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X30,X29)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))),s('type.num.num',X31)))) ) | $spl34),
  inference(forward_demodulation,[],[f13081,f12047])).
fof(f13081,plain,(
  ( ! [X30,X28,X31,X29,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),X30))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X28))))),s('type.num.num',X31))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X29),sK16(X31,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))),X30,X29))))) ) | $spl34),
  inference(superposition,[],[f228,f12047])).
fof(f13155,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num',X23) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X25,X24)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X26)))) ) | $spl34),
  inference(forward_demodulation,[],[f13080,f2219])).
fof(f13080,plain,(
  ( ! [X26,X24,X23,X25] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X26))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),sK16(X26,'const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X23)),X25,X24))))) ) | $spl34),
  inference(superposition,[],[f228,f2219])).
fof(f13154,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num',X9) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK16(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X11,X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X12)))) ) | $spl34),
  inference(forward_demodulation,[],[f13077,f1083])).
fof(f13077,plain,(
  ( ! [X12,X10,X11,X9] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X12))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X10),sK16(X12,'const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0')),X11,X10))))) ) | $spl34),
  inference(superposition,[],[f228,f1083])).
fof(f13153,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK16(X8,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8)))) ) | $spl34),
  inference(forward_demodulation,[],[f13076,f1901])).
fof(f13076,plain,(
  ( ! [X6,X8,X7] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X8))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK16(X8,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6))))) ) | $spl34),
  inference(superposition,[],[f228,f1901])).
fof(f13152,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK16(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,X3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5)))) ) | $spl34),
  inference(forward_demodulation,[],[f13075,f1114])).
fof(f13075,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X5))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK16(X5,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X4,X3))))) ) | $spl34),
  inference(superposition,[],[f228,f1114])).
fof(f13151,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0)))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) ) | $spl34),
  inference(forward_demodulation,[],[f13150,f1113])).
fof(f13150,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(forward_demodulation,[],[f13074,f2219])).
fof(f13074,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16(X2,'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X1,X0))))) ) | $spl34),
  inference(superposition,[],[f228,f1113])).
fof(f13073,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) | s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16(X4,X3,'const.list.NIL_0',X2))))) ) | $spl34),
  inference(superposition,[],[f228,f3290])).
fof(f13069,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16('const.arithmetic.ZERO_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1083,f228])).
fof(f13070,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK16('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.arithmetic.ZERO_0',X1,X0))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2219,f228])).
fof(f12605,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f12047,f235])).
fof(f12526,plain,(
  ( ! [X147,X148] : (s('type.num.num',X147) = s('type.num.num',sK13('const.numeral.iZ_1'(s('type.num.num',X147)),X148,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X148),s('type.num.num',X147))))) ) | $spl34),
  inference(forward_demodulation,[],[f12504,f12130])).
fof(f12504,plain,(
  ( ! [X147,X148] : (~p(s(bool,happ(s(fun('type.num.num',bool),X148),s('type.num.num',X147)))) | s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X147))) = s('type.num.num',sK13('const.numeral.iZ_1'(s('type.num.num',X147)),X148,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f12130])).
fof(f12352,plain,(
  ( ! [X167] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X167),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X167)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12351,f12130])).
fof(f12351,plain,(
  ( ! [X167] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X167))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X167)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12280,f1091])).
fof(f12280,plain,(
  ( ! [X167] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X167))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X167))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(superposition,[],[f3773,f12046])).
fof(f12189,plain,(
  ( ! [X39] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X39))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X39)))) ) | $spl34),
  inference(superposition,[],[f1093,f12046])).
fof(f12184,plain,(
  ( ! [X33,X32] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))) | s('type.num.num',X33) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X32)))) ) | $spl34),
  inference(superposition,[],[f255,f12046])).
fof(f12122,plain,(
  ( ! [X216,X215] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X215),s('type.num.num',X216))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X215),s('type.num.num',X216))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f12121,f12047])).
fof(f12121,plain,(
  ( ! [X216,X215] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X215),s('type.num.num',X216))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X215))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X216)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f12021,f1091])).
fof(f12021,plain,(
  ( ! [X216,X215] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X215),s('type.num.num',X216))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X215))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X216)))))))) ) | $spl34),
  inference(superposition,[],[f3774,f247])).
fof(f12112,plain,(
  ( ! [X173,X174] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f12111,f12047])).
fof(f12111,plain,(
  ( ! [X173,X174] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X174)))))) ) | $spl34),
  inference(forward_demodulation,[],[f12000,f1091])).
fof(f12000,plain,(
  ( ! [X173,X174] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X173),s('type.num.num',X174))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X174)))))) ) | $spl34),
  inference(superposition,[],[f1117,f247])).
fof(f12110,plain,(
  ( ! [X171,X172] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X171),s('type.num.num',X172))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X171),s('type.num.num',X172))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f12109,f12047])).
fof(f12109,plain,(
  ( ! [X171,X172] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X171),s('type.num.num',X172))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172)))))) ) | $spl34),
  inference(forward_demodulation,[],[f11999,f1091])).
fof(f11999,plain,(
  ( ! [X171,X172] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X171),s('type.num.num',X172))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172)))))) ) | $spl34),
  inference(superposition,[],[f1116,f247])).
fof(f12106,plain,(
  ( ! [X165,X166] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X165),s('type.num.num',X166))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X166)))))) ) | $spl34),
  inference(forward_demodulation,[],[f11996,f12046])).
fof(f11996,plain,(
  ( ! [X165,X166] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X165),s('type.num.num',X166))))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X166)))))) ) | $spl34),
  inference(superposition,[],[f1093,f247])).
fof(f12092,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X115))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num',X114))))))) | s('type.num.num',X115) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X114)))))) ) | $spl34),
  inference(forward_demodulation,[],[f11974,f12046])).
fof(f11974,plain,(
  ( ! [X114,X115,X113] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X115))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num',X114))))))))) | s('type.num.num',X115) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X113))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X114)))))) )),
  inference(superposition,[],[f255,f247])).
fof(f12088,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11930,f12047])).
fof(f11930,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f247,f235])).
fof(f12087,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f11929,f12046])).
fof(f11929,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(superposition,[],[f247,f1901])).
fof(f12086,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f11928,f12046])).
fof(f11928,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl34),
  inference(superposition,[],[f247,f1114])).
fof(f12049,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(forward_demodulation,[],[f11892,f12046])).
fof(f11892,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))))))) ) | $spl34),
  inference(superposition,[],[f247,f1901])).
fof(f12048,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(forward_demodulation,[],[f11891,f12046])).
fof(f11891,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))))))) ) | $spl34),
  inference(superposition,[],[f247,f1114])).
fof(f11595,plain,(
  ( ! [X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f3774,f1091])).
fof(f11773,plain,(
  ( ! [X28] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f11772,f198])).
fof(f11772,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11587,f1091])).
fof(f11587,plain,(
  ( ! [X28] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X28))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))))) ) | $spl34),
  inference(superposition,[],[f3774,f198])).
fof(f11306,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1729,f235])).
fof(f11225,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f11190,f1113])).
fof(f11190,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4954,f255])).
fof(f11032,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10997,f1113])).
fof(f10997,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9750,f255])).
fof(f10992,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10958,f1113])).
fof(f10958,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9706,f255])).
fof(f10940,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10905,f1113])).
fof(f10905,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9468,f255])).
fof(f10900,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10866,f1113])).
fof(f10866,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f9307,f255])).
fof(f10729,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(forward_demodulation,[],[f10728,f1113])).
fof(f10728,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f9306,f255])).
fof(f10721,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10686,f1113])).
fof(f10686,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4828,f255])).
fof(f10461,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4793,f251])).
fof(f10462,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4793,f4793,f251])).
fof(f10449,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10415,f1113])).
fof(f10415,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4791,f255])).
fof(f10224,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4757,f251])).
fof(f10225,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4757,f4757,f251])).
fof(f10212,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(forward_demodulation,[],[f10211,f1113])).
fof(f10211,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f4678,f255])).
fof(f10097,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4674,f251])).
fof(f10084,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f10050,f1113])).
fof(f10050,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4670,f255])).
fof(f9936,plain,(
  ( ! [X21,X20] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0')),X21,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f9928,f4482])).
fof(f9928,plain,(
  ( ! [X21,X20] : (~p(s(bool,happ(s(fun(bool,bool),X21),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))))),s('type.num.num','const.arithmetic.ZERO_0')),X21,bool))) ) | $spl34),
  inference(superposition,[],[f222,f4482])).
fof(f9935,plain,(
  ( ! [X12,X13] : (s(bool,X13) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X13)) ) | $spl34),
  inference(subsumption_resolution,[],[f9922,f179])).
fof(f9922,plain,(
  ( ! [X12,X13] : (p(s(bool,'F_0')) | s(bool,X13) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X13)) ) | $spl34),
  inference(superposition,[],[f417,f4482])).
fof(f9878,plain,(
  ( ! [X6] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')),X6,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f9870,f4385])).
fof(f9870,plain,(
  ( ! [X6] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')),X6,bool))) ) | $spl34),
  inference(superposition,[],[f222,f4385])).
fof(f9877,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl34),
  inference(subsumption_resolution,[],[f9865,f179])).
fof(f9865,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl34),
  inference(superposition,[],[f417,f4385])).
fof(f9752,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4203,f199])).
fof(f9751,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4203,f202])).
fof(f9708,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4202,f199])).
fof(f9707,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4202,f202])).
fof(f9482,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4167,f251])).
fof(f9483,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4167,f4167,f251])).
fof(f9470,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4072,f199])).
fof(f9469,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4072,f202])).
fof(f9309,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4071,f199])).
fof(f9308,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4071,f202])).
fof(f9184,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f4036,f251])).
fof(f9185,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4036,f4036,f251])).
fof(f9063,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4030,f199])).
fof(f9062,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4030,f202])).
fof(f9018,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f4029,f199])).
fof(f9017,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f4029,f202])).
fof(f8897,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f8859,f1113])).
fof(f8859,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3902,f255])).
fof(f8847,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))))) ) | $spl34),
  inference(superposition,[],[f3900,f199])).
fof(f8846,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))))) ) | $spl34),
  inference(superposition,[],[f3900,f202])).
fof(f8848,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f8810,f1113])).
fof(f8810,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f3900,f255])).
fof(f8401,plain,(
  ( ! [X28,X29] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(forward_demodulation,[],[f8340,f1101])).
fof(f8340,plain,(
  ( ! [X28,X29] : (~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(superposition,[],[f222,f5574])).
fof(f4894,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f243,f1114])).
fof(f3939,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f237,f1114])).
fof(f4895,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f243,f1901])).
fof(f3940,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f237,f1901])).
fof(f3711,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f1090,f208])).
fof(f3727,plain,(
  ( ! [X12,X11] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))),X12,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X12),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3719,f1090])).
fof(f3719,plain,(
  ( ! [X12,X11] : (~p(s(bool,happ(s(fun(bool,bool),X12),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))))) | s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))))) = s(bool,sK13('const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))),X12,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1090])).
fof(f3842,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1092,f208])).
fof(f3859,plain,(
  ( ! [X12,X13] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0')),X13,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3851,f1092])).
fof(f3851,plain,(
  ( ! [X12,X13] : (~p(s(bool,happ(s(fun(bool,bool),X13),s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12)))))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.ZERO_0')),X13,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1092])).
fof(f4153,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f4137,f3543])).
fof(f4137,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f238,f1114])).
fof(f4861,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f243,f1114])).
fof(f4628,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(forward_demodulation,[],[f4580,f3544])).
fof(f4580,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f241,f1901])).
fof(f4154,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f4138,f3544])).
fof(f4138,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f238,f1901])).
fof(f3971,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f237,f1114])).
fof(f4862,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f243,f1901])).
fof(f3972,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f237,f1901])).
fof(f3456,plain,(
  ( ! [X16] : (s(bool,'T_0') = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X16,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3412,f1100])).
fof(f3412,plain,(
  ( ! [X16] : (~p(s(bool,happ(s(fun(bool,bool),X16),s(bool,'T_0')))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X16,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1100])).
fof(f3463,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)),X27,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X27),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3418,f1085])).
fof(f3418,plain,(
  ( ! [X26,X27] : (~p(s(bool,happ(s(fun(bool,bool),X27),s(bool,'T_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X26)),X27,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1085])).
fof(f3466,plain,(
  ( ! [X30,X29] : (s(bool,'T_0') = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),X30,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3465,f1085])).
fof(f3465,plain,(
  ( ! [X30,X29] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X29))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),X30,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3420,f234])).
fof(f3420,plain,(
  ( ! [X30,X29] : (~p(s(bool,happ(s(fun(bool,bool),X30),s(bool,'T_0')))) | s(bool,'const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.>=_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),X30,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1086])).
fof(f3458,plain,(
  ( ! [X17,X18] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3457,f184])).
fof(f3457,plain,(
  ( ! [X17,X18] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3413,f233])).
fof(f3413,plain,(
  ( ! [X17,X18] : (~p(s(bool,happ(s(fun(bool,bool),X18),s(bool,'F_0')))) | s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17))) = s(bool,sK13('const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X17)),X18,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1080])).
fof(f3461,plain,(
  ( ! [X24] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X24,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3416,f1101])).
fof(f3416,plain,(
  ( ! [X24] : (~p(s(bool,happ(s(fun(bool,bool),X24),s(bool,'F_0')))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')),X24,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1101])).
fof(f5137,plain,(
  ( ! [X14,X13] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f5130,f2918])).
fof(f5130,plain,(
  ( ! [X14,X13] : (~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool))) ) | $spl34),
  inference(superposition,[],[f222,f2918])).
fof(f3790,plain,(
  ( ! [X14,X13] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0'))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3782,f1091])).
fof(f3782,plain,(
  ( ! [X14,X13] : (~p(s(bool,happ(s(fun(bool,bool),X14),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.ZERO_0')),X14,bool))) ) | $spl34),
  inference(superposition,[],[f222,f1091])).
fof(f3476,plain,(
  ( ! [X52,X51] : (s('type.num.num',X51) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0')),X52,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X52),s('type.num.num',X51))))) ) | $spl34),
  inference(forward_demodulation,[],[f3432,f1082])).
fof(f3432,plain,(
  ( ! [X52,X51] : (~p(s(bool,happ(s(fun('type.num.num',bool),X52),s('type.num.num',X51)))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num',X51),s('type.num.num','const.arithmetic.ZERO_0')),X52,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1082])).
fof(f3472,plain,(
  ( ! [X45,X46] : (s('type.num.num',X45) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)),X46,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X46),s('type.num.num',X45))))) ) | $spl34),
  inference(forward_demodulation,[],[f3428,f2219])).
fof(f3428,plain,(
  ( ! [X45,X46] : (~p(s(bool,happ(s(fun('type.num.num',bool),X46),s('type.num.num',X45)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X45)),X46,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f2219])).
fof(f3471,plain,(
  ( ! [X37,X38] : (s('type.num.num',X37) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')),X38,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num',X37))))) ) | $spl34),
  inference(forward_demodulation,[],[f3425,f1083])).
fof(f3425,plain,(
  ( ! [X37,X38] : (~p(s(bool,happ(s(fun('type.num.num',bool),X38),s('type.num.num',X37)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.+_2'(s('type.num.num',X37),s('type.num.num','const.arithmetic.ZERO_0')),X38,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1083])).
fof(f3468,plain,(
  ( ! [X34] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X34,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3422,f1113])).
fof(f3422,plain,(
  ( ! [X34] : (~p(s(bool,happ(s(fun('type.num.num',bool),X34),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')),X34,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1113])).
fof(f3474,plain,(
  ( ! [X48] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.num.|48|_0',X48,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X48),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3430,f1076])).
fof(f3430,plain,(
  ( ! [X48] : (~p(s(bool,happ(s(fun('type.num.num',bool),X48),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK13('const.num.|48|_0',X48,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1076])).
fof(f3475,plain,(
  ( ! [X50,X49] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num',X49),s('type.num.num',X49)),X50,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X50),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3431,f1081])).
fof(f3431,plain,(
  ( ! [X50,X49] : (~p(s(bool,happ(s(fun('type.num.num',bool),X50),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X49),s('type.num.num',X49))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num',X49),s('type.num.num',X49)),X50,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1081])).
fof(f3477,plain,(
  ( ! [X54,X53] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)),X54,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X54),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3433,f1084])).
fof(f3433,plain,(
  ( ! [X54,X53] : (~p(s(bool,happ(s(fun('type.num.num',bool),X54),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53))) = s('type.num.num',sK13('const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X53)),X54,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1084])).
fof(f3479,plain,(
  ( ! [X57,X58] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57)))))),X58,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X58),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3435,f1088])).
fof(f3435,plain,(
  ( ! [X57,X58] : (~p(s(bool,happ(s(fun('type.num.num',bool),X58),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57))))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X57)))))),X58,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1088])).
fof(f3480,plain,(
  ( ! [X59,X60] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X59)))))),X60,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X60),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3436,f1089])).
fof(f3436,plain,(
  ( ! [X59,X60] : (~p(s(bool,happ(s(fun('type.num.num',bool),X60),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X59))))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X59)))))),X60,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1089])).
fof(f3481,plain,(
  ( ! [X61] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X61,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3437,f2571])).
fof(f3437,plain,(
  ( ! [X61] : (~p(s(bool,happ(s(fun('type.num.num',bool),X61),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X61,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f2571])).
fof(f3482,plain,(
  ( ! [X62,X63] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.ZERO_0')),X63,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X63),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3438,f1078])).
fof(f3438,plain,(
  ( ! [X62,X63] : (~p(s(bool,happ(s(fun('type.num.num',bool),X63),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num',X62),s('type.num.num','const.arithmetic.ZERO_0')),X63,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1078])).
fof(f3483,plain,(
  ( ! [X64,X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3439,f1079])).
fof(f3439,plain,(
  ( ! [X64,X65] : (~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64))) = s('type.num.num',sK13('const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X64)),X65,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1079])).
fof(f3491,plain,(
  ( ! [X80] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X80,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X80),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3447,f1111])).
fof(f3447,plain,(
  ( ! [X80] : (~p(s(bool,happ(s(fun('type.num.num',bool),X80),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num',sK13('const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')),X80,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f1111])).
fof(f3669,plain,(
  ( ! [X64,X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.list.LENGTH_1'(s('type.list.list'(X64),'const.list.NIL_0')),X65,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f3654,f3290])).
fof(f3654,plain,(
  ( ! [X64,X65] : (~p(s(bool,happ(s(fun('type.num.num',bool),X65),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X64),'const.list.NIL_0'))) = s('type.num.num',sK13('const.list.LENGTH_1'(s('type.list.list'(X64),'const.list.NIL_0')),X65,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f3290])).
fof(f4287,plain,(
  ( ! [X17] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X17,'type.num.num')) | ~p(s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f4272,f3127])).
fof(f4272,plain,(
  ( ! [X17] : (~p(s(bool,happ(s(fun('type.num.num',bool),X17),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num',sK13('const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X17,'type.num.num'))) ) | $spl34),
  inference(superposition,[],[f222,f3127])).
fof(f3772,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1091,f208])).
fof(f4104,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f238,f1113])).
fof(f4612,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f241,f1114])).
fof(f4105,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f238,f1114])).
fof(f4613,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f241,f1901])).
fof(f4106,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f238,f1901])).
fof(f4674,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f4069,f1116])).
fof(f4757,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4070,f1116])).
fof(f4793,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4201,f1116])).
fof(f1829,plain,(
  ( ! [X22] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f1828,f198])).
fof(f1828,plain,(
  ( ! [X22] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1819,f1091])).
fof(f1819,plain,(
  ( ! [X22] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X22))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22)))))) ) | $spl34),
  inference(superposition,[],[f1117,f198])).
fof(f1827,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X21))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f1826,f198])).
fof(f1826,plain,(
  ( ! [X21] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X21))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))))) ) | $spl34),
  inference(forward_demodulation,[],[f1818,f1091])).
fof(f1818,plain,(
  ( ! [X21] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X21))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))))) ) | $spl34),
  inference(superposition,[],[f1116,f198])).
fof(f7156,plain,(
  ( ! [X158,X161,X159,X162,X160] : (s(bool,'F_0') = s(bool,X158) | p(s(bool,happ(s(fun(X160,bool),X161),s(X160,sK14('const.bool.COND_3'(s(bool,'T_0'),s(bool,X158),s(bool,X159)),X161,X160))))) | ~p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7155,f3280])).
fof(f7155,plain,(
  ( ! [X158,X161,X159,X162,X160] : (p(s(bool,happ(s(fun(X160,bool),X161),s(X160,sK14('const.bool.COND_3'(s(bool,'T_0'),s(bool,X158),s(bool,X159)),X161,X160))))) | ~p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162)))) | s(bool,X158) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7140,f174])).
fof(f7140,plain,(
  ( ! [X158,X161,X159,X162,X160] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X160,bool),X161),s(X160,sK14('const.bool.COND_3'(s(bool,'T_0'),s(bool,X158),s(bool,X159)),X161,X160))))) | ~p(s(bool,happ(s(fun(X160,bool),X161),s(X160,X162)))) | s(bool,X158) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f224,f5962])).
fof(f7143,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK14(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7142,f174])).
fof(f7142,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK14(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7102,f1100])).
fof(f7102,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK14(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f224,f6887])).
fof(f7100,plain,(
  ( ! [X28,X29] : (s(bool,'T_0') = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'F_0') = s(bool,X28)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7026,f1100])).
fof(f7026,plain,(
  ( ! [X28,X29] : (~p(s(bool,happ(s(fun(bool,bool),X29),s(bool,X28)))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X29,bool)) | s(bool,'F_0') = s(bool,X28)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6887])).
fof(f7099,plain,(
  ( ! [X26,X27,X25] : (s(bool,'T_0') != s(bool,X27) | ~p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X25)))) | p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X27)))) | s(bool,'F_0') = s(bool,X25)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7025,f1100])).
fof(f7025,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X25)))) | p(s(bool,happ(s(fun(bool,bool),X26),s(bool,X27)))) | s(bool,X27) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X25)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f6887])).
fof(f7096,plain,(
  ( ! [X95,X96] : (p(s(bool,happ(s(fun(bool,bool),X96),s(bool,'T_0')))) | ~p(s(bool,happ(s(fun(bool,bool),X96),s(bool,X95)))) | s(bool,'F_0') = s(bool,sK13(X95,X96,bool))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7011,f1100])).
fof(f7011,plain,(
  ( ! [X95,X96] : (p(s(bool,happ(s(fun(bool,bool),X96),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ~p(s(bool,happ(s(fun(bool,bool),X96),s(bool,X95)))) | s(bool,'F_0') = s(bool,sK13(X95,X96,bool))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f223,f6887])).
fof(f7094,plain,(
  ( ! [X88,X87] : (~p(s(bool,happ(s(fun(bool,bool),X88),s(bool,'T_0')))) | s(bool,X87) = s(bool,sK13(X87,X88,bool)) | s(bool,'F_0') = s(bool,X87)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f7007,f1100])).
fof(f7007,plain,(
  ( ! [X88,X87] : (~p(s(bool,happ(s(fun(bool,bool),X88),s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | s(bool,X87) = s(bool,sK13(X87,X88,bool)) | s(bool,'F_0') = s(bool,X87)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6887])).
fof(f7087,plain,(
  ( ! [X65] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X65) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7086,f174])).
fof(f7086,plain,(
  ( ! [X65] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X65) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6987,f1100])).
fof(f6987,plain,(
  ( ! [X65] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X65) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f1116,f6887])).
fof(f7079,plain,(
  ( ! [X59] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X59,bool)) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X59),s(bool,'F_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7078,f174])).
fof(f7078,plain,(
  ( ! [X59] : (~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X59,bool)) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X59),s(bool,'F_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6981,f1100])).
fof(f6981,plain,(
  ( ! [X59] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X59,bool)) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),X59),s(bool,'F_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f3464,f6887])).
fof(f7074,plain,(
  ( ! [X54,X52,X53] : (s(X52,X54) = s(X52,sK13(X54,X53,X52)) | s(bool,'F_0') = s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7073,f174])).
fof(f7073,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'T_0')) | s(X52,X54) = s(X52,sK13(X54,X53,X52)) | s(bool,'F_0') = s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6978,f1100])).
fof(f6978,plain,(
  ( ! [X54,X52,X53] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | s(X52,X54) = s(X52,sK13(X54,X53,X52)) | s(bool,'F_0') = s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f6887])).
fof(f7072,plain,(
  ( ! [X50,X48,X51,X49] : (p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X51)))) | s(X48,X50) != s(X48,X51) | s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50)))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7071,f174])).
fof(f7071,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X51)))) | s(X48,X50) != s(X48,X51) | s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6977,f1100])).
fof(f6977,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X48,bool),X49),s(X48,X51)))) | s(X48,X50) != s(X48,X51) | s(bool,'F_0') = s(bool,happ(s(fun(X48,bool),X49),s(X48,X50)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f6887])).
fof(f7063,plain,(
  ( ! [X33,X34] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num',X33)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7062,f174])).
fof(f7062,plain,(
  ( ! [X33,X34] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num',X33)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6967,f1100])).
fof(f6967,plain,(
  ( ! [X33,X34] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X34),s('type.num.num',X33)))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X34)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f257,f6887])).
fof(f6942,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f6887])).
fof(f7049,plain,(
  ( ! [X47,X46] : (s(bool,'T_0') = s(bool,X46) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X46),s(bool,X47)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6941,f1100])).
fof(f6941,plain,(
  ( ! [X47,X46] : (s(bool,X46) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X46),s(bool,X47)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f217])).
fof(f7048,plain,(
  ( ! [X43,X42] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num',X42))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6939,f1100])).
fof(f6939,plain,(
  ( ! [X43,X42] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X43),s('type.num.num',X42))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X43)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f238])).
fof(f7047,plain,(
  ( ! [X41,X40] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X41),s('type.num.num',X40))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X40),s('type.num.num',X41)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6938,f1100])).
fof(f6938,plain,(
  ( ! [X41,X40] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X41),s('type.num.num',X40))) | s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X40),s('type.num.num',X41)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f234])).
fof(f7046,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6934,f1100])).
fof(f6934,plain,(
  ( ! [X37,X36] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X36),s('type.num.num',X37))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X36))),s('type.num.num',X37)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f236])).
fof(f7045,plain,(
  ( ! [X31,X32] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num',X32))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6930,f1100])).
fof(f6930,plain,(
  ( ! [X31,X32] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X31),s('type.num.num',X32))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X32)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f241])).
fof(f7044,plain,(
  ( ! [X30] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6929,f1100])).
fof(f6929,plain,(
  ( ! [X30] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f1091])).
fof(f7043,plain,(
  ( ! [X27] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X27))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6923,f1100])).
fof(f6923,plain,(
  ( ! [X27] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X27))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f193])).
fof(f7042,plain,(
  ( ! [X26,X25] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num',X25))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6922,f1100])).
fof(f6922,plain,(
  ( ! [X26,X25] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X26),s('type.num.num',X25))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f237])).
fof(f7041,plain,(
  ( ! [X24] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6921,f1100])).
fof(f6921,plain,(
  ( ! [X24] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X24))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f1092])).
fof(f7040,plain,(
  ( ! [X23,X22] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X22))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X22),s('type.num.num',X23)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6920,f1100])).
fof(f6920,plain,(
  ( ! [X23,X22] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num',X22))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X22),s('type.num.num',X23)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f233])).
fof(f7039,plain,(
  ( ! [X19] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6918,f1100])).
fof(f6918,plain,(
  ( ! [X19] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X19))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f195])).
fof(f7038,plain,(
  ( ! [X17,X18] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num',X18))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6917,f1100])).
fof(f6917,plain,(
  ( ! [X17,X18] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X17),s('type.num.num',X18))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f243])).
fof(f7037,plain,(
  ( ! [X15,X16] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num',X16))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6916,f1100])).
fof(f6916,plain,(
  ( ! [X15,X16] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X15),s('type.num.num',X16))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f240])).
fof(f7036,plain,(
  ( ! [X14,X13] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X14))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6915,f1100])).
fof(f6915,plain,(
  ( ! [X14,X13] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X13),s('type.num.num',X14))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f239])).
fof(f7035,plain,(
  ( ! [X12,X11] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X12))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6914,f1100])).
fof(f6914,plain,(
  ( ! [X12,X11] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X12))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f242])).
fof(f7034,plain,(
  ( ! [X10] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6913,f1100])).
fof(f6913,plain,(
  ( ! [X10] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6887,f1090])).
fof(f6903,plain,(
  ( ! [X80,X78,X79] : (s(bool,X80) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X78),s(bool,X79))) | s(bool,'F_0') = s(bool,X80) | s(bool,X78) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6871,f174])).
fof(f6871,plain,(
  ( ! [X80,X78,X79] : (~p(s(bool,'T_0')) | s(bool,X80) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X78),s(bool,X79))) | s(bool,'F_0') = s(bool,X80) | s(bool,X78) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6672,f5962])).
fof(f6899,plain,(
  ( ! [X70,X71] : (s(bool,X71) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X71)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6868,f174])).
fof(f6868,plain,(
  ( ! [X70,X71] : (~p(s(bool,'T_0')) | s(bool,X71) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X70),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X71)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6672,f1086])).
fof(f6892,plain,(
  ( ! [X47,X48] : (s(bool,X48) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47))) | s(bool,'F_0') = s(bool,X48)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6856,f174])).
fof(f6856,plain,(
  ( ! [X47,X48] : (~p(s(bool,'T_0')) | s(bool,X48) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X47))) | s(bool,'F_0') = s(bool,X48)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6672,f1085])).
fof(f6887,plain,(
  ( ! [X33] : (s(bool,X33) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X33)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6849,f174])).
fof(f6849,plain,(
  ( ! [X33] : (~p(s(bool,'T_0')) | s(bool,X33) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,X33)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6672,f1100])).
fof(f6880,plain,(
  ( ! [X15,X16] : (s(bool,X16) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))))) | s(bool,'F_0') = s(bool,X16)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6842,f174])).
fof(f6842,plain,(
  ( ! [X15,X16] : (~p(s(bool,'T_0')) | s(bool,X16) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))))) | s(bool,'F_0') = s(bool,X16)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6672,f194])).
fof(f6879,plain,(
  ( ! [X14,X13] : (s(bool,X14) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))))) | s(bool,'F_0') = s(bool,X14)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6841,f174])).
fof(f6841,plain,(
  ( ! [X14,X13] : (~p(s(bool,'T_0')) | s(bool,X14) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))))) | s(bool,'F_0') = s(bool,X14)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f6672,f192])).
fof(f6793,plain,(
  ( ! [X121,X122,X119] : (s(bool,'F_0') = s(bool,X119) | s(bool,X119) != s(bool,X122) | ~p(s(bool,happ(s(fun(bool,bool),X121),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X121),s(bool,X122))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6792,f3280])).
fof(f6792,plain,(
  ( ! [X121,X122,X119] : (s(bool,X119) != s(bool,X122) | ~p(s(bool,happ(s(fun(bool,bool),X121),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X121),s(bool,X122)))) | s(bool,X119) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6713,f217])).
fof(f6713,plain,(
  ( ! [X121,X122,X120,X119] : (~p(s(bool,happ(s(fun(bool,bool),X121),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X121),s(bool,X122)))) | s(bool,X122) != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X119),s(bool,X120))) | s(bool,X119) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f5962])).
fof(f6754,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') = s(bool,X5) | ~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X7)))) | s(bool,X5) != s(bool,X7)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6753,f217])).
fof(f6753,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X7)))) | s(bool,X5) != s(bool,X7) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X8)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6677,f3280])).
fof(f6677,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,happ(s(fun(bool,bool),X6),s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,happ(s(fun(bool,bool),X6),s(bool,X7)))) | s(bool,X5) != s(bool,X7) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X8)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f221,f5962])).
fof(f6674,plain,(
  ( ! [X30,X31,X32] : (s(bool,'F_0') = s(bool,X30) | s(bool,X30) = s(bool,sK13('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0'))))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6673,f3280])).
fof(f6673,plain,(
  ( ! [X30,X31,X32] : (s(bool,X30) = s(bool,sK13('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) | s(bool,X30) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6492,f217])).
fof(f6492,plain,(
  ( ! [X30,X31,X32] : (~p(s(bool,happ(s(fun(bool,bool),X32),s(bool,'T_0')))) | s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31))) = s(bool,sK13('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,bool)) | s(bool,X30) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f5962])).
fof(f6672,plain,(
  ( ! [X13,X11] : (~p(s(bool,X13)) | s(bool,X11) = s(bool,X13) | s(bool,'F_0') = s(bool,X11)) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6671,f3280])).
fof(f6671,plain,(
  ( ! [X13,X11] : (s(bool,X11) = s(bool,X13) | ~p(s(bool,X13)) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6670,f217])).
fof(f6670,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,X13)) | s(bool,X13) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12))) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6484,f174])).
fof(f6484,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,X13)) | s(bool,X13) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12))) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f254,f5962])).
fof(f6630,plain,(
  ( ! [X85,X84] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X84) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X84),s('type.num.num','const.arithmetic.ZERO_0'))),s(bool,X85)))) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f6629,f179])).
fof(f6629,plain,(
  ( ! [X85,X84] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X84) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X84),s('type.num.num','const.arithmetic.ZERO_0'))),s(bool,X85)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6444,f3280])).
fof(f6444,plain,(
  ( ! [X85,X84] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X84) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.arithmetic.<=_2'(s('type.num.num',X84),s('type.num.num','const.arithmetic.ZERO_0'))),s(bool,X85)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f1117,f5962])).
fof(f6579,plain,(
  ( ! [X80,X81,X82] : (s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X81))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X82)))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f6368,f3280])).
fof(f6368,plain,(
  ( ! [X80,X81,X82] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X82))) | s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X80),s(bool,X81))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f5962,f217])).
fof(f6325,plain,(
  ( ! [X6,X4,X5] : (s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f5962,f5580])).
fof(f6324,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f5962,f5962])).
fof(f6233,plain,(
  ( ! [X156,X157] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X156),s('type.num.num',X157))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X156))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X157)))))) ) | $spl34),
  inference(superposition,[],[f1093,f246])).
fof(f6170,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f246,f1901])).
fof(f6169,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f246,f1114])).
fof(f6134,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f246,f1901])).
fof(f6133,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f246,f1114])).
fof(f5962,plain,(
  ( ! [X39,X38] : (s(bool,X38) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f5580,f217])).
fof(f5876,plain,(
  ( ! [X149,X150] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X149),s('type.num.num',X150))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X149))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X150)))))) ) | $spl34),
  inference(superposition,[],[f1093,f245])).
fof(f5817,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f245,f1901])).
fof(f5816,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f245,f1114])).
fof(f5782,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f245,f1901])).
fof(f5781,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f245,f1114])).
fof(f5580,plain,(
  ( ! [X51] : (s(bool,X51) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X51)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f5555,f179])).
fof(f5555,plain,(
  ( ! [X51] : (p(s(bool,'F_0')) | s(bool,X51) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X51)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f417,f3280])).
fof(f5577,plain,(
  ( ! [X45,X44] : (s(bool,X45) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X45)) ) | $spl34),
  inference(subsumption_resolution,[],[f5552,f179])).
fof(f5552,plain,(
  ( ! [X45,X44] : (p(s(bool,'F_0')) | s(bool,X45) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X44))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X45)) ) | $spl34),
  inference(superposition,[],[f417,f2918])).
fof(f5576,plain,(
  ( ! [X43] : (s(bool,X43) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X43)) ) | $spl34),
  inference(subsumption_resolution,[],[f5551,f179])).
fof(f5551,plain,(
  ( ! [X43] : (p(s(bool,'F_0')) | s(bool,X43) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X43)) ) | $spl34),
  inference(superposition,[],[f417,f2626])).
fof(f5574,plain,(
  ( ! [X39] : (s(bool,X39) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X39)) ) | $spl34),
  inference(subsumption_resolution,[],[f5548,f179])).
fof(f5548,plain,(
  ( ! [X39] : (p(s(bool,'F_0')) | s(bool,X39) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X39)) ) | $spl34),
  inference(superposition,[],[f417,f1101])).
fof(f5569,plain,(
  ( ! [X28,X27] : (s(bool,X28) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27))) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(subsumption_resolution,[],[f5543,f179])).
fof(f5543,plain,(
  ( ! [X28,X27] : (p(s(bool,'F_0')) | s(bool,X28) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X27))) | s(bool,'T_0') = s(bool,X28)) ) | $spl34),
  inference(superposition,[],[f417,f1080])).
fof(f5486,plain,(
  ( ! [X144,X143] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X143),s('type.num.num',X144))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X143))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X144)))))) ) | $spl34),
  inference(superposition,[],[f1093,f244])).
fof(f5429,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f244,f1901])).
fof(f5428,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f244,f1114])).
fof(f5395,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) ) | $spl34),
  inference(superposition,[],[f244,f1901])).
fof(f5394,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl34),
  inference(superposition,[],[f244,f1114])).
fof(f5393,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f244,f1113])).
fof(f5349,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f5348,f1113])).
fof(f5348,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f5261,f255])).
fof(f5261,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f5260,f1113])).
fof(f5260,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3800,f255])).
fof(f5091,plain,(
  ( ! [X4] : (s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X4,bool)) | ~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'F_0'))))) ) | $spl34),
  inference(forward_demodulation,[],[f5084,f2626])).
fof(f5084,plain,(
  ( ! [X4] : (~p(s(bool,happ(s(fun(bool,bool),X4),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')),X4,bool))) ) | $spl34),
  inference(superposition,[],[f222,f2626])).
fof(f4954,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4922,f1113])).
fof(f4922,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2518,f255])).
fof(f4915,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X0)))) | s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X1,bool)) | s(bool,'T_0') = s(bool,X0)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f3464,f208])).
fof(f4914,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),'const.bool.COND_3'(s(bool,'T_0'),s(fun(bool,bool),X0),s(fun(bool,bool),X1)),bool))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f3464,f217])).
fof(f4828,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4796,f1113])).
fof(f4796,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4201,f255])).
fof(f4791,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4760,f1113])).
fof(f4760,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f4070,f255])).
fof(f4678,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl34),
  inference(forward_demodulation,[],[f4677,f1113])).
fof(f4677,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f4069,f255])).
fof(f4670,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f4639,f1113])).
fof(f4639,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2491,f255])).
fof(f4482,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f2490,f251])).
fof(f4483,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2490,f2490,f251])).
fof(f4385,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f2217,f251])).
fof(f4279,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f4235,f1113])).
fof(f4235,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f3127])).
fof(f4201,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(superposition,[],[f2022,f197])).
fof(f4070,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(superposition,[],[f2021,f197])).
fof(f4069,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f2021,f177])).
fof(f4030,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))))))) ) | $spl34),
  inference(superposition,[],[f1998,f199])).
fof(f4029,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f1998,f202])).
fof(f3900,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))))) ) | $spl34),
  inference(superposition,[],[f1935,f202])).
fof(f3902,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(forward_demodulation,[],[f3868,f1113])).
fof(f3868,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1935,f255])).
fof(f3800,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3799,f1113])).
fof(f3799,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3735,f255])).
fof(f3735,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3734,f1113])).
fof(f3734,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3675,f255])).
fof(f3675,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3674,f1113])).
fof(f3674,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3509,f255])).
fof(f3661,plain,(
  ( ! [X30,X31] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),'const.list.NIL_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f3624,f1113])).
fof(f3624,plain,(
  ( ! [X30,X31] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X31))) | s('type.num.num',X31) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),'const.list.NIL_0')))) ) | $spl34),
  inference(superposition,[],[f255,f3290])).
fof(f3509,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3508,f1113])).
fof(f3508,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3499,f255])).
fof(f3499,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3498,f1113])).
fof(f3498,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3386,f255])).
fof(f3464,plain,(
  ( ! [X28] : (~p(s(bool,happ(s(fun(bool,bool),X28),s(bool,'F_0')))) | s(bool,'F_0') = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X28,bool))) ) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3419,f3280])).
fof(f3419,plain,(
  ( ! [X28] : (~p(s(bool,happ(s(fun(bool,bool),X28),s(bool,'F_0')))) | s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,sK13('const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')),X28,bool))) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f222,f3280])).
fof(f3386,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3385,f1113])).
fof(f3385,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3274,f255])).
fof(f3358,plain,(
  ( ! [X43] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X43))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X43))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1093,f207])).
fof(f3286,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') != s('type.list.list'(sK0),sK2) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3269,f1096])).
fof(f3280,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f179,f3270,f251])).
fof(f3270,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl34 | $spl43)),
  inference(unit_resulting_resolution,[],[f3269,f1116])).
fof(f3274,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | ($spl34 | $spl43)),
  inference(forward_demodulation,[],[f3273,f1113])).
fof(f3273,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))))) | $spl43),
  inference(unit_resulting_resolution,[],[f3269,f255])).
fof(f3264,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) ) | $spl34),
  inference(superposition,[],[f1095,f217])).
fof(f3255,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f3219,f1113])).
fof(f3219,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f2571])).
fof(f3189,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f3152,f1901])).
fof(f3152,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f1901])).
fof(f3130,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1901])).
fof(f3187,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(forward_demodulation,[],[f3186,f177])).
fof(f3186,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(forward_demodulation,[],[f3129,f202])).
fof(f3129,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f199,f1901])).
fof(f3128,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f198,f1901])).
fof(f3127,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1088,f1901])).
fof(f2918,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f2195,f251])).
fof(f2919,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2195,f2195,f251])).
fof(f2714,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1114])).
fof(f2838,plain,(
  ( ! [X42] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))) | s('type.num.num',X42) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2710,f1113])).
fof(f2710,plain,(
  ( ! [X42] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X42))) | s('type.num.num',X42) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1111])).
fof(f2837,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X39),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40)))) ) | $spl34),
  inference(forward_demodulation,[],[f2709,f1113])).
fof(f2709,plain,(
  ( ! [X39,X41,X40] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X41))) | s('type.num.num',X41) = s('type.num.num','const.numeral.iSUB_3'(s(bool,X39),s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X40)))) )),
  inference(superposition,[],[f255,f232])).
fof(f2834,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) | s('type.num.num',X30) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2704,f1114])).
fof(f2704,plain,(
  ( ! [X30] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X30))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X30) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f255,f177])).
fof(f2833,plain,(
  ( ! [X28,X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))) | s('type.num.num',X29) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28)))) ) | $spl34),
  inference(forward_demodulation,[],[f2703,f1113])).
fof(f2703,plain,(
  ( ! [X28,X29] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X29))) | s('type.num.num',X29) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X28)))) ) | $spl34),
  inference(superposition,[],[f255,f1079])).
fof(f2832,plain,(
  ( ! [X26,X27] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2702,f1113])).
fof(f2702,plain,(
  ( ! [X26,X27] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1078])).
fof(f2831,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f2701,f1113])).
fof(f2701,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X25))) | s('type.num.num',X25) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24)))))))) ) | $spl34),
  inference(superposition,[],[f255,f1089])).
fof(f2830,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f2700,f1113])).
fof(f2700,plain,(
  ( ! [X23,X22] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X22)))))))) ) | $spl34),
  inference(superposition,[],[f255,f1088])).
fof(f2829,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2699,f1114])).
fof(f2699,plain,(
  ( ! [X21,X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1115])).
fof(f2828,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)))) ) | $spl34),
  inference(forward_demodulation,[],[f2698,f1113])).
fof(f2698,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X18)))) ) | $spl34),
  inference(superposition,[],[f255,f1084])).
fof(f2697,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1082])).
fof(f2827,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num',X14)))) ) | $spl34),
  inference(forward_demodulation,[],[f2696,f1113])).
fof(f2696,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num',X14)))) ) | $spl34),
  inference(superposition,[],[f255,f1081])).
fof(f2693,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) ) | $spl34),
  inference(superposition,[],[f255,f2219])).
fof(f2690,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1083])).
fof(f2824,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(forward_demodulation,[],[f2689,f1114])).
fof(f2689,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl34),
  inference(superposition,[],[f255,f1114])).
fof(f2823,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f2688,f1113])).
fof(f2688,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f255,f1113])).
fof(f2626,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(unit_resulting_resolution,[],[f179,f1995,f251])).
fof(f2571,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1089,f1114])).
fof(f2518,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2104,f1093])).
fof(f2490,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2020,f1116])).
fof(f2491,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2020,f1093])).
fof(f2398,plain,(
  ( ! [X35] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X35))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X35)))) ) | $spl34),
  inference(superposition,[],[f1093,f2219])).
fof(f2292,plain,(
  ( ! [X57,X56] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X57),s('type.num.num',X56))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X56),s('type.num.num',X57)))))) ) | $spl34),
  inference(superposition,[],[f1094,f235])).
fof(f2291,plain,(
  ( ! [X54,X55] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X55),s('type.num.num',X54))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X54),s('type.num.num',X55)))) ) | $spl34),
  inference(superposition,[],[f1093,f235])).
fof(f2217,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f2019,f1116])).
fof(f2218,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(unit_resulting_resolution,[],[f2019,f1093])).
fof(f2195,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f2133,f1116])).
fof(f2133,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(superposition,[],[f2080,f197])).
fof(f2104,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f1934,f197])).
fof(f2080,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1934,f1094])).
fof(f2020,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f1992,f197])).
fof(f2019,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1992,f177])).
fof(f1997,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1992,f1116])).
fof(f1998,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1992,f1093])).
fof(f1995,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl34),
  inference(unit_resulting_resolution,[],[f1940,f1116])).
fof(f1996,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(unit_resulting_resolution,[],[f1940,f1093])).
fof(f1940,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(superposition,[],[f1933,f197])).
fof(f1933,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f1910,f1114])).
fof(f1935,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(forward_demodulation,[],[f1912,f199])).
fof(f1912,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(unit_resulting_resolution,[],[f1910,f1093])).
fof(f1797,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl34),
  inference(superposition,[],[f198,f1114])).
fof(f1729,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(subsumption_resolution,[],[f1679,f179])).
fof(f1679,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(superposition,[],[f1117,f208])).
fof(f1111,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1076,f992])).
fof(f1108,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X11),s('type.num.num',X12)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f974])).
fof(f1107,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f971])).
fof(f1106,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7)))))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f970])).
fof(f1119,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f1105,f1076])).
fof(f1105,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f964])).
fof(f1118,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(forward_demodulation,[],[f1104,f1076])).
fof(f1104,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f961])).
fof(f1101,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl34),
  inference(backward_demodulation,[],[f1076,f395])).
fof(f1095,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f215])).
fof(f1093,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f209])).
fof(f1089,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f203])).
fof(f1088,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f200])).
fof(f1084,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f188])).
fof(f1081,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f185])).
fof(f1080,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f183])).
fof(f1079,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f182])).
fof(f1078,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl34),
  inference(backward_demodulation,[],[f1076,f181])).
fof(f15220,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15219,f7195])).
fof(f7195,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f7194,f3290])).
fof(f7194,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl1 | $spl4 | $spl40)),
  inference(forward_demodulation,[],[f262,f7174])).
fof(f7174,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),sK2) | ($spl4 | $spl40)),
  inference(backward_demodulation,[],[f3267,f265])).
fof(f15219,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15119,f3290])).
fof(f15119,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl40)),
  inference(unit_resulting_resolution,[],[f267,f3267,f220])).
fof(f15218,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15217,f7195])).
fof(f15217,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15216,f3290])).
fof(f15216,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15215,f267])).
fof(f15215,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15214,f2219])).
fof(f15214,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15120,f235])).
fof(f15120,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f1083,f3267,f220])).
fof(f15213,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15212,f7195])).
fof(f15212,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15211,f3290])).
fof(f15211,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15210,f267])).
fof(f15210,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15121,f2219])).
fof(f15121,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f2219,f3267,f220])).
fof(f15209,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15208,f7195])).
fof(f15208,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15207,f3290])).
fof(f15207,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15206,f267])).
fof(f15206,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15122,f1082])).
fof(f15122,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f1082,f3267,f220])).
fof(f15205,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15204,f7195])).
fof(f15204,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15203,f3290])).
fof(f15203,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15202,f267])).
fof(f15202,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | ($spl34 | $spl40)),
  inference(forward_demodulation,[],[f15123,f12130])).
fof(f15123,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))))) | ($spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f12130,f3267,f220])).
fof(f15201,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15200,f7195])).
fof(f15200,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15199,f3290])).
fof(f15199,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl40)),
  inference(forward_demodulation,[],[f15198,f267])).
fof(f15198,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | $spl40),
  inference(forward_demodulation,[],[f15124,f196])).
fof(f15124,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl40),
  inference(unit_resulting_resolution,[],[f196,f3267,f220])).
fof(f15197,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f15196,f7195])).
fof(f15196,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f15195,f3290])).
fof(f15195,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ($spl6 | $spl40)),
  inference(forward_demodulation,[],[f15194,f267])).
fof(f15194,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))))) | $spl40),
  inference(forward_demodulation,[],[f15125,f217])).
fof(f15125,plain,(
  ( ! [X0] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',X0)))))) ) | $spl40),
  inference(unit_resulting_resolution,[],[f217,f3267,f220])).
fof(f14031,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl59),
  inference(cnf_transformation,[],[f14031_D])).
fof(f14031_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f14071,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) | $spl72),
  inference(cnf_transformation,[],[f14071_D])).
fof(f14071_D,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f14070,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14069,f177])).
fof(f14069,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14013,f235])).
fof(f14013,plain,(
  ( ! [X49] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X49),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X49))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13272,f177])).
fof(f14057,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) | $spl70),
  inference(cnf_transformation,[],[f14057_D])).
fof(f14057_D,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f14056,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14055,f1115])).
fof(f14055,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14003,f235])).
fof(f14003,plain,(
  ( ! [X30,X29] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.ZERO_0')),'const.list.NIL_0',X30))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13272,f1115])).
fof(f14046,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | $spl67),
  inference(cnf_transformation,[],[f14046_D])).
fof(f14046_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f14047,plain,(
  ( ! [X16] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16))))) ) | $spl68),
  inference(cnf_transformation,[],[f14047_D])).
fof(f14047_D,plain,(
  ( ! [X16] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f14044,plain,(
  ( ! [X16] : (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1)))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f13996,f267])).
fof(f13996,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.list.NIL_0',X16))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13272,f267])).
fof(f14036,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl63),
  inference(cnf_transformation,[],[f14036_D])).
fof(f14036_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f14037,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) | $spl64),
  inference(cnf_transformation,[],[f14037_D])).
fof(f14037_D,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f14034,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14033,f1901])).
fof(f14033,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f13990,f235])).
fof(f13990,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X2))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13272,f1901])).
fof(f14032,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) | $spl60),
  inference(cnf_transformation,[],[f14032_D])).
fof(f14032_D,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f14029,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f14028,f1114])).
fof(f14028,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) | ($spl6 | $spl34)),
  inference(forward_demodulation,[],[f13989,f235])).
fof(f13989,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK16('const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)),'const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),'const.list.NIL_0',X1))))) ) | ($spl6 | $spl34)),
  inference(superposition,[],[f13272,f1114])).
fof(f8323,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl54),
  inference(cnf_transformation,[],[f8323_D])).
fof(f8323_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f8325,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl57),
  inference(cnf_transformation,[],[f8325_D])).
fof(f8325_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f8288,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(equality_factoring,[],[f7756])).
fof(f7756,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(subsumption_resolution,[],[f7747,f179])).
fof(f7747,plain,(
  ( ! [X4] : (p(s(bool,'F_0')) | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(superposition,[],[f417,f7733])).
fof(f7733,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f179,f7547,f251])).
fof(f7547,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(unit_resulting_resolution,[],[f7193,f1116])).
fof(f7193,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl1 | $spl4 | $spl34 | $spl40)),
  inference(forward_demodulation,[],[f7192,f3290])).
fof(f7192,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl1 | $spl4 | $spl40)),
  inference(forward_demodulation,[],[f2265,f7174])).
fof(f2265,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl1),
  inference(superposition,[],[f262,f235])).
fof(f7358,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f7357,f179])).
fof(f7357,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(forward_demodulation,[],[f7356,f384])).
fof(f7356,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl8),
  inference(subsumption_resolution,[],[f7234,f179])).
fof(f7234,plain,(
  ( ! [X6,X7,X5] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))),s('type.num.num',X7))))) ) | $spl8),
  inference(backward_demodulation,[],[f384,f5172])).
fof(f7352,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f7351,f179])).
fof(f7351,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(forward_demodulation,[],[f7350,f384])).
fof(f7350,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl8),
  inference(subsumption_resolution,[],[f7204,f179])).
fof(f7204,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl8),
  inference(backward_demodulation,[],[f384,f258])).
fof(f7184,plain,(
  $false | ($spl4 | $spl34 | $spl40 | $spl51)),
  inference(subsumption_resolution,[],[f7183,f1085])).
fof(f7183,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl34 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7182,f3290])).
fof(f7182,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f6096,f7174])).
fof(f7181,plain,(
  $false | ($spl4 | $spl11 | $spl19 | $spl34 | $spl40 | $spl51)),
  inference(subsumption_resolution,[],[f7180,f386])).
fof(f7180,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl19 | $spl34 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7179,f1085])).
fof(f7179,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl19 | $spl34 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7178,f3290])).
fof(f7178,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl4 | $spl19 | $spl40 | $spl51)),
  inference(forward_demodulation,[],[f7157,f7174])).
fof(f7157,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl19 | $spl51)),
  inference(forward_demodulation,[],[f6280,f1128])).
fof(f1128,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl19),
  inference(unit_resulting_resolution,[],[f179,f1063,f251])).
fof(f1063,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl19),
  inference(forward_demodulation,[],[f1041,f205])).
fof(f1041,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))),s('type.num.num','const.num.|48|_0')))) | $spl19),
  inference(unit_resulting_resolution,[],[f980,f269])).
fof(f6280,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl19 | $spl51)),
  inference(unit_resulting_resolution,[],[f6096,f5582])).
fof(f5582,plain,(
  ( ! [X55] : (s(bool,X55) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X55)) ) | $spl19),
  inference(subsumption_resolution,[],[f5557,f179])).
fof(f5557,plain,(
  ( ! [X55] : (p(s(bool,'F_0')) | s(bool,X55) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X55)) ) | $spl19),
  inference(superposition,[],[f417,f1128])).
fof(f7173,plain,(
  $false | ($spl11 | $spl19 | $spl34 | $spl42 | $spl51)),
  inference(subsumption_resolution,[],[f7172,f386])).
fof(f7172,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl19 | $spl34 | $spl42 | $spl51)),
  inference(forward_demodulation,[],[f7167,f1085])).
fof(f7167,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl19 | $spl42 | $spl51)),
  inference(backward_demodulation,[],[f3268,f7157])).
fof(f3268,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl42),
  inference(cnf_transformation,[],[f3268_D])).
fof(f3268_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f7171,plain,(
  $false | ($spl34 | $spl42 | $spl51)),
  inference(subsumption_resolution,[],[f7166,f1085])).
fof(f7166,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl42 | $spl51)),
  inference(backward_demodulation,[],[f3268,f6096])).
fof(f384,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f384_D])).
fof(f384_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f7150,plain,(
  ( ! [X68,X66,X67] : (p(s(bool,happ(s(fun(X66,bool),X67),s(X66,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67,X66))))) | ~p(s(bool,happ(s(fun(X66,bool),X67),s(X66,X68))))) ) | $spl52),
  inference(cnf_transformation,[],[f7150_D])).
fof(f7150_D,plain,(
  ( ! [X68,X66,X67] : (p(s(bool,happ(s(fun(X66,bool),X67),s(X66,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67,X66))))) | ~p(s(bool,happ(s(fun(X66,bool),X67),s(X66,X68))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f7149,plain,(
  ( ! [X68,X66,X67,X65] : (p(s(bool,happ(s(fun(X66,bool),X67),s(X66,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67,X66))))) | ~p(s(bool,happ(s(fun(X66,bool),X67),s(X66,X68)))) | s(bool,'F_0') = s(bool,X65)) ) | ($spl34 | $spl43)),
  inference(subsumption_resolution,[],[f7117,f422])).
fof(f7117,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X65)) | p(s(bool,happ(s(fun(X66,bool),X67),s(X66,sK14('const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')),X67,X66))))) | ~p(s(bool,happ(s(fun(X66,bool),X67),s(X66,X68)))) | s(bool,'F_0') = s(bool,X65)) ) | ($spl34 | $spl43)),
  inference(superposition,[],[f224,f6887])).
fof(f6094,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl48),
  inference(cnf_transformation,[],[f6094_D])).
fof(f6094_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f6096,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl51),
  inference(cnf_transformation,[],[f6096_D])).
fof(f6096_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f6032,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl34 | $spl43)),
  inference(equality_factoring,[],[f5580])).
fof(f5743,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl44),
  inference(cnf_transformation,[],[f5743_D])).
fof(f5743_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f5745,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl47),
  inference(cnf_transformation,[],[f5745_D])).
fof(f5745_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f5684,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl19),
  inference(equality_factoring,[],[f5582])).
fof(f3267,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | $spl40),
  inference(cnf_transformation,[],[f3267_D])).
fof(f3267_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f3269,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl43),
  inference(cnf_transformation,[],[f3269_D])).
fof(f3269_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f3263,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | ($spl4 | $spl34)),
  inference(superposition,[],[f1095,f265])).
fof(f1062,plain,(
  $false | $spl23),
  inference(subsumption_resolution,[],[f1061,f174])).
fof(f1061,plain,(
  ~p(s(bool,'T_0')) | $spl23),
  inference(forward_demodulation,[],[f1060,f189])).
fof(f1060,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl23),
  inference(forward_demodulation,[],[f1042,f205])).
fof(f1042,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))) | $spl23),
  inference(unit_resulting_resolution,[],[f983,f269])).
fof(f994,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl36),
  inference(cnf_transformation,[],[f994_D])).
fof(f994_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f996,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl39),
  inference(cnf_transformation,[],[f996_D])).
fof(f996_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f975,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f209,f178])).
fof(f992,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) | $spl34),
  inference(cnf_transformation,[],[f992_D])).
fof(f992_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f983,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl23),
  inference(cnf_transformation,[],[f983_D])).
fof(f983_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f973,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f209,f176])).
fof(f989,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl32),
  inference(cnf_transformation,[],[f989_D])).
fof(f989_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f968,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) )),
  inference(superposition,[],[f209,f182])).
fof(f988,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl30),
  inference(cnf_transformation,[],[f988_D])).
fof(f988_D,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f967,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f181])).
fof(f985,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | $spl26),
  inference(cnf_transformation,[],[f985_D])).
fof(f985_D,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f987,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl29),
  inference(cnf_transformation,[],[f987_D])).
fof(f987_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f966,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f209,f268])).
fof(f984,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) ) | $spl24),
  inference(cnf_transformation,[],[f984_D])).
fof(f984_D,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f965,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) )),
  inference(superposition,[],[f209,f188])).
fof(f981,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X1)))) ) | $spl20),
  inference(cnf_transformation,[],[f981_D])).
fof(f981_D,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X1)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f963,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X1)))) )),
  inference(superposition,[],[f209,f185])).
fof(f978,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl16),
  inference(cnf_transformation,[],[f978_D])).
fof(f978_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f980,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) | $spl19),
  inference(cnf_transformation,[],[f980_D])).
fof(f980_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f962,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl6),
  inference(superposition,[],[f209,f267])).
fof(f516,plain,(
  $false | ($spl1 | $spl12)),
  inference(subsumption_resolution,[],[f515,f481])).
fof(f481,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl12),
  inference(subsumption_resolution,[],[f465,f174])).
fof(f465,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl12),
  inference(backward_demodulation,[],[f419,f269])).
fof(f515,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | ($spl1 | $spl12)),
  inference(forward_demodulation,[],[f488,f481])).
fof(f488,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num',sK1))) | ($spl1 | $spl12)),
  inference(backward_demodulation,[],[f481,f262])).
fof(f471,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f470,f174])).
fof(f470,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(forward_demodulation,[],[f469,f419])).
fof(f469,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl12),
  inference(subsumption_resolution,[],[f449,f174])).
fof(f449,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))) ) | $spl12),
  inference(backward_demodulation,[],[f419,f257])).
fof(f466,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f433,f174])).
fof(f433,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(backward_demodulation,[],[f419,f179])).
fof(f419,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | $spl12),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f420,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3)) ) | $spl14),
  inference(cnf_transformation,[],[f420_D])).
fof(f420_D,plain,(
  ( ! [X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f418,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f401,f374])).
fof(f401,plain,(
  ( ! [X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,'F_0') = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f251,f208])).
fof(f386,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f386_D])).
fof(f386_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f381,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f208])).
fof(f261,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | $spl0),
  inference(cnf_transformation,[],[f261_D])).
fof(f261_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f267,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | $spl6),
  inference(cnf_transformation,[],[f267_D])).
fof(f267_D,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f171,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | (s('type.num.num',sK1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))) & s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | ! [X3,X4,X5,X6,X7] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7])],[f149])).
fof(f149,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) | ? [X8,X9,X10,X11,X12] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X8))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),X8))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) | ! [X3,X4,X5,X6,X7] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))))),
  inference(rectify,[],[f148])).
fof(f148,plain,(
  ? [X0,X1,X2] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) | ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) | ! [X3,X4,X5,X6,X7] : (s('type.num.num',X1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3))))))))))))),
  inference(nnf_transformation,[],[f144])).
fof(f144,plain,(
  ? [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) <~> ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) <=> ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X1))) <=> ? [X3,X4,X5,X6,X7] : (s('type.num.num',X1) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),X3)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7))) <=> ? [X9,X10,X11,X12,X13] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X7))) <=> ? [X9,X10,X11,X12,X13] : (s('type.num.num',X7) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),X9)))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_4|split|11','thm.quantHeuristics.LIST_LENGTH_4|split|11')).
fof(f265,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | $spl4),
  inference(cnf_transformation,[],[f265_D])).
fof(f265_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f172,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),sK3))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))),
  inference(cnf_transformation,[],[f150])).
fof(f262,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) | $spl1),
  inference(cnf_transformation,[],[f262_D])).
fof(f262_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f263,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3)))))))))) ) | $spl2),
  inference(cnf_transformation,[],[f263_D])).
fof(f263_D,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3)))))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f173,plain,(
  ( ! [X6,X4,X7,X5,X3] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),X3))))))))) | s('type.num.num',sK1) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',sK1)))) )),
  inference(cnf_transformation,[],[f150])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 320
% Passive clauses: 1504
% Generated clauses: 17860
% Final active clauses: 202
% Final passive clauses: 735
% Input formulas: 69
% Initial clauses: 90
% 
% Duplicate literals: 48
% Trivial inequalities: 56
% Fw subsumption resolutions: 310
% Fw demodulations: 4660
% Bw demodulations: 434
% Condensations: 16
% Global subsumptions: 91
% 
% Simple tautologies: 20
% Equational tautologies: 59
% Forward subsumptions: 10786
% Fw demodulations to eq. taut.: 164
% Bw demodulations to eq. taut.: 18
% 
% Unit resulting resolution: 1186
% Factoring: 1
% Forward superposition: 6566
% Backward superposition: 3881
% Self superposition: 73
% Equality factoring: 14
% Equality resolution: 9
% 
% Split clauses: 26
% Split components: 52
% SAT solver clauses: 1769
% SAT solver unit clauses: 184
% SAT solver binary clauses: 633
% 
% Sat splits: 26
% Sat splitting refutations: 120
% 
% Memory used [KB]: 14328
% Time elapsed: 0.522 s
% ------------------------------
% ------------------------------
% Success in time 1.86 s
