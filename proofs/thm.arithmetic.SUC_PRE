Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f338,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f330,f66,f103,f101,f134,f67,f104,f102,f100,f105])).
fof(f105,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f105_D])).
fof(f105_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f100,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f93])).
fof(f93,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X11] : ! [X12] : (s(X11,X12) = s(X11,X12) <=> p(s(bool,'T_0')))),
  file('thm.arithmetic.SUC_PRE','thm.bool.REFL_CLAUSE')).
fof(f102,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | $spl1),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f104,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',sK0))))) | $spl3),
  inference(cnf_transformation,[],[f104_D])).
fof(f104_D,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',sK0))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f67,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',sK0))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | s('type.num.num',sK0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',sK0)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | s('type.num.num',sK0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',sK0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f54])).
fof(f54,plain,(
  ? [X0] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0)))))))),
  inference(nnf_transformation,[],[f49])).
fof(f49,plain,(
  ? [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <~> s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) <=> s('type.num.num',X6) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) <=> s('type.num.num',X6) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X6))))))),
  file('thm.arithmetic.SUC_PRE','thm.arithmetic.SUC_PRE')).
fof(f134,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f133,f102])).
fof(f133,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | $spl2),
  inference(superposition,[],[f77,f103])).
fof(f77,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X7] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))),
  file('thm.arithmetic.SUC_PRE','thm.prim_rec.LESS_|48|')).
fof(f101,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | $spl0),
  inference(cnf_transformation,[],[f101_D])).
fof(f101_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f103,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',sK0))))) | $spl2),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',sK0))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f66,plain,(
  s('type.num.num',sK0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',sK0))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f55])).
fof(f330,plain,(
  $false | ($spl0 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f315,f114])).
fof(f114,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl4),
  inference(resolution,[],[f85,f105])).
fof(f85,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X10] : (s(bool,'F_0') = s(bool,X10) <=> ~p(s(bool,X10)))),
  file('thm.arithmetic.SUC_PRE','thm.bool.EQ_CLAUSES|split|2')).
fof(f315,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl3)),
  inference(superposition,[],[f296,f117])).
fof(f117,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(resolution,[],[f86,f92])).
fof(f92,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X7] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0'))))),
  file('thm.arithmetic.SUC_PRE','thm.prim_rec.NOT_LESS_|48|')).
fof(f86,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f61])).
fof(f296,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3)),
  inference(backward_demodulation,[],[f295,f136])).
fof(f136,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | $spl0),
  inference(resolution,[],[f101,f82])).
fof(f82,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X10] : (s(bool,'T_0') = s(bool,X10) <=> p(s(bool,X10)))),
  file('thm.arithmetic.SUC_PRE','thm.bool.EQ_CLAUSES|split|0')).
fof(f295,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl3),
  inference(subsumption_resolution,[],[f286,f79])).
fof(f79,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1])],[f30])).
fof(f30,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X6) | ? [X7] : s('type.num.num',X6) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))),
  file('thm.arithmetic.SUC_PRE','thm.arithmetic.num_CASES')).
fof(f286,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1(sK0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl3),
  inference(superposition,[],[f104,f233])).
fof(f233,plain,(
  ( ! [X1] : (s('type.num.num',sK1(X1)) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X1)) )),
  inference(superposition,[],[f76,f79])).
fof(f76,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.arithmetic.SUC_PRE','thm.prim_rec.PRE|split|1')).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 34
% Passive clauses: 78
% Generated clauses: 266
% Final active clauses: 24
% Final passive clauses: 29
% Input formulas: 22
% Initial clauses: 34
% 
% Duplicate literals: 2
% Trivial inequalities: 6
% Fw subsumption resolutions: 27
% Fw demodulations: 12
% Bw demodulations: 7
% 
% Simple tautologies: 11
% Equational tautologies: 5
% Forward subsumptions: 124
% 
% Binary resolution: 36
% Factoring: 1
% Forward superposition: 57
% Backward superposition: 70
% Self superposition: 5
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 17
% SAT solver unit clauses: 5
% SAT solver binary clauses: 8
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 7
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 13
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 767
% Time elapsed: 0.017 s
% ------------------------------
% ------------------------------
% Success in time 0.019 s
