Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f8561,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f8520,f148,f222,f218,f223,f226,f490,f504,f2547,f2029,f2549,f336,f341,f339,f2160,f165,f219,f221,f2122,f2115,f1874,f1906,f1828,f1862,f8303,f8377])).
fof(f8377,plain,(
  $false | $spl58),
  inference(equality_resolution,[],[f2029])).
fof(f8303,plain,(
  $false | ($spl3 | $spl70)),
  inference(subsumption_resolution,[],[f8284,f222])).
fof(f8284,plain,(
  p(s(bool,'F_0')) | $spl70),
  inference(superposition,[],[f8236,f2549])).
fof(f8236,plain,(
  ( ! [X109,X107,X108,X106] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X108,X106),X109),s(fun(X106,bool),'_dst_x0_1'(s(bool,X107))))))) )),
  inference(subsumption_resolution,[],[f8198,f2063])).
fof(f2063,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X51,X48),X50),s(fun(X48,bool),'_dst_x0_1'(s(bool,X49))))))) )),
  inference(superposition,[],[f200,f186])).
fof(f186,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X23,X24] : ! [X25,X26] : s(X24,X25) = s(X24,happ(s(fun(X23,X24),'_dst_x0_1'(s(X24,X25))),s(X23,X26)))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL','_dst_x0_ax')).
fof(f200,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK13(X3,X2,X1,X0))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,sK12(X6,X3,X2,X1,X0))))))))) & ((~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK13(X3,X2,X1,X0))))) & ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f132])).
fof(f132,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | ? [X7] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X7)))))))) & (? [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f131])).
fof(f131,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))))) & (? [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : ~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X7,X6] : ! [X9,X18] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X6,X7),X9),s(fun(X7,bool),X18)))) <=> ! [X19] : (~p(s(bool,happ(s(fun(X7,bool),X18),s(X7,X19)))) => ? [X20] : ~p(s(bool,happ(s(fun(X7,bool),X18),s(X7,happ(s(fun(X6,X7),X9),s(X6,X20))))))))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL','thm.quantHeuristics.GUESS_EXISTS_FORALL_REWRITES|split|1')).
fof(f8198,plain,(
  ( ! [X109,X107,X108,X106] : (p(s(bool,X107)) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X108,X106),X109),s(fun(X106,bool),'_dst_x0_1'(s(bool,X107))))))) )),
  inference(superposition,[],[f201,f186])).
fof(f201,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f133])).
fof(f1862,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X49,X50),X51),s(fun(X50,bool),'_dst_x0_1'(s(bool,'T_0'))))))) ) | $spl52),
  inference(cnf_transformation,[],[f1862_D])).
fof(f1862_D,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X49,X50),X51),s(fun(X50,bool),'_dst_x0_1'(s(bool,'T_0'))))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f1828,plain,(
  ( ! [X35,X33,X34] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X33,X34),X35),s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))))))) ) | $spl0),
  inference(resolution,[],[f1811,f219])).
fof(f1811,plain,(
  ( ! [X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X51,X48),X50),s(fun(X48,bool),'_dst_x0_1'(s(bool,X49))))))) )),
  inference(superposition,[],[f197,f186])).
fof(f197,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK11(X3,X2,X1,X0))))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | s(X0,X6) = s(X0,happ(s(fun(X1,X0),X2),s(X1,sK10(X6,X3,X2,X1,X0)))))) & ((~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK11(X3,X2,X1,X0))))) & ! [X5] : s(X0,sK11(X3,X2,X1,X0)) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11])],[f129])).
fof(f129,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | ? [X7] : s(X0,X6) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X7))))) & (? [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f128])).
fof(f128,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))) & (? [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(ennf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X7,X6] : ! [X21,X22] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X6,X7),X21),s(fun(X7,bool),X22)))) <=> ! [X19] : (~p(s(bool,happ(s(fun(X7,bool),X22),s(X7,X19)))) => ? [X20] : s(X7,X19) = s(X7,happ(s(fun(X6,X7),X21),s(X6,X20)))))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL','thm.quantHeuristics.GUESS_REWRITES|split|5')).
fof(f1906,plain,(
  ( ! [X8,X7,X9] : (s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X7,X8),X9),s(fun(X8,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | $spl56),
  inference(cnf_transformation,[],[f1906_D])).
fof(f1906_D,plain,(
  ( ! [X8,X7,X9] : (s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X7,X8),X9),s(fun(X8,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f1874,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X0,X1),X2),s(fun(X1,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | $spl52),
  inference(resolution,[],[f1862,f152])).
fof(f152,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL','thm.bool.EQ_CLAUSES|split|1')).
fof(f2115,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X49,X50),X51),s(fun(X50,bool),'_dst_x0_1'(s(bool,'T_0'))))))) ) | $spl64),
  inference(cnf_transformation,[],[f2115_D])).
fof(f2115_D,plain,(
  ( ! [X50,X51,X49] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X49,X50),X51),s(fun(X50,bool),'_dst_x0_1'(s(bool,'T_0'))))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f2122,plain,(
  ( ! [X92,X90,X91] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X90,X91),X92),s(fun(X91,bool),'_dst_x0_1'(s(bool,'T_0'))))))) ) | ($spl0 | $spl56)),
  inference(forward_demodulation,[],[f2121,f1906])).
fof(f2121,plain,(
  ( ! [X92,X90,X88,X87,X91,X89] : (p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X90,X91),X92),s(fun(X91,bool),'_dst_x0_1'(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X87,X88),X89),s(fun(X88,bool),'_dst_x0_1'(s(bool,'T_0'))))))))))) ) | ($spl0 | $spl56)),
  inference(subsumption_resolution,[],[f2103,f219])).
fof(f2103,plain,(
  ( ! [X92,X90,X88,X87,X91,X89] : (~p(s(bool,'T_0')) | p(s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X90,X91),X92),s(fun(X91,bool),'_dst_x0_1'(s(bool,'const.quantHeuristics.GUESS_FORALL_GAP_2'(s(fun(X87,X88),X89),s(fun(X88,bool),'_dst_x0_1'(s(bool,'T_0'))))))))))) ) | $spl56),
  inference(superposition,[],[f2063,f1906])).
fof(f221,plain,(
  p(s(bool,'F_0')) | $spl2),
  inference(cnf_transformation,[],[f221_D])).
fof(f221_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f219,plain,(
  p(s(bool,'T_0')) | $spl0),
  inference(cnf_transformation,[],[f219_D])).
fof(f219_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f165,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f106])).
fof(f106,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X12] : ((p(s(bool,'F_0')) => p(s(bool,X12))) <=> p(s(bool,'T_0')))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL','thm.bool.IMP_CLAUSES|split|2')).
fof(f2160,plain,(
  $false | ($spl0 | $spl3 | $spl14 | $spl64)),
  inference(subsumption_resolution,[],[f2145,f222])).
fof(f2145,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl14 | $spl64)),
  inference(superposition,[],[f2115,f510])).
fof(f510,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl14)),
  inference(subsumption_resolution,[],[f508,f339])).
fof(f508,plain,(
  s(bool,'T_0') != s(bool,sK2) | s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl14)),
  inference(superposition,[],[f342,f363])).
fof(f363,plain,(
  ( ! [X6] : (s(bool,sK2) = s(bool,X6) | s(bool,'F_0') = s(bool,X6)) ) | ($spl0 | $spl14)),
  inference(subsumption_resolution,[],[f355,f219])).
fof(f355,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | s(bool,sK2) = s(bool,X6) | s(bool,'F_0') = s(bool,X6)) ) | $spl14),
  inference(superposition,[],[f269,f339])).
fof(f269,plain,(
  ( ! [X8,X7] : (~p(s(bool,X7)) | s(bool,X7) = s(bool,X8) | s(bool,'F_0') = s(bool,X8)) )),
  inference(resolution,[],[f185,f156])).
fof(f156,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL','thm.bool.EQ_CLAUSES|split|3')).
fof(f185,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X10,X11] : ((p(s(bool,X10)) => p(s(bool,X11))) => ((p(s(bool,X11)) => p(s(bool,X10))) => s(bool,X10) = s(bool,X11)))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL','thm.bool.IMP_ANTISYM_AX')).
fof(f342,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,'T_0'))))) | $spl14),
  inference(backward_demodulation,[],[f339,f141])).
fof(f141,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,sK2)))))),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f77])).
fof(f77,plain,(
  ? [X0,X1,X2,X3] : s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X0,X1),X3),s(fun(X1,bool),'_dst_x0_1'(s(bool,X2)))))),
  inference(ennf_transformation,[],[f35])).
fof(f35,plain,(
  ~! [X0,X1,X2,X3] : s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X0,X1),X3),s(fun(X1,bool),'_dst_x0_1'(s(bool,X2)))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ~! [X0,X1] : ! [X2,X3] : s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X0,X1),X3),s(fun(X1,bool),'_dst_x0_1'(s(bool,X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9] : s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X6,X7),X9),s(fun(X7,bool),'_dst_x0_1'(s(bool,X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9] : s(bool,'T_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(X6,X7),X9),s(fun(X7,bool),'_dst_x0_1'(s(bool,X8)))))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL','thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL')).
fof(f339,plain,(
  s(bool,'T_0') = s(bool,sK2) | $spl14),
  inference(cnf_transformation,[],[f339_D])).
fof(f339_D,plain,(
  s(bool,'T_0') = s(bool,sK2) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f341,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,'F_0'))))) | $spl17),
  inference(cnf_transformation,[],[f341_D])).
fof(f341_D,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,'F_0'))))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f336,plain,(
  s(bool,'T_0') != s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,'F_0'))))) | s(bool,'T_0') = s(bool,sK2)),
  inference(superposition,[],[f141,f149])).
fof(f149,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL',aHL_BOOL_CASES)).
fof(f2549,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,'F_0'))))) | $spl70),
  inference(cnf_transformation,[],[f2549_D])).
fof(f2549_D,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,'F_0'))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f2029,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,X15)) ) | $spl58),
  inference(cnf_transformation,[],[f2029_D])).
fof(f2029_D,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,X15)) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f2547,plain,(
  ( ! [X4] : (s(bool,'T_0') != s(bool,X4) | s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,'F_0')))))) ) | ($spl17 | $spl18)),
  inference(subsumption_resolution,[],[f2536,f504])).
fof(f2536,plain,(
  ( ! [X4] : (s(bool,'T_0') != s(bool,X4) | s(bool,'F_0') = s(bool,X4) | s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_FORALL_2'(s(fun(sK0,sK1),sK3),s(fun(sK1,bool),'_dst_x0_1'(s(bool,'F_0')))))) ) | $spl17),
  inference(superposition,[],[f341,f329])).
fof(f329,plain,(
  ( ! [X10,X11] : (s(bool,X10) = s(bool,X11) | s(bool,'F_0') = s(bool,X11) | s(bool,'F_0') = s(bool,X10)) )),
  inference(resolution,[],[f269,f156])).
fof(f504,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | s(bool,'F_0') != s(bool,X1)) ) | $spl18),
  inference(cnf_transformation,[],[f504_D])).
fof(f504_D,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,X1) | s(bool,'F_0') != s(bool,X1)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f490,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | s(bool,'T_0') != s(bool,X0)) ) | ($spl3 | $spl10)),
  inference(resolution,[],[f277,f222])).
fof(f277,plain,(
  ( ! [X10,X9] : (p(s(bool,X9)) | s(bool,X9) != s(bool,X10) | s(bool,'T_0') != s(bool,X10)) ) | $spl10),
  inference(resolution,[],[f226,f151])).
fof(f151,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f98])).
fof(f226,plain,(
  ( ! [X2,X3] : (~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | p(s(bool,X2))) ) | $spl10),
  inference(cnf_transformation,[],[f226_D])).
fof(f226_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | p(s(bool,X2))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f223,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl4),
  inference(cnf_transformation,[],[f223_D])).
fof(f223_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f218,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f214])).
fof(f214,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X13,X16,X14,X17] : ((s(bool,X13) = s(bool,X16) & (p(s(bool,X16)) => s(bool,X14) = s(bool,X17))) => ((p(s(bool,X13)) => p(s(bool,X14))) <=> (p(s(bool,X16)) => p(s(bool,X17)))))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL','thm.bool.IMP_CONG')).
fof(f222,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f222_D])).
fof(f222_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f148,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.GUESS_RULES_CONSTANT_FORALL',aHL_FALSITY)).
fof(f8520,plain,(
  $false | ($spl3 | $spl4)),
  inference(resolution,[],[f223,f222])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 108
% Passive clauses: 1518
% Generated clauses: 8397
% Final active clauses: 56
% Final passive clauses: 1102
% Input formulas: 32
% Initial clauses: 77
% 
% Duplicate literals: 364
% Trivial inequalities: 189
% Fw subsumption resolutions: 1399
% Fw demodulations: 1037
% Bw demodulations: 32
% 
% Simple tautologies: 244
% Equational tautologies: 48
% Forward subsumptions: 3248
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 438
% Factoring: 1
% Forward superposition: 2505
% Backward superposition: 1907
% Self superposition: 95
% Equality factoring: 98
% Equality resolution: 21
% 
% Split clauses: 237
% Split components: 483
% SAT solver clauses: 427
% SAT solver unit clauses: 27
% SAT solver binary clauses: 147
% SAT solver learnt clauses: 1
% 
% Sat splits: 237
% Sat splitting refutations: 15
% 
% TWLsolver clauses: 422
% TWLsolver calls for satisfiability: 92
% 
% Memory used [KB]: 3709
% Time elapsed: 0.199 s
% ------------------------------
% ------------------------------
% Success in time 0.204 s
