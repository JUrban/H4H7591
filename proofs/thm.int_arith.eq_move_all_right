Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f614,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f611,f77,f130,f128,f262,f76,f129,f127])).
fof(f127,plain,(
  s('type.integer.int',sK0) = s('type.integer.int',sK1) | $spl0),
  inference(cnf_transformation,[],[f127_D])).
fof(f127_D,plain,(
  s('type.integer.int',sK0) = s('type.integer.int',sK1) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f129,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))) | $spl2),
  inference(cnf_transformation,[],[f129_D])).
fof(f129_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f76,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))) | s('type.integer.int',sK0) = s('type.integer.int',sK1)),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  (s('type.integer.int',sK0) = s('type.integer.int',sK1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0)))))) & (s('type.integer.int',sK0) != s('type.integer.int',sK1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f56])).
fof(f56,plain,(
  ? [X0,X1] : ((s('type.integer.int',X0) = s('type.integer.int',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) & (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))))),
  inference(nnf_transformation,[],[f43])).
fof(f43,plain,(
  ? [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int',X1) <~> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int',X1) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.integer.int',X6) = s('type.integer.int',X7) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.integer.int',X6) = s('type.integer.int',X7) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))))))),
  file('thm.int_arith.eq_move_all_right','thm.int_arith.eq_move_all_right')).
fof(f262,plain,(
  $false | ($spl0 | $spl3)),
  inference(trivial_inequality_removal,[],[f260])).
fof(f260,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3)),
  inference(superposition,[],[f254,f82])).
fof(f82,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6)))))),
  file('thm.int_arith.eq_move_all_right','thm.integer.INT_ADD_RINV')).
fof(f254,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f130,f127])).
fof(f128,plain,(
  s('type.integer.int',sK0) != s('type.integer.int',sK1) | $spl1),
  inference(cnf_transformation,[],[f128_D])).
fof(f128_D,plain,(
  s('type.integer.int',sK0) != s('type.integer.int',sK1) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f130,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))) | $spl3),
  inference(cnf_transformation,[],[f130_D])).
fof(f130_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f77,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',sK0))))) | s('type.integer.int',sK0) != s('type.integer.int',sK1)),
  inference(cnf_transformation,[],[f57])).
fof(f611,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f610,f128])).
fof(f610,plain,(
  s('type.integer.int',sK0) = s('type.integer.int',sK1) | $spl2),
  inference(forward_demodulation,[],[f587,f81])).
fof(f81,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X6)))),
  file('thm.int_arith.eq_move_all_right','thm.integer.INT_ADD_LID')).
fof(f587,plain,(
  s('type.integer.int',sK1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK0))) | $spl2),
  inference(superposition,[],[f552,f490])).
fof(f490,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) | $spl2),
  inference(superposition,[],[f103,f129])).
fof(f103,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7)))))),
  file('thm.int_arith.eq_move_all_right','thm.integer.int_sub')).
fof(f552,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1)))) )),
  inference(equality_resolution,[],[f109])).
fof(f109,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X0) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2)))) & (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))) <=> s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6,X7,X15] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X15))) <=> s('type.integer.int',X7) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X15))))),
  file('thm.int_arith.eq_move_all_right','thm.integer.INT_EQ_SUB_LADD')).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 34
% Passive clauses: 95
% Generated clauses: 520
% Final active clauses: 25
% Final passive clauses: 39
% Input formulas: 20
% Initial clauses: 49
% 
% Duplicate literals: 43
% Trivial inequalities: 9
% Fw subsumption resolutions: 27
% Fw demodulations: 29
% Bw demodulations: 1
% 
% Simple tautologies: 40
% Equational tautologies: 17
% Forward subsumptions: 239
% 
% Binary resolution: 32
% Factoring: 1
% Forward superposition: 111
% Backward superposition: 137
% Self superposition: 34
% Equality factoring: 26
% Equality resolution: 4
% 
% Split clauses: 21
% Split components: 44
% SAT solver clauses: 40
% SAT solver unit clauses: 5
% SAT solver binary clauses: 25
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 21
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 38
% TWLsolver calls for satisfiability: 16
% 
% Memory used [KB]: 895
% Time elapsed: 0.021 s
% ------------------------------
% ------------------------------
% Success in time 0.023 s
