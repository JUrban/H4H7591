Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f123,plain,(
  $false),
  inference(equality_resolution,[],[f117])).
fof(f117,plain,(
  ( ! [X0] : (s('type.num.num',sK1) != s('type.num.num',X0)) )),
  inference(superposition,[],[f88,f46])).
fof(f46,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.arithmetic.arithmetic_2|49|9_prove_ltb','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f88,plain,(
  ( ! [X0] : (s('type.num.num',sK1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(superposition,[],[f40,f45])).
fof(f45,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.arithmetic.arithmetic_2|49|9_prove_ltb','thm.arithmetic.MULT_CLAUSES|split|0')).
fof(f40,plain,(
  ( ! [X2,X3] : (s('type.num.num',sK1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',sK0))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X2,X3] : s('type.num.num',sK1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',sK0))),s('type.num.num',X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f35])).
fof(f35,plain,(
  ? [X0,X1] : ! [X2,X3] : s('type.num.num',X1) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.num.num',X2)))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1] : ? [X2,X3] : s('type.num.num',X1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.num.num',X2)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ? [X8,X9] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X6))),s('type.num.num',X8)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ? [X8,X9] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num',X6))),s('type.num.num',X8)))),
  file('thm.arithmetic.arithmetic_2|49|9_prove_ltb','thm.arithmetic.arithmetic_2|49|9_prove_ltb')).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 14
% Passive clauses: 29
% Generated clauses: 79
% Final active clauses: 12
% Final passive clauses: 10
% Input formulas: 17
% Initial clauses: 18
% 
% Duplicate literals: 1
% Trivial inequalities: 1
% 
% Simple tautologies: 2
% Equational tautologies: 3
% Forward subsumptions: 42
% 
% Binary resolution: 2
% Forward superposition: 36
% Backward superposition: 12
% Self superposition: 8
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.014 s
% ------------------------------
% ------------------------------
% Success in time 0.016 s
