Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.util_prob
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.util_prob
% SZS output start Proof for thm.util_prob
fof(f3746,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3691,f3441,f302,f307,f32,f50,f473,f475,f305,f31,f52,f48,f350,f60,f63,f61,f74,f30,f49,f51,f47,f3484,f309,f3720])).
fof(f3720,plain,(
  $false | ($spl1 | $spl16)),
  inference(subsumption_resolution,[],[f3719,f33])).
fof(f33,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  p(s(bool,'T_0'))),
  file('thm.util_prob.X_LE_MAX','thm.bool.TRUTH')).
fof(f3719,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl16)),
  inference(forward_demodulation,[],[f3690,f309])).
fof(f3690,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | $spl1),
  inference(resolution,[],[f48,f45])).
fof(f45,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0))))))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0))))))))),
  inference(nnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0)))))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6,X9] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X6),s('type.num.num',X7)))))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X6)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X7))))))),
  file('thm.util_prob.X_LE_MAX','thm.arithmetic.MAX_LE|split|0')).
fof(f309,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))) | $spl16),
  inference(cnf_transformation,[],[f309_D])).
fof(f309_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f3484,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))) | $spl2),
  inference(resolution,[],[f49,f55])).
fof(f55,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f35,f36])).
fof(f36,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.util_prob.X_LE_MAX',aHL_BOOL_CASES)).
fof(f35,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.util_prob.X_LE_MAX',aHL_FALSITY)).
fof(f47,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | $spl0),
  inference(cnf_transformation,[],[f47_D])).
fof(f47_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f51,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | $spl4),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f49,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | $spl2),
  inference(cnf_transformation,[],[f49_D])).
fof(f49_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f30,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f22])).
fof(f22,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))))))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))))))),
  inference(nnf_transformation,[],[f19])).
fof(f19,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1)))))) <~> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1))))))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X0),s('type.num.num',X1)))))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X6),s('type.num.num',X7)))))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X6)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X6),s('type.num.num',X7)))))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X6)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X7))))))),
  file('thm.util_prob.X_LE_MAX','thm.util_prob.X_LE_MAX')).
fof(f74,plain,(
  $false | $spl6),
  inference(resolution,[],[f71,f33])).
fof(f71,plain,(
  ( ! [X2] : (~p(s(bool,X2))) ) | $spl6),
  inference(superposition,[],[f35,f61])).
fof(f61,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(cnf_transformation,[],[f61_D])).
fof(f61_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f63,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl9),
  inference(cnf_transformation,[],[f63_D])).
fof(f63_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f60,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f36])).
fof(f350,plain,(
  $false | ($spl9 | $spl10)),
  inference(trivial_inequality_removal,[],[f345])).
fof(f345,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl9 | $spl10)),
  inference(superposition,[],[f63,f305])).
fof(f48,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | $spl1),
  inference(cnf_transformation,[],[f48_D])).
fof(f48_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f52,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | $spl5),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f31,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f23])).
fof(f305,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl10),
  inference(cnf_transformation,[],[f305_D])).
fof(f305_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f475,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | $spl18),
  inference(cnf_transformation,[],[f475_D])).
fof(f475_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f473,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(duplicate_literal_removal,[],[f421])).
fof(f421,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f235,f36])).
fof(f235,plain,(
  ( ! [X10] : (s(bool,X10) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X10)) ) | $spl5),
  inference(subsumption_resolution,[],[f159,f33])).
fof(f159,plain,(
  ( ! [X10] : (~p(s(bool,'T_0')) | s(bool,X10) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X10)) ) | $spl5),
  inference(superposition,[],[f52,f53])).
fof(f53,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f36,f36])).
fof(f50,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | $spl3),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f32,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f23])).
fof(f307,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))) | $spl12),
  inference(cnf_transformation,[],[f307_D])).
fof(f307_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f302,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(duplicate_literal_removal,[],[f265])).
fof(f265,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(superposition,[],[f234,f36])).
fof(f234,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(subsumption_resolution,[],[f158,f33])).
fof(f158,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X9)) ) | $spl3),
  inference(superposition,[],[f50,f53])).
fof(f3441,plain,(
  $false | ($spl0 | $spl12 | $spl18)),
  inference(subsumption_resolution,[],[f3440,f35])).
fof(f3440,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl12 | $spl18)),
  inference(forward_demodulation,[],[f3439,f307])).
fof(f3439,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | ($spl0 | $spl18)),
  inference(subsumption_resolution,[],[f3438,f35])).
fof(f3438,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | ($spl0 | $spl18)),
  inference(forward_demodulation,[],[f3437,f475])).
fof(f3437,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | $spl0),
  inference(subsumption_resolution,[],[f3404,f33])).
fof(f3404,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK1)))) | $spl0),
  inference(superposition,[],[f43,f89])).
fof(f89,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | $spl0),
  inference(subsumption_resolution,[],[f88,f35])).
fof(f88,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | $spl0),
  inference(superposition,[],[f47,f36])).
fof(f43,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f3691,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | $spl1),
  inference(resolution,[],[f48,f44])).
fof(f44,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.MAX_2'(s('type.num.num',X1),s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f29])).
% SZS output end Proof for thm.util_prob
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 55
% Passive clauses: 509
% Generated clauses: 3651
% Final active clauses: 28
% Final passive clauses: 354
% Input formulas: 9
% Initial clauses: 16
% 
% Duplicate literals: 440
% Trivial inequalities: 34
% Fw subsumption resolutions: 374
% Fw demodulations: 44
% Bw demodulations: 11
% 
% Simple tautologies: 94
% Equational tautologies: 70
% Forward subsumptions: 1609
% 
% Binary resolution: 75
% Forward superposition: 1000
% Backward superposition: 1161
% Self superposition: 192
% Equality factoring: 182
% 
% Split clauses: 281
% Split components: 563
% SAT solver clauses: 495
% SAT solver unit clauses: 67
% SAT solver binary clauses: 163
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 281
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 491
% TWLsolver calls for satisfiability: 26
% 
% Memory used [KB]: 2174
% Time elapsed: 0.108 s
% ------------------------------
% ------------------------------
% Success in time 0.114 s
