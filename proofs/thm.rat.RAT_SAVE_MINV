Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.rat
% (104090)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 724
% Passive clauses: 7514
% Generated clauses: 20666
% Final active clauses: 660
% Final passive clauses: 6169
% Input formulas: 54
% Initial clauses: 193
% 
% Duplicate literals: 829
% Trivial inequalities: 222
% Fw subsumption resolutions: 2259
% Fw demodulations: 349
% Bw demodulations: 61
% 
% Simple tautologies: 292
% Equational tautologies: 80
% Forward subsumptions: 8098
% 
% Binary resolution: 8788
% Factoring: 1367
% Forward superposition: 2664
% Backward superposition: 3541
% Self superposition: 52
% Equality factoring: 52
% Equality resolution: 42
% 
% Split clauses: 686
% Split components: 1379
% SAT solver clauses: 1128
% SAT solver unit clauses: 28
% SAT solver binary clauses: 234
% 
% Sat splits: 686
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1126
% TWLsolver calls for satisfiability: 389
% 
% Memory used [KB]: 8699
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f2423,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2422,f282,f479,f346,f500,f2129,f2139,f2086,f2084,f2013,f2014,f2153,f2156,f1982,f1998,f292,f484,f2174,f260,f467,f1832,f1834,f294,f486,f269,f476,f1965,f1975,f1973,f261,f465,f351,f503])).
fof(f503,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))) = s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl36),
  inference(cnf_transformation,[],[f503_D])).
fof(f503_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))) = s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f351,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))) = s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))) = s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(ennf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))) = s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(flattening,[],[f108])).
fof(f108,plain,(
  ! [X0,X1] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))) = s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6,X7] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X6),s('type.num.num',X7))))) = s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))),
  file('thm.rat.RAT_SAVE_MINV','thm.frac.FRAC_MINV_SAVE')).
fof(f465,plain,(
  s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | $spl1),
  inference(cnf_transformation,[],[f465_D])).
fof(f465_D,plain,(
  s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f261,plain,(
  s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(cnf_transformation,[],[f171])).
fof(f171,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))) & s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',sK11))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK10))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK10,sK11])],[f130])).
fof(f130,plain,(
  ? [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))) & s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(ennf_transformation,[],[f57])).
fof(f57,plain,(
  ~! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))) => s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ~! [X0,X1] : (~s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))) => s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (~s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X6),s('type.num.num',X7))))) => s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X6),s('type.num.num',X7))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (~s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X6),s('type.num.num',X7))))) => s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X6),s('type.num.num',X7))))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X7))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.integer.Num_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  file('thm.rat.RAT_SAVE_MINV','thm.rat.RAT_SAVE_MINV')).
fof(f1973,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl700),
  inference(cnf_transformation,[],[f1973_D])).
fof(f1973_D,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl700),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl700])])).
fof(f1975,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) != s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) | $spl703),
  inference(cnf_transformation,[],[f1975_D])).
fof(f1975_D,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) != s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) <=> ~$spl703),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl703])])).
fof(f1965,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) != s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) | s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl36)),
  inference(superposition,[],[f465,f503])).
fof(f476,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) ) | $spl8),
  inference(cnf_transformation,[],[f476_D])).
fof(f476_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f269,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X15] : s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X15))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X15)))))),
  file('thm.rat.RAT_SAVE_MINV','thm.rat.rat_nmr_def')).
fof(f486,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))))) ) | $spl26),
  inference(cnf_transformation,[],[f486_D])).
fof(f486_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f294,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))))))),
  inference(nnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X16))))))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X16))))),
  file('thm.rat.RAT_SAVE_MINV','thm.rat.RAT_NMREQ|48|_CONG')).
fof(f1834,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X1),s('type.num.num',X2)))))))))) ) | $spl636),
  inference(cnf_transformation,[],[f1834_D])).
fof(f1834_D,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X1),s('type.num.num',X2)))))))))) ) <=> ~$spl636),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl636])])).
fof(f1832,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X1),s('type.num.num',X2)))))))))) ) | ($spl26 | $spl30)),
  inference(superposition,[],[f486,f500])).
fof(f467,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))) | $spl3),
  inference(cnf_transformation,[],[f467_D])).
fof(f467_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f260,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11)))))),
  inference(cnf_transformation,[],[f171])).
fof(f2174,plain,(
  $false | ($spl3 | $spl768)),
  inference(trivial_inequality_removal,[],[f2165])).
fof(f2165,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl3 | $spl768)),
  inference(superposition,[],[f467,f2156])).
fof(f484,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl22),
  inference(cnf_transformation,[],[f484_D])).
fof(f484_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f292,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0)))) )),
  inference(cnf_transformation,[],[f178])).
fof(f178,plain,(
  ! [X0] : ((s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(nnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X17] : (s('type.rat.rat',X17) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X17))))),
  file('thm.rat.RAT_SAVE_MINV','thm.rat.RAT_EQ|48|_NMR')).
fof(f1998,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl714),
  inference(cnf_transformation,[],[f1998_D])).
fof(f1998_D,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl714),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl714])])).
fof(f1982,plain,(
  ( ! [X0] : (s('type.integer.int',sK10) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl22 | $spl700)),
  inference(backward_demodulation,[],[f1973,f484])).
fof(f2156,plain,(
  ( ! [X2] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',X2)))))) ) | $spl768),
  inference(cnf_transformation,[],[f2156_D])).
fof(f2156_D,plain,(
  ( ! [X2] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',X2)))))) ) <=> ~$spl768),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl768])])).
fof(f2153,plain,(
  ( ! [X2] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',X2)))))) ) | ($spl714 | $spl762)),
  inference(trivial_inequality_removal,[],[f2148])).
fof(f2148,plain,(
  ( ! [X2] : (s('type.integer.int',sK10) != s('type.integer.int',sK10) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',X2)))))) ) | ($spl714 | $spl762)),
  inference(superposition,[],[f1998,f2139])).
fof(f2014,plain,(
  ( ! [X2,X1] : (s('type.integer.int',sK10) != s('type.integer.int',X1) | s('type.integer.int',sK10) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X1),s('type.num.num',X2)))))))))) ) | $spl732),
  inference(cnf_transformation,[],[f2014_D])).
fof(f2014_D,plain,(
  ( ! [X2,X1] : (s('type.integer.int',sK10) != s('type.integer.int',X1) | s('type.integer.int',sK10) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X1),s('type.num.num',X2)))))))))) ) <=> ~$spl732),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl732])])).
fof(f2013,plain,(
  ( ! [X2,X1] : (s('type.integer.int',sK10) != s('type.integer.int',X1) | s('type.integer.int',sK10) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X1),s('type.num.num',X2)))))))))) ) | ($spl636 | $spl700)),
  inference(forward_demodulation,[],[f1991,f1973])).
fof(f1991,plain,(
  ( ! [X2,X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X1),s('type.num.num',X2))))))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | ($spl636 | $spl700)),
  inference(backward_demodulation,[],[f1973,f1834])).
fof(f2084,plain,(
  ( ! [X2] : (s('type.integer.int',sK10) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',X2)))))))))) ) | $spl758),
  inference(cnf_transformation,[],[f2084_D])).
fof(f2084_D,plain,(
  ( ! [X2] : (s('type.integer.int',sK10) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',X2)))))))))) ) <=> ~$spl758),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl758])])).
fof(f2086,plain,(
  ( ! [X6] : (s('type.integer.int',sK10) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',X6)))))))))) ) | ($spl700 | $spl732)),
  inference(forward_demodulation,[],[f2079,f1973])).
fof(f2079,plain,(
  ( ! [X6] : (s('type.integer.int',sK10) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X6)))))))))) ) | ($spl700 | $spl732)),
  inference(trivial_inequality_removal,[],[f2075])).
fof(f2075,plain,(
  ( ! [X6] : (s('type.integer.int',sK10) != s('type.integer.int',sK10) | s('type.integer.int',sK10) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num',X6)))))))))) ) | ($spl700 | $spl732)),
  inference(superposition,[],[f2014,f1973])).
fof(f2139,plain,(
  ( ! [X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',X1)))))))) ) | $spl762),
  inference(cnf_transformation,[],[f2139_D])).
fof(f2139_D,plain,(
  ( ! [X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',X1)))))))) ) <=> ~$spl762),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl762])])).
fof(f2129,plain,(
  ( ! [X1] : (s('type.integer.int',sK10) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',X1)))))))) ) | ($spl8 | $spl758)),
  inference(superposition,[],[f2084,f476])).
fof(f500,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1)))))) ) | $spl30),
  inference(cnf_transformation,[],[f500_D])).
fof(f500_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1)))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f346,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X6,X7] : s('type.integer.int',X6) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',X6),s('type.num.num',X7)))))),
  file('thm.rat.RAT_SAVE_MINV','thm.frac.FRAC_NMR_SAVE')).
fof(f479,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) | $spl12),
  inference(cnf_transformation,[],[f479_D])).
fof(f479_D,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f282,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))),
  inference(ennf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) => s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ! [X0] : (~s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) => s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X16] : (~s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X16))) => s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X16))))) = s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X16))))))),
  file('thm.rat.RAT_SAVE_MINV','thm.rat.RAT_MINV_CALCULATE')).
fof(f2422,plain,(
  $false | ($spl12 | $spl30 | $spl701 | $spl703)),
  inference(subsumption_resolution,[],[f2421,f1972])).
fof(f1972,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl701),
  inference(cnf_transformation,[],[f1972_D])).
fof(f1972_D,plain,(
  s('type.integer.int',sK10) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl701),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl701])])).
fof(f2421,plain,(
  s('type.integer.int',sK10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl12 | $spl30 | $spl703)),
  inference(forward_demodulation,[],[f2420,f500])).
fof(f2420,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))) | ($spl12 | $spl703)),
  inference(trivial_inequality_removal,[],[f2417])).
fof(f2417,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.frac_save_2'(s('type.integer.int',sK10),s('type.num.num',sK11))))) | ($spl12 | $spl703)),
  inference(superposition,[],[f1975,f479])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 215
% Passive clauses: 457
% Generated clauses: 2188
% Final active clauses: 191
% Final passive clauses: 216
% Input formulas: 54
% Initial clauses: 193
% 
% Duplicate literals: 65
% Trivial inequalities: 45
% Fw subsumption resolutions: 134
% Fw demodulations: 63
% Bw demodulations: 37
% Condensations: 29
% Global subsumptions: 22
% 
% Simple tautologies: 172
% Equational tautologies: 6
% Forward subsumptions: 676
% 
% Binary resolution: 789
% Factoring: 58
% Forward superposition: 115
% Backward superposition: 151
% Self superposition: 3
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 6
% Split components: 12
% SAT solver clauses: 748
% SAT solver unit clauses: 201
% SAT solver binary clauses: 73
% SAT solver learnt clauses: 46
% SAT solver learnt literals: 11
% 
% Sat splits: 6
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 658
% TWLsolver calls for satisfiability: 1375
% 
% Memory used [KB]: 2686
% Time elapsed: 0.053 s
% ------------------------------
% ------------------------------
% Success in time 0.675 s
