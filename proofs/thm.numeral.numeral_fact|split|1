Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f24931,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f24928,f2253,f281,f18271,f2220,f2224,f2222])).
fof(f2222,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))) | $spl110),
  inference(cnf_transformation,[],[f2222_D])).
fof(f2222_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f2224,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK1('const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))) | $spl113),
  inference(cnf_transformation,[],[f2224_D])).
fof(f2224_D,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK1('const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))) <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f2220,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK1('const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))),
  inference(superposition,[],[f2117,f131])).
fof(f131,plain,(
  ( ! [X0] : (s('type.num.num',sK1(X0)) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(superposition,[],[f53,f60])).
fof(f60,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1])],[f32])).
fof(f32,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X8) | ? [X6] : s('type.num.num',X8) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))),
  file('thm.numeral.numeral_fact|split|1','thm.arithmetic.num_CASES')).
fof(f53,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))),
  file('thm.numeral.numeral_fact|split|1','thm.prim_rec.PRE|split|1')).
fof(f2117,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))))),
  inference(forward_demodulation,[],[f45,f51])).
fof(f51,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))),
  file('thm.numeral.numeral_fact|split|1','thm.arithmetic.NUMERAL_DEF')).
fof(f45,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))))))),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f39])).
fof(f39,plain,(
  ? [X0] : s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0] : s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))))))))),
  file('thm.numeral.numeral_fact|split|1','thm.numeral.numeral_fact|split|1')).
fof(f18271,plain,(
  $false | ($spl111 | $spl113)),
  inference(subsumption_resolution,[],[f18270,f2221])).
fof(f2221,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))) | $spl111),
  inference(cnf_transformation,[],[f2221_D])).
fof(f2221_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))) <=> ~$spl111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl111])])).
fof(f18270,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))) | $spl113),
  inference(trivial_inequality_removal,[],[f18269])).
fof(f18269,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) != s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))) | $spl113),
  inference(superposition,[],[f2224,f320])).
fof(f320,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',sK1(X0)))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(superposition,[],[f57,f60])).
fof(f57,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_fact|split|1','thm.arithmetic.FACT|split|1')).
fof(f281,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl34),
  inference(cnf_transformation,[],[f281_D])).
fof(f281_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2253,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl110),
  inference(forward_demodulation,[],[f2227,f48])).
fof(f48,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f19])).
fof(f19,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_fact|split|1','thm.prim_rec.PRE|split|0')).
fof(f2227,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) | $spl110),
  inference(superposition,[],[f1490,f2222])).
fof(f1490,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(backward_demodulation,[],[f1461,f1258])).
fof(f1258,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f1062,f64])).
fof(f64,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X8] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_fact|split|1','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f1062,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f283,f898])).
fof(f898,plain,(
  ( ! [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f877,f54])).
fof(f54,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_fact|split|1','thm.arithmetic.ADD_|48|')).
fof(f877,plain,(
  ( ! [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f64,f267])).
fof(f267,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f257,f52])).
fof(f52,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))),
  file('thm.numeral.numeral_fact|split|1','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f257,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f56,f52])).
fof(f56,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.numeral.numeral_fact|split|1','thm.arithmetic.BIT|49|')).
fof(f283,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(backward_demodulation,[],[f267,f56])).
fof(f1461,plain,(
  ( ! [X6] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6)))) )),
  inference(superposition,[],[f53,f1258])).
fof(f24928,plain,(
  $false | ($spl34 | $spl110)),
  inference(subsumption_resolution,[],[f24915,f18330])).
fof(f18330,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl110),
  inference(forward_demodulation,[],[f18329,f115])).
fof(f115,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f49,f51])).
fof(f49,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f15])).
fof(f15,axiom,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.numeral.numeral_fact|split|1','thm.arithmetic.FACT|split|0')).
fof(f18329,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.|48|_0'))))) | $spl110),
  inference(forward_demodulation,[],[f18273,f48])).
fof(f18273,plain,(
  s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl110),
  inference(backward_demodulation,[],[f2222,f2117])).
fof(f24915,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl34),
  inference(superposition,[],[f19174,f115])).
fof(f19174,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.FACT_1'(s('type.num.num',X0)))))) ) | $spl34),
  inference(backward_demodulation,[],[f18396,f57])).
fof(f18396,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))) ) | $spl34),
  inference(forward_demodulation,[],[f18340,f52])).
fof(f18340,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))) ) | $spl34),
  inference(superposition,[],[f63,f281])).
fof(f63,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X8] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num',X6)))),
  file('thm.numeral.numeral_fact|split|1','thm.arithmetic.ADD_CLAUSES|split|2')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 282
% Passive clauses: 1918
% Generated clauses: 25352
% Final active clauses: 56
% Final passive clauses: 1309
% Input formulas: 20
% Initial clauses: 21
% 
% Duplicate literals: 171
% Trivial inequalities: 8
% Fw subsumption resolutions: 233
% Fw demodulations: 10515
% Bw demodulations: 176
% 
% Simple tautologies: 28
% Equational tautologies: 16
% Forward subsumptions: 10126
% Fw demodulations to eq. taut.: 137
% 
% Binary resolution: 6
% Forward superposition: 4460
% Backward superposition: 7294
% Self superposition: 81
% Equality factoring: 28
% 
% Split clauses: 2058
% Split components: 4117
% SAT solver clauses: 2306
% SAT solver unit clauses: 2
% SAT solver binary clauses: 47
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 2058
% Sat splitting refutations: 14
% 
% TWLsolver clauses: 2304
% TWLsolver calls for satisfiability: 183
% 
% Memory used [KB]: 14456
% Time elapsed: 0.443 s
% ------------------------------
% ------------------------------
% Success in time 0.45 s
