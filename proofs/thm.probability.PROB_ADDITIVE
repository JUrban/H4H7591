Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.probability
% (108176)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 608
% Passive clauses: 9250
% Generated clauses: 16810
% Final active clauses: 605
% Final passive clauses: 8268
% Input formulas: 59
% Initial clauses: 240
% 
% Duplicate literals: 293
% Trivial inequalities: 55
% Fw subsumption resolutions: 1202
% Fw demodulations: 77
% Bw demodulations: 2
% 
% Simple tautologies: 249
% Equational tautologies: 58
% Forward subsumptions: 5440
% 
% Binary resolution: 11241
% Factoring: 1240
% Forward superposition: 953
% Backward superposition: 1308
% Self superposition: 22
% Equality factoring: 26
% Equality resolution: 18
% 
% Split clauses: 291
% Split components: 583
% SAT solver clauses: 560
% SAT solver unit clauses: 17
% SAT solver binary clauses: 160
% 
% Sat splits: 291
% 
% TWLsolver clauses: 560
% TWLsolver calls for satisfiability: 336
% 
% Memory used [KB]: 8699
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.probability
% (108192)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 410
% Passive clauses: 2801
% Generated clauses: 10509
% Final active clauses: 399
% Final passive clauses: 2358
% Input formulas: 59
% Initial clauses: 240
% 
% Duplicate literals: 173
% Trivial inequalities: 18
% Fw subsumption resolutions: 746
% Fw demodulations: 273
% Bw demodulations: 42
% Condensations: 311
% Global subsumptions: 22
% 
% Simple tautologies: 267
% Equational tautologies: 17
% Forward subsumptions: 2736
% 
% Binary resolution: 3663
% Factoring: 99
% Forward superposition: 1060
% Backward superposition: 1001
% Self superposition: 22
% Equality factoring: 26
% Equality resolution: 3
% 
% Split clauses: 51
% Split components: 102
% SAT solver clauses: 3399
% SAT solver unit clauses: 233
% SAT solver binary clauses: 90
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 10
% 
% Sat splits: 51
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 3311
% TWLsolver calls for satisfiability: 1853
% 
% Memory used [KB]: 13816
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.probability
% (108217)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2576
% Passive clauses: 13157
% Generated clauses: 174320
% Final active clauses: 1489
% Final passive clauses: 3564
% Input formulas: 59
% Initial clauses: 240
% 
% Duplicate literals: 3752
% Trivial inequalities: 127
% Fw subsumption resolutions: 3311
% Fw demodulations: 34033
% Bw demodulations: 1313
% Condensations: 6140
% Global subsumptions: 1154
% 
% Simple tautologies: 218
% Equational tautologies: 5020
% Forward subsumptions: 98651
% Bw demodulations to eq. taut.: 28
% 
% Unit resulting resolution: 88137
% Factoring: 6
% Forward superposition: 13410
% Backward superposition: 7350
% Self superposition: 143
% Equality factoring: 126
% Equality resolution: 6
% 
% Split clauses: 285
% Split components: 575
% SAT solver clauses: 17091
% SAT solver unit clauses: 1224
% SAT solver binary clauses: 7914
% 
% Sat splits: 285
% Sat splitting refutations: 2207
% 
% Memory used [KB]: 84049
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.probability
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.probability
% SZS output start Proof for thm.probability
fof(f4268,plain,(
  $false),
  inference(subsumption_resolution,[],[f1344,f674])).
fof(f674,plain,(
  p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(resolution,[],[f313,f531])).
fof(f531,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ~p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0,X1] : (~p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(ennf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) => p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(flattening,[],[f132])).
fof(f132,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) => p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) => p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))),
  file('thm.probability.PROB_ADDITIVE','thm.probability.PROB_SPACE_ADDITIVE')).
fof(f313,plain,(
  p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(cnf_transformation,[],[f192])).
fof(f192,plain,(
  p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))) & p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) & p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK15),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK15)))) & s(fun(sK12,bool),sK16) = s(fun(sK12,bool),'const.pred_set.UNION_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK15))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK16))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK15)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15,sK16])],[f147])).
fof(f147,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s(fun(X0,bool),X4) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f146])).
fof(f146,plain,(
  ? [X0,X1,X2,X3,X4] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s(fun(X0,bool),X4) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))),
  inference(ennf_transformation,[],[f62])).
fof(f62,plain,(
  ~! [X0,X1,X2,X3,X4] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s(fun(X0,bool),X4) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))),
  inference(flattening,[],[f61])).
fof(f61,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s(fun(X0,bool),X4) = s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X9),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9)))) & s(fun(X6,bool),X10) = s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9)))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X10))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X9))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : ((p(s(bool,'const.probability.prob_space_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X9),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9)))) & s(fun(X6,bool),X10) = s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9)))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X10))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X9))))))),
  file('thm.probability.PROB_ADDITIVE','thm.probability.PROB_ADDITIVE')).
fof(f1344,plain,(
  ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(trivial_inequality_removal,[],[f1343])).
fof(f1343,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK16))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK16))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(forward_demodulation,[],[f1342,f317])).
fof(f317,plain,(
  s(fun(sK12,bool),sK16) = s(fun(sK12,bool),'const.pred_set.UNION_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK15)))),
  inference(cnf_transformation,[],[f192])).
fof(f1342,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK16))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),'const.pred_set.UNION_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK15))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(subsumption_resolution,[],[f1341,f314])).
fof(f314,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))))),
  inference(cnf_transformation,[],[f192])).
fof(f1341,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK16))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),'const.pred_set.UNION_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK15))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(subsumption_resolution,[],[f1340,f315])).
fof(f315,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK15),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))))),
  inference(cnf_transformation,[],[f192])).
fof(f1340,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK16))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),'const.pred_set.UNION_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK15))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK15),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(subsumption_resolution,[],[f1339,f316])).
fof(f316,plain,(
  p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK15))))),
  inference(cnf_transformation,[],[f192])).
fof(f1339,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK16))) != s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),'const.pred_set.UNION_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK15))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(sK12,bool),sK14),s(fun(sK12,bool),sK15)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK15),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(sK12,bool),sK14),s(fun(fun(sK12,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13))))),
  inference(superposition,[],[f318,f319])).
fof(f319,plain,(
  ( ! [X4,X0,X5,X1] : (s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))) )),
  inference(cnf_transformation,[],[f195])).
fof(f195,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X4,X5] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))))) & ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK17(X1,X0)),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),sK18(X1,X0)),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),sK17(X1,X0)),s(fun(X0,bool),sK18(X1,X0))))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),sK17(X1,X0)),s(fun(X0,bool),sK18(X1,X0)))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK17(X1,X0)))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),sK18(X1,X0))))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17,sK18])],[f194])).
fof(f194,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X4,X5] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X4),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X5),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5)))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X5))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X4))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X5))))))) & (? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(rectify,[],[f193])).
fof(f193,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) | ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3))))))) & (? [X2,X3] : (p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) & s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))) | p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1))))))),
  inference(nnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2,X3] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3)))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(flattening,[],[f148])).
fof(f148,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2,X3] : ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) | ~p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) | s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(ennf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0] : ! [X1] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))) <=> ! [X2,X3] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X0,bool),X3),s(fun(fun(X0,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),'const.pred_set.UNION_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X3))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X2))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X0,bool),'type.pair.prod'(fun(fun(X0,bool),bool),fun(fun(X0,bool),'type.realax.real'))),X1),s(fun(X0,bool),X3)))))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X6] : ! [X7] : (p(s(bool,'const.measure.additive_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))) <=> ! [X8,X9] : ((p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.bool.IN_2'(s(fun(X6,bool),X9),s(fun(fun(X6,bool),bool),'const.probability.events_1'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7)))))) & p(s(bool,'const.pred_set.DISJOINT_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9))))) => s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),'const.pred_set.UNION_2'(s(fun(X6,bool),X8),s(fun(X6,bool),X9))))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X8))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(X6,bool),'type.pair.prod'(fun(fun(X6,bool),bool),fun(fun(X6,bool),'type.realax.real'))),X7),s(fun(X6,bool),X9)))))))),
  file('thm.probability.PROB_ADDITIVE','thm.probability.ADDITIVE_PROB')).
fof(f318,plain,(
  s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK16))) != s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK14))),s('type.realax.real','const.probability.prob_2'(s('type.pair.prod'(fun(sK12,bool),'type.pair.prod'(fun(fun(sK12,bool),bool),fun(fun(sK12,bool),'type.realax.real'))),sK13),s(fun(sK12,bool),sK15)))))),
  inference(cnf_transformation,[],[f192])).
% SZS output end Proof for thm.probability
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 289
% Passive clauses: 871
% Generated clauses: 3697
% Final active clauses: 285
% Final passive clauses: 575
% Input formulas: 59
% Initial clauses: 239
% 
% Selected by SInE selection: 58
% SInE iterations: 1
% 
% Duplicate literals: 208
% Trivial inequalities: 33
% Fw subsumption resolutions: 614
% Fw demodulations: 338
% Bw demodulations: 3
% 
% Simple tautologies: 407
% Equational tautologies: 1
% Forward subsumptions: 1400
% 
% Binary resolution: 1567
% Forward superposition: 428
% Backward superposition: 492
% Equality resolution: 5
% 
% Split clauses: 26
% Split components: 52
% SAT solver clauses: 34
% SAT solver unit clauses: 6
% SAT solver binary clauses: 27
% 
% Sat splits: 26
% Sat splitting refutations: 7
% 
% Memory used [KB]: 2814
% Time elapsed: 0.087 s
% ------------------------------
% ------------------------------
% Success in time 11.775 s
