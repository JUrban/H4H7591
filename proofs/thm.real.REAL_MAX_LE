Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.real
% (94457)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 975
% Passive clauses: 9105
% Generated clauses: 27674
% Final active clauses: 794
% Final passive clauses: 6128
% Input formulas: 43
% Initial clauses: 177
% 
% Duplicate literals: 603
% Trivial inequalities: 34
% Fw subsumption resolutions: 2781
% Fw demodulations: 1399
% Bw demodulations: 34
% 
% Simple tautologies: 283
% Equational tautologies: 69
% Forward subsumptions: 12235
% 
% Binary resolution: 11263
% Factoring: 1316
% Forward superposition: 3443
% Backward superposition: 5657
% Self superposition: 40
% Equality factoring: 28
% Equality resolution: 4
% 
% Split clauses: 1085
% Split components: 2186
% SAT solver clauses: 1653
% SAT solver unit clauses: 19
% SAT solver binary clauses: 155
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 5
% 
% Sat splits: 1085
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 1642
% TWLsolver calls for satisfiability: 591
% 
% Memory used [KB]: 10362
% Time elapsed: 0.629 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.real
% (94473)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 392
% Passive clauses: 2629
% Generated clauses: 18975
% Final active clauses: 255
% Final passive clauses: 1493
% Input formulas: 43
% Initial clauses: 177
% 
% Duplicate literals: 448
% Trivial inequalities: 77
% Fw subsumption resolutions: 1425
% Fw demodulations: 1535
% Bw demodulations: 768
% Condensations: 878
% Global subsumptions: 14
% 
% Simple tautologies: 317
% Equational tautologies: 20
% Forward subsumptions: 7185
% 
% Binary resolution: 2258
% Factoring: 82
% Forward superposition: 2579
% Backward superposition: 2476
% Self superposition: 49
% Equality factoring: 30
% Equality resolution: 8
% 
% Split clauses: 729
% Split components: 1500
% SAT solver clauses: 4104
% SAT solver unit clauses: 176
% SAT solver binary clauses: 87
% SAT solver learnt clauses: 36
% SAT solver learnt literals: 33
% 
% Sat splits: 729
% Sat splitting refutations: 44
% 
% TWLsolver clauses: 4037
% TWLsolver calls for satisfiability: 1688
% 
% Memory used [KB]: 12537
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.real
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.real
% SZS output start Proof for thm.real
fof(f41580,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f230,f419,f417,f415,f229,f418,f228,f416,f414,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3633,f3551,f3635,f3555,f3637,f3558,f3639,f3561,f3641,f3564,f3643,f3567,f3645,f3570,f3647,f3573,f3649,f3576,f3651,f3579,f3653,f3582,f3655,f3585,f3657,f3588,f3659,f3591,f3661,f3594,f3663,f3597,f3783,f3784,f3785,f3786,f3787,f3788,f3789,f3790,f3791,f3792,f3793,f3794,f3795,f3796,f3797,f3799,f3801,f3802,f3803,f3804,f3805,f3806,f3807,f3808,f3809,f3810,f3811,f3812,f3813,f3814,f3815,f3816,f3817,f3818,f3819,f3820,f3821,f3822,f3823,f3824,f3825,f3826,f3827,f3828,f3829,f3830,f3831,f3832,f3833,f3834,f3835,f3836,f3837,f3838,f3839,f3840,f3841,f3842,f3843,f3844,f3845,f3846,f3847,f3848,f3849,f3850,f3851,f3852,f3853,f3854,f3855,f3856,f3857,f3859,f5288,f5291,f5289,f5320,f5323,f5321,f5363,f5366,f5364,f5407,f5410,f5408,f5465,f5468,f5466,f5503,f5506,f5504,f5536,f5539,f5537,f5574,f5577,f5575,f6231,f6234,f6232,f6277,f6280,f6278,f6336,f6339,f6337,f6381,f6384,f6382,f6428,f6431,f6429,f6475,f6478,f6476,f6526,f6529,f6527,f6569,f6572,f6570,f6607,f6610,f6608,f6658,f6661,f6659,f6717,f6720,f6718,f6766,f6769,f6767,f6819,f6822,f6820,f6876,f6879,f6877,f6920,f6923,f6921,f6952,f6955,f6953,f6987,f6990,f6988,f7046,f7199,f7047,f7200,f7048,f7201,f7049,f7202,f7050,f7203,f7051,f7204,f7052,f7205,f7053,f7206,f7054,f7207,f7517,f7519,f7520,f7521,f7522,f7523,f7524,f7525,f7526,f7675,f7676,f7677,f7678,f7679,f7680,f7681,f7682,f7684,f7686,f7688,f7690,f7692,f7696,f7700,f7702,f7705,f7708,f7710,f7744,f7750,f7755,f7758,f7829,f8166,f8167,f8183,f8195,f8198,f8199,f8200,f8201,f8202,f8203,f8204,f8205,f8206,f8207,f8208,f8209,f8210,f8211,f8212,f8213,f8214,f8216,f8218,f8220,f8232,f8235,f8238,f8241,f8243,f8250,f8258,f8262,f8266,f10057,f10058,f10059,f10060,f10061,f10062,f10063,f10064,f10065,f10066,f10067,f10068,f10069,f10070,f10071,f10072,f10073,f10074,f10075,f10076,f10077,f10078,f10079,f10080,f10081,f10082,f10083,f10084,f10085,f10086,f10087,f10088,f10089,f10090,f10091,f10092,f10093,f10094,f10095,f10096,f10097,f10098,f10099,f10100,f10101,f10102,f10103,f10104,f10105,f10106,f10107,f10108,f13471,f13590,f13472,f13592,f13473,f13594,f13476,f13596,f13477,f13598,f13479,f13600,f13481,f13602,f13485,f13604,f13490,f13605,f13491,f13606,f13492,f13608,f13493,f13610,f13494,f13611,f13495,f13612,f13496,f13614,f13498,f13616,f13500,f13618,f13501,f13620,f13502,f13622,f13504,f13624,f13505,f13626,f13506,f13628,f13507,f13630,f13509,f13632,f13510,f13633,f13511,f13634,f13515,f13635,f13516,f13636,f13518,f13637,f13519,f13639,f13521,f13641,f13523,f13643,f13524,f13644,f13526,f13646,f13527,f13648,f13684,f13687,f13685,f13745,f13748,f13746,f13809,f13812,f13810,f13868,f13871,f13869,f13906,f13907,f13914,f13911,f13908,f13909,f13917,f13910,f13919,f13912,f13916,f13940,f13941,f13953,f13951,f18580,f18581,f18582,f18583,f18584,f18585,f18586,f18587,f18588,f18589,f18590,f18591,f18592,f18593,f18594,f18595,f18596,f18597,f18598,f18599,f18600,f18601,f18602,f18603,f18604,f18605,f18606,f18607,f18608,f18609,f18610,f18611,f18612,f18613,f18614,f18615,f18616,f18617,f18618,f18619,f18620,f18621,f18622,f18623,f18624,f18625,f18626,f18627,f18628,f18629,f18630,f18631,f18632,f18633,f18634,f18635,f18636,f18637,f18638,f18639,f18640,f18641,f18642,f18643,f18644,f18645,f18646,f19229,f19230,f19231,f19232,f19233,f19234,f19235,f19236,f19237,f19238,f19239,f19240,f19241,f19242,f19243,f19244,f19245,f19246,f19247,f19248,f19249,f19250,f19251,f19252,f19253,f19254,f19255,f19256,f19257,f19258,f19259,f19260,f19261,f19262,f19263,f19264,f19265,f19266,f19267,f19268,f19269,f19270,f19271,f19272,f19273,f19275,f19276,f19277,f19278,f19279,f19280,f19281,f19282,f19283,f19284,f19285,f19286,f19287,f19288,f19289,f19290,f19291,f19292,f19293,f19294,f19295,f19296,f19297,f19298,f19299,f19300,f19301,f19302,f19303,f19304,f19305,f19306,f19307,f19308,f19309,f19310,f19311,f19312,f19314,f19315,f19316,f6233,f19313,f19328,f19694,f19695,f19711,f19723,f19726,f19727,f19728,f19729,f19730,f19731,f19732,f19735,f19736,f19738,f19740,f19741,f19742,f19744,f19745,f19747,f19748,f19749,f19751,f19752,f19753,f19755,f19756,f19758,f19759,f19760,f19762,f19764,f19765,f19766,f19768,f19770,f19772,f19774,f19775,f19776,f19778,f19780,f19781,f19782,f19783,f19784,f19801,f19802,f19803,f19805,f19806,f19808,f19809,f19810,f19811,f19812,f19813,f19814,f19815,f19816,f19818,f19819,f19821,f19822,f19823,f19824,f19825,f19826,f19830,f19832,f19834,f19836,f19837,f19839,f19840,f19842,f19843,f19845,f19846,f19847,f19848,f19849,f19850,f19851,f19852,f19853,f19855,f19856,f19857,f19858,f19859,f19860,f19877,f19880,f19882,f19884,f19886,f19889,f19892,f19895,f19897,f19899,f19902,f19905,f19907,f19910,f19913,f19916,f19919,f19921,f19949,f19951,f19954,f19956,f19958,f19960,f19962,f19964,f19968,f19970,f19972,f19984,f19992,f19996,f20000,f20058,f20060,f20062,f20064,f20066,f20068,f20070,f20073,f20075,f20076,f20077,f20079,f20080,f20085,f20090,f20095,f20097,f20105,f20107,f20110,f20112,f17338,f20121,f17322,f20122,f17310,f20123,f17301,f20124,f15290,f20125,f15285,f20126,f15227,f20128,f13542,f20130,f13541,f20132,f13540,f20134,f13539,f20136,f13538,f20138,f13537,f20140,f13536,f20142,f13535,f20144,f13534,f20145,f13533,f20146,f13532,f20147,f13531,f20148,f13530,f20149,f13529,f20150,f13528,f20151,f13525,f20153,f13522,f20154,f13520,f20156,f13517,f20158,f13514,f20159,f13513,f20160,f13512,f20162,f13508,f20164,f13503,f20166,f13499,f20167,f13497,f20169,f13489,f20170,f13488,f20171,f13487,f20172,f13486,f20173,f13484,f20175,f13483,f20177,f13482,f20178,f13480,f20180,f13478,f20182,f13475,f20184,f13474,f20186,f13470,f20187,f13469,f20188,f13468,f20190,f7198,f20191,f20193,f20196,f20199,f20201,f20203,f20205,f20207,f20209,f20211,f20213,f20194,f20215,f20217,f20197,f20218,f20219,f20220,f20221,f20222,f20223,f20224,f20225,f20226,f20227,f20228,f20229,f20230,f20231,f20232,f20233,f20234,f20235,f20236,f20237,f20238,f20239,f20240,f20241,f20242,f20243,f20244,f20245,f20246,f20247,f20248,f20249,f20250,f20251,f20252,f20253,f20254,f20255,f20256,f20257,f20258,f20259,f20260,f20545,f20740,f20747,f20760,f20761,f20762,f20763,f20764,f20766,f20767,f35791,f35794,f35792,f35919,f35922,f35920,f36045,f36048,f36046,f36160,f36163,f36161,f36296,f36299,f36297,f36421,f36424,f36422,f36553,f36556,f36554,f36690,f36693,f36691,f36831,f36834,f36832,f36965,f36968,f36966,f37107,f37110,f37108,f37244,f37247,f3552,f37245,f41556,f41573])).
fof(f41573,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(subsumption_resolution,[],[f41572,f420])).
fof(f420,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f234,f231])).
fof(f231,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.real.REAL_MAX_LE',aHL_TRUTH)).
fof(f234,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f19])).
fof(f19,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.real.REAL_MAX_LE','thm.bool.NOT_CLAUSES|split|1')).
fof(f41572,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl3 | $spl92)),
  inference(forward_demodulation,[],[f41571,f20524])).
fof(f20524,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f420,f417,f282])).
fof(f282,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X9,X10] : ((p(s(bool,X9)) => p(s(bool,X10))) => ((p(s(bool,X10)) => p(s(bool,X9))) => s(bool,X9) = s(bool,X10)))),
  file('thm.real.REAL_MAX_LE','thm.bool.IMP_ANTISYM_AX')).
fof(f41571,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f41538,f231])).
fof(f41538,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | ($spl0 | $spl92)),
  inference(superposition,[],[f22568,f22570])).
fof(f22570,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f8850])).
fof(f8850,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f285])).
fof(f285,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f123])).
fof(f22569,plain,(
  s('type.realax.real',sK14) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl92),
  inference(forward_demodulation,[],[f22491,f276])).
fof(f276,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f76])).
fof(f76,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X12] : ! [X9,X10] : s(X12,X9) = s(X12,'const.bool.COND_3'(s(bool,'T_0'),s(X12,X9),s(X12,X10)))),
  file('thm.real.REAL_MAX_LE','thm.bool.COND_CLAUSES|split|0')).
fof(f22491,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl92),
  inference(superposition,[],[f280,f7198])).
fof(f280,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X1),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1] : s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s('type.realax.real',X1),s('type.realax.real',X0)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X7,X8] : s('type.realax.real','const.real.max_2'(s('type.realax.real',X7),s('type.realax.real',X8))) = s('type.realax.real','const.bool.COND_3'(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s('type.realax.real',X8),s('type.realax.real',X7)))),
  file('thm.real.REAL_MAX_LE','thm.real.max_def')).
fof(f22568,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',X0))))) ) | $spl92),
  inference(subsumption_resolution,[],[f22490,f231])).
fof(f22490,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',X0))))) ) | $spl92),
  inference(superposition,[],[f324,f7198])).
fof(f324,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X2))))) )),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X2)))))),
  inference(flattening,[],[f131])).
fof(f131,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X2)))))),
  inference(ennf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X2))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X2)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X7,X8,X6] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X8)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X8),s('type.realax.real',X6))))) => p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6)))))),
  file('thm.real.REAL_MAX_LE','thm.real.REAL_LE_TRANS')).
fof(f41556,plain,(
  $false | ($spl0 | $spl3 | $spl92)),
  inference(subsumption_resolution,[],[f41555,f420])).
fof(f41555,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl3 | $spl92)),
  inference(forward_demodulation,[],[f41554,f20524])).
fof(f41554,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | ($spl0 | $spl92)),
  inference(forward_demodulation,[],[f41553,f22661])).
fof(f22661,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f11791])).
fof(f11791,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.max_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(forward_demodulation,[],[f11706,f276])).
fof(f11706,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl0),
  inference(superposition,[],[f280,f8850])).
fof(f41553,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))))) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f41552,f231])).
fof(f41552,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))))) | ($spl0 | $spl92)),
  inference(forward_demodulation,[],[f41531,f22570])).
fof(f41531,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))))) | ($spl0 | $spl92)),
  inference(superposition,[],[f22568,f22661])).
fof(f37245,plain,(
  ( ! [X2,X1] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X2))) ) | $spl328),
  inference(cnf_transformation,[],[f37245_D])).
fof(f37245_D,plain,(
  ( ! [X2,X1] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X2))) ) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f3552,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f3552_D])).
fof(f3552_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f37247,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f37246])).
fof(f37246,plain,(
  ( ! [X28,X26,X29,X27] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X28,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f37226,f748])).
fof(f748,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f743,f420])).
fof(f743,plain,(
  ( ! [X4,X5] : (p(s(bool,'F_0')) | p(s(bool,X5)) | s(bool,X4) = s(bool,X5) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f282,f239])).
fof(f239,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.real.REAL_MAX_LE',aHL_BOOL_CASES)).
fof(f37226,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X28,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22728,f688])).
fof(f688,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f239,f239])).
fof(f22728,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X45))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f13429])).
fof(f13429,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(subsumption_resolution,[],[f13422,f231])).
fof(f13422,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f1288,f8850])).
fof(f1288,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X16)) | ~p(s(bool,X15)) | p(s(bool,X17)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X17,X16)) )),
  inference(superposition,[],[f402,f277])).
fof(f277,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f78])).
fof(f78,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X12] : ! [X9,X10] : s(X12,X10) = s(X12,'const.bool.COND_3'(s(bool,'F_0'),s(X12,X9),s(X12,X10)))),
  file('thm.real.REAL_MAX_LE','thm.bool.COND_CLAUSES|split|1')).
fof(f402,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f227])).
fof(f227,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f226])).
fof(f226,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP11(X2,X0,X1))),
  inference(definition_folding,[],[f133,f150,f149])).
fof(f149,plain,(
  ! [X2,X0,X1] : (sP10(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f150,plain,(
  ! [X2,X0,X1] : (sP11(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f133,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f106])).
fof(f106,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X15,X16,X17] : ((p(s(bool,X17)) <=> (p(s(bool,X16)) => p(s(bool,X15)))) <=> ((p(s(bool,X17)) | p(s(bool,X16))) & (p(s(bool,X17)) | ~p(s(bool,X15))) & (~p(s(bool,X16)) | p(s(bool,X15)) | ~p(s(bool,X17)))))),
  file('thm.real.REAL_MAX_LE','thm.sat.sat_27_prove_ltb')).
fof(f37244,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f37243])).
fof(f37243,plain,(
  ( ! [X24,X23,X25,X22] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')),X24,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f37225,f748])).
fof(f37225,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')),X24,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22728,f688])).
fof(f37108,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) ) | $spl326),
  inference(cnf_transformation,[],[f37108_D])).
fof(f37108_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) ) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f37110,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f37109])).
fof(f37109,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,X27)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X27,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,'T_0'))) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f37086,f748])).
fof(f37086,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | p(s(bool,X27)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X27,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,'T_0'))) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22727,f688])).
fof(f22727,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X45)) | p(s(bool,X44)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X44,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X45)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f13393])).
fof(f13393,plain,(
  ( ! [X45,X46,X44] : (p(s(bool,X44)) | ~p(s(bool,X45)) | ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X44,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X45)))) ) | $spl0),
  inference(subsumption_resolution,[],[f13382,f231])).
fof(f13382,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | p(s(bool,X44)) | ~p(s(bool,X45)) | ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X44,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X45)))) ) | $spl0),
  inference(superposition,[],[f1240,f8850])).
fof(f1240,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X17)) | p(s(bool,X16)) | ~p(s(bool,X15)) | ~sP10(X17,X16,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)))) )),
  inference(superposition,[],[f395,f277])).
fof(f395,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP10(X0,X1,X2)))),
  inference(rectify,[],[f224])).
fof(f224,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(flattening,[],[f223])).
fof(f223,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(nnf_transformation,[],[f149])).
fof(f37107,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f37106])).
fof(f37106,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,X23)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X23,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0'))) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f37085,f748])).
fof(f37085,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | p(s(bool,X23)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X23,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0'))) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22727,f688])).
fof(f36966,plain,(
  ( ! [X2,X1] : (~sP7(X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0'))) | p(s(bool,X1))) ) | $spl324),
  inference(cnf_transformation,[],[f36966_D])).
fof(f36966_D,plain,(
  ( ! [X2,X1] : (~sP7(X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0'))) | p(s(bool,X1))) ) <=> ~$spl324),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl324])])).
fof(f36968,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP7(X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0'))) | p(s(bool,X1))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36967])).
fof(f36967,plain,(
  ( ! [X28,X26,X29,X27] : (~sP7(X27,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,'T_0'))) | p(s(bool,X27)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36948,f748])).
fof(f36948,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | ~sP7(X27,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,'T_0'))) | p(s(bool,X27)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22726,f688])).
fof(f22726,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | ~sP7(X45,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44))) | p(s(bool,X45))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f13221])).
fof(f13221,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP7(X45,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)))) ) | $spl0),
  inference(subsumption_resolution,[],[f13213,f231])).
fof(f13213,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP7(X45,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)))) ) | $spl0),
  inference(superposition,[],[f1063,f8850])).
fof(f1063,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X16)) | ~p(s(bool,X15)) | p(s(bool,X17)) | ~sP7(X17,X16,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)))) )),
  inference(superposition,[],[f370,f277])).
fof(f370,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(flattening,[],[f210])).
fof(f210,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) | ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & ((~p(s(bool,X1)) | ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> sP7(X2,X0,X1))),
  inference(definition_folding,[],[f103,f144,f143])).
fof(f143,plain,(
  ! [X0,X1,X2] : (sP6(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f144,plain,(
  ! [X2,X0,X1] : (sP7(X2,X0,X1) <=> (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f103,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X15,X16,X17] : ((p(s(bool,X17)) <=> (p(s(bool,X16)) & p(s(bool,X15)))) <=> ((p(s(bool,X17)) | ~p(s(bool,X16)) | ~p(s(bool,X15))) & (p(s(bool,X16)) | ~p(s(bool,X17))) & (p(s(bool,X15)) | ~p(s(bool,X17)))))),
  file('thm.real.REAL_MAX_LE','thm.sat.sat_23_prove_ltb')).
fof(f36965,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP7(X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0'))) | p(s(bool,X1))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36964])).
fof(f36964,plain,(
  ( ! [X24,X23,X25,X22] : (~sP7(X23,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0'))) | p(s(bool,X23)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36947,f748])).
fof(f36947,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | ~sP7(X23,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0'))) | p(s(bool,X23)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22726,f688])).
fof(f36832,plain,(
  ( ! [X2,X1] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) | $spl322),
  inference(cnf_transformation,[],[f36832_D])).
fof(f36832_D,plain,(
  ( ! [X2,X1] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) <=> ~$spl322),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl322])])).
fof(f36834,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36833])).
fof(f36833,plain,(
  ( ! [X28,X26,X29,X27] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36810,f748])).
fof(f36810,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22725,f688])).
fof(f22725,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45) | p(s(bool,X45))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f13191])).
fof(f13191,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45)) ) | $spl0),
  inference(subsumption_resolution,[],[f13180,f231])).
fof(f13180,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45)) ) | $spl0),
  inference(superposition,[],[f1027,f8850])).
fof(f1027,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X16)) | ~p(s(bool,X15)) | p(s(bool,X17)) | ~sP6(X16,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X17)) )),
  inference(superposition,[],[f361,f277])).
fof(f361,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP6(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(flattening,[],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(nnf_transformation,[],[f143])).
fof(f36831,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36830])).
fof(f36830,plain,(
  ( ! [X24,X23,X25,X22] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36809,f748])).
fof(f36809,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22725,f688])).
fof(f36691,plain,(
  ( ! [X2,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) | $spl320),
  inference(cnf_transformation,[],[f36691_D])).
fof(f36691_D,plain,(
  ( ! [X2,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f36693,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36692])).
fof(f36692,plain,(
  ( ! [X28,X26,X29,X27] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36669,f748])).
fof(f36669,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22724,f688])).
fof(f22724,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45) | p(s(bool,X45))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f13158])).
fof(f13158,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45)) ) | $spl0),
  inference(subsumption_resolution,[],[f13147,f231])).
fof(f13147,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45)) ) | $spl0),
  inference(superposition,[],[f972,f8850])).
fof(f972,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X16)) | ~p(s(bool,X15)) | p(s(bool,X17)) | ~sP3(X16,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X17)) )),
  inference(superposition,[],[f342,f277])).
fof(f342,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP3(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f201])).
fof(f201,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f200])).
fof(f200,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(flattening,[],[f199])).
fof(f199,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X1,X0,X2] : (sP3(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f36690,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36689])).
fof(f36689,plain,(
  ( ! [X24,X23,X25,X22] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36668,f748])).
fof(f36668,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22724,f688])).
fof(f36554,plain,(
  ( ! [X2,X1] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) | $spl318),
  inference(cnf_transformation,[],[f36554_D])).
fof(f36554_D,plain,(
  ( ! [X2,X1] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f36556,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36555])).
fof(f36555,plain,(
  ( ! [X28,X26,X29,X27] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36530,f748])).
fof(f36530,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22723,f688])).
fof(f22723,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45) | p(s(bool,X45))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f13119])).
fof(f13119,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45)) ) | $spl0),
  inference(subsumption_resolution,[],[f13108,f231])).
fof(f13108,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X46),s(bool,X44)),X45)) ) | $spl0),
  inference(superposition,[],[f947,f8850])).
fof(f947,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X16)) | ~p(s(bool,X15)) | p(s(bool,X17)) | ~sP4(X16,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X17)) )),
  inference(superposition,[],[f338,f277])).
fof(f338,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f197])).
fof(f197,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f196])).
fof(f196,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f36553,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36552])).
fof(f36552,plain,(
  ( ! [X24,X23,X25,X22] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36529,f748])).
fof(f36529,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'T_0')),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22723,f688])).
fof(f36422,plain,(
  ( ! [X2,X1] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X2))) ) | $spl316),
  inference(cnf_transformation,[],[f36422_D])).
fof(f36422_D,plain,(
  ( ! [X2,X1] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X2))) ) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f36424,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36423])).
fof(f36423,plain,(
  ( ! [X28,X26,X29,X27] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X28,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36402,f748])).
fof(f36402,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X28,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22686,f688])).
fof(f22686,plain,(
  ( ! [X92,X93,X91] : (~p(s(bool,X91)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X93)),X92,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X92))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f11835])).
fof(f11835,plain,(
  ( ! [X92,X93,X91] : (~p(s(bool,X91)) | p(s(bool,X92)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X93)),X92,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(subsumption_resolution,[],[f11762,f231])).
fof(f11762,plain,(
  ( ! [X92,X93,X91] : (~p(s(bool,'T_0')) | ~p(s(bool,X91)) | p(s(bool,X92)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X93)),X92,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f1287,f8850])).
fof(f1287,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X12)) | ~p(s(bool,X10)) | p(s(bool,X13)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X13,X12)) )),
  inference(superposition,[],[f402,f276])).
fof(f36421,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36420])).
fof(f36420,plain,(
  ( ! [X24,X23,X25,X22] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),X24,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36401,f748])).
fof(f36401,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),X24,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22686,f688])).
fof(f36297,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) ) | $spl314),
  inference(cnf_transformation,[],[f36297_D])).
fof(f36297_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) ) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f36299,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36298])).
fof(f36298,plain,(
  ( ! [X28,X26,X29,X27] : (p(s(bool,X27)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X27,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X28))) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36275,f748])).
fof(f36275,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | p(s(bool,X27)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X27,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X28))) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22685,f688])).
fof(f22685,plain,(
  ( ! [X90,X88,X89] : (~p(s(bool,X89)) | p(s(bool,X88)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X88,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X89),s(bool,X90)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f11834])).
fof(f11834,plain,(
  ( ! [X90,X88,X89] : (p(s(bool,X88)) | ~p(s(bool,X89)) | ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X88,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X89),s(bool,X90)))) ) | $spl0),
  inference(subsumption_resolution,[],[f11761,f231])).
fof(f11761,plain,(
  ( ! [X90,X88,X89] : (~p(s(bool,'T_0')) | p(s(bool,X88)) | ~p(s(bool,X89)) | ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X88,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X89),s(bool,X90)))) ) | $spl0),
  inference(superposition,[],[f1239,f8850])).
fof(f1239,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X13)) | p(s(bool,X12)) | ~p(s(bool,X10)) | ~sP10(X13,X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f395,f276])).
fof(f36296,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36295])).
fof(f36295,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,X23)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X23,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24))) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36274,f748])).
fof(f36274,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | p(s(bool,X23)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X23,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24))) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22685,f688])).
fof(f36161,plain,(
  ( ! [X2,X1] : (~sP7(X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2))) | p(s(bool,X1))) ) | $spl312),
  inference(cnf_transformation,[],[f36161_D])).
fof(f36161_D,plain,(
  ( ! [X2,X1] : (~sP7(X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2))) | p(s(bool,X1))) ) <=> ~$spl312),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl312])])).
fof(f36163,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP7(X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2))) | p(s(bool,X1))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36162])).
fof(f36162,plain,(
  ( ! [X28,X26,X29,X27] : (~sP7(X27,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X28))) | p(s(bool,X27)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36143,f748])).
fof(f36143,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | ~sP7(X27,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X28))) | p(s(bool,X27)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22684,f688])).
fof(f22684,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,X79)) | ~sP7(X80,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X81))) | p(s(bool,X80))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f11829])).
fof(f11829,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,X79)) | p(s(bool,X80)) | ~sP7(X80,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X81)))) ) | $spl0),
  inference(subsumption_resolution,[],[f11758,f231])).
fof(f11758,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,'T_0')) | ~p(s(bool,X79)) | p(s(bool,X80)) | ~sP7(X80,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X81)))) ) | $spl0),
  inference(superposition,[],[f1062,f8850])).
fof(f1062,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X12)) | ~p(s(bool,X10)) | p(s(bool,X13)) | ~sP7(X13,X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f370,f276])).
fof(f36160,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP7(X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2))) | p(s(bool,X1))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36159])).
fof(f36159,plain,(
  ( ! [X24,X23,X25,X22] : (~sP7(X23,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24))) | p(s(bool,X23)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36142,f748])).
fof(f36142,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | ~sP7(X23,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24))) | p(s(bool,X23)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22684,f688])).
fof(f36046,plain,(
  ( ! [X2,X1] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) | $spl310),
  inference(cnf_transformation,[],[f36046_D])).
fof(f36046_D,plain,(
  ( ! [X2,X1] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f36048,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36047])).
fof(f36047,plain,(
  ( ! [X28,X26,X29,X27] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36024,f748])).
fof(f36024,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22683,f688])).
fof(f22683,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,X76)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X76),s(bool,X78)),X77) | p(s(bool,X77))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f11828])).
fof(f11828,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,X76)) | p(s(bool,X77)) | ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X76),s(bool,X78)),X77)) ) | $spl0),
  inference(subsumption_resolution,[],[f11757,f231])).
fof(f11757,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,'T_0')) | ~p(s(bool,X76)) | p(s(bool,X77)) | ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X76),s(bool,X78)),X77)) ) | $spl0),
  inference(superposition,[],[f1026,f8850])).
fof(f1026,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X12)) | ~p(s(bool,X10)) | p(s(bool,X13)) | ~sP6(X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X13)) )),
  inference(superposition,[],[f361,f276])).
fof(f36045,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f36044])).
fof(f36044,plain,(
  ( ! [X24,X23,X25,X22] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f36023,f748])).
fof(f36023,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22683,f688])).
fof(f35920,plain,(
  ( ! [X2,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) | $spl308),
  inference(cnf_transformation,[],[f35920_D])).
fof(f35920_D,plain,(
  ( ! [X2,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f35922,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f35921])).
fof(f35921,plain,(
  ( ! [X28,X26,X29,X27] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f35898,f748])).
fof(f35898,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22682,f688])).
fof(f22682,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,X73)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75)),X74) | p(s(bool,X74))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f11827])).
fof(f11827,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,X73)) | p(s(bool,X74)) | ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75)),X74)) ) | $spl0),
  inference(subsumption_resolution,[],[f11756,f231])).
fof(f11756,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75)),X74)) ) | $spl0),
  inference(superposition,[],[f971,f8850])).
fof(f971,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X12)) | ~p(s(bool,X10)) | p(s(bool,X13)) | ~sP3(X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X13)) )),
  inference(superposition,[],[f342,f276])).
fof(f35919,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f35918])).
fof(f35918,plain,(
  ( ! [X24,X23,X25,X22] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f35897,f748])).
fof(f35897,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22682,f688])).
fof(f35792,plain,(
  ( ! [X2,X1] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) | $spl306),
  inference(cnf_transformation,[],[f35792_D])).
fof(f35792_D,plain,(
  ( ! [X2,X1] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f35794,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f35793])).
fof(f35793,plain,(
  ( ! [X28,X26,X29,X27] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f35768,f748])).
fof(f35768,plain,(
  ( ! [X28,X26,X29,X27] : (~p(s(bool,X26)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X28) | p(s(bool,X28)) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22681,f688])).
fof(f22681,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,X70)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71) | p(s(bool,X71))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f22569,f11826])).
fof(f11826,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,X70)) | p(s(bool,X71)) | ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71)) ) | $spl0),
  inference(subsumption_resolution,[],[f11755,f231])).
fof(f11755,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,'T_0')) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71)) ) | $spl0),
  inference(superposition,[],[f946,f8850])).
fof(f946,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X12)) | ~p(s(bool,X10)) | p(s(bool,X13)) | ~sP4(X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X13)) )),
  inference(superposition,[],[f338,f276])).
fof(f35791,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2) | p(s(bool,X2))) ) | ($spl0 | $spl92)),
  inference(condensation,[],[f35790])).
fof(f35790,plain,(
  ( ! [X24,X23,X25,X22] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(subsumption_resolution,[],[f35767,f748])).
fof(f35767,plain,(
  ( ! [X24,X23,X25,X22] : (~p(s(bool,X22)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),X24) | p(s(bool,X24)) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl0 | $spl92)),
  inference(superposition,[],[f22681,f688])).
fof(f20767,plain,(
  $false | ($spl3 | $spl119)),
  inference(subsumption_resolution,[],[f20524,f13710])).
fof(f13710,plain,(
  s(bool,'F_0') != s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl119),
  inference(unit_resulting_resolution,[],[f231,f13596,f351])).
fof(f351,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f204])).
fof(f204,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP5(X2,X1,X0)) & (~sP5(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP5(X2,X1,X0))),
  inference(definition_folding,[],[f101,f141,f140,f139,f138])).
fof(f138,plain,(
  ! [X0,X1,X2] : (sP2(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f141,plain,(
  ! [X2,X1,X0] : (sP5(X2,X1,X0) <=> (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f101,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X15,X16,X17] : ((p(s(bool,X17)) <=> s(bool,X15) = s(bool,X16)) <=> ((p(s(bool,X17)) | p(s(bool,X16)) | p(s(bool,X15))) & (p(s(bool,X17)) | ~p(s(bool,X15)) | ~p(s(bool,X16))) & (p(s(bool,X16)) | ~p(s(bool,X15)) | ~p(s(bool,X17))) & (p(s(bool,X15)) | ~p(s(bool,X16)) | ~p(s(bool,X17)))))),
  file('thm.real.REAL_MAX_LE','thm.sat.sat_2|49|_prove_ltb')).
fof(f20766,plain,(
  $false | ($spl3 | $spl119)),
  inference(subsumption_resolution,[],[f20526,f13710])).
fof(f20526,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f420,f417,f282])).
fof(f20764,plain,(
  $false | ($spl3 | $spl119)),
  inference(subsumption_resolution,[],[f20538,f431])).
fof(f431,plain,(
  ( ! [X0,X1] : (sP4(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f420,f340])).
fof(f340,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f198])).
fof(f20538,plain,(
  ~sP4('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl3 | $spl119)),
  inference(unit_resulting_resolution,[],[f442,f438,f13596,f417,f336])).
fof(f336,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | p(s(bool,X1)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f195])).
fof(f195,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | (sP2(X2,X1,X0) & sP3(X1,X2,X0) & sP4(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP2(X2,X1,X0) | ~sP3(X1,X2,X0) | ~sP4(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f194])).
fof(f194,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP5(X2,X1,X0)))),
  inference(flattening,[],[f193])).
fof(f193,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP5(X2,X1,X0)))),
  inference(nnf_transformation,[],[f141])).
fof(f438,plain,(
  ( ! [X0,X1] : (sP3(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f420,f344])).
fof(f344,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f201])).
fof(f442,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f347])).
fof(f347,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f203])).
fof(f203,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(flattening,[],[f202])).
fof(f202,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(nnf_transformation,[],[f138])).
fof(f20763,plain,(
  $false | ($spl3 | $spl119)),
  inference(subsumption_resolution,[],[f20539,f13596])).
fof(f20539,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f442,f438,f431,f417,f336])).
fof(f20762,plain,(
  $false | ($spl3 | $spl119)),
  inference(subsumption_resolution,[],[f20541,f13596])).
fof(f20541,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f442,f435,f431,f417,f336])).
fof(f435,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f343])).
fof(f343,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f201])).
fof(f20761,plain,(
  $false | ($spl3 | $spl119)),
  inference(subsumption_resolution,[],[f20543,f435])).
fof(f20543,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') | ($spl3 | $spl119)),
  inference(unit_resulting_resolution,[],[f442,f13596,f431,f417,f336])).
fof(f20760,plain,(
  $false | ($spl3 | $spl119)),
  inference(subsumption_resolution,[],[f20544,f442])).
fof(f20544,plain,(
  ~sP2('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl3 | $spl119)),
  inference(unit_resulting_resolution,[],[f438,f13596,f431,f417,f336])).
fof(f20747,plain,(
  $false | ($spl3 | $spl119 | $spl121)),
  inference(subsumption_resolution,[],[f20594,f13710])).
fof(f20594,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl3 | $spl121)),
  inference(unit_resulting_resolution,[],[f13598,f417,f350])).
fof(f350,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f204])).
fof(f20740,plain,(
  $false | ($spl3 | $spl119)),
  inference(subsumption_resolution,[],[f20708,f13710])).
fof(f20708,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl3),
  inference(unit_resulting_resolution,[],[f473,f417,f748])).
fof(f473,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f420,f249])).
fof(f249,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.real.REAL_MAX_LE','thm.bool.EQ_CLAUSES|split|0')).
fof(f20545,plain,(
  $false | ($spl3 | $spl119)),
  inference(unit_resulting_resolution,[],[f442,f438,f13596,f431,f417,f336])).
fof(f20260,plain,(
  $false | ($spl3 | $spl128)),
  inference(subsumption_resolution,[],[f15358,f417])).
fof(f15358,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl128),
  inference(unit_resulting_resolution,[],[f276,f13605,f353])).
fof(f353,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f204])).
fof(f20259,plain,(
  $false | ($spl3 | $spl176)),
  inference(subsumption_resolution,[],[f14058,f417])).
fof(f14058,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl176),
  inference(unit_resulting_resolution,[],[f420,f13644,f388])).
fof(f388,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f222])).
fof(f222,plain,(
  ! [X0,X1,X2] : ((~sP11(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP10(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)))),
  inference(rectify,[],[f221])).
fof(f221,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1) | sP11(X2,X0,X1)))),
  inference(flattening,[],[f220])).
fof(f220,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1)) | sP11(X2,X0,X1)))),
  inference(nnf_transformation,[],[f150])).
fof(f20258,plain,(
  $false | ($spl3 | $spl173)),
  inference(subsumption_resolution,[],[f14052,f417])).
fof(f14052,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl173),
  inference(unit_resulting_resolution,[],[f13641,f398])).
fof(f398,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f225])).
fof(f20257,plain,(
  $false | ($spl3 | $spl173)),
  inference(subsumption_resolution,[],[f14054,f417])).
fof(f14054,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl173),
  inference(unit_resulting_resolution,[],[f13641,f396])).
fof(f396,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f225])).
fof(f20256,plain,(
  $false | ($spl3 | $spl166)),
  inference(subsumption_resolution,[],[f14048,f417])).
fof(f14048,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl166),
  inference(unit_resulting_resolution,[],[f231,f13636,f371])).
fof(f371,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f214])).
fof(f214,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP8(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f213])).
fof(f213,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1) | sP9(X2,X0,X1)))),
  inference(flattening,[],[f212])).
fof(f212,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1)) | sP9(X2,X0,X1)))),
  inference(nnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X2,X0,X1] : (sP9(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f20255,plain,(
  $false | ($spl3 | $spl164)),
  inference(subsumption_resolution,[],[f14043,f417])).
fof(f14043,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl164),
  inference(unit_resulting_resolution,[],[f231,f13635,f372])).
fof(f372,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f214])).
fof(f20254,plain,(
  $false | ($spl3 | $spl159)),
  inference(subsumption_resolution,[],[f14038,f417])).
fof(f14038,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl159),
  inference(unit_resulting_resolution,[],[f420,f13632,f366])).
fof(f366,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f211])).
fof(f20253,plain,(
  $false | ($spl3 | $spl159)),
  inference(subsumption_resolution,[],[f14039,f417])).
fof(f14039,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl159),
  inference(unit_resulting_resolution,[],[f420,f13632,f365])).
fof(f365,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f211])).
fof(f20252,plain,(
  $false | ($spl3 | $spl148)),
  inference(subsumption_resolution,[],[f14028,f417])).
fof(f14028,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl148),
  inference(unit_resulting_resolution,[],[f231,f13622,f356])).
fof(f356,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f207])).
fof(f207,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | (sP6(X1,X2,X0) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP6(X1,X2,X0) | (~p(s(bool,X2)) & p(s(bool,X0))) | (~p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f206])).
fof(f206,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & (~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2))) | sP7(X2,X0,X1)))),
  inference(flattening,[],[f205])).
fof(f205,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & ((~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2)))) | sP7(X2,X0,X1)))),
  inference(nnf_transformation,[],[f144])).
fof(f20251,plain,(
  $false | ($spl3 | $spl148)),
  inference(subsumption_resolution,[],[f14029,f417])).
fof(f14029,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl148),
  inference(unit_resulting_resolution,[],[f231,f13622,f355])).
fof(f355,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f207])).
fof(f20250,plain,(
  $false | ($spl3 | $spl143)),
  inference(subsumption_resolution,[],[f14022,f417])).
fof(f14022,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl143),
  inference(unit_resulting_resolution,[],[f13616,f364])).
fof(f364,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f209])).
fof(f20249,plain,(
  $false | ($spl3 | $spl143)),
  inference(subsumption_resolution,[],[f14023,f417])).
fof(f14023,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl143),
  inference(unit_resulting_resolution,[],[f13616,f363])).
fof(f363,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f209])).
fof(f20248,plain,(
  $false | ($spl3 | $spl127)),
  inference(subsumption_resolution,[],[f14016,f417])).
fof(f14016,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl127),
  inference(unit_resulting_resolution,[],[f13604,f345])).
fof(f345,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f201])).
fof(f20247,plain,(
  $false | ($spl3 | $spl127)),
  inference(subsumption_resolution,[],[f14017,f417])).
fof(f14017,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl127),
  inference(unit_resulting_resolution,[],[f13604,f344])).
fof(f20246,plain,(
  $false | ($spl3 | $spl125)),
  inference(subsumption_resolution,[],[f14010,f417])).
fof(f14010,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl125),
  inference(unit_resulting_resolution,[],[f13602,f341])).
fof(f341,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f198])).
fof(f20245,plain,(
  $false | ($spl3 | $spl125)),
  inference(subsumption_resolution,[],[f14011,f417])).
fof(f14011,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl125),
  inference(unit_resulting_resolution,[],[f13602,f340])).
fof(f20244,plain,(
  $false | ($spl3 | $spl135)),
  inference(subsumption_resolution,[],[f13994,f417])).
fof(f13994,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl135),
  inference(unit_resulting_resolution,[],[f473,f13610,f350])).
fof(f20243,plain,(
  $false | ($spl3 | $spl133)),
  inference(subsumption_resolution,[],[f13982,f417])).
fof(f13982,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl133),
  inference(unit_resulting_resolution,[],[f445,f438,f431,f13608,f337])).
fof(f337,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | p(s(bool,X0)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f195])).
fof(f445,plain,(
  ( ! [X0,X1] : (sP2(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f231,f348])).
fof(f348,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f203])).
fof(f20242,plain,(
  $false | ($spl3 | $spl133)),
  inference(subsumption_resolution,[],[f13985,f417])).
fof(f13985,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl133),
  inference(unit_resulting_resolution,[],[f473,f13608,f350])).
fof(f20241,plain,(
  $false | ($spl3 | $spl179)),
  inference(subsumption_resolution,[],[f13980,f417])).
fof(f13980,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl179),
  inference(unit_resulting_resolution,[],[f420,f231,f13646,f399])).
fof(f399,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f227])).
fof(f20240,plain,(
  $false | ($spl3 | $spl174)),
  inference(subsumption_resolution,[],[f13974,f417])).
fof(f13974,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl174),
  inference(unit_resulting_resolution,[],[f420,f13643,f388])).
fof(f20239,plain,(
  $false | ($spl3 | $spl171)),
  inference(subsumption_resolution,[],[f13968,f417])).
fof(f13968,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl171),
  inference(unit_resulting_resolution,[],[f13639,f398])).
fof(f20238,plain,(
  $false | ($spl3 | $spl168)),
  inference(subsumption_resolution,[],[f13960,f417])).
fof(f13960,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl168),
  inference(unit_resulting_resolution,[],[f231,f471,f13637,f394])).
fof(f394,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f222])).
fof(f471,plain,(
  ( ! [X0,X1] : (sP10('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f420,f398])).
fof(f20237,plain,(
  $false | ($spl3 | $spl168)),
  inference(subsumption_resolution,[],[f13962,f417])).
fof(f13962,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl168),
  inference(unit_resulting_resolution,[],[f231,f420,f13637,f399])).
fof(f20236,plain,(
  $false | ($spl3 | $spl162)),
  inference(subsumption_resolution,[],[f13932,f417])).
fof(f13932,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl162),
  inference(unit_resulting_resolution,[],[f420,f464,f13634,f377])).
fof(f377,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f214])).
fof(f464,plain,(
  ( ! [X0,X1] : (sP8('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f420,f381])).
fof(f381,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f217])).
fof(f217,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f216])).
fof(f216,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f215])).
fof(f215,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f20235,plain,(
  $false | ($spl3 | $spl162)),
  inference(subsumption_resolution,[],[f13934,f417])).
fof(f13934,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl162),
  inference(unit_resulting_resolution,[],[f420,f420,f13634,f382])).
fof(f382,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f219])).
fof(f219,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f218])).
fof(f218,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP9(X2,X0,X1))),
  inference(definition_folding,[],[f105,f147,f146])).
fof(f105,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X15,X16,X17] : ((p(s(bool,X17)) <=> (p(s(bool,X16)) | p(s(bool,X15)))) <=> ((p(s(bool,X17)) | ~p(s(bool,X16))) & (p(s(bool,X17)) | ~p(s(bool,X15))) & (p(s(bool,X16)) | p(s(bool,X15)) | ~p(s(bool,X17)))))),
  file('thm.real.REAL_MAX_LE','thm.sat.sat_25_prove_ltb')).
fof(f20234,plain,(
  $false | ($spl3 | $spl160)),
  inference(subsumption_resolution,[],[f13922,f417])).
fof(f13922,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl160),
  inference(unit_resulting_resolution,[],[f420,f464,f13633,f377])).
fof(f20233,plain,(
  $false | ($spl3 | $spl160)),
  inference(subsumption_resolution,[],[f13924,f417])).
fof(f13924,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl160),
  inference(unit_resulting_resolution,[],[f420,f420,f13633,f382])).
fof(f20232,plain,(
  $false | ($spl3 | $spl157)),
  inference(subsumption_resolution,[],[f13897,f417])).
fof(f13897,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl157),
  inference(unit_resulting_resolution,[],[f420,f13630,f366])).
fof(f20231,plain,(
  $false | ($spl3 | $spl146)),
  inference(subsumption_resolution,[],[f13893,f417])).
fof(f13893,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl146),
  inference(unit_resulting_resolution,[],[f231,f13620,f355])).
fof(f20230,plain,(
  $false | ($spl3 | $spl144)),
  inference(subsumption_resolution,[],[f13837,f417])).
fof(f13837,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl144),
  inference(unit_resulting_resolution,[],[f231,f13618,f356])).
fof(f20229,plain,(
  $false | ($spl3 | $spl141)),
  inference(subsumption_resolution,[],[f13832,f417])).
fof(f13832,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl141),
  inference(unit_resulting_resolution,[],[f13614,f364])).
fof(f20228,plain,(
  $false | ($spl3 | $spl138)),
  inference(subsumption_resolution,[],[f13778,f417])).
fof(f13778,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl138),
  inference(unit_resulting_resolution,[],[f456,f13612,f407])).
fof(f407,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(duplicate_literal_removal,[],[f360])).
fof(f360,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f207])).
fof(f456,plain,(
  ( ! [X0,X1] : (sP6('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f420,f364])).
fof(f20227,plain,(
  $false | ($spl3 | $spl138)),
  inference(subsumption_resolution,[],[f13779,f417])).
fof(f13779,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl138),
  inference(unit_resulting_resolution,[],[f420,f13612,f366])).
fof(f20226,plain,(
  $false | ($spl3 | $spl138)),
  inference(subsumption_resolution,[],[f13780,f417])).
fof(f13780,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl138),
  inference(unit_resulting_resolution,[],[f420,f13612,f365])).
fof(f20225,plain,(
  $false | ($spl3 | $spl136)),
  inference(subsumption_resolution,[],[f13770,f417])).
fof(f13770,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl136),
  inference(unit_resulting_resolution,[],[f454,f13611,f407])).
fof(f454,plain,(
  ( ! [X0,X1] : (sP6(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f420,f363])).
fof(f20224,plain,(
  $false | ($spl3 | $spl136)),
  inference(subsumption_resolution,[],[f13771,f417])).
fof(f13771,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl136),
  inference(unit_resulting_resolution,[],[f420,f13611,f366])).
fof(f20223,plain,(
  $false | ($spl3 | $spl136)),
  inference(subsumption_resolution,[],[f13772,f417])).
fof(f13772,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl136),
  inference(unit_resulting_resolution,[],[f420,f13611,f365])).
fof(f20222,plain,(
  $false | ($spl3 | $spl123)),
  inference(subsumption_resolution,[],[f13713,f417])).
fof(f13713,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl123),
  inference(unit_resulting_resolution,[],[f13600,f341])).
fof(f20221,plain,(
  $false | ($spl3 | $spl6 | $spl115)),
  inference(subsumption_resolution,[],[f13654,f417])).
fof(f13654,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | ($spl6 | $spl115)),
  inference(unit_resulting_resolution,[],[f13592,f3551])).
fof(f20220,plain,(
  $false | ($spl3 | $spl115)),
  inference(subsumption_resolution,[],[f13656,f417])).
fof(f13656,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl115),
  inference(unit_resulting_resolution,[],[f231,f13592,f307])).
fof(f307,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f184])).
fof(f184,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f183])).
fof(f183,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f182])).
fof(f182,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f20219,plain,(
  $false | ($spl3 | $spl10 | $spl113)),
  inference(subsumption_resolution,[],[f13650,f417])).
fof(f13650,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | ($spl10 | $spl113)),
  inference(unit_resulting_resolution,[],[f13590,f3555])).
fof(f20218,plain,(
  $false | ($spl3 | $spl113)),
  inference(subsumption_resolution,[],[f13651,f417])).
fof(f13651,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl113),
  inference(unit_resulting_resolution,[],[f231,f13590,f310])).
fof(f310,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f184])).
fof(f20197,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) ) | $spl304),
  inference(cnf_transformation,[],[f20197_D])).
fof(f20197_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) ) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f20217,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f20216])).
fof(f20216,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,X24)) | sP1(X24,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0'))) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(subsumption_resolution,[],[f12510,f748])).
fof(f12510,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,X23)) | p(s(bool,X24)) | sP1(X24,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0'))) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f900,f688])).
fof(f900,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,X29)) | p(s(bool,X30)) | sP1(X30,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29)))) )),
  inference(superposition,[],[f310,f277])).
fof(f20215,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f20214])).
fof(f20214,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | sP1(X20,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0'))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f12509,f748])).
fof(f12509,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,X19)) | p(s(bool,X20)) | sP1(X20,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0'))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f900,f688])).
fof(f20194,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) ) | $spl302),
  inference(cnf_transformation,[],[f20194_D])).
fof(f20194_D,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) ) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f20213,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f20212])).
fof(f20212,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,X24)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X24) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(subsumption_resolution,[],[f12477,f748])).
fof(f12477,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,X23)) | p(s(bool,X24)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X24) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f899,f688])).
fof(f899,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,X26)) | p(s(bool,X27)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,X26)),X27)) )),
  inference(superposition,[],[f307,f277])).
fof(f20211,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f20210])).
fof(f20210,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0')),X20) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f12476,f748])).
fof(f12476,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,X19)) | p(s(bool,X20)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0')),X20) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f899,f688])).
fof(f20209,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f20208])).
fof(f20208,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,X24)) | sP1(X24,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0'))) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(subsumption_resolution,[],[f5247,f748])).
fof(f5247,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,X23)) | p(s(bool,X24)) | sP1(X24,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0'))) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f900,f688])).
fof(f20207,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f20206])).
fof(f20206,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | sP1(X20,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0'))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f5246,f748])).
fof(f5246,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,X19)) | p(s(bool,X20)) | sP1(X20,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0'))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f900,f688])).
fof(f20205,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f20204])).
fof(f20204,plain,(
  ( ! [X26,X24,X23,X25] : (p(s(bool,X24)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X24) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(subsumption_resolution,[],[f5217,f748])).
fof(f5217,plain,(
  ( ! [X26,X24,X23,X25] : (~p(s(bool,X23)) | p(s(bool,X24)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X24) | s(bool,X23) = s(bool,X26) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f899,f688])).
fof(f20203,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f20202])).
fof(f20202,plain,(
  ( ! [X21,X19,X22,X20] : (p(s(bool,X20)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0')),X20) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f5216,f748])).
fof(f5216,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,X19)) | p(s(bool,X20)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X21),s(bool,'T_0')),X20) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) )),
  inference(superposition,[],[f899,f688])).
fof(f20201,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f20200])).
fof(f20200,plain,(
  ( ! [X194,X192,X195,X193] : (p(s(bool,X193)) | sP1(X193,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X194),s(bool,'T_0'))) | s(bool,X192) = s(bool,X195) | s(bool,'T_0') = s(bool,X195)) )),
  inference(subsumption_resolution,[],[f3256,f748])).
fof(f3256,plain,(
  ( ! [X194,X192,X195,X193] : (~p(s(bool,X192)) | p(s(bool,X193)) | sP1(X193,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X194),s(bool,'T_0'))) | s(bool,X192) = s(bool,X195) | s(bool,'T_0') = s(bool,X195)) )),
  inference(superposition,[],[f900,f688])).
fof(f20199,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f20198])).
fof(f20198,plain,(
  ( ! [X191,X189,X190,X188] : (p(s(bool,X189)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X190),s(bool,'T_0')),X189) | s(bool,X188) = s(bool,X191) | s(bool,'T_0') = s(bool,X191)) )),
  inference(subsumption_resolution,[],[f3255,f748])).
fof(f3255,plain,(
  ( ! [X191,X189,X190,X188] : (~p(s(bool,X188)) | p(s(bool,X189)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X190),s(bool,'T_0')),X189) | s(bool,X188) = s(bool,X191) | s(bool,'T_0') = s(bool,X191)) )),
  inference(superposition,[],[f899,f688])).
fof(f20196,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')))) )),
  inference(condensation,[],[f20195])).
fof(f20195,plain,(
  ( ! [X194,X192,X195,X193] : (p(s(bool,X193)) | sP1(X193,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X194),s(bool,'T_0'))) | s(bool,X192) = s(bool,X195) | s(bool,'T_0') = s(bool,X195)) )),
  inference(subsumption_resolution,[],[f3115,f748])).
fof(f3115,plain,(
  ( ! [X194,X192,X195,X193] : (~p(s(bool,X192)) | p(s(bool,X193)) | sP1(X193,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X194),s(bool,'T_0'))) | s(bool,X192) = s(bool,X195) | s(bool,'T_0') = s(bool,X195)) )),
  inference(superposition,[],[f900,f688])).
fof(f20193,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X1)) )),
  inference(condensation,[],[f20192])).
fof(f20192,plain,(
  ( ! [X191,X189,X190,X188] : (p(s(bool,X189)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X190),s(bool,'T_0')),X189) | s(bool,X188) = s(bool,X191) | s(bool,'T_0') = s(bool,X191)) )),
  inference(subsumption_resolution,[],[f3114,f748])).
fof(f3114,plain,(
  ( ! [X191,X189,X190,X188] : (~p(s(bool,X188)) | p(s(bool,X189)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X190),s(bool,'T_0')),X189) | s(bool,X188) = s(bool,X191) | s(bool,'T_0') = s(bool,X191)) )),
  inference(superposition,[],[f899,f688])).
fof(f20191,plain,(
  $false | ($spl3 | $spl130)),
  inference(subsumption_resolution,[],[f417,f15409])).
fof(f15409,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl130),
  inference(unit_resulting_resolution,[],[f276,f13606,f353])).
fof(f7198,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl92),
  inference(cnf_transformation,[],[f7198_D])).
fof(f7198_D,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f20190,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl300),
  inference(cnf_transformation,[],[f20190_D])).
fof(f20190_D,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f13468,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8850,f1473])).
fof(f1473,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(forward_demodulation,[],[f1456,f277])).
fof(f1456,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'F_0'),s('type.realax.real',X1),s('type.realax.real',X0))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(superposition,[],[f280,f239])).
fof(f20188,plain,(
  ( ! [X0] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl298),
  inference(cnf_transformation,[],[f20188_D])).
fof(f20188_D,plain,(
  ( ! [X0] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f13469,plain,(
  ( ! [X0] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8852,f1473])).
fof(f8852,plain,(
  ( ! [X0] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f291])).
fof(f291,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f176])).
fof(f176,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f20187,plain,(
  ( ! [X1] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl296),
  inference(cnf_transformation,[],[f20187_D])).
fof(f20187_D,plain,(
  ( ! [X1] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f13470,plain,(
  ( ! [X1] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8853,f1473])).
fof(f8853,plain,(
  ( ! [X0] : (sP0('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f292])).
fof(f292,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f177])).
fof(f20186,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl294),
  inference(cnf_transformation,[],[f20186_D])).
fof(f20186_D,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f13474,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8858,f1473])).
fof(f8858,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f307])).
fof(f20184,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl292),
  inference(cnf_transformation,[],[f20184_D])).
fof(f20184_D,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl292),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl292])])).
fof(f13475,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8859,f1473])).
fof(f8859,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f310])).
fof(f20182,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl290),
  inference(cnf_transformation,[],[f20182_D])).
fof(f20182_D,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f13478,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8865,f1473])).
fof(f8865,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f445,f435,f428,f414,f335])).
fof(f335,plain,(
  ( ! [X2,X0,X1] : (~sP4(X0,X2,X1) | ~p(s(bool,X2)) | sP5(X0,X1,X2) | ~sP3(X1,X2,X0) | ~sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f195])).
fof(f428,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f339])).
fof(f339,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f198])).
fof(f20180,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl289),
  inference(cnf_transformation,[],[f20180_D])).
fof(f20180_D,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') <=> ~$spl289),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl289])])).
fof(f13480,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8874,f1473])).
fof(f8874,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f338])).
fof(f20178,plain,(
  ( ! [X2,X3] : (sP4(X2,X3,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl286),
  inference(cnf_transformation,[],[f20178_D])).
fof(f20178_D,plain,(
  ( ! [X2,X3] : (sP4(X2,X3,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f13482,plain,(
  ( ! [X2,X3] : (sP4(X2,X3,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8879,f1473])).
fof(f8879,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f339])).
fof(f20177,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') | $spl285),
  inference(cnf_transformation,[],[f20177_D])).
fof(f20177_D,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') <=> ~$spl285),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl285])])).
fof(f13483,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8880,f1473])).
fof(f8880,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f342])).
fof(f20175,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl283),
  inference(cnf_transformation,[],[f20175_D])).
fof(f20175_D,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') <=> ~$spl283),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl283])])).
fof(f13484,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8885,f1473])).
fof(f8885,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f342])).
fof(f20173,plain,(
  ( ! [X4,X5] : (sP3(X4,X5,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl280),
  inference(cnf_transformation,[],[f20173_D])).
fof(f20173_D,plain,(
  ( ! [X4,X5] : (sP3(X4,X5,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f13486,plain,(
  ( ! [X4,X5] : (sP3(X4,X5,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8890,f1473])).
fof(f8890,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f343])).
fof(f20172,plain,(
  ( ! [X6,X7] : (sP2(X6,X7,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl278),
  inference(cnf_transformation,[],[f20172_D])).
fof(f20172_D,plain,(
  ( ! [X6,X7] : (sP2(X6,X7,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f13487,plain,(
  ( ! [X6,X7] : (sP2(X6,X7,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8891,f1473])).
fof(f8891,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f347])).
fof(f20171,plain,(
  ( ! [X8,X9] : (sP2(X8,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X9)) ) | $spl276),
  inference(cnf_transformation,[],[f20171_D])).
fof(f20171_D,plain,(
  ( ! [X8,X9] : (sP2(X8,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X9)) ) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f13488,plain,(
  ( ! [X8,X9] : (sP2(X8,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X9) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8892,f1473])).
fof(f8892,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f348])).
fof(f20170,plain,(
  ( ! [X10,X11] : (sP2('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X10,X11)) ) | $spl274),
  inference(cnf_transformation,[],[f20170_D])).
fof(f20170_D,plain,(
  ( ! [X10,X11] : (sP2('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X10,X11)) ) <=> ~$spl274),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl274])])).
fof(f13489,plain,(
  ( ! [X10,X11] : (sP2('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X10,X11) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8893,f1473])).
fof(f8893,plain,(
  ( ! [X0,X1] : (sP2('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f349])).
fof(f349,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f203])).
fof(f20169,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl273),
  inference(cnf_transformation,[],[f20169_D])).
fof(f20169_D,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') <=> ~$spl273),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl273])])).
fof(f13497,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8917,f1473])).
fof(f8917,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f361])).
fof(f20167,plain,(
  ( ! [X19,X18] : (sP6(X18,X19,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl270),
  inference(cnf_transformation,[],[f20167_D])).
fof(f20167_D,plain,(
  ( ! [X19,X18] : (sP6(X18,X19,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) <=> ~$spl270),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl270])])).
fof(f13499,plain,(
  ( ! [X19,X18] : (sP6(X18,X19,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8922,f1473])).
fof(f8922,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f362])).
fof(f362,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f209])).
fof(f20166,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','T_0') | $spl268),
  inference(cnf_transformation,[],[f20166_D])).
fof(f20166_D,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','T_0') <=> ~$spl268),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl268])])).
fof(f13503,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8933,f1473])).
fof(f8933,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f231,f414,f367])).
fof(f367,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f211])).
fof(f20164,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl267),
  inference(cnf_transformation,[],[f20164_D])).
fof(f20164_D,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl267),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl267])])).
fof(f13508,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8940,f1473])).
fof(f8940,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f370])).
fof(f20162,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | $spl265),
  inference(cnf_transformation,[],[f20162_D])).
fof(f20162_D,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') <=> ~$spl265),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl265])])).
fof(f13512,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8959,f1473])).
fof(f8959,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f420,f420,f414,f378])).
fof(f378,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f217])).
fof(f20160,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl262),
  inference(cnf_transformation,[],[f20160_D])).
fof(f20160_D,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) <=> ~$spl262),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl262])])).
fof(f13513,plain,(
  ( ! [X23,X22] : (sP8(X22,X23,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8964,f1473])).
fof(f8964,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f379])).
fof(f379,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f217])).
fof(f20159,plain,(
  ( ! [X24,X25] : (sP8(X24,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X25)) ) | $spl260),
  inference(cnf_transformation,[],[f20159_D])).
fof(f20159_D,plain,(
  ( ! [X24,X25] : (sP8(X24,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X25)) ) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f13514,plain,(
  ( ! [X24,X25] : (sP8(X24,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X25) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8965,f1473])).
fof(f8965,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f380])).
fof(f380,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f217])).
fof(f20158,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | $spl259),
  inference(cnf_transformation,[],[f20158_D])).
fof(f20158_D,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') <=> ~$spl259),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl259])])).
fof(f13517,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8976,f1473])).
fof(f8976,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f420,f420,f414,f385])).
fof(f385,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)) | ~sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f219])).
fof(f20156,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl257),
  inference(cnf_transformation,[],[f20156_D])).
fof(f20156_D,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl257),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl257])])).
fof(f13520,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8999,f1473])).
fof(f8999,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f231,f414,f395])).
fof(f20154,plain,(
  ( ! [X30,X29] : (sP10(X29,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X30)) ) | $spl254),
  inference(cnf_transformation,[],[f20154_D])).
fof(f20154_D,plain,(
  ( ! [X30,X29] : (sP10(X29,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X30)) ) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f13522,plain,(
  ( ! [X30,X29] : (sP10(X29,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X30) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f9004,f1473])).
fof(f9004,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f397])).
fof(f397,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f225])).
fof(f20153,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl253),
  inference(cnf_transformation,[],[f20153_D])).
fof(f20153_D,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl253),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl253])])).
fof(f13525,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f9013,f1473])).
fof(f9013,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f402])).
fof(f20151,plain,(
  ( ! [X32] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X32,'F_0')) ) | $spl250),
  inference(cnf_transformation,[],[f20151_D])).
fof(f20151_D,plain,(
  ( ! [X32] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X32,'F_0')) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f13528,plain,(
  ( ! [X32] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X32,'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f9019,f1473])).
fof(f9019,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f466,f414,f405])).
fof(f405,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f391])).
fof(f391,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f222])).
fof(f466,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f396])).
fof(f20150,plain,(
  ( ! [X33] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0',X33)) ) | $spl248),
  inference(cnf_transformation,[],[f20150_D])).
fof(f20150_D,plain,(
  ( ! [X33] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0',X33)) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f13529,plain,(
  ( ! [X33] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0',X33) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f9020,f1473])).
fof(f9020,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f468,f414,f405])).
fof(f468,plain,(
  ( ! [X0,X1] : (sP10(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f231,f397])).
fof(f20149,plain,(
  ( ! [X34] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X34,'T_0')) ) | $spl246),
  inference(cnf_transformation,[],[f20149_D])).
fof(f20149_D,plain,(
  ( ! [X34] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X34,'T_0')) ) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f13530,plain,(
  ( ! [X34] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X34,'T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f9022,f1473])).
fof(f9022,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f458,f414,f406])).
fof(f406,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)) )),
  inference(duplicate_literal_removal,[],[f374])).
fof(f374,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f214])).
fof(f458,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f379])).
fof(f20148,plain,(
  ( ! [X35] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0',X35)) ) | $spl244),
  inference(cnf_transformation,[],[f20148_D])).
fof(f20148_D,plain,(
  ( ! [X35] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0',X35)) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f13531,plain,(
  ( ! [X35] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0',X35) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f9024,f1473])).
fof(f9024,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f461,f414,f406])).
fof(f461,plain,(
  ( ! [X0,X1] : (sP8(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f231,f380])).
fof(f20147,plain,(
  ( ! [X36] : (sP9('T_0',X36,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl242),
  inference(cnf_transformation,[],[f20147_D])).
fof(f20147_D,plain,(
  ( ! [X36] : (sP9('T_0',X36,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f13532,plain,(
  ( ! [X36] : (sP9('T_0',X36,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl0 | $spl22)),
  inference(superposition,[],[f9106,f1473])).
fof(f9106,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl0 | $spl22)),
  inference(unit_resulting_resolution,[],[f414,f3573])).
fof(f20146,plain,(
  ( ! [X37] : (sP9('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X37)) ) | $spl240),
  inference(cnf_transformation,[],[f20146_D])).
fof(f20146_D,plain,(
  ( ! [X37] : (sP9('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X37)) ) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f13533,plain,(
  ( ! [X37] : (sP9('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X37) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl0 | $spl24)),
  inference(superposition,[],[f9107,f1473])).
fof(f9107,plain,(
  ( ! [X0] : (sP9('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl24)),
  inference(unit_resulting_resolution,[],[f414,f3576])).
fof(f20145,plain,(
  ( ! [X38] : (sP11('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X38)) ) | $spl238),
  inference(cnf_transformation,[],[f20145_D])).
fof(f20145_D,plain,(
  ( ! [X38] : (sP11('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X38)) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f13534,plain,(
  ( ! [X38] : (sP11('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X38) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl0 | $spl32)),
  inference(superposition,[],[f9108,f1473])).
fof(f9108,plain,(
  ( ! [X0] : (sP11('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl32)),
  inference(unit_resulting_resolution,[],[f414,f3588])).
fof(f20144,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl237),
  inference(cnf_transformation,[],[f20144_D])).
fof(f20144_D,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl237),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl237])])).
fof(f13535,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f10988,f1473])).
fof(f10988,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f8874,f333])).
fof(f333,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP4(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f195])).
fof(f20142,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl234),
  inference(cnf_transformation,[],[f20142_D])).
fof(f20142_D,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f13536,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f11006,f1473])).
fof(f11006,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f448,f435,f8879,f335])).
fof(f448,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f231,f349])).
fof(f20140,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl233),
  inference(cnf_transformation,[],[f20140_D])).
fof(f20140_D,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') <=> ~$spl233),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl233])])).
fof(f13537,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f11030,f1473])).
fof(f11030,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f8880,f332])).
fof(f332,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP3(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f195])).
fof(f20138,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl231),
  inference(cnf_transformation,[],[f20138_D])).
fof(f20138_D,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl231),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl231])])).
fof(f13538,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f11045,f1473])).
fof(f11045,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f8885,f332])).
fof(f20136,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','T_0') | $spl228),
  inference(cnf_transformation,[],[f20136_D])).
fof(f20136_D,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','T_0') <=> ~$spl228),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl228])])).
fof(f13539,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f11057,f1473])).
fof(f11057,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f448,f428,f8890,f335])).
fof(f20134,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | $spl226),
  inference(cnf_transformation,[],[f20134_D])).
fof(f20134_D,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f13540,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f11081,f1473])).
fof(f11081,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f420,f431,f440,f8891,f336])).
fof(f440,plain,(
  ( ! [X0,X1] : (sP3('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f420,f345])).
fof(f20132,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl224),
  inference(cnf_transformation,[],[f20132_D])).
fof(f20132_D,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f13541,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f11098,f1473])).
fof(f11098,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f420,f433,f438,f8892,f337])).
fof(f433,plain,(
  ( ! [X0,X1] : (sP4('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f420,f341])).
fof(f20130,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl222),
  inference(cnf_transformation,[],[f20130_D])).
fof(f20130_D,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f13542,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f11124,f1473])).
fof(f11124,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f433,f440,f8893,f336])).
fof(f20128,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl220),
  inference(cnf_transformation,[],[f20128_D])).
fof(f20128_D,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl220])])).
fof(f15227,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f11791,f1473])).
fof(f20126,plain,(
  ( ! [X0] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0) | p(s(bool,X0))) ) | $spl218),
  inference(cnf_transformation,[],[f20126_D])).
fof(f20126_D,plain,(
  ( ! [X0] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0) | p(s(bool,X0))) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f15285,plain,(
  ( ! [X0] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0) | p(s(bool,X0)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f11797,f1473])).
fof(f11797,plain,(
  ( ! [X6] : (sP1('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X6) | p(s(bool,X6))) ) | $spl0),
  inference(subsumption_resolution,[],[f11719,f231])).
fof(f11719,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | sP1('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X6)) ) | $spl0),
  inference(superposition,[],[f307,f8850])).
fof(f20125,plain,(
  ( ! [X0] : (sP1(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | p(s(bool,X0))) ) | $spl216),
  inference(cnf_transformation,[],[f20125_D])).
fof(f20125_D,plain,(
  ( ! [X0] : (sP1(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | p(s(bool,X0))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f15290,plain,(
  ( ! [X0] : (sP1(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | p(s(bool,X0)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f11798,f1473])).
fof(f11798,plain,(
  ( ! [X7] : (sP1(X7,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | p(s(bool,X7))) ) | $spl0),
  inference(subsumption_resolution,[],[f11720,f231])).
fof(f11720,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,X7)) | sP1(X7,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f310,f8850])).
fof(f20124,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X1))) ) | $spl214),
  inference(cnf_transformation,[],[f20124_D])).
fof(f20124_D,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X1))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f17301,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X1)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f11804,f1473])).
fof(f11804,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X19,X18) | ~p(s(bool,X18))) ) | $spl0),
  inference(subsumption_resolution,[],[f11726,f231])).
fof(f11726,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X19,X18)) ) | $spl0),
  inference(superposition,[],[f383,f8850])).
fof(f383,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f219])).
fof(f20123,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X0))) ) | $spl212),
  inference(cnf_transformation,[],[f20123_D])).
fof(f20123_D,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X0))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f17310,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X0)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f11805,f1473])).
fof(f11805,plain,(
  ( ! [X21,X20] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X20,X21) | ~p(s(bool,X20))) ) | $spl0),
  inference(subsumption_resolution,[],[f11727,f231])).
fof(f11727,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X20,X21)) ) | $spl0),
  inference(superposition,[],[f384,f8850])).
fof(f384,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f219])).
fof(f20122,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | p(s(bool,X1))) ) | $spl210),
  inference(cnf_transformation,[],[f20122_D])).
fof(f20122_D,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | p(s(bool,X1))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f17322,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f11808,f1473])).
fof(f11808,plain,(
  ( ! [X26,X27] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X27,X26) | p(s(bool,X26))) ) | $spl0),
  inference(subsumption_resolution,[],[f11730,f231])).
fof(f11730,plain,(
  ( ! [X26,X27] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X27,X26)) ) | $spl0),
  inference(superposition,[],[f400,f8850])).
fof(f400,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f227])).
fof(f20121,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X0))) ) | $spl208),
  inference(cnf_transformation,[],[f20121_D])).
fof(f20121_D,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X0))) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f17338,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X0)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f11809,f1473])).
fof(f11809,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X28,X29) | ~p(s(bool,X28))) ) | $spl0),
  inference(subsumption_resolution,[],[f11731,f231])).
fof(f11731,plain,(
  ( ! [X28,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X28)) | sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X28,X29)) ) | $spl0),
  inference(superposition,[],[f401,f8850])).
fof(f401,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X0)) | sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f227])).
fof(f20112,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20111,f1700])).
fof(f1700,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1308,f348])).
fof(f1308,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0))))) )),
  inference(factoring,[],[f281])).
fof(f281,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X7,X8] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X8)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X8),s('type.realax.real',X7)))))),
  file('thm.real.REAL_MAX_LE','thm.real.REAL_LE_TOTAL')).
fof(f20111,plain,(
  ~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,'T_0'),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18334,f18647])).
fof(f18647,plain,(
  s('type.realax.real',sK12) = s('type.realax.real',sK14) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18481,f10240])).
fof(f10240,plain,(
  s('type.realax.real',sK14) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(forward_demodulation,[],[f10170,f277])).
fof(f10170,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) = s('type.realax.real','const.bool.COND_3'(s(bool,'F_0'),s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(superposition,[],[f280,f8779])).
fof(f8779,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f473,f419,f748])).
fof(f18481,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11791])).
fof(f18363,plain,(
  s('type.realax.real',sK14) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(forward_demodulation,[],[f18196,f276])).
fof(f18196,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl2 | $spl5)),
  inference(superposition,[],[f280,f15927])).
fof(f15927,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f285])).
fof(f15911,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) | ($spl2 | $spl5)),
  inference(forward_demodulation,[],[f15910,f10240])).
fof(f15910,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))))) | ($spl2 | $spl5)),
  inference(subsumption_resolution,[],[f15909,f231])).
fof(f15909,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))))) | ($spl2 | $spl5)),
  inference(forward_demodulation,[],[f15891,f10252])).
fof(f10252,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f285])).
fof(f10241,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) | $spl5),
  inference(subsumption_resolution,[],[f10171,f420])).
fof(f10171,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) | $spl5),
  inference(superposition,[],[f281,f8779])).
fof(f15891,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))))) | ($spl2 | $spl5)),
  inference(superposition,[],[f1503,f10240])).
fof(f1503,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',X0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f1494,f231])).
fof(f1494,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',X0))))) ) | $spl2),
  inference(superposition,[],[f324,f477])).
fof(f477,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f250])).
fof(f250,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f157])).
fof(f18334,plain,(
  ~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,'T_0'),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(superposition,[],[f12164,f15927])).
fof(f12164,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl5),
  inference(forward_demodulation,[],[f12113,f8779])).
fof(f12113,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f8634,f433,f872,f337])).
fof(f872,plain,(
  ( ! [X0,X1] : (~sP5('F_0',X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f420,f277,f353])).
fof(f8634,plain,(
  ( ! [X0,X1] : (sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f345])).
fof(f20110,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20109,f1701])).
fof(f1701,plain,(
  ( ! [X2,X0,X1] : (sP2('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,X2)) )),
  inference(unit_resulting_resolution,[],[f1308,f349])).
fof(f20109,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f20108,f18647])).
fof(f20108,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18333,f19329])).
fof(f19329,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912])).
fof(f18912,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11600])).
fof(f19327,plain,(
  ( ! [X66,X64,X65] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X65)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X66)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18904,f19318])).
fof(f18904,plain,(
  ( ! [X66,X64,X65] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X65)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X66) | ~p(s(bool,X64))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11323])).
fof(f19326,plain,(
  ( ! [X59,X60,X58] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X58),s(bool,X59)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X60)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18903,f19318])).
fof(f18903,plain,(
  ( ! [X59,X60,X58] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X58),s(bool,X59)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X60) | ~p(s(bool,X58))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11320])).
fof(f19325,plain,(
  ( ! [X57,X56,X55] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18902,f19318])).
fof(f18902,plain,(
  ( ! [X57,X56,X55] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ~p(s(bool,X55))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11319])).
fof(f19320,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X28,X29)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18898,f19318])).
fof(f18898,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X28,X29) | ~p(s(bool,X28))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11307])).
fof(f19319,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X19,X18)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18893,f19318])).
fof(f18893,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X19,X18) | ~p(s(bool,X18))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11302])).
fof(f19318,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | ($spl0 | $spl2 | $spl5)),
  inference(condensation,[],[f19317])).
fof(f19317,plain,(
  ( ! [X17,X16] : (p(s(bool,X17)) | p(s(bool,X16))) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18892,f18690])).
fof(f18892,plain,(
  ( ! [X17,X16] : (~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X16,X17) | p(s(bool,X17)) | p(s(bool,X16))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11301])).
fof(f18891,plain,(
  ( ! [X14,X15] : (~sP7(X15,X14,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | p(s(bool,X15)) | ~p(s(bool,X14))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11300])).
fof(f18887,plain,(
  ( ! [X7] : (sP1(X7,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | p(s(bool,X7))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11296])).
fof(f18886,plain,(
  ( ! [X6] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X6) | p(s(bool,X6))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11295])).
fof(f18885,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11289])).
fof(f18883,plain,(
  ( ! [X45] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X45)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11248])).
fof(f18882,plain,(
  ( ! [X43] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X43)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11246])).
fof(f18881,plain,(
  ( ! [X41] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11244])).
fof(f18880,plain,(
  ( ! [X39] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11242])).
fof(f18866,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10708])).
fof(f18850,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10477])).
fof(f18849,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10472])).
fof(f18848,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10468])).
fof(f18796,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10309])).
fof(f18792,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10305])).
fof(f18761,plain,(
  ( ! [X47] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X47)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10209])).
fof(f18760,plain,(
  ( ! [X45] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X45)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10207])).
fof(f18759,plain,(
  ( ! [X43] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X43)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10205])).
fof(f18758,plain,(
  ( ! [X41] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10203])).
fof(f18749,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9462])).
fof(f18745,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9387])).
fof(f18742,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8842])).
fof(f18741,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8816])).
fof(f18737,plain,(
  ( ! [X0] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8812])).
fof(f18736,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8811])).
fof(f18735,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8810])).
fof(f18733,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8807])).
fof(f18732,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8806])).
fof(f18731,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8804])).
fof(f18727,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8795])).
fof(f18719,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8778])).
fof(f18718,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8777])).
fof(f18717,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8776])).
fof(f18707,plain,(
  ( ! [X0,X1] : (sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8756])).
fof(f18706,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8755])).
fof(f18703,plain,(
  ( ! [X0] : (~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8739])).
fof(f18702,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8738])).
fof(f18690,plain,(
  ( ! [X0,X1] : (sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8713])).
fof(f18683,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8683])).
fof(f18682,plain,(
  ( ! [X0] : (sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8679])).
fof(f18681,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8678])).
fof(f18680,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8674])).
fof(f18679,plain,(
  ( ! [X0,X1] : (sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8673])).
fof(f18678,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8672])).
fof(f18676,plain,(
  ( ! [X0] : (~sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8667])).
fof(f18675,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8665])).
fof(f18661,plain,(
  ( ! [X0,X1] : (sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8634])).
fof(f18660,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8633])).
fof(f18658,plain,(
  ( ! [X0,X1] : (sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8629])).
fof(f18657,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8628])).
fof(f18655,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8624])).
fof(f18654,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8620])).
fof(f18480,plain,(
  ( ! [X0] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X0))))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11790])).
fof(f18479,plain,(
  ( ! [X102] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X102)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11772])).
fof(f18478,plain,(
  ( ! [X100] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X100)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11770])).
fof(f18476,plain,(
  ( ! [X43] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X43)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11742])).
fof(f18475,plain,(
  ( ! [X41] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11740])).
fof(f18474,plain,(
  ( ! [X39] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11738])).
fof(f18464,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11061])).
fof(f18459,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11008])).
fof(f18444,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9044])).
fof(f18443,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9039])).
fof(f18442,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9035])).
fof(f18441,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9028])).
fof(f18440,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9027])).
fof(f18439,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9026])).
fof(f18438,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9025])).
fof(f18436,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9023])).
fof(f18434,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9021])).
fof(f18428,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9012])).
fof(f18426,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9004])).
fof(f18422,plain,(
  ( ! [X0] : (~sP11('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8977])).
fof(f18420,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8975])).
fof(f18419,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8970])).
fof(f18418,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8965])).
fof(f18417,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8964])).
fof(f18415,plain,(
  ( ! [X0] : (~sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8949])).
fof(f18414,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8943])).
fof(f18403,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8922])).
fof(f18399,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8910])).
fof(f18398,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8909])).
fof(f18397,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8904])).
fof(f18388,plain,(
  ( ! [X0,X1] : (sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8893])).
fof(f18387,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8892])).
fof(f18386,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8891])).
fof(f18385,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8890])).
fof(f18381,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8879])).
fof(f18377,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8868])).
fof(f18376,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8867])).
fof(f18375,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8866])).
fof(f18366,plain,(
  ( ! [X0] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8853])).
fof(f18365,plain,(
  ( ! [X0] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8852])).
fof(f18362,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',X0))))) ) | ($spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18195,f231])).
fof(f18195,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',X0))))) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f324,f15927])).
fof(f17755,plain,(
  ( ! [X0] : (sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f433,f8634,f1701,f337])).
fof(f17772,plain,(
  ( ! [X0,X1] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0')) )),
  inference(forward_demodulation,[],[f17756,f1637])).
fof(f17756,plain,(
  ( ! [X0,X1] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0))),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f433,f822,f1701,f337])).
fof(f17771,plain,(
  ( ! [X0,X1] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),'F_0')) )),
  inference(forward_demodulation,[],[f17757,f1637])).
fof(f17757,plain,(
  ( ! [X0,X1] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f433,f870,f1701,f337])).
fof(f17758,plain,(
  ( ! [X0] : (sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f420,f433,f440,f1701,f336])).
fof(f17759,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f8629,f440,f1701,f336])).
fof(f17697,plain,(
  ( ! [X0] : (sP5('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f433,f438,f1700,f337])).
fof(f17700,plain,(
  ( ! [X0] : (sP5('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f433,f8633,f1700,f337])).
fof(f17738,plain,(
  ( ! [X0,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),'F_0')) )),
  inference(forward_demodulation,[],[f17706,f1637])).
fof(f17706,plain,(
  ( ! [X0,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0))),s(bool,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f1683,f824,f1700,f337])).
fof(f17736,plain,(
  ( ! [X0,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),'F_0')) )),
  inference(forward_demodulation,[],[f17708,f1637])).
fof(f17708,plain,(
  ( ! [X0,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))),'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f1683,f872,f1700,f337])).
fof(f17666,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f431,f440,f1699,f336])).
fof(f17667,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f8628,f440,f1699,f336])).
fof(f17626,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f448,f428,f1698,f335])).
fof(f17627,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f448,f1683,f1698,f335])).
fof(f17629,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f448,f8879,f1698,f335])).
fof(f17631,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f448,f10283,f1698,f335])).
fof(f17635,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f15975,f1698,f335])).
fof(f17594,plain,(
  ( ! [X0] : (~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f1691,f332])).
fof(f17570,plain,(
  ( ! [X0] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1684,f332])).
fof(f17521,plain,(
  ( ! [X0] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f448,f435,f1683,f335])).
fof(f17523,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f448,f436,f1683,f335])).
fof(f17525,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f15992,f1683,f335])).
fof(f17527,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f448,f10296,f1683,f335])).
fof(f17529,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f448,f8890,f1683,f335])).
fof(f17494,plain,(
  ( ! [X0] : (~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f1676,f333])).
fof(f17482,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f433,f8634,f15995,f337])).
fof(f17490,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0')) ) | ($spl2 | $spl5)),
  inference(forward_demodulation,[],[f17483,f15927])).
fof(f17483,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f433,f822,f15995,f337])).
fof(f17489,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0')) ) | ($spl2 | $spl5)),
  inference(forward_demodulation,[],[f17484,f15927])).
fof(f17484,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f433,f870,f15995,f337])).
fof(f17485,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f433,f440,f15995,f336])).
fof(f17486,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f8629,f440,f15995,f336])).
fof(f17458,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f433,f438,f15994,f337])).
fof(f17461,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f433,f8633,f15994,f337])).
fof(f17433,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f431,f440,f15993,f336])).
fof(f17411,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f428,f15992,f335])).
fof(f17414,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f15975,f15992,f335])).
fof(f17393,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15984,f332])).
fof(f17388,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15976,f332])).
fof(f17347,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f435,f15975,f335])).
fof(f17349,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f436,f15975,f335])).
fof(f17351,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f10296,f15975,f335])).
fof(f17353,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f8890,f15975,f335])).
fof(f17342,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15967,f333])).
fof(f17136,plain,(
  ( ! [X313,X314] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X313),s(bool,X314))) | s(bool,'T_0') = s(bool,X313)) ) | ($spl0 | $spl5)),
  inference(superposition,[],[f8897,f8842])).
fof(f17134,plain,(
  ( ! [X310,X309] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X309),s(bool,X310)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X309)) ) | ($spl0 | $spl5)),
  inference(superposition,[],[f8895,f8842])).
fof(f17119,plain,(
  ( ! [X292,X291] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X291),s(bool,X292))) | s(bool,'T_0') = s(bool,X291)) ) | $spl5),
  inference(superposition,[],[f8664,f8842])).
fof(f17117,plain,(
  ( ! [X288,X287] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X287),s(bool,X288)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X287)) ) | $spl5),
  inference(superposition,[],[f8662,f8842])).
fof(f17066,plain,(
  ( ! [X147,X148] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X148),s(bool,X147))) | s(bool,'T_0') = s(bool,X147)) ) | $spl5),
  inference(superposition,[],[f873,f8842])).
fof(f17064,plain,(
  ( ! [X144,X143] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X144),s(bool,X143))) | s(bool,'T_0') = s(bool,X143)) ) | $spl5),
  inference(superposition,[],[f872,f8842])).
fof(f17063,plain,(
  ( ! [X142,X141] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X142),s(bool,X141)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X141)) ) | $spl5),
  inference(superposition,[],[f871,f8842])).
fof(f17061,plain,(
  ( ! [X138,X137] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X138),s(bool,X137)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X137)) ) | $spl5),
  inference(superposition,[],[f870,f8842])).
fof(f17046,plain,(
  ( ! [X92,X91] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X92))) | s(bool,'T_0') = s(bool,X91)) ) | $spl5),
  inference(superposition,[],[f825,f8842])).
fof(f15929,plain,(
  ( ! [X0] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f291])).
fof(f15930,plain,(
  ( ! [X0] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f292])).
fof(f15931,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f306])).
fof(f15933,plain,(
  ~sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f306])).
fof(f15934,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f306])).
fof(f15935,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f307])).
fof(f15936,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f310])).
fof(f15939,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f334])).
fof(f15940,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f334])).
fof(f15943,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f445,f435,f428,f15911,f335])).
fof(f15944,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f445,f436,f428,f15911,f335])).
fof(f15945,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f445,f10296,f428,f15911,f335])).
fof(f15946,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f445,f8890,f428,f15911,f335])).
fof(f15947,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f446,f435,f429,f15911,f335])).
fof(f15948,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f446,f436,f429,f15911,f335])).
fof(f15949,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f446,f10296,f429,f15911,f335])).
fof(f15950,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f446,f8890,f429,f15911,f335])).
fof(f15951,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10298,f435,f10283,f15911,f335])).
fof(f15952,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10298,f436,f10283,f15911,f335])).
fof(f15953,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10298,f10296,f10283,f15911,f335])).
fof(f15954,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10298,f8890,f10283,f15911,f335])).
fof(f15955,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8892,f435,f8879,f15911,f335])).
fof(f15956,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8892,f436,f8879,f15911,f335])).
fof(f15957,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8892,f10296,f8879,f15911,f335])).
fof(f15958,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8892,f8890,f8879,f15911,f335])).
fof(f15959,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f338])).
fof(f15967,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f338])).
fof(f15968,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f338])).
fof(f15975,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f339])).
fof(f15976,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f342])).
fof(f15984,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f342])).
fof(f15985,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f342])).
fof(f15992,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f343])).
fof(f15993,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f347])).
fof(f15994,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f348])).
fof(f15995,plain,(
  ( ! [X0,X1] : (sP2('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f349])).
fof(f15996,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f477,f15911,f351])).
fof(f15997,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8779,f15911,f351])).
fof(f15998,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8850,f15911,f351])).
fof(f15999,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10252,f15911,f351])).
fof(f16000,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f276,f15911,f351])).
fof(f16001,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f277,f15911,f351])).
fof(f16002,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f477,f15911,f351])).
fof(f16003,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8779,f15911,f351])).
fof(f16004,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8850,f15911,f351])).
fof(f16005,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10252,f15911,f351])).
fof(f16006,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f276,f15911,f351])).
fof(f16007,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f277,f15911,f351])).
fof(f16008,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f473,f15911,f352])).
fof(f16009,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8604,f15911,f352])).
fof(f16010,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f473,f15911,f352])).
fof(f16011,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8604,f15911,f352])).
fof(f16012,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f355])).
fof(f16013,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0',X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f356])).
fof(f16016,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f452,f15911,f357])).
fof(f16018,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f10338,f15911,f357])).
fof(f16020,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f8922,f15911,f357])).
fof(f16029,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f452,f15911,f357])).
fof(f16030,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f452,f15911,f357])).
fof(f16031,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f10338,f15911,f357])).
fof(f16032,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f10338,f15911,f357])).
fof(f16033,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f8922,f15911,f357])).
fof(f16034,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f8922,f15911,f357])).
fof(f16040,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f361])).
fof(f16048,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f361])).
fof(f16049,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f361])).
fof(f16056,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f362])).
fof(f16057,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f231,f15911,f367])).
fof(f16063,plain,(
  sP7('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f231,f15911,f367])).
fof(f16065,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f15911,f367])).
fof(f16069,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f231,f15911,f367])).
fof(f16070,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f231,f15911,f367])).
fof(f16071,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f15911,f367])).
fof(f16072,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f15911,f367])).
fof(f16073,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f370])).
fof(f16077,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f370])).
fof(f16078,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f370])).
fof(f16081,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f371])).
fof(f16098,plain,(
  ( ! [X0] : (~sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f372])).
fof(f16123,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f420,f15911,f378])).
fof(f16132,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f379])).
fof(f16133,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f380])).
fof(f16142,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f383])).
fof(f16151,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f384])).
fof(f16152,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f420,f15911,f385])).
fof(f16153,plain,(
  ( ! [X0] : (~sP11('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f389])).
fof(f16197,plain,(
  sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f8756,f15911,f394])).
fof(f16199,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f231,f15911,f395])).
fof(f16207,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f231,f15911,f395])).
fof(f16208,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f15911,f395])).
fof(f16215,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f397])).
fof(f16216,plain,(
  sP11('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f420,f15911,f399])).
fof(f16229,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f401])).
fof(f16230,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f402])).
fof(f16236,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f402])).
fof(f16237,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f402])).
fof(f16238,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f466,f15911,f405])).
fof(f16239,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8755,f15911,f405])).
fof(f16240,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0',X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f468,f15911,f405])).
fof(f16241,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f469,f15911,f405])).
fof(f16242,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10434,f15911,f405])).
fof(f16243,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f9004,f15911,f405])).
fof(f16244,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,'T_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f458,f15911,f406])).
fof(f16245,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f459,f15911,f406])).
fof(f16246,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10384,f15911,f406])).
fof(f16247,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8964,f15911,f406])).
fof(f16248,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0',X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f461,f15911,f406])).
fof(f16249,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f462,f15911,f406])).
fof(f16250,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10385,f15911,f406])).
fof(f16251,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8965,f15911,f406])).
fof(f16252,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f577])).
fof(f16253,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f588])).
fof(f16254,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f622])).
fof(f16255,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X1)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f845])).
fof(f16256,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f846])).
fof(f16257,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f847])).
fof(f16258,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f848])).
fof(f16261,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f849])).
fof(f16262,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f849])).
fof(f16265,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f850])).
fof(f16266,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f850])).
fof(f16270,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f852])).
fof(f16271,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f852])).
fof(f16272,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),X1,'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f466,f15911,f853])).
fof(f16273,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8755,f15911,f853])).
fof(f16274,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'T_0',X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f468,f15911,f853])).
fof(f16275,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f469,f15911,f853])).
fof(f16276,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10434,f15911,f853])).
fof(f16277,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f9004,f15911,f853])).
fof(f16278,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),X1,'T_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f458,f15911,f854])).
fof(f16279,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f459,f15911,f854])).
fof(f16280,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10384,f15911,f854])).
fof(f16281,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8964,f15911,f854])).
fof(f16282,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'T_0',X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f461,f15911,f854])).
fof(f16283,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f462,f15911,f854])).
fof(f16284,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10385,f15911,f854])).
fof(f16285,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8965,f15911,f854])).
fof(f16286,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f897])).
fof(f16287,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f898])).
fof(f16288,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f899])).
fof(f16289,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f900])).
fof(f16290,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f901])).
fof(f16293,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f901])).
fof(f16294,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f902])).
fof(f16297,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f902])).
fof(f16299,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f15911,f904])).
fof(f16302,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f15911,f904])).
fof(f16303,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1,'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f466,f15911,f905])).
fof(f16304,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8755,f15911,f905])).
fof(f16305,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0',X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f468,f15911,f905])).
fof(f16306,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f469,f15911,f905])).
fof(f16307,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10434,f15911,f905])).
fof(f16308,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f9004,f15911,f905])).
fof(f16309,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1,'T_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f458,f15911,f906])).
fof(f16310,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f459,f15911,f906])).
fof(f16311,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10384,f15911,f906])).
fof(f16312,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8964,f15911,f906])).
fof(f16313,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0',X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f461,f15911,f906])).
fof(f16314,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f462,f15911,f906])).
fof(f16315,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10385,f15911,f906])).
fof(f16316,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8965,f15911,f906])).
fof(f16317,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f946])).
fof(f16325,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f946])).
fof(f16326,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f946])).
fof(f16331,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f947])).
fof(f16339,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f947])).
fof(f16340,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f947])).
fof(f16345,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f952])).
fof(f16350,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f971])).
fof(f16358,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f971])).
fof(f16359,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f971])).
fof(f16364,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f972])).
fof(f16372,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f972])).
fof(f16373,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f972])).
fof(f16378,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f977])).
fof(f16383,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1026])).
fof(f16391,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1026])).
fof(f16392,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f1026])).
fof(f16397,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1027])).
fof(f16405,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1027])).
fof(f16406,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f1027])).
fof(f16411,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f1032])).
fof(f16416,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1062])).
fof(f16420,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1062])).
fof(f16421,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f1062])).
fof(f16422,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1063])).
fof(f16426,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1063])).
fof(f16427,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f1063])).
fof(f16428,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f1066])).
fof(f16429,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0','F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f420,f15911,f1122])).
fof(f16438,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f420,f15911,f1123])).
fof(f16447,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0','F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f420,f15911,f1168])).
fof(f16448,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','F_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f420,f15911,f1169])).
fof(f16449,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f231,f15911,f1239])).
fof(f16457,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f231,f15911,f1239])).
fof(f16458,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f15911,f1239])).
fof(f16463,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f231,f15911,f1240])).
fof(f16471,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f231,f15911,f1240])).
fof(f16472,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f15911,f1240])).
fof(f16477,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f1245])).
fof(f16482,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0','T_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1287])).
fof(f16484,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1287])).
fof(f16485,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f1287])).
fof(f16487,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','T_0')) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1288])).
fof(f16489,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f420,f15911,f1288])).
fof(f16490,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f420,f15911,f1288])).
fof(f16492,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f1293])).
fof(f16500,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f11297])).
fof(f16505,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f11298])).
fof(f16510,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f11299])).
fof(f16515,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f11300])).
fof(f16516,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f11302])).
fof(f16517,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f11303])).
fof(f16518,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f11305])).
fof(f16523,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f15911,f11307])).
fof(f16524,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f15911,f11308])).
fof(f15922,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',X0)))) | s(bool,X1) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X0))) | s(bool,'T_0') = s(bool,X1)) ) | $spl2),
  inference(subsumption_resolution,[],[f15900,f231])).
fof(f15900,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',X0)))) | s(bool,X1) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X0))) | s(bool,'T_0') = s(bool,X1)) ) | $spl2),
  inference(superposition,[],[f1503,f688])).
fof(f15898,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X10)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real','const.bool.COND_3'(s(bool,X8),s('type.realax.real',X9),s('type.realax.real',X10)))))) | s(bool,'T_0') = s(bool,X8)) ) | $spl2),
  inference(superposition,[],[f1503,f874])).
fof(f15894,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1)))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) ) | $spl2),
  inference(superposition,[],[f1503,f1473])).
fof(f15860,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f10207,f239])).
fof(f15854,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f10207,f688])).
fof(f15822,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f10205,f239])).
fof(f15816,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f10205,f688])).
fof(f15773,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f10203,f239])).
fof(f15767,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f10203,f688])).
fof(f15733,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f8816,f688])).
fof(f15708,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl2),
  inference(superposition,[],[f13846,f688])).
fof(f15696,plain,(
  ( ! [X14,X15,X16] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | $spl2),
  inference(superposition,[],[f13846,f688])).
fof(f15685,plain,(
  ( ! [X2,X0,X1] : (sP9('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f13846,f239])).
fof(f15668,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl2),
  inference(superposition,[],[f13842,f688])).
fof(f15656,plain,(
  ( ! [X14,X15,X16] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X14)),X15,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | $spl2),
  inference(superposition,[],[f13842,f688])).
fof(f15645,plain,(
  ( ! [X2,X0,X1] : (sP9('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f13842,f239])).
fof(f15628,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl2),
  inference(superposition,[],[f13787,f688])).
fof(f15616,plain,(
  ( ! [X14,X15,X16] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | $spl2),
  inference(superposition,[],[f13787,f688])).
fof(f15605,plain,(
  ( ! [X2,X0,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f13787,f239])).
fof(f15588,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl5),
  inference(superposition,[],[f13785,f688])).
fof(f15576,plain,(
  ( ! [X14,X15,X16] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X14)),X15,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | $spl5),
  inference(superposition,[],[f13785,f688])).
fof(f15565,plain,(
  ( ! [X2,X0,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f13785,f239])).
fof(f15531,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl2),
  inference(superposition,[],[f13723,f688])).
fof(f15497,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl2),
  inference(superposition,[],[f13719,f688])).
fof(f15463,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl2),
  inference(superposition,[],[f13662,f688])).
fof(f15346,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f12164,f239])).
fof(f15336,plain,(
  ( ! [X13] : (~sP2('const.bool.COND_3'(s(bool,X13),s(bool,X13),s(bool,X13)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,X13)) ) | $spl5),
  inference(superposition,[],[f12164,f239])).
fof(f15313,plain,(
  ( ! [X0,X1] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X0)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f12040,f239])).
fof(f15303,plain,(
  ( ! [X13] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X13),s(bool,X13),s(bool,X13)),'F_0') | s(bool,'T_0') = s(bool,X13)) ) | $spl5),
  inference(superposition,[],[f12040,f239])).
fof(f15196,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f11649,f239])).
fof(f15190,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X1)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f11649,f688])).
fof(f15155,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f11598,f688])).
fof(f15120,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f9540,f239])).
fof(f15114,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f9540,f688])).
fof(f15079,plain,(
  ( ! [X0,X1] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f9473,f239])).
fof(f15073,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,'F_0'),s(bool,X1)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f9473,f688])).
fof(f15039,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8810,f688])).
fof(f15035,plain,(
  ( ! [X0] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f8810,f853])).
fof(f15004,plain,(
  ( ! [X2,X0,X1] : (~sP10('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8808,f688])).
fof(f15003,plain,(
  ( ! [X0] : (~sP11('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f8808,f390])).
fof(f14970,plain,(
  ( ! [X2,X0,X1] : (~sP9('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8806,f688])).
fof(f14937,plain,(
  ( ! [X2,X0,X1] : (~sP9('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8804,f688])).
fof(f14903,plain,(
  ( ! [X2,X0,X1] : (~sP8('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8800,f688])).
fof(f14868,plain,(
  ( ! [X2,X0,X1] : (~sP8('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8796,f688])).
fof(f14835,plain,(
  ( ! [X2,X0,X1] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8795,f688])).
fof(f14804,plain,(
  ( ! [X2,X0,X1] : (~sP6('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8791,f688])).
fof(f14769,plain,(
  ( ! [X2,X0,X1] : (~sP3('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8787,f688])).
fof(f14734,plain,(
  ( ! [X2,X0,X1] : (~sP4('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8783,f688])).
fof(f14733,plain,(
  ( ! [X0] : (~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f8783,f333])).
fof(f14717,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2547,f688])).
fof(f14705,plain,(
  ( ! [X10,X9] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f2547,f688])).
fof(f14694,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f2547,f239])).
fof(f14676,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2524,f688])).
fof(f14664,plain,(
  ( ! [X10,X9] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'F_0') | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f2524,f688])).
fof(f14653,plain,(
  ( ! [X0,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f2524,f239])).
fof(f14636,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2516,f688])).
fof(f14624,plain,(
  ( ! [X10,X9] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f2516,f688])).
fof(f14613,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f2516,f239])).
fof(f14597,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2484,f688])).
fof(f14585,plain,(
  ( ! [X10,X9] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f2484,f688])).
fof(f14574,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f2484,f239])).
fof(f14571,plain,(
  ( ! [X0] : (sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f2484,f333])).
fof(f14556,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2148,f688])).
fof(f14544,plain,(
  ( ! [X10,X9] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f2148,f688])).
fof(f14533,plain,(
  ( ! [X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f2148,f239])).
fof(f14516,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2138,f688])).
fof(f14504,plain,(
  ( ! [X10,X9] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X9)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) ) | $spl2),
  inference(superposition,[],[f2138,f688])).
fof(f14493,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f2138,f239])).
fof(f14461,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2094,f688])).
fof(f14426,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2075,f688])).
fof(f14372,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2060,f688])).
fof(f14313,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2024,f688])).
fof(f14310,plain,(
  ( ! [X0] : (sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f2024,f333])).
fof(f14258,plain,(
  ( ! [X2,X0,X1] : (~sP3('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f2007,f688])).
fof(f14202,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl2),
  inference(superposition,[],[f1990,f688])).
fof(f14171,plain,(
  ( ! [X2,X0,X1] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f8812,f688])).
fof(f14142,plain,(
  ( ! [X2,X0,X1] : (sP1('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f8811,f688])).
fof(f13955,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK15(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,f(s(X0,sK15(X1,X2,bool,X0))))) )),
  inference(condensation,[],[f13954])).
fof(f13954,plain,(
  ( ! [X10,X8,X11,X9] : (s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK15(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,f(s(X8,sK15(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f13947,f239])).
fof(f13947,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,X11) | s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK15(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,f(s(X8,sK15(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1516,f688])).
fof(f13865,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)))),X74,X75) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)))),X74,X75) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f906,f874])).
fof(f13874,plain,(
  ( ! [X39,X38,X40] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'T_0')),X39,X40) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'T_0')),X39,X40)) ) | $spl2),
  inference(forward_demodulation,[],[f13873,f477])).
fof(f13873,plain,(
  ( ! [X39,X38,X40] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'T_0')),X39,X40) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X40)) ) | $spl2),
  inference(forward_demodulation,[],[f13872,f477])).
fof(f13872,plain,(
  ( ! [X39,X38,X40] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X40) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f13857,f231])).
fof(f13857,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X40) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X40)) ) | $spl2),
  inference(superposition,[],[f906,f477])).
fof(f13866,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f13849,f231])).
fof(f13849,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f906,f688])).
fof(f13842,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f459,f906])).
fof(f13843,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10384,f906])).
fof(f13844,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f8964,f906])).
fof(f13846,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f462,f906])).
fof(f13847,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10385,f906])).
fof(f13848,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f8965,f906])).
fof(f13806,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)))),X74,X75) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)))),X74,X75) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f905,f874])).
fof(f13815,plain,(
  ( ! [X39,X38,X40] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'T_0')),X39,X40) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'T_0')),X39,X40)) ) | $spl2),
  inference(forward_demodulation,[],[f13814,f477])).
fof(f13814,plain,(
  ( ! [X39,X38,X40] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'T_0')),X39,X40) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X40)) ) | $spl2),
  inference(forward_demodulation,[],[f13813,f477])).
fof(f13813,plain,(
  ( ! [X39,X38,X40] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X40) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f13798,f231])).
fof(f13798,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X40) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X38),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X40)) ) | $spl2),
  inference(superposition,[],[f905,f477])).
fof(f13807,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f13790,f231])).
fof(f13790,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f905,f688])).
fof(f13785,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f8755,f905])).
fof(f13787,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f469,f905])).
fof(f13788,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10434,f905])).
fof(f13789,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f9004,f905])).
fof(f13742,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72))),s(bool,X73)),X74,X75) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72))),s(bool,X73)),X74,X75) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f854,f874])).
fof(f13751,plain,(
  ( ! [X39,X38,X40] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X38)),X39,X40) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X38)),X39,X40)) ) | $spl2),
  inference(forward_demodulation,[],[f13750,f477])).
fof(f13750,plain,(
  ( ! [X39,X38,X40] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X38)),X39,X40) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X38)),X39,X40)) ) | $spl2),
  inference(forward_demodulation,[],[f13749,f477])).
fof(f13749,plain,(
  ( ! [X39,X38,X40] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X38)),X39,X40) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X38)),X39,X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f13734,f231])).
fof(f13734,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X38)),X39,X40) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X38)),X39,X40)) ) | $spl2),
  inference(superposition,[],[f854,f477])).
fof(f13743,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f13726,f231])).
fof(f13726,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f854,f688])).
fof(f13719,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f459,f854])).
fof(f13723,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f462,f854])).
fof(f13681,plain,(
  ( ! [X70,X74,X72,X71,X75,X73] : (~p(s(bool,X72)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72))),s(bool,X73)),X74,X75) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72))),s(bool,X73)),X74,X75) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f853,f874])).
fof(f13690,plain,(
  ( ! [X39,X38,X40] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X38)),X39,X40) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X38)),X39,X40)) ) | $spl2),
  inference(forward_demodulation,[],[f13689,f477])).
fof(f13689,plain,(
  ( ! [X39,X38,X40] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X38)),X39,X40) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X38)),X39,X40)) ) | $spl2),
  inference(forward_demodulation,[],[f13688,f477])).
fof(f13688,plain,(
  ( ! [X39,X38,X40] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X38)),X39,X40) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X38)),X39,X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f13673,f231])).
fof(f13673,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X38)),X39,X40) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X38)),X39,X40)) ) | $spl2),
  inference(superposition,[],[f853,f477])).
fof(f13682,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f13665,f231])).
fof(f13665,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X2,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f853,f688])).
fof(f13662,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f469,f853])).
fof(f13445,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f13431,f390])).
fof(f13431,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f231,f1245])).
fof(f13430,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | p(s(bool,X48)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X47)),X48,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(subsumption_resolution,[],[f13423,f231])).
fof(f13423,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | p(s(bool,X48)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X47)),X48,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f1288,f10252])).
fof(f13394,plain,(
  ( ! [X47,X48,X49] : (p(s(bool,X47)) | ~p(s(bool,X48)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X47,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X48)))) ) | $spl5),
  inference(subsumption_resolution,[],[f13383,f231])).
fof(f13383,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X47)) | ~p(s(bool,X48)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X47,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X48)))) ) | $spl5),
  inference(superposition,[],[f1240,f10252])).
fof(f13363,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f13345,f373])).
fof(f13345,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f420,f420,f1129])).
fof(f13276,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2,X3) | p(s(bool,X3)) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f5541,f239])).
fof(f13222,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | p(s(bool,X48)) | ~sP7(X48,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X47)))) ) | $spl5),
  inference(subsumption_resolution,[],[f13214,f231])).
fof(f13214,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | p(s(bool,X48)) | ~sP7(X48,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X47)))) ) | $spl5),
  inference(superposition,[],[f1063,f10252])).
fof(f13192,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | p(s(bool,X48)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X47)),X48)) ) | $spl5),
  inference(subsumption_resolution,[],[f13181,f231])).
fof(f13181,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | p(s(bool,X48)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X47)),X48)) ) | $spl5),
  inference(superposition,[],[f1027,f10252])).
fof(f13159,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | p(s(bool,X48)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X47)),X48)) ) | $spl5),
  inference(subsumption_resolution,[],[f13148,f231])).
fof(f13148,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | p(s(bool,X48)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X47)),X48)) ) | $spl5),
  inference(superposition,[],[f972,f10252])).
fof(f13120,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | p(s(bool,X48)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X47)),X48)) ) | $spl5),
  inference(subsumption_resolution,[],[f13109,f231])).
fof(f13109,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | p(s(bool,X48)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X49),s(bool,X47)),X48)) ) | $spl5),
  inference(superposition,[],[f947,f10252])).
fof(f12973,plain,(
  ( ! [X310,X309,X311] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X309),s(bool,X310)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X311))) | s(bool,'F_0') = s(bool,X310)) ) | $spl0),
  inference(superposition,[],[f8897,f888])).
fof(f12971,plain,(
  ( ! [X304,X303,X305] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X305)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X303),s(bool,X304))) | s(bool,'F_0') = s(bool,X304)) ) | $spl0),
  inference(superposition,[],[f8895,f888])).
fof(f12969,plain,(
  ( ! [X298,X297,X299] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X297),s(bool,X298)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X299))) | s(bool,'F_0') = s(bool,X298)) ) | $spl5),
  inference(superposition,[],[f8664,f888])).
fof(f12967,plain,(
  ( ! [X292,X293,X291] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X293)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X291),s(bool,X292))) | s(bool,'F_0') = s(bool,X292)) ) | $spl5),
  inference(superposition,[],[f8662,f888])).
fof(f12836,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10515,f354])).
fof(f12768,plain,(
  ( ! [X304,X303,X305] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X303),s(bool,X304)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X305))) | s(bool,'F_0') = s(bool,X303)) ) | $spl0),
  inference(superposition,[],[f8897,f836])).
fof(f12766,plain,(
  ( ! [X298,X297,X299] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X299)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X297),s(bool,X298))) | s(bool,'F_0') = s(bool,X297)) ) | $spl0),
  inference(superposition,[],[f8895,f836])).
fof(f12764,plain,(
  ( ! [X292,X293,X291] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X291),s(bool,X292)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X293))) | s(bool,'F_0') = s(bool,X291)) ) | $spl5),
  inference(superposition,[],[f8664,f836])).
fof(f12762,plain,(
  ( ! [X285,X287,X286] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X287)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X285),s(bool,X286))) | s(bool,'F_0') = s(bool,X285)) ) | $spl5),
  inference(superposition,[],[f8662,f836])).
fof(f12638,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10502,f332])).
fof(f12632,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10489,f333])).
fof(f12628,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X48),s(bool,X47)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X49)) ) | $spl5),
  inference(subsumption_resolution,[],[f12623,f231])).
fof(f12623,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X48),s(bool,X47)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X49)) ) | $spl5),
  inference(superposition,[],[f904,f10252])).
fof(f12627,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X45),s(bool,X44)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X46)) ) | $spl0),
  inference(subsumption_resolution,[],[f12622,f231])).
fof(f12622,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X45),s(bool,X44)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X46)) ) | $spl0),
  inference(superposition,[],[f904,f8850])).
fof(f12574,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X48),s(bool,X47)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X49)) ) | $spl5),
  inference(subsumption_resolution,[],[f12569,f231])).
fof(f12569,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X48),s(bool,X47)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X49)) ) | $spl5),
  inference(superposition,[],[f902,f10252])).
fof(f12573,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X45),s(bool,X44)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X46)) ) | $spl0),
  inference(subsumption_resolution,[],[f12568,f231])).
fof(f12568,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X45),s(bool,X44)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X46)) ) | $spl0),
  inference(superposition,[],[f902,f8850])).
fof(f12550,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,X47)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X48),s(bool,X47)),X49,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(subsumption_resolution,[],[f12545,f231])).
fof(f12545,plain,(
  ( ! [X47,X48,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X47)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X48),s(bool,X47)),X49,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f901,f10252])).
fof(f12549,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,X44)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X45),s(bool,X44)),X46,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(subsumption_resolution,[],[f12544,f231])).
fof(f12544,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X45),s(bool,X44)),X46,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f901,f8850])).
fof(f12388,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f448,f8634,f10311,f335])).
fof(f12346,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f10291,f332])).
fof(f12340,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f10278,f333])).
fof(f12289,plain,(
  ~sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8793,f354])).
fof(f12271,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f8785,f333])).
fof(f12265,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f8886,f332])).
fof(f12251,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f8875,f333])).
fof(f12211,plain,(
  ( ! [X25] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')))) ) | $spl5),
  inference(superposition,[],[f873,f10252])).
fof(f12210,plain,(
  ( ! [X24] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0')))) ) | $spl0),
  inference(superposition,[],[f873,f8850])).
fof(f12209,plain,(
  ( ! [X23] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'F_0')))) ) | $spl5),
  inference(superposition,[],[f873,f8779])).
fof(f12153,plain,(
  ( ! [X25] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')))) ) | $spl5),
  inference(superposition,[],[f872,f10252])).
fof(f12152,plain,(
  ( ! [X24] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0')))) ) | $spl0),
  inference(superposition,[],[f872,f8850])).
fof(f12151,plain,(
  ( ! [X23] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'F_0')))) ) | $spl5),
  inference(superposition,[],[f872,f8779])).
fof(f12162,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl5),
  inference(forward_demodulation,[],[f12116,f10252])).
fof(f12116,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10298,f10283,f872,f337])).
fof(f12161,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl0),
  inference(forward_demodulation,[],[f12117,f8850])).
fof(f12117,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f8892,f8879,f872,f337])).
fof(f12094,plain,(
  ( ! [X25] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f871,f10252])).
fof(f12093,plain,(
  ( ! [X24] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f871,f8850])).
fof(f12092,plain,(
  ( ! [X23] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(superposition,[],[f871,f8779])).
fof(f12032,plain,(
  ( ! [X25] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f870,f10252])).
fof(f12031,plain,(
  ( ! [X24] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f870,f8850])).
fof(f12030,plain,(
  ( ! [X23] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(superposition,[],[f870,f8779])).
fof(f12043,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0')) ) | $spl5),
  inference(forward_demodulation,[],[f11991,f10252])).
fof(f11991,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10299,f433,f870,f337])).
fof(f12042,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | $spl0),
  inference(forward_demodulation,[],[f11992,f8850])).
fof(f11992,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f8893,f433,f870,f337])).
fof(f12040,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0')) ) | $spl5),
  inference(forward_demodulation,[],[f11996,f8779])).
fof(f11996,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f8633,f8628,f870,f337])).
fof(f11957,plain,(
  ( ! [X35,X33,X34,X32] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X32),s(bool,X33),s(bool,X34)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X34),s(bool,X35))) | s(bool,'T_0') = s(bool,X32)) ) | $spl0),
  inference(superposition,[],[f8897,f874])).
fof(f11956,plain,(
  ( ! [X30,X31,X29] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)))) ) | $spl0),
  inference(superposition,[],[f8897,f277])).
fof(f11954,plain,(
  ( ! [X25] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)))) ) | ($spl0 | $spl5)),
  inference(superposition,[],[f8897,f10252])).
fof(f11953,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)))) ) | $spl0),
  inference(superposition,[],[f8897,f8850])).
fof(f11952,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)))) ) | ($spl0 | $spl5)),
  inference(superposition,[],[f8897,f8779])).
fof(f11951,plain,(
  ( ! [X22] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X22)))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f8897,f477])).
fof(f11950,plain,(
  ( ! [X21,X20] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X20),s(bool,X21))) | s(bool,'T_0') = s(bool,X20)) ) | $spl0),
  inference(superposition,[],[f8897,f239])).
fof(f11948,plain,(
  ( ! [X14,X15,X16] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,X14),s(bool,X14),s(bool,X15))) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | $spl0),
  inference(superposition,[],[f8897,f688])).
fof(f11947,plain,(
  ( ! [X12,X13] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X13))) | s(bool,'T_0') = s(bool,X12)) ) | $spl0),
  inference(superposition,[],[f8897,f239])).
fof(f11945,plain,(
  ( ! [X6,X8,X7] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X6,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8))) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X7)) ) | $spl0),
  inference(superposition,[],[f8897,f688])).
fof(f11943,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl0),
  inference(superposition,[],[f8897,f688])).
fof(f11937,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl0),
  inference(superposition,[],[f8897,f688])).
fof(f11934,plain,(
  ( ! [X0,X1] : (sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f8897,f333])).
fof(f11900,plain,(
  ( ! [X35,X33,X34,X32] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X34),s(bool,X35)),'const.bool.COND_3'(s(bool,X32),s(bool,X33),s(bool,X34))) | s(bool,'T_0') = s(bool,X32)) ) | $spl0),
  inference(superposition,[],[f8895,f874])).
fof(f11899,plain,(
  ( ! [X30,X31,X29] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X29),s(bool,X30)))) ) | $spl0),
  inference(superposition,[],[f8895,f277])).
fof(f11898,plain,(
  ( ! [X28,X26,X27] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X26),s(bool,X28)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X26),s(bool,X27)))) ) | $spl0),
  inference(superposition,[],[f8895,f276])).
fof(f11897,plain,(
  ( ! [X25] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl0 | $spl5)),
  inference(superposition,[],[f8895,f10252])).
fof(f11896,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f8895,f8850])).
fof(f11895,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl5)),
  inference(superposition,[],[f8895,f8779])).
fof(f11894,plain,(
  ( ! [X22] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X22)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f8895,f477])).
fof(f11893,plain,(
  ( ! [X21,X20] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X20),s(bool,X21)),'F_0') | s(bool,'T_0') = s(bool,X20)) ) | $spl0),
  inference(superposition,[],[f8895,f239])).
fof(f11891,plain,(
  ( ! [X14,X15,X16] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X14),s(bool,X14),s(bool,X15)),'T_0') | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | $spl0),
  inference(superposition,[],[f8895,f688])).
fof(f11890,plain,(
  ( ! [X12,X13] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X13)),X12) | s(bool,'T_0') = s(bool,X12)) ) | $spl0),
  inference(superposition,[],[f8895,f239])).
fof(f11888,plain,(
  ( ! [X6,X8,X7] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)),X6) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X7)) ) | $spl0),
  inference(superposition,[],[f8895,f688])).
fof(f11886,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X0) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl0),
  inference(superposition,[],[f8895,f688])).
fof(f11880,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl0),
  inference(superposition,[],[f8895,f688])).
fof(f11877,plain,(
  ( ! [X0,X1] : (sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f8895,f333])).
fof(f11852,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f8654,f331])).
fof(f11772,plain,(
  ( ! [X102] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X102)))) ) | ($spl0 | $spl5)),
  inference(superposition,[],[f8664,f8850])).
fof(f11770,plain,(
  ( ! [X100] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X100)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl0 | $spl5)),
  inference(superposition,[],[f8662,f8850])).
fof(f11825,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,X64)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X65)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X66)) ) | $spl0),
  inference(subsumption_resolution,[],[f11753,f231])).
fof(f11753,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'T_0')) | ~p(s(bool,X64)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X65)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X66)) ) | $spl0),
  inference(superposition,[],[f852,f8850])).
fof(f11822,plain,(
  ( ! [X59,X60,X58] : (~p(s(bool,X58)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X58),s(bool,X59)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X60)) ) | $spl0),
  inference(subsumption_resolution,[],[f11751,f231])).
fof(f11751,plain,(
  ( ! [X59,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X58)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X58),s(bool,X59)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X60)) ) | $spl0),
  inference(superposition,[],[f850,f8850])).
fof(f11821,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,X55)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(subsumption_resolution,[],[f11750,f231])).
fof(f11750,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X55)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f849,f8850])).
fof(f11744,plain,(
  ( ! [X45] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X45)))) ) | $spl0),
  inference(superposition,[],[f825,f8850])).
fof(f11742,plain,(
  ( ! [X43] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X43)))) ) | $spl0),
  inference(superposition,[],[f824,f8850])).
fof(f11740,plain,(
  ( ! [X41] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f823,f8850])).
fof(f11738,plain,(
  ( ! [X39] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f822,f8850])).
fof(f11812,plain,(
  ( ! [X35,X34] : (~sP8('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X34,X35) | sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X34,X35)) ) | $spl0),
  inference(subsumption_resolution,[],[f11734,f231])).
fof(f11734,plain,(
  ( ! [X35,X34] : (~p(s(bool,'T_0')) | ~sP8('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X34,X35) | sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X34,X35)) ) | $spl0),
  inference(superposition,[],[f406,f8850])).
fof(f11811,plain,(
  ( ! [X33,X32] : (~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X32,X33) | sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X32,X33)) ) | $spl0),
  inference(subsumption_resolution,[],[f11733,f231])).
fof(f11733,plain,(
  ( ! [X33,X32] : (~p(s(bool,'T_0')) | ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X32,X33) | sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X32,X33)) ) | $spl0),
  inference(superposition,[],[f405,f8850])).
fof(f11810,plain,(
  ( ! [X30,X31] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X31,X30)) ) | $spl0),
  inference(subsumption_resolution,[],[f11732,f231])).
fof(f11732,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X31,X30)) ) | $spl0),
  inference(superposition,[],[f402,f8850])).
fof(f11807,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | ~p(s(bool,X25)) | ~sP10(X25,X24,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(subsumption_resolution,[],[f11729,f231])).
fof(f11729,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~sP10(X25,X24,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f395,f8850])).
fof(f11806,plain,(
  ( ! [X23,X22] : (p(s(bool,X22)) | p(s(bool,X23)) | ~sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X23,X22)) ) | $spl0),
  inference(subsumption_resolution,[],[f11728,f231])).
fof(f11728,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | p(s(bool,X22)) | p(s(bool,X23)) | ~sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X23,X22)) ) | $spl0),
  inference(superposition,[],[f385,f8850])).
fof(f11803,plain,(
  ( ! [X17,X16] : (p(s(bool,X16)) | p(s(bool,X17)) | ~sP8('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X16,X17)) ) | $spl0),
  inference(subsumption_resolution,[],[f11725,f231])).
fof(f11725,plain,(
  ( ! [X17,X16] : (~p(s(bool,'T_0')) | p(s(bool,X16)) | p(s(bool,X17)) | ~sP8('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X16,X17)) ) | $spl0),
  inference(superposition,[],[f378,f8850])).
fof(f11802,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | p(s(bool,X15)) | ~sP7(X15,X14,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(subsumption_resolution,[],[f11724,f231])).
fof(f11724,plain,(
  ( ! [X14,X15] : (~p(s(bool,'T_0')) | ~p(s(bool,X14)) | p(s(bool,X15)) | ~sP7(X15,X14,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(superposition,[],[f370,f8850])).
fof(f11801,plain,(
  ( ! [X12,X13] : (~p(s(bool,X12)) | p(s(bool,X13)) | ~sP6(X12,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X13)) ) | $spl0),
  inference(subsumption_resolution,[],[f11723,f231])).
fof(f11723,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X12)) | p(s(bool,X13)) | ~sP6(X12,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X13)) ) | $spl0),
  inference(superposition,[],[f361,f8850])).
fof(f11800,plain,(
  ( ! [X10,X11] : (~p(s(bool,X10)) | p(s(bool,X11)) | ~sP3(X10,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X11)) ) | $spl0),
  inference(subsumption_resolution,[],[f11722,f231])).
fof(f11722,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | p(s(bool,X11)) | ~sP3(X10,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X11)) ) | $spl0),
  inference(superposition,[],[f342,f8850])).
fof(f11799,plain,(
  ( ! [X8,X9] : (~p(s(bool,X8)) | p(s(bool,X9)) | ~sP4(X8,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X9)) ) | $spl0),
  inference(subsumption_resolution,[],[f11721,f231])).
fof(f11721,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X8)) | p(s(bool,X9)) | ~sP4(X8,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X9)) ) | $spl0),
  inference(superposition,[],[f338,f8850])).
fof(f11790,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',X0))))) ) | $spl0),
  inference(subsumption_resolution,[],[f11705,f231])).
fof(f11705,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',X0))))) ) | $spl0),
  inference(superposition,[],[f324,f8850])).
fof(f11692,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f8629,f8661,f335])).
fof(f11670,plain,(
  ( ! [X33,X31,X34,X32] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X31),s(bool,X32),s(bool,X33)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X33),s(bool,X34))) | s(bool,'T_0') = s(bool,X31)) ) | $spl5),
  inference(superposition,[],[f8664,f874])).
fof(f11669,plain,(
  ( ! [X30,X28,X29] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)))) ) | $spl5),
  inference(superposition,[],[f8664,f277])).
fof(f11667,plain,(
  ( ! [X24] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)))) ) | $spl5),
  inference(superposition,[],[f8664,f10252])).
fof(f11666,plain,(
  ( ! [X23] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)))) ) | $spl5),
  inference(superposition,[],[f8664,f8779])).
fof(f11665,plain,(
  ( ! [X22] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X22)))) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f8664,f477])).
fof(f11664,plain,(
  ( ! [X21,X20] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X20),s(bool,X21))) | s(bool,'T_0') = s(bool,X20)) ) | $spl5),
  inference(superposition,[],[f8664,f239])).
fof(f11662,plain,(
  ( ! [X14,X15,X16] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,X14),s(bool,X14),s(bool,X15))) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | $spl5),
  inference(superposition,[],[f8664,f688])).
fof(f11661,plain,(
  ( ! [X12,X13] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X12,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X13))) | s(bool,'T_0') = s(bool,X12)) ) | $spl5),
  inference(superposition,[],[f8664,f239])).
fof(f11659,plain,(
  ( ! [X6,X8,X7] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X6,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8))) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X7)) ) | $spl5),
  inference(superposition,[],[f8664,f688])).
fof(f11657,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8664,f688])).
fof(f11651,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl5),
  inference(superposition,[],[f8664,f688])).
fof(f11649,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f440,f8629,f8664,f336])).
fof(f11619,plain,(
  ( ! [X33,X31,X34,X32] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X33),s(bool,X34)),'const.bool.COND_3'(s(bool,X31),s(bool,X32),s(bool,X33))) | s(bool,'T_0') = s(bool,X31)) ) | $spl5),
  inference(superposition,[],[f8662,f874])).
fof(f11618,plain,(
  ( ! [X30,X28,X29] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29)))) ) | $spl5),
  inference(superposition,[],[f8662,f277])).
fof(f11617,plain,(
  ( ! [X26,X27,X25] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)))) ) | $spl5),
  inference(superposition,[],[f8662,f276])).
fof(f11616,plain,(
  ( ! [X24] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f8662,f10252])).
fof(f11615,plain,(
  ( ! [X23] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(superposition,[],[f8662,f8779])).
fof(f11614,plain,(
  ( ! [X22] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X22)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f8662,f477])).
fof(f11613,plain,(
  ( ! [X21,X20] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X20),s(bool,X21)),'F_0') | s(bool,'T_0') = s(bool,X20)) ) | $spl5),
  inference(superposition,[],[f8662,f239])).
fof(f11611,plain,(
  ( ! [X14,X15,X16] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X14),s(bool,X14),s(bool,X15)),'T_0') | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) ) | $spl5),
  inference(superposition,[],[f8662,f688])).
fof(f11610,plain,(
  ( ! [X12,X13] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X13)),X12) | s(bool,'T_0') = s(bool,X12)) ) | $spl5),
  inference(superposition,[],[f8662,f239])).
fof(f11608,plain,(
  ( ! [X6,X8,X7] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)),X6) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X7)) ) | $spl5),
  inference(superposition,[],[f8662,f688])).
fof(f11606,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X0) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl5),
  inference(superposition,[],[f8662,f688])).
fof(f11600,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl5),
  inference(superposition,[],[f8662,f688])).
fof(f11598,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f448,f8629,f8662,f335])).
fof(f11333,plain,(
  ( ! [X92,X93,X91] : (~p(s(bool,X91)) | p(s(bool,X92)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X93)),X92,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(subsumption_resolution,[],[f11266,f231])).
fof(f11266,plain,(
  ( ! [X92,X93,X91] : (~p(s(bool,'T_0')) | ~p(s(bool,X91)) | p(s(bool,X92)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X93)),X92,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f1287,f10252])).
fof(f11332,plain,(
  ( ! [X90,X88,X89] : (p(s(bool,X88)) | ~p(s(bool,X89)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X88,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X89),s(bool,X90)))) ) | $spl5),
  inference(subsumption_resolution,[],[f11265,f231])).
fof(f11265,plain,(
  ( ! [X90,X88,X89] : (~p(s(bool,'T_0')) | p(s(bool,X88)) | ~p(s(bool,X89)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X88,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X89),s(bool,X90)))) ) | $spl5),
  inference(superposition,[],[f1239,f10252])).
fof(f11327,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,X79)) | p(s(bool,X80)) | ~sP7(X80,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X81)))) ) | $spl5),
  inference(subsumption_resolution,[],[f11262,f231])).
fof(f11262,plain,(
  ( ! [X80,X81,X79] : (~p(s(bool,'T_0')) | ~p(s(bool,X79)) | p(s(bool,X80)) | ~sP7(X80,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X81)))) ) | $spl5),
  inference(superposition,[],[f1062,f10252])).
fof(f11326,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,X76)) | p(s(bool,X77)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X76),s(bool,X78)),X77)) ) | $spl5),
  inference(subsumption_resolution,[],[f11261,f231])).
fof(f11261,plain,(
  ( ! [X78,X76,X77] : (~p(s(bool,'T_0')) | ~p(s(bool,X76)) | p(s(bool,X77)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X76),s(bool,X78)),X77)) ) | $spl5),
  inference(superposition,[],[f1026,f10252])).
fof(f11325,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,X73)) | p(s(bool,X74)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75)),X74)) ) | $spl5),
  inference(subsumption_resolution,[],[f11260,f231])).
fof(f11260,plain,(
  ( ! [X74,X75,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X73)) | p(s(bool,X74)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X75)),X74)) ) | $spl5),
  inference(superposition,[],[f971,f10252])).
fof(f11324,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,X70)) | p(s(bool,X71)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71)) ) | $spl5),
  inference(subsumption_resolution,[],[f11259,f231])).
fof(f11259,plain,(
  ( ! [X70,X72,X71] : (~p(s(bool,'T_0')) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71)) ) | $spl5),
  inference(superposition,[],[f946,f10252])).
fof(f11323,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,X64)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X65)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X66)) ) | $spl5),
  inference(subsumption_resolution,[],[f11257,f231])).
fof(f11257,plain,(
  ( ! [X66,X64,X65] : (~p(s(bool,'T_0')) | ~p(s(bool,X64)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X65)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X66)) ) | $spl5),
  inference(superposition,[],[f852,f10252])).
fof(f11320,plain,(
  ( ! [X59,X60,X58] : (~p(s(bool,X58)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X58),s(bool,X59)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X60)) ) | $spl5),
  inference(subsumption_resolution,[],[f11255,f231])).
fof(f11255,plain,(
  ( ! [X59,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X58)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X58),s(bool,X59)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X60)) ) | $spl5),
  inference(superposition,[],[f850,f10252])).
fof(f11319,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,X55)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(subsumption_resolution,[],[f11254,f231])).
fof(f11254,plain,(
  ( ! [X57,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X55)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f849,f10252])).
fof(f11248,plain,(
  ( ! [X45] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X45)))) ) | $spl5),
  inference(superposition,[],[f825,f10252])).
fof(f11246,plain,(
  ( ! [X43] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X43)))) ) | $spl5),
  inference(superposition,[],[f824,f10252])).
fof(f11244,plain,(
  ( ! [X41] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f823,f10252])).
fof(f11242,plain,(
  ( ! [X39] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f822,f10252])).
fof(f11310,plain,(
  ( ! [X35,X34] : (~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X34,X35) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X34,X35)) ) | $spl5),
  inference(subsumption_resolution,[],[f11238,f231])).
fof(f11238,plain,(
  ( ! [X35,X34] : (~p(s(bool,'T_0')) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X34,X35) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X34,X35)) ) | $spl5),
  inference(superposition,[],[f406,f10252])).
fof(f11309,plain,(
  ( ! [X33,X32] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X32,X33) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X32,X33)) ) | $spl5),
  inference(subsumption_resolution,[],[f11237,f231])).
fof(f11237,plain,(
  ( ! [X33,X32] : (~p(s(bool,'T_0')) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X32,X33) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X32,X33)) ) | $spl5),
  inference(superposition,[],[f405,f10252])).
fof(f11308,plain,(
  ( ! [X30,X31] : (~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X31,X30) | p(s(bool,X31)) | ~p(s(bool,X30))) ) | $spl5),
  inference(subsumption_resolution,[],[f11236,f231])).
fof(f11236,plain,(
  ( ! [X30,X31] : (~p(s(bool,'T_0')) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X31,X30)) ) | $spl5),
  inference(superposition,[],[f402,f10252])).
fof(f11307,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X28,X29) | ~p(s(bool,X28))) ) | $spl5),
  inference(subsumption_resolution,[],[f11235,f231])).
fof(f11235,plain,(
  ( ! [X28,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X28)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X28,X29)) ) | $spl5),
  inference(superposition,[],[f401,f10252])).
fof(f11306,plain,(
  ( ! [X26,X27] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X27,X26) | p(s(bool,X26))) ) | $spl5),
  inference(subsumption_resolution,[],[f11234,f231])).
fof(f11234,plain,(
  ( ! [X26,X27] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X27,X26)) ) | $spl5),
  inference(superposition,[],[f400,f10252])).
fof(f11305,plain,(
  ( ! [X24,X25] : (~sP10(X25,X24,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ~p(s(bool,X25)) | p(s(bool,X24))) ) | $spl5),
  inference(subsumption_resolution,[],[f11233,f231])).
fof(f11233,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | p(s(bool,X24)) | ~p(s(bool,X25)) | ~sP10(X25,X24,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f395,f10252])).
fof(f11304,plain,(
  ( ! [X23,X22] : (~sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X23,X22) | p(s(bool,X23)) | p(s(bool,X22))) ) | $spl5),
  inference(subsumption_resolution,[],[f11232,f231])).
fof(f11232,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | p(s(bool,X22)) | p(s(bool,X23)) | ~sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X23,X22)) ) | $spl5),
  inference(superposition,[],[f385,f10252])).
fof(f11303,plain,(
  ( ! [X21,X20] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X20,X21) | ~p(s(bool,X20))) ) | $spl5),
  inference(subsumption_resolution,[],[f11231,f231])).
fof(f11231,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X20,X21)) ) | $spl5),
  inference(superposition,[],[f384,f10252])).
fof(f11302,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X19,X18) | ~p(s(bool,X18))) ) | $spl5),
  inference(subsumption_resolution,[],[f11230,f231])).
fof(f11230,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X19,X18)) ) | $spl5),
  inference(superposition,[],[f383,f10252])).
fof(f11301,plain,(
  ( ! [X17,X16] : (~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X16,X17) | p(s(bool,X17)) | p(s(bool,X16))) ) | $spl5),
  inference(subsumption_resolution,[],[f11229,f231])).
fof(f11229,plain,(
  ( ! [X17,X16] : (~p(s(bool,'T_0')) | p(s(bool,X16)) | p(s(bool,X17)) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X16,X17)) ) | $spl5),
  inference(superposition,[],[f378,f10252])).
fof(f11300,plain,(
  ( ! [X14,X15] : (~sP7(X15,X14,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | p(s(bool,X15)) | ~p(s(bool,X14))) ) | $spl5),
  inference(subsumption_resolution,[],[f11228,f231])).
fof(f11228,plain,(
  ( ! [X14,X15] : (~p(s(bool,'T_0')) | ~p(s(bool,X14)) | p(s(bool,X15)) | ~sP7(X15,X14,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f370,f10252])).
fof(f11299,plain,(
  ( ! [X12,X13] : (~sP6(X12,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X13) | p(s(bool,X13)) | ~p(s(bool,X12))) ) | $spl5),
  inference(subsumption_resolution,[],[f11227,f231])).
fof(f11227,plain,(
  ( ! [X12,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X12)) | p(s(bool,X13)) | ~sP6(X12,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X13)) ) | $spl5),
  inference(superposition,[],[f361,f10252])).
fof(f11298,plain,(
  ( ! [X10,X11] : (~sP3(X10,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X11) | p(s(bool,X11)) | ~p(s(bool,X10))) ) | $spl5),
  inference(subsumption_resolution,[],[f11226,f231])).
fof(f11226,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,X10)) | p(s(bool,X11)) | ~sP3(X10,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X11)) ) | $spl5),
  inference(superposition,[],[f342,f10252])).
fof(f11297,plain,(
  ( ! [X8,X9] : (~sP4(X8,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X9) | p(s(bool,X9)) | ~p(s(bool,X8))) ) | $spl5),
  inference(subsumption_resolution,[],[f11225,f231])).
fof(f11225,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X8)) | p(s(bool,X9)) | ~sP4(X8,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X9)) ) | $spl5),
  inference(superposition,[],[f338,f10252])).
fof(f11296,plain,(
  ( ! [X7] : (sP1(X7,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | p(s(bool,X7))) ) | $spl5),
  inference(subsumption_resolution,[],[f11224,f231])).
fof(f11224,plain,(
  ( ! [X7] : (~p(s(bool,'T_0')) | p(s(bool,X7)) | sP1(X7,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(superposition,[],[f310,f10252])).
fof(f11295,plain,(
  ( ! [X6] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X6) | p(s(bool,X6))) ) | $spl5),
  inference(subsumption_resolution,[],[f11223,f231])).
fof(f11223,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X6)) ) | $spl5),
  inference(superposition,[],[f307,f10252])).
fof(f11289,plain,(
  s('type.realax.real',sK14) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(forward_demodulation,[],[f11210,f276])).
fof(f11210,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(superposition,[],[f280,f10252])).
fof(f11288,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X0))))) ) | $spl5),
  inference(subsumption_resolution,[],[f11209,f231])).
fof(f11209,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X0))))) ) | $spl5),
  inference(superposition,[],[f324,f10252])).
fof(f11122,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f433,f8634,f8893,f337])).
fof(f11128,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | $spl0),
  inference(forward_demodulation,[],[f11123,f8850])).
fof(f11123,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f433,f822,f8893,f337])).
fof(f11125,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f8629,f440,f8893,f336])).
fof(f11101,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f433,f8633,f8892,f337])).
fof(f11082,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f8628,f440,f8891,f336])).
fof(f11061,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f10283,f8890,f335])).
fof(f11062,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f448,f8879,f8890,f335])).
fof(f11008,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f231,f448,f436,f8879,f335])).
fof(f11010,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f10296,f8879,f335])).
fof(f10775,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f433,f8634,f10299,f337])).
fof(f10781,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0')) ) | $spl5),
  inference(forward_demodulation,[],[f10776,f10252])).
fof(f10776,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f433,f822,f10299,f337])).
fof(f10777,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f433,f440,f10299,f336])).
fof(f10778,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f8629,f440,f10299,f336])).
fof(f10757,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f433,f438,f10298,f337])).
fof(f10760,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f433,f8633,f10298,f337])).
fof(f10752,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f8653,f331])).
fof(f10742,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f431,f440,f10297,f336])).
fof(f10728,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f448,f428,f10296,f335])).
fof(f10731,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f448,f10283,f10296,f335])).
fof(f10724,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f8652,f331])).
fof(f10719,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f10290,f332])).
fof(f10714,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f10284,f332])).
fof(f10708,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f8644,f331])).
fof(f10694,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f448,f435,f10283,f335])).
fof(f10696,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f448,f436,f10283,f335])).
fof(f10689,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f10277,f333])).
fof(f10254,plain,(
  ( ! [X0] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f291])).
fof(f10255,plain,(
  ( ! [X0] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f292])).
fof(f10256,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f306])).
fof(f10258,plain,(
  ~sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f306])).
fof(f10259,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f10241,f306])).
fof(f10260,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f307])).
fof(f10261,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f310])).
fof(f10264,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f334])).
fof(f10265,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f334])).
fof(f10267,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f445,f435,f428,f10241,f335])).
fof(f10268,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f445,f436,f428,f10241,f335])).
fof(f10269,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f446,f435,f429,f10241,f335])).
fof(f10270,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f446,f436,f429,f10241,f335])).
fof(f10271,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f338])).
fof(f10277,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f338])).
fof(f10278,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f338])).
fof(f10283,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f339])).
fof(f10284,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f342])).
fof(f10290,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f342])).
fof(f10291,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f342])).
fof(f10296,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f343])).
fof(f10297,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f347])).
fof(f10298,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f348])).
fof(f10299,plain,(
  ( ! [X0,X1] : (sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f349])).
fof(f10300,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f477,f10241,f351])).
fof(f10301,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f8779,f10241,f351])).
fof(f10302,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f276,f10241,f351])).
fof(f10303,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f277,f10241,f351])).
fof(f10304,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f477,f10241,f351])).
fof(f10305,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f8779,f10241,f351])).
fof(f10306,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f276,f10241,f351])).
fof(f10307,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f277,f10241,f351])).
fof(f10308,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f473,f10241,f352])).
fof(f10309,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f8604,f10241,f352])).
fof(f10310,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f473,f10241,f352])).
fof(f10311,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f8604,f10241,f352])).
fof(f10312,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0,'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f355])).
fof(f10313,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f356])).
fof(f10316,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f452,f10241,f357])).
fof(f10322,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f452,f10241,f357])).
fof(f10323,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10241,f452,f10241,f357])).
fof(f10326,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f361])).
fof(f10332,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f361])).
fof(f10333,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f361])).
fof(f10338,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f362])).
fof(f10339,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f10241,f367])).
fof(f10345,plain,(
  sP7('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f10241,f367])).
fof(f10347,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f10241,f367])).
fof(f10351,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f10241,f367])).
fof(f10352,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f231,f10241,f367])).
fof(f10353,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f10241,f367])).
fof(f10354,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f10241,f10241,f367])).
fof(f10355,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f370])).
fof(f10359,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f370])).
fof(f10360,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f370])).
fof(f10363,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f371])).
fof(f10369,plain,(
  ( ! [X0] : (~sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f372])).
fof(f10379,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f10241,f378])).
fof(f10384,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f379])).
fof(f10385,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f380])).
fof(f10391,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f10241,f383])).
fof(f10397,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f10241,f384])).
fof(f10398,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f10241,f385])).
fof(f10399,plain,(
  ( ! [X0] : (~sP11('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f389])).
fof(f10420,plain,(
  sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f8756,f10241,f394])).
fof(f10422,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f231,f10241,f395])).
fof(f10428,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f231,f10241,f395])).
fof(f10429,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f10241,f395])).
fof(f10434,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f397])).
fof(f10435,plain,(
  sP11('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f10241,f399])).
fof(f10444,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f10241,f401])).
fof(f10445,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f402])).
fof(f10449,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f402])).
fof(f10450,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f402])).
fof(f10451,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0,'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f466,f10241,f405])).
fof(f10452,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f8755,f10241,f405])).
fof(f10453,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f468,f10241,f405])).
fof(f10454,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f469,f10241,f405])).
fof(f10455,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0,'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f458,f10241,f406])).
fof(f10456,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f459,f10241,f406])).
fof(f10457,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f461,f10241,f406])).
fof(f10458,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f462,f10241,f406])).
fof(f10459,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10241,f577])).
fof(f10460,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10241,f588])).
fof(f10461,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X0)) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f10241,f622])).
fof(f10462,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X1)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f845])).
fof(f10463,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f846])).
fof(f10464,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f847])).
fof(f10465,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f848])).
fof(f10466,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),X1,'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f849])).
fof(f10468,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f849])).
fof(f10469,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f10241,f849])).
fof(f10470,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'T_0',X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f850])).
fof(f10472,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f850])).
fof(f10473,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f10241,f850])).
fof(f10474,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),X1,'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f851])).
fof(f10475,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'T_0',X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f852])).
fof(f10477,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f10241,f852])).
fof(f10478,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f10241,f852])).
fof(f10479,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f946])).
fof(f10485,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f946])).
fof(f10486,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f946])).
fof(f10489,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f10241,f952])).
fof(f10492,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f971])).
fof(f10498,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f971])).
fof(f10499,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f971])).
fof(f10502,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f10241,f977])).
fof(f10505,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f1026])).
fof(f10511,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f1026])).
fof(f10512,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f1026])).
fof(f10515,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f10241,f1032])).
fof(f10518,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f1062])).
fof(f10522,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f1062])).
fof(f10523,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f1062])).
fof(f10524,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0','F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f10241,f1122])).
fof(f10529,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0','F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f10241,f1168])).
fof(f10530,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f231,f10241,f1239])).
fof(f10536,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f231,f10241,f1239])).
fof(f10537,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f10241,f10241,f1239])).
fof(f10540,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0','T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f1287])).
fof(f10542,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f10241,f1287])).
fof(f10543,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f10241,f420,f10241,f1287])).
fof(f10209,plain,(
  ( ! [X47] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X47)))) ) | $spl5),
  inference(superposition,[],[f825,f8779])).
fof(f10207,plain,(
  ( ! [X45] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X45)))) ) | $spl5),
  inference(superposition,[],[f824,f8779])).
fof(f10205,plain,(
  ( ! [X43] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X43)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(superposition,[],[f823,f8779])).
fof(f10203,plain,(
  ( ! [X41] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(superposition,[],[f822,f8779])).
fof(f8854,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f306])).
fof(f8856,plain,(
  ~sP1('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f306])).
fof(f8857,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f414,f306])).
fof(f8862,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f334])).
fof(f8863,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f334])).
fof(f8866,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f445,f436,f428,f414,f335])).
fof(f8867,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f446,f435,f429,f414,f335])).
fof(f8868,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f446,f436,f429,f414,f335])).
fof(f8869,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f338])).
fof(f8875,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f338])).
fof(f8886,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f342])).
fof(f8894,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f477,f414,f351])).
fof(f8895,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f276,f414,f351])).
fof(f8896,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f477,f414,f351])).
fof(f8897,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f276,f414,f351])).
fof(f8898,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f473,f414,f352])).
fof(f8899,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f473,f414,f352])).
fof(f8900,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f355])).
fof(f8901,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0',X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f356])).
fof(f8904,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f231,f452,f414,f357])).
fof(f8909,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f231,f452,f414,f357])).
fof(f8910,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f414,f452,f414,f357])).
fof(f8912,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f361])).
fof(f8918,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f361])).
fof(f8923,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f231,f414,f367])).
fof(f8928,plain,(
  sP7('T_0','T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f231,f414,f367])).
fof(f8930,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f414,f367])).
fof(f8934,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f414,f231,f414,f367])).
fof(f8935,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f414,f367])).
fof(f8936,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f414,f414,f367])).
fof(f8937,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f370])).
fof(f8941,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f370])).
fof(f8943,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f371])).
fof(f8949,plain,(
  ( ! [X0] : (~sP9('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f372])).
fof(f8970,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f414,f383])).
fof(f8975,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f414,f384])).
fof(f8977,plain,(
  ( ! [X0] : (~sP11('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f389])).
fof(f8994,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f420,f231,f414,f395])).
fof(f9000,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f414,f395])).
fof(f9005,plain,(
  sP11('F_0','F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f420,f414,f399])).
fof(f9012,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f414,f401])).
fof(f9017,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','T_0') | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f402])).
fof(f9018,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f402])).
fof(f9021,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f469,f414,f405])).
fof(f9023,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f459,f414,f406])).
fof(f9025,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f462,f414,f406])).
fof(f9026,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f414,f577])).
fof(f9027,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f414,f588])).
fof(f9028,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f414,f622])).
fof(f9035,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f849])).
fof(f9039,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f850])).
fof(f9044,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f852])).
fof(f9051,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f946])).
fof(f9055,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f420,f414,f952])).
fof(f9063,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f971])).
fof(f9067,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f420,f414,f977])).
fof(f9075,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f1026])).
fof(f9079,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f420,f414,f1032])).
fof(f9085,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f1062])).
fof(f9098,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f231,f414,f1239])).
fof(f9104,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f1287])).
fof(f9578,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f8651,f331])).
fof(f9573,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f8643,f331])).
fof(f9544,plain,(
  ~sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f8635,f331])).
fof(f9530,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f449,f433,f8634,f337])).
fof(f9540,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl5),
  inference(forward_demodulation,[],[f9531,f8779])).
fof(f9531,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f433,f824,f8634,f337])).
fof(f9532,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f448,f433,f8634,f335])).
fof(f9533,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f448,f8629,f8634,f335])).
fof(f9461,plain,(
  sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f445,f433,f8633,f337])).
fof(f9462,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f446,f433,f8633,f337])).
fof(f9473,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0')) ) | $spl5),
  inference(forward_demodulation,[],[f9465,f8779])).
fof(f9465,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f8628,f822,f8633,f337])).
fof(f9455,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f8630,f332])).
fof(f9394,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f449,f440,f8629,f336])).
fof(f9386,plain,(
  sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f442,f440,f8628,f336])).
fof(f9387,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f420,f443,f440,f8628,f336])).
fof(f9228,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f8625,f333])).
fof(f9029,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X1)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f845])).
fof(f9030,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f846])).
fof(f9031,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f847])).
fof(f9032,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f848])).
fof(f9033,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),X1,'T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f849])).
fof(f9036,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f414,f849])).
fof(f9037,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'T_0',X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f850])).
fof(f9040,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f414,f850])).
fof(f9041,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),X1,'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f851])).
fof(f9042,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'T_0',X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f414,f852])).
fof(f9045,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f414,f852])).
fof(f9046,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f946])).
fof(f9052,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f946])).
fof(f9058,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f971])).
fof(f9064,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f971])).
fof(f9070,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f1026])).
fof(f9076,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f1026])).
fof(f9082,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f1062])).
fof(f9086,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f1062])).
fof(f9087,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0','F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f420,f414,f1122])).
fof(f9092,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0','F_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f420,f414,f1168])).
fof(f9093,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f231,f414,f1239])).
fof(f9099,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f420,f414,f414,f1239])).
fof(f9102,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0','T_0')) ) | $spl0),
  inference(unit_resulting_resolution,[],[f231,f420,f414,f1287])).
fof(f9105,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f414,f420,f414,f1287])).
fof(f8842,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(subsumption_resolution,[],[f8817,f231])).
fof(f8817,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f419,f688])).
fof(f8604,plain,(
  s(bool,'T_0') != s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f249])).
fof(f8609,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f305])).
fof(f8611,plain,(
  ~sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f305])).
fof(f8612,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f419,f305])).
fof(f8615,plain,(
  ~sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f334])).
fof(f8619,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f442,f435,f431,f419,f336])).
fof(f8620,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f443,f436,f431,f419,f336])).
fof(f8624,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f446,f438,f431,f419,f337])).
fof(f8625,plain,(
  ~sP4('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f338])).
fof(f8628,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f340])).
fof(f8629,plain,(
  ( ! [X0,X1] : (sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f341])).
fof(f8630,plain,(
  ~sP3('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f342])).
fof(f8633,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f344])).
fof(f8635,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f419,f346])).
fof(f8643,plain,(
  ~sP2('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f419,f346])).
fof(f8644,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f419,f420,f419,f346])).
fof(f8651,plain,(
  ~sP2('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f419,f346])).
fof(f8652,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f420,f419,f346])).
fof(f8653,plain,(
  ~sP2('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f419,f346])).
fof(f8654,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f419,f419,f346])).
fof(f8659,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f473,f419,f350])).
fof(f8660,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f473,f419,f350])).
fof(f8661,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f477,f419,f353])).
fof(f8662,plain,(
  ( ! [X0,X1] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f276,f419,f353])).
fof(f8663,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f477,f419,f353])).
fof(f8664,plain,(
  ( ! [X0,X1] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f276,f419,f353])).
fof(f8665,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f419,f355])).
fof(f8667,plain,(
  ( ! [X0] : (~sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f419,f356])).
fof(f8669,plain,(
  ~sP6('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f361])).
fof(f8672,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f363])).
fof(f8673,plain,(
  ( ! [X0,X1] : (sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f364])).
fof(f8674,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f365])).
fof(f8678,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f419,f365])).
fof(f8679,plain,(
  ( ! [X0] : (sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f366])).
fof(f8683,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f419,f366])).
fof(f8684,plain,(
  ~sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f370])).
fof(f8685,plain,(
  ( ! [X0] : (~sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f419,f371])).
fof(f8686,plain,(
  ( ! [X0] : (~sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f419,f372])).
fof(f8703,plain,(
  ~sP8('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f419,f378])).
fof(f8708,plain,(
  ~sP8('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f231,f419,f378])).
fof(f8709,plain,(
  ~sP8('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f231,f419,f378])).
fof(f8713,plain,(
  ( ! [X0,X1] : (sP8('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f381])).
fof(f8714,plain,(
  sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f419,f382])).
fof(f8719,plain,(
  sP9('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f419,f382])).
fof(f8721,plain,(
  sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f419,f382])).
fof(f8724,plain,(
  sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f420,f419,f382])).
fof(f8725,plain,(
  sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f419,f420,f419,f382])).
fof(f8726,plain,(
  sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f419,f382])).
fof(f8727,plain,(
  sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f419,f419,f382])).
fof(f8728,plain,(
  ~sP9('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f231,f419,f385])).
fof(f8732,plain,(
  ~sP9('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f419,f385])).
fof(f8733,plain,(
  ~sP9('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f419,f419,f385])).
fof(f8736,plain,(
  ( ! [X0] : (~sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f388])).
fof(f8738,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f388])).
fof(f8739,plain,(
  ( ! [X0] : (~sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f419,f388])).
fof(f8745,plain,(
  ( ! [X0] : (~sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f419,f389])).
fof(f8752,plain,(
  ~sP10('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f395])).
fof(f8755,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f396])).
fof(f8756,plain,(
  ( ! [X0,X1] : (sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f398])).
fof(f8757,plain,(
  sP11('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f231,f419,f399])).
fof(f8760,plain,(
  sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f231,f419,f399])).
fof(f8761,plain,(
  sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f419,f231,f419,f399])).
fof(f8764,plain,(
  ~sP11('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f402])).
fof(f8766,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f454,f419,f407])).
fof(f8767,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0',X0)) ) | $spl5),
  inference(unit_resulting_resolution,[],[f456,f419,f407])).
fof(f8768,plain,(
  ~sP0('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f421])).
fof(f8772,plain,(
  ~sP0('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f419,f421])).
fof(f8773,plain,(
  ~sP0('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f419,f421])).
fof(f8776,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f419,f518])).
fof(f8777,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f419,f528])).
fof(f8778,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f419,f611])).
fof(f8783,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f946])).
fof(f8785,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f419,f952])).
fof(f8787,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f971])).
fof(f8789,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f419,f977])).
fof(f8791,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f1026])).
fof(f8793,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f231,f419,f1032])).
fof(f8795,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f1062])).
fof(f8796,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f419,f1122])).
fof(f8800,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f231,f419,f1122])).
fof(f8801,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f231,f419,f1122])).
fof(f8804,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f420,f419,f1168])).
fof(f8806,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f420,f231,f419,f1168])).
fof(f8807,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f419,f231,f419,f1168])).
fof(f8808,plain,(
  ( ! [X0] : (~sP10('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f1239])).
fof(f8810,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0')) ) | $spl5),
  inference(unit_resulting_resolution,[],[f231,f231,f419,f1287])).
fof(f8811,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f419,f2728])).
fof(f8812,plain,(
  ( ! [X0] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f419,f2754])).
fof(f8816,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl2 | $spl5)),
  inference(unit_resulting_resolution,[],[f419,f5368])).
fof(f253,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.real.REAL_MAX_LE','thm.bool.EQ_CLAUSES|split|3')).
fof(f254,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f159])).
fof(f836,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f276,f239])).
fof(f870,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) )),
  inference(unit_resulting_resolution,[],[f420,f277,f353])).
fof(f871,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) )),
  inference(unit_resulting_resolution,[],[f231,f277,f351])).
fof(f873,plain,(
  ( ! [X0,X1] : (sP5('T_0',X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f231,f277,f351])).
fof(f888,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X1)) )),
  inference(superposition,[],[f277,f239])).
fof(f897,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,X20)) | sP0(X21,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X19),s(bool,X20)))) )),
  inference(superposition,[],[f291,f277])).
fof(f898,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X23)) | sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X22),s(bool,X23)),X24)) )),
  inference(superposition,[],[f292,f277])).
fof(f901,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | ~p(s(bool,X32)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X32)),X34,X33)) )),
  inference(superposition,[],[f383,f277])).
fof(f902,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | ~p(s(bool,X36)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,X36)),X37,X38)) )),
  inference(superposition,[],[f384,f277])).
fof(f903,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X40)),X42,X41)) )),
  inference(superposition,[],[f400,f277])).
fof(f904,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X45)) | ~p(s(bool,X44)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X44)),X45,X46)) )),
  inference(superposition,[],[f401,f277])).
fof(f905,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X48)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X47),s(bool,X48)),X49,X50) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X47),s(bool,X48)),X49,X50)) )),
  inference(superposition,[],[f405,f277])).
fof(f906,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X52)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X52)),X53,X54) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X52)),X53,X54)) )),
  inference(superposition,[],[f406,f277])).
fof(f1123,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X15)) | p(s(bool,X16)) | p(s(bool,X17)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X16,X17)) )),
  inference(superposition,[],[f378,f277])).
fof(f1169,plain,(
  ( ! [X14,X17,X15,X16] : (~p(s(bool,X15)) | p(s(bool,X16)) | p(s(bool,X17)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15)),X17,X16)) )),
  inference(superposition,[],[f385,f277])).
fof(f1515,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK15(X0,X1,X2,bool))) )),
  inference(superposition,[],[f323,f239])).
fof(f1516,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK15(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK15(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f323,f239])).
fof(f1706,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X2)),X2)) )),
  inference(unit_resulting_resolution,[],[f277,f1308,f351])).
fof(f1711,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f277,f1308,f351])).
fof(f1985,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f438,f431,f822,f337])).
fof(f1994,plain,(
  ( ! [X6,X5] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X6)),X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f822,f239])).
fof(f1996,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f822,f277])).
fof(f2028,plain,(
  ( ! [X6,X5] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X6)),X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f823,f239])).
fof(f2030,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f823,f277])).
fof(f2057,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f440,f433,f824,f336])).
fof(f2064,plain,(
  ( ! [X6,X5] : (~sP5('F_0',X5,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X6))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f824,f239])).
fof(f2066,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) )),
  inference(superposition,[],[f824,f277])).
fof(f2098,plain,(
  ( ! [X6,X5] : (sP5('T_0',X5,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X6))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f825,f239])).
fof(f2100,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) )),
  inference(superposition,[],[f825,f277])).
fof(f2124,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f438,f431,f870,f337])).
fof(f2126,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f448,f433,f870,f335])).
fof(f2138,plain,(
  ( ! [X0] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f870,f477])).
fof(f2142,plain,(
  ( ! [X6,X5] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,'F_0')),X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f870,f239])).
fof(f2144,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f870,f277])).
fof(f2148,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(forward_demodulation,[],[f2120,f477])).
fof(f2120,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f449,f433,f870,f337])).
fof(f2472,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f871,f333])).
fof(f2484,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f871,f477])).
fof(f2488,plain,(
  ( ! [X6,X5] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,'F_0')),X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f871,f239])).
fof(f2490,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)))) )),
  inference(superposition,[],[f871,f277])).
fof(f2501,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f445,f428,f872,f337])).
fof(f2504,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f440,f433,f872,f336])).
fof(f2516,plain,(
  ( ! [X0] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl2),
  inference(superposition,[],[f872,f477])).
fof(f2520,plain,(
  ( ! [X6,X5] : (~sP5('F_0',X5,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f872,f239])).
fof(f2524,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl2),
  inference(forward_demodulation,[],[f2502,f477])).
fof(f2502,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f446,f429,f872,f337])).
fof(f2535,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) )),
  inference(unit_resulting_resolution,[],[f873,f333])).
fof(f2547,plain,(
  ( ! [X0] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl2),
  inference(superposition,[],[f873,f477])).
fof(f2551,plain,(
  ( ! [X6,X5] : (sP5('T_0',X5,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f873,f239])).
fof(f2623,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f231,f897])).
fof(f2657,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1)) )),
  inference(unit_resulting_resolution,[],[f231,f898])).
fof(f2775,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f899])).
fof(f2784,plain,(
  ( ! [X0,X1] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X0) | p(s(bool,X0))) ) | $spl2),
  inference(forward_demodulation,[],[f2783,f477])).
fof(f2783,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X0)) ) | $spl2),
  inference(subsumption_resolution,[],[f2776,f231])).
fof(f2776,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X0)) ) | $spl2),
  inference(superposition,[],[f899,f477])).
fof(f2805,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f231,f420,f900])).
fof(f2814,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0'))) | p(s(bool,X0))) ) | $spl2),
  inference(forward_demodulation,[],[f2813,f477])).
fof(f2813,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | sP1(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))))) ) | $spl2),
  inference(subsumption_resolution,[],[f2806,f231])).
fof(f2806,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))))) ) | $spl2),
  inference(superposition,[],[f900,f477])).
fof(f2855,plain,(
  ( ! [X28,X26,X27] : (s(bool,X27) = s(bool,X28) | s(bool,'T_0') = s(bool,X28) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X27)))) )),
  inference(superposition,[],[f688,f277])).
fof(f2881,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') = s(bool,X19) | s(bool,X20) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X18),s(bool,X19))) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f688,f277])).
fof(f2935,plain,(
  ( ! [X134,X135,X133] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X135),s(bool,X134)),X133) | s(bool,'T_0') = s(bool,X134) | s(bool,'T_0') = s(bool,X133)) )),
  inference(superposition,[],[f870,f688])).
fof(f2937,plain,(
  ( ! [X140,X141,X139] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X141),s(bool,X140)),X139) | s(bool,'T_0') = s(bool,X140) | s(bool,'T_0') = s(bool,X139)) )),
  inference(superposition,[],[f871,f688])).
fof(f2938,plain,(
  ( ! [X144,X142,X143] : (~sP5('F_0',X142,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X144),s(bool,X143))) | s(bool,'T_0') = s(bool,X143) | s(bool,'T_0') = s(bool,X142)) )),
  inference(superposition,[],[f872,f688])).
fof(f2940,plain,(
  ( ! [X149,X150,X148] : (sP5('T_0',X148,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X150),s(bool,X149))) | s(bool,'T_0') = s(bool,X149) | s(bool,'T_0') = s(bool,X148)) )),
  inference(superposition,[],[f873,f688])).
fof(f3105,plain,(
  ( ! [X161,X159,X160] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X160),s(bool,X159)),'T_0') | s(bool,X159) = s(bool,X161) | s(bool,'T_0') = s(bool,X161)) )),
  inference(superposition,[],[f870,f688])).
fof(f3107,plain,(
  ( ! [X167,X165,X166] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X166),s(bool,X165)),'T_0') | s(bool,X165) = s(bool,X167) | s(bool,'T_0') = s(bool,X167)) )),
  inference(superposition,[],[f871,f688])).
fof(f3108,plain,(
  ( ! [X169,X170,X168] : (~sP5('F_0','T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X169),s(bool,X168))) | s(bool,X168) = s(bool,X170) | s(bool,'T_0') = s(bool,X170)) )),
  inference(superposition,[],[f872,f688])).
fof(f3110,plain,(
  ( ! [X175,X176,X174] : (sP5('T_0','T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X175),s(bool,X174))) | s(bool,X174) = s(bool,X176) | s(bool,'T_0') = s(bool,X176)) )),
  inference(superposition,[],[f873,f688])).
fof(f3160,plain,(
  ( ! [X134,X135,X133] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X134),s(bool,'T_0')),X133) | s(bool,X133) = s(bool,X135) | s(bool,'T_0') = s(bool,X135)) )),
  inference(superposition,[],[f870,f688])).
fof(f3162,plain,(
  ( ! [X140,X141,X139] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X140),s(bool,'T_0')),X139) | s(bool,X139) = s(bool,X141) | s(bool,'T_0') = s(bool,X141)) )),
  inference(superposition,[],[f871,f688])).
fof(f3163,plain,(
  ( ! [X144,X142,X143] : (~sP5('F_0',X142,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X143),s(bool,'T_0'))) | s(bool,X142) = s(bool,X144) | s(bool,'T_0') = s(bool,X144)) )),
  inference(superposition,[],[f872,f688])).
fof(f3165,plain,(
  ( ! [X149,X150,X148] : (sP5('T_0',X148,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X149),s(bool,'T_0'))) | s(bool,X148) = s(bool,X150) | s(bool,'T_0') = s(bool,X150)) )),
  inference(superposition,[],[f873,f688])).
fof(f3622,plain,(
  ( ! [X156,X154,X157,X155] : (sP0(X155,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X156),s(bool,X154))) | s(bool,X154) = s(bool,X157) | s(bool,'T_0') = s(bool,X157)) )),
  inference(subsumption_resolution,[],[f3167,f231])).
fof(f3167,plain,(
  ( ! [X156,X154,X157,X155] : (~p(s(bool,'T_0')) | sP0(X155,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X156),s(bool,X154))) | s(bool,X154) = s(bool,X157) | s(bool,'T_0') = s(bool,X157)) )),
  inference(superposition,[],[f897,f688])).
fof(f3623,plain,(
  ( ! [X158,X161,X159,X160] : (sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X159),s(bool,X158)),X160) | s(bool,X158) = s(bool,X161) | s(bool,'T_0') = s(bool,X161)) )),
  inference(subsumption_resolution,[],[f3168,f231])).
fof(f3168,plain,(
  ( ! [X158,X161,X159,X160] : (~p(s(bool,'T_0')) | sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X159),s(bool,X158)),X160) | s(bool,X158) = s(bool,X161) | s(bool,'T_0') = s(bool,X161)) )),
  inference(superposition,[],[f898,f688])).
fof(f3624,plain,(
  ( ! [X165,X163,X164,X162] : (p(s(bool,X163)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X164),s(bool,X162)),X163) | s(bool,X162) = s(bool,X165) | s(bool,'T_0') = s(bool,X165)) )),
  inference(subsumption_resolution,[],[f3169,f231])).
fof(f3169,plain,(
  ( ! [X165,X163,X164,X162] : (~p(s(bool,'T_0')) | p(s(bool,X163)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X164),s(bool,X162)),X163) | s(bool,X162) = s(bool,X165) | s(bool,'T_0') = s(bool,X165)) )),
  inference(superposition,[],[f899,f688])).
fof(f3625,plain,(
  ( ! [X167,X169,X166,X168] : (p(s(bool,X167)) | sP1(X167,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X168),s(bool,X166))) | s(bool,X166) = s(bool,X169) | s(bool,'T_0') = s(bool,X169)) )),
  inference(subsumption_resolution,[],[f3170,f231])).
fof(f3170,plain,(
  ( ! [X167,X169,X166,X168] : (~p(s(bool,'T_0')) | p(s(bool,X167)) | sP1(X167,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X168),s(bool,X166))) | s(bool,X166) = s(bool,X169) | s(bool,'T_0') = s(bool,X169)) )),
  inference(superposition,[],[f900,f688])).
fof(f5285,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X55)),X56,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)))) )),
  inference(superposition,[],[f849,f277])).
fof(f5317,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X55)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X56)) )),
  inference(superposition,[],[f850,f277])).
fof(f5404,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X55)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X56)) )),
  inference(superposition,[],[f852,f277])).
fof(f5449,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f231,f901])).
fof(f5461,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X50),s(bool,X49)),X51,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)))) )),
  inference(superposition,[],[f901,f276])).
fof(f5462,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X54)),X56,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)))) )),
  inference(superposition,[],[f901,f277])).
fof(f5463,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5450,f231])).
fof(f5450,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f901,f688])).
fof(f5469,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),X40,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5458,f231])).
fof(f5458,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),X40,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f901,f477])).
fof(f5487,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f231,f231,f902])).
fof(f5499,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X50),s(bool,X49)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X51)) )),
  inference(superposition,[],[f902,f276])).
fof(f5500,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X54)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X56)) )),
  inference(superposition,[],[f902,f277])).
fof(f5501,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5488,f231])).
fof(f5488,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f902,f688])).
fof(f5507,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f5496,f231])).
fof(f5496,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(superposition,[],[f902,f477])).
fof(f5520,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f903])).
fof(f5534,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X0)),X3,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5521,f231])).
fof(f5521,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X0)),X3,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f903,f688])).
fof(f5541,plain,(
  ( ! [X39,X38,X40] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,'T_0')),X40,X38) | p(s(bool,X38))) ) | $spl2),
  inference(forward_demodulation,[],[f5540,f477])).
fof(f5540,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X40,X38)) ) | $spl2),
  inference(subsumption_resolution,[],[f5529,f231])).
fof(f5529,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X40,X38)) ) | $spl2),
  inference(superposition,[],[f903,f477])).
fof(f5558,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f231,f231,f904])).
fof(f5570,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X50),s(bool,X49)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X51)) )),
  inference(superposition,[],[f904,f276])).
fof(f5571,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X53)) | ~p(s(bool,X54)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X54)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X56)) )),
  inference(superposition,[],[f904,f277])).
fof(f5572,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5559,f231])).
fof(f5559,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f904,f688])).
fof(f5578,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f5567,f231])).
fof(f5567,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X38)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(superposition,[],[f904,f477])).
fof(f5597,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,'F_0') = s(bool,X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f836,f688])).
fof(f5615,plain,(
  ( ! [X30,X28,X29] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X30))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29)))) )),
  inference(superposition,[],[f836,f276])).
fof(f5616,plain,(
  ( ! [X33,X31,X32] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X32),s(bool,X33))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X32)))) )),
  inference(superposition,[],[f836,f277])).
fof(f5664,plain,(
  ( ! [X101,X102,X100] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X102)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X100),s(bool,X101))) | s(bool,'F_0') = s(bool,X100)) )),
  inference(superposition,[],[f822,f836])).
fof(f5666,plain,(
  ( ! [X107,X108,X106] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X108)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X106),s(bool,X107))) | s(bool,'F_0') = s(bool,X106)) )),
  inference(superposition,[],[f823,f836])).
fof(f5668,plain,(
  ( ! [X114,X112,X113] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X112),s(bool,X113)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X114))) | s(bool,'F_0') = s(bool,X112)) )),
  inference(superposition,[],[f824,f836])).
fof(f5670,plain,(
  ( ! [X118,X120,X119] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X118),s(bool,X119)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X120))) | s(bool,'F_0') = s(bool,X118)) )),
  inference(superposition,[],[f825,f836])).
fof(f5681,plain,(
  ( ! [X165,X163,X164] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X165),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X163),s(bool,X164))) | s(bool,'F_0') = s(bool,X163)) )),
  inference(superposition,[],[f870,f836])).
fof(f5683,plain,(
  ( ! [X171,X169,X170] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X171),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X169),s(bool,X170))) | s(bool,'F_0') = s(bool,X169)) )),
  inference(superposition,[],[f871,f836])).
fof(f5684,plain,(
  ( ! [X173,X174,X172] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X172),s(bool,X173)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X174),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X172)) )),
  inference(superposition,[],[f872,f836])).
fof(f5686,plain,(
  ( ! [X180,X178,X179] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X178),s(bool,X179)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X180),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X178)) )),
  inference(superposition,[],[f873,f836])).
fof(f5735,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f5638,f231])).
fof(f5638,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X6)) )),
  inference(superposition,[],[f253,f836])).
fof(f5737,plain,(
  ( ! [X18,X16] : (s(bool,X16) = s(bool,X18) | ~p(s(bool,X18)) | s(bool,'F_0') = s(bool,X16)) )),
  inference(forward_demodulation,[],[f5736,f276])).
fof(f5736,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X16),s(bool,X17))) | s(bool,'F_0') = s(bool,X16)) )),
  inference(subsumption_resolution,[],[f5642,f231])).
fof(f5642,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | s(bool,X18) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X16),s(bool,X17))) | s(bool,'F_0') = s(bool,X16)) )),
  inference(superposition,[],[f285,f836])).
fof(f5738,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20))) | s(bool,'F_0') = s(bool,X19)) )),
  inference(subsumption_resolution,[],[f5643,f231])).
fof(f5643,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20))) | s(bool,'F_0') = s(bool,X19)) )),
  inference(superposition,[],[f291,f836])).
fof(f5739,plain,(
  ( ! [X24,X23,X22] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24) | s(bool,'F_0') = s(bool,X22)) )),
  inference(subsumption_resolution,[],[f5644,f231])).
fof(f5644,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24) | s(bool,'F_0') = s(bool,X22)) )),
  inference(superposition,[],[f292,f836])).
fof(f5740,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X27)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27) | s(bool,'F_0') = s(bool,X25)) )),
  inference(subsumption_resolution,[],[f5645,f231])).
fof(f5645,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X27)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27) | s(bool,'F_0') = s(bool,X25)) )),
  inference(superposition,[],[f307,f836])).
fof(f5741,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X30)) | sP1(X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29))) | s(bool,'F_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5646,f231])).
fof(f5646,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X30)) | sP1(X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29))) | s(bool,'F_0') = s(bool,X28)) )),
  inference(superposition,[],[f310,f836])).
fof(f5742,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34) | s(bool,'F_0') = s(bool,X31)) )),
  inference(subsumption_resolution,[],[f5647,f231])).
fof(f5647,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34) | s(bool,'F_0') = s(bool,X31)) )),
  inference(superposition,[],[f338,f836])).
fof(f5743,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X35),s(bool,X36)),X38) | s(bool,'F_0') = s(bool,X35)) )),
  inference(subsumption_resolution,[],[f5648,f231])).
fof(f5648,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X35),s(bool,X36)),X38) | s(bool,'F_0') = s(bool,X35)) )),
  inference(superposition,[],[f342,f836])).
fof(f5744,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6(X41,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)),X42) | s(bool,'F_0') = s(bool,X39)) )),
  inference(subsumption_resolution,[],[f5649,f231])).
fof(f5649,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6(X41,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)),X42) | s(bool,'F_0') = s(bool,X39)) )),
  inference(superposition,[],[f361,f836])).
fof(f5745,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X45)) | p(s(bool,X46)) | ~sP7(X46,X45,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44))) | s(bool,'F_0') = s(bool,X43)) )),
  inference(subsumption_resolution,[],[f5650,f231])).
fof(f5650,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X45)) | p(s(bool,X46)) | ~sP7(X46,X45,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44))) | s(bool,'F_0') = s(bool,X43)) )),
  inference(superposition,[],[f370,f836])).
fof(f5746,plain,(
  ( ! [X47,X50,X48,X49] : (p(s(bool,X49)) | p(s(bool,X50)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f5651,f231])).
fof(f5651,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | p(s(bool,X50)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f378,f836])).
fof(f5747,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X53)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X54,X53) | s(bool,'F_0') = s(bool,X51)) )),
  inference(subsumption_resolution,[],[f5652,f231])).
fof(f5652,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X53)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X54,X53) | s(bool,'F_0') = s(bool,X51)) )),
  inference(superposition,[],[f383,f836])).
fof(f5748,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X57)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,X58) | s(bool,'F_0') = s(bool,X55)) )),
  inference(subsumption_resolution,[],[f5653,f231])).
fof(f5653,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56)),X57,X58) | s(bool,'F_0') = s(bool,X55)) )),
  inference(superposition,[],[f384,f836])).
fof(f5749,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,X61)) | p(s(bool,X62)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X59),s(bool,X60)),X62,X61) | s(bool,'F_0') = s(bool,X59)) )),
  inference(subsumption_resolution,[],[f5654,f231])).
fof(f5654,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X61)) | p(s(bool,X62)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X59),s(bool,X60)),X62,X61) | s(bool,'F_0') = s(bool,X59)) )),
  inference(superposition,[],[f385,f836])).
fof(f5750,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP10(X66,X65,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X63),s(bool,X64))) | s(bool,'F_0') = s(bool,X63)) )),
  inference(subsumption_resolution,[],[f5655,f231])).
fof(f5655,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP10(X66,X65,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X63),s(bool,X64))) | s(bool,'F_0') = s(bool,X63)) )),
  inference(superposition,[],[f395,f836])).
fof(f5751,plain,(
  ( ! [X70,X68,X69,X67] : (p(s(bool,X69)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X67),s(bool,X68)),X70,X69) | s(bool,'F_0') = s(bool,X67)) )),
  inference(subsumption_resolution,[],[f5656,f231])).
fof(f5656,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X69)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X67),s(bool,X68)),X70,X69) | s(bool,'F_0') = s(bool,X67)) )),
  inference(superposition,[],[f400,f836])).
fof(f5752,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,X73)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X71),s(bool,X72)),X73,X74) | s(bool,'F_0') = s(bool,X71)) )),
  inference(subsumption_resolution,[],[f5657,f231])).
fof(f5657,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X73)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X71),s(bool,X72)),X73,X74) | s(bool,'F_0') = s(bool,X71)) )),
  inference(superposition,[],[f401,f836])).
fof(f5753,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X77)) | p(s(bool,X78)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X75),s(bool,X76)),X78,X77) | s(bool,'F_0') = s(bool,X75)) )),
  inference(subsumption_resolution,[],[f5658,f231])).
fof(f5658,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X77)) | p(s(bool,X78)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X75),s(bool,X76)),X78,X77) | s(bool,'F_0') = s(bool,X75)) )),
  inference(superposition,[],[f402,f836])).
fof(f5754,plain,(
  ( ! [X80,X81,X79,X82] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X80)),X81,X82) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X80)),X81,X82) | s(bool,'F_0') = s(bool,X79)) )),
  inference(subsumption_resolution,[],[f5659,f231])).
fof(f5659,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X80)),X81,X82) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X79),s(bool,X80)),X81,X82) | s(bool,'F_0') = s(bool,X79)) )),
  inference(superposition,[],[f405,f836])).
fof(f5755,plain,(
  ( ! [X85,X83,X86,X84] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X83),s(bool,X84)),X85,X86) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X83),s(bool,X84)),X85,X86) | s(bool,'F_0') = s(bool,X83)) )),
  inference(subsumption_resolution,[],[f5660,f231])).
fof(f5660,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X83),s(bool,X84)),X85,X86) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X83),s(bool,X84)),X85,X86) | s(bool,'F_0') = s(bool,X83)) )),
  inference(superposition,[],[f406,f836])).
fof(f5764,plain,(
  ( ! [X144,X142,X140,X143,X141] : (~p(s(bool,X142)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X142),s(bool,X143)),X144,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X140),s(bool,X141))) | s(bool,'F_0') = s(bool,X140)) )),
  inference(subsumption_resolution,[],[f5676,f231])).
fof(f5676,plain,(
  ( ! [X144,X142,X140,X143,X141] : (~p(s(bool,'T_0')) | ~p(s(bool,X142)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X142),s(bool,X143)),X144,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X140),s(bool,X141))) | s(bool,'F_0') = s(bool,X140)) )),
  inference(superposition,[],[f849,f836])).
fof(f5765,plain,(
  ( ! [X146,X149,X147,X145,X148] : (~p(s(bool,X147)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X147),s(bool,X148)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X145),s(bool,X146)),X149) | s(bool,'F_0') = s(bool,X145)) )),
  inference(subsumption_resolution,[],[f5677,f231])).
fof(f5677,plain,(
  ( ! [X146,X149,X147,X145,X148] : (~p(s(bool,'T_0')) | ~p(s(bool,X147)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X147),s(bool,X148)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X145),s(bool,X146)),X149) | s(bool,'F_0') = s(bool,X145)) )),
  inference(superposition,[],[f850,f836])).
fof(f5768,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,X157)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X157),s(bool,X158)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X155),s(bool,X156)),X159) | s(bool,'F_0') = s(bool,X155)) )),
  inference(subsumption_resolution,[],[f5679,f231])).
fof(f5679,plain,(
  ( ! [X158,X156,X159,X157,X155] : (~p(s(bool,'T_0')) | ~p(s(bool,X157)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X157),s(bool,X158)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X155),s(bool,X156)),X159) | s(bool,'F_0') = s(bool,X155)) )),
  inference(superposition,[],[f852,f836])).
fof(f5770,plain,(
  ( ! [X187,X186,X184] : (sP0(X186,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X187),s(bool,X184))) | s(bool,'F_0') = s(bool,X184)) )),
  inference(forward_demodulation,[],[f5769,f276])).
fof(f5769,plain,(
  ( ! [X187,X185,X186,X184] : (sP0(X186,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X187),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X184),s(bool,X185))))) | s(bool,'F_0') = s(bool,X184)) )),
  inference(subsumption_resolution,[],[f5688,f231])).
fof(f5688,plain,(
  ( ! [X187,X185,X186,X184] : (~p(s(bool,'T_0')) | sP0(X186,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X187),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X184),s(bool,X185))))) | s(bool,'F_0') = s(bool,X184)) )),
  inference(superposition,[],[f897,f836])).
fof(f5772,plain,(
  ( ! [X191,X190,X188] : (sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X190),s(bool,X188)),X191) | s(bool,'F_0') = s(bool,X188)) )),
  inference(forward_demodulation,[],[f5771,f276])).
fof(f5771,plain,(
  ( ! [X191,X189,X190,X188] : (sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X190),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X188),s(bool,X189)))),X191) | s(bool,'F_0') = s(bool,X188)) )),
  inference(subsumption_resolution,[],[f5689,f231])).
fof(f5689,plain,(
  ( ! [X191,X189,X190,X188] : (~p(s(bool,'T_0')) | sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X190),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X188),s(bool,X189)))),X191) | s(bool,'F_0') = s(bool,X188)) )),
  inference(superposition,[],[f898,f836])).
fof(f5774,plain,(
  ( ! [X194,X192,X195] : (sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X195),s(bool,X192)),X194) | p(s(bool,X194)) | s(bool,'F_0') = s(bool,X192)) )),
  inference(forward_demodulation,[],[f5773,f276])).
fof(f5773,plain,(
  ( ! [X194,X192,X195,X193] : (p(s(bool,X194)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X195),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X192),s(bool,X193)))),X194) | s(bool,'F_0') = s(bool,X192)) )),
  inference(subsumption_resolution,[],[f5690,f231])).
fof(f5690,plain,(
  ( ! [X194,X192,X195,X193] : (~p(s(bool,'T_0')) | p(s(bool,X194)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X195),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X192),s(bool,X193)))),X194) | s(bool,'F_0') = s(bool,X192)) )),
  inference(superposition,[],[f899,f836])).
fof(f5776,plain,(
  ( ! [X198,X196,X199] : (sP1(X198,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X199),s(bool,X196))) | p(s(bool,X198)) | s(bool,'F_0') = s(bool,X196)) )),
  inference(forward_demodulation,[],[f5775,f276])).
fof(f5775,plain,(
  ( ! [X198,X196,X199,X197] : (p(s(bool,X198)) | sP1(X198,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X199),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X196),s(bool,X197))))) | s(bool,'F_0') = s(bool,X196)) )),
  inference(subsumption_resolution,[],[f5691,f231])).
fof(f5691,plain,(
  ( ! [X198,X196,X199,X197] : (~p(s(bool,'T_0')) | p(s(bool,X198)) | sP1(X198,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X199),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X196),s(bool,X197))))) | s(bool,'F_0') = s(bool,X196)) )),
  inference(superposition,[],[f900,f836])).
fof(f5777,plain,(
  ( ! [X204,X202,X200,X203,X201] : (~p(s(bool,X202)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X203),s(bool,X202)),X204,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X200),s(bool,X201))) | s(bool,'F_0') = s(bool,X200)) )),
  inference(subsumption_resolution,[],[f5692,f231])).
fof(f5692,plain,(
  ( ! [X204,X202,X200,X203,X201] : (~p(s(bool,'T_0')) | ~p(s(bool,X202)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X203),s(bool,X202)),X204,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X200),s(bool,X201))) | s(bool,'F_0') = s(bool,X200)) )),
  inference(superposition,[],[f901,f836])).
fof(f5778,plain,(
  ( ! [X208,X206,X209,X207,X205] : (~p(s(bool,X207)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X208),s(bool,X207)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X205),s(bool,X206)),X209) | s(bool,'F_0') = s(bool,X205)) )),
  inference(subsumption_resolution,[],[f5693,f231])).
fof(f5693,plain,(
  ( ! [X208,X206,X209,X207,X205] : (~p(s(bool,'T_0')) | ~p(s(bool,X207)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X208),s(bool,X207)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X205),s(bool,X206)),X209) | s(bool,'F_0') = s(bool,X205)) )),
  inference(superposition,[],[f902,f836])).
fof(f5780,plain,(
  ( ! [X212,X210,X213,X214] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X213),s(bool,X210)),X214,X212) | p(s(bool,X212)) | s(bool,'F_0') = s(bool,X210)) )),
  inference(forward_demodulation,[],[f5779,f276])).
fof(f5779,plain,(
  ( ! [X212,X210,X213,X211,X214] : (p(s(bool,X212)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X213),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X210),s(bool,X211)))),X214,X212) | s(bool,'F_0') = s(bool,X210)) )),
  inference(subsumption_resolution,[],[f5694,f231])).
fof(f5694,plain,(
  ( ! [X212,X210,X213,X211,X214] : (~p(s(bool,'T_0')) | p(s(bool,X212)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X213),s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X210),s(bool,X211)))),X214,X212) | s(bool,'F_0') = s(bool,X210)) )),
  inference(superposition,[],[f903,f836])).
fof(f5781,plain,(
  ( ! [X218,X216,X215,X219,X217] : (~p(s(bool,X217)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X218),s(bool,X217)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X215),s(bool,X216)),X219) | s(bool,'F_0') = s(bool,X215)) )),
  inference(subsumption_resolution,[],[f5695,f231])).
fof(f5695,plain,(
  ( ! [X218,X216,X215,X219,X217] : (~p(s(bool,'T_0')) | ~p(s(bool,X217)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X218),s(bool,X217)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X215),s(bool,X216)),X219) | s(bool,'F_0') = s(bool,X215)) )),
  inference(superposition,[],[f904,f836])).
fof(f5805,plain,(
  ( ! [X59,X57,X58,X56,X55] : (s(X57,X58) = s(X57,'const.bool.COND_3'(s(bool,X56),s(X57,X59),s(X57,X58))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X56)))) )),
  inference(superposition,[],[f874,f277])).
fof(f5848,plain,(
  ( ! [X19,X20,X18] : (s(bool,'F_0') = s(bool,X20) | s(bool,'T_0') = s(bool,X18) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X18),s(bool,X19),s(bool,X20)))) )),
  inference(superposition,[],[f874,f239])).
fof(f5855,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,X13)) | s(bool,'F_0') != s(bool,'const.bool.COND_3'(s(bool,X11),s(bool,X12),s(bool,X13))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f253,f874])).
fof(f5856,plain,(
  ( ! [X14,X15,X16] : (p(s(bool,X16)) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,X14),s(bool,X15),s(bool,X16))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f254,f874])).
fof(f5891,plain,(
  ( ! [X167,X169,X170,X168] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X169),s(bool,X170))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,X167),s(bool,X168),s(bool,X169))) | s(bool,'T_0') = s(bool,X167)) )),
  inference(superposition,[],[f836,f874])).
fof(f5902,plain,(
  ( ! [X225,X223,X226,X224] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X226),s(bool,X225)),'const.bool.COND_3'(s(bool,X223),s(bool,X224),s(bool,X225))) | s(bool,'T_0') = s(bool,X223)) )),
  inference(superposition,[],[f870,f874])).
fof(f5904,plain,(
  ( ! [X231,X233,X234,X232] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X234),s(bool,X233)),'const.bool.COND_3'(s(bool,X231),s(bool,X232),s(bool,X233))) | s(bool,'T_0') = s(bool,X231)) )),
  inference(superposition,[],[f871,f874])).
fof(f5905,plain,(
  ( ! [X237,X235,X238,X236] : (~sP5('F_0','const.bool.COND_3'(s(bool,X235),s(bool,X236),s(bool,X237)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X238),s(bool,X237))) | s(bool,'T_0') = s(bool,X235)) )),
  inference(superposition,[],[f872,f874])).
fof(f5907,plain,(
  ( ! [X243,X246,X244,X245] : (sP5('T_0','const.bool.COND_3'(s(bool,X243),s(bool,X244),s(bool,X245)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X246),s(bool,X245))) | s(bool,'T_0') = s(bool,X243)) )),
  inference(superposition,[],[f873,f874])).
fof(f5909,plain,(
  ( ! [X255,X253,X251,X254,X252] : (~p(s(bool,X253)) | sP0(X254,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X255),s(bool,'const.bool.COND_3'(s(bool,X251),s(bool,X252),s(bool,X253))))) | s(bool,'T_0') = s(bool,X251)) )),
  inference(superposition,[],[f897,f874])).
fof(f5910,plain,(
  ( ! [X257,X259,X260,X256,X258] : (~p(s(bool,X258)) | sP0('const.bool.COND_3'(s(bool,'F_0'),s(bool,X259),s(bool,'const.bool.COND_3'(s(bool,X256),s(bool,X257),s(bool,X258)))),X260) | s(bool,'T_0') = s(bool,X256)) )),
  inference(superposition,[],[f898,f874])).
fof(f5911,plain,(
  ( ! [X261,X263,X265,X262,X264] : (~p(s(bool,X263)) | p(s(bool,X264)) | sP1('const.bool.COND_3'(s(bool,'F_0'),s(bool,X265),s(bool,'const.bool.COND_3'(s(bool,X261),s(bool,X262),s(bool,X263)))),X264) | s(bool,'T_0') = s(bool,X261)) )),
  inference(superposition,[],[f899,f874])).
fof(f5912,plain,(
  ( ! [X269,X267,X268,X270,X266] : (~p(s(bool,X268)) | p(s(bool,X269)) | sP1(X269,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X270),s(bool,'const.bool.COND_3'(s(bool,X266),s(bool,X267),s(bool,X268))))) | s(bool,'T_0') = s(bool,X266)) )),
  inference(superposition,[],[f900,f874])).
fof(f5913,plain,(
  ( ! [X271,X273,X275,X276,X272,X274] : (~p(s(bool,X273)) | ~p(s(bool,X274)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X275),s(bool,X274)),X276,'const.bool.COND_3'(s(bool,X271),s(bool,X272),s(bool,X273))) | s(bool,'T_0') = s(bool,X271)) )),
  inference(superposition,[],[f901,f874])).
fof(f5914,plain,(
  ( ! [X280,X282,X277,X279,X281,X278] : (~p(s(bool,X279)) | ~p(s(bool,X280)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X281),s(bool,X280)),'const.bool.COND_3'(s(bool,X277),s(bool,X278),s(bool,X279)),X282) | s(bool,'T_0') = s(bool,X277)) )),
  inference(superposition,[],[f902,f874])).
fof(f5915,plain,(
  ( ! [X288,X285,X287,X283,X284,X286] : (~p(s(bool,X285)) | p(s(bool,X286)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X287),s(bool,'const.bool.COND_3'(s(bool,X283),s(bool,X284),s(bool,X285)))),X288,X286) | s(bool,'T_0') = s(bool,X283)) )),
  inference(superposition,[],[f903,f874])).
fof(f5916,plain,(
  ( ! [X292,X294,X290,X293,X289,X291] : (~p(s(bool,X291)) | ~p(s(bool,X292)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X293),s(bool,X292)),'const.bool.COND_3'(s(bool,X289),s(bool,X290),s(bool,X291)),X294) | s(bool,'T_0') = s(bool,X289)) )),
  inference(superposition,[],[f904,f874])).
fof(f6009,plain,(
  ( ! [X14,X15,X16] : (s(bool,X14) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X14),s(bool,X15))) | s(bool,'F_0') = s(bool,X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f888,f688])).
fof(f6033,plain,(
  ( ! [X33,X31,X32] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X33),s(bool,X31))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)))) )),
  inference(superposition,[],[f888,f276])).
fof(f6034,plain,(
  ( ! [X35,X36,X34] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X36),s(bool,X35))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X34),s(bool,X35)))) )),
  inference(superposition,[],[f888,f277])).
fof(f6035,plain,(
  ( ! [X39,X37,X38,X40] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X39))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,X37),s(bool,X38),s(bool,X39))) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f888,f874])).
fof(f6070,plain,(
  ( ! [X101,X102,X100] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X102)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X100),s(bool,X101))) | s(bool,'F_0') = s(bool,X101)) )),
  inference(superposition,[],[f822,f888])).
fof(f6072,plain,(
  ( ! [X107,X108,X106] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X108)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X106),s(bool,X107))) | s(bool,'F_0') = s(bool,X107)) )),
  inference(superposition,[],[f823,f888])).
fof(f6074,plain,(
  ( ! [X114,X112,X113] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X112),s(bool,X113)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X114))) | s(bool,'F_0') = s(bool,X113)) )),
  inference(superposition,[],[f824,f888])).
fof(f6076,plain,(
  ( ! [X118,X120,X119] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X118),s(bool,X119)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X120))) | s(bool,'F_0') = s(bool,X119)) )),
  inference(superposition,[],[f825,f888])).
fof(f6089,plain,(
  ( ! [X171,X169,X170] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X171),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X169),s(bool,X170))) | s(bool,'F_0') = s(bool,X170)) )),
  inference(superposition,[],[f870,f888])).
fof(f6091,plain,(
  ( ! [X177,X175,X176] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X177),s(bool,'T_0')),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X175),s(bool,X176))) | s(bool,'F_0') = s(bool,X176)) )),
  inference(superposition,[],[f871,f888])).
fof(f6092,plain,(
  ( ! [X180,X178,X179] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X178),s(bool,X179)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X180),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X179)) )),
  inference(superposition,[],[f872,f888])).
fof(f6094,plain,(
  ( ! [X185,X186,X184] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X184),s(bool,X185)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X186),s(bool,'T_0'))) | s(bool,'F_0') = s(bool,X185)) )),
  inference(superposition,[],[f873,f888])).
fof(f6146,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f6044,f231])).
fof(f6044,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X7)) )),
  inference(superposition,[],[f253,f888])).
fof(f6149,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X32)),X34) | s(bool,'F_0') = s(bool,X32)) )),
  inference(subsumption_resolution,[],[f6053,f231])).
fof(f6053,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X33)) | p(s(bool,X34)) | ~sP4(X33,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X32)),X34) | s(bool,'F_0') = s(bool,X32)) )),
  inference(superposition,[],[f338,f888])).
fof(f6150,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,X36)),X38) | s(bool,'F_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f6054,f231])).
fof(f6054,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | p(s(bool,X38)) | ~sP3(X37,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,X36)),X38) | s(bool,'F_0') = s(bool,X36)) )),
  inference(superposition,[],[f342,f888])).
fof(f6151,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6(X41,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X40)),X42) | s(bool,'F_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f6055,f231])).
fof(f6055,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6(X41,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X39),s(bool,X40)),X42) | s(bool,'F_0') = s(bool,X40)) )),
  inference(superposition,[],[f361,f888])).
fof(f6152,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X45)) | p(s(bool,X46)) | ~sP7(X46,X45,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X44))) | s(bool,'F_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f6056,f231])).
fof(f6056,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X45)) | p(s(bool,X46)) | ~sP7(X46,X45,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X44))) | s(bool,'F_0') = s(bool,X44)) )),
  inference(superposition,[],[f370,f888])).
fof(f6153,plain,(
  ( ! [X47,X50,X48,X49] : (p(s(bool,X49)) | p(s(bool,X50)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X47),s(bool,X48)),X49,X50) | s(bool,'F_0') = s(bool,X48)) )),
  inference(subsumption_resolution,[],[f6057,f231])).
fof(f6057,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | p(s(bool,X50)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X47),s(bool,X48)),X49,X50) | s(bool,'F_0') = s(bool,X48)) )),
  inference(superposition,[],[f378,f888])).
fof(f6154,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X53)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X52)),X54,X53) | s(bool,'F_0') = s(bool,X52)) )),
  inference(subsumption_resolution,[],[f6058,f231])).
fof(f6058,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X53)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X52)),X54,X53) | s(bool,'F_0') = s(bool,X52)) )),
  inference(superposition,[],[f383,f888])).
fof(f6155,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X57)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X56)),X57,X58) | s(bool,'F_0') = s(bool,X56)) )),
  inference(subsumption_resolution,[],[f6059,f231])).
fof(f6059,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X55),s(bool,X56)),X57,X58) | s(bool,'F_0') = s(bool,X56)) )),
  inference(superposition,[],[f384,f888])).
fof(f6156,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,X61)) | p(s(bool,X62)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X60)),X62,X61) | s(bool,'F_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f6060,f231])).
fof(f6060,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X61)) | p(s(bool,X62)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X59),s(bool,X60)),X62,X61) | s(bool,'F_0') = s(bool,X60)) )),
  inference(superposition,[],[f385,f888])).
fof(f6157,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP10(X66,X65,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X63),s(bool,X64))) | s(bool,'F_0') = s(bool,X64)) )),
  inference(subsumption_resolution,[],[f6061,f231])).
fof(f6061,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X65)) | ~p(s(bool,X66)) | ~sP10(X66,X65,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X63),s(bool,X64))) | s(bool,'F_0') = s(bool,X64)) )),
  inference(superposition,[],[f395,f888])).
fof(f6158,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,X73)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X71),s(bool,X72)),X73,X74) | s(bool,'F_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f6063,f231])).
fof(f6063,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X73)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X71),s(bool,X72)),X73,X74) | s(bool,'F_0') = s(bool,X72)) )),
  inference(superposition,[],[f401,f888])).
fof(f6159,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X77)) | p(s(bool,X78)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,X76)),X78,X77) | s(bool,'F_0') = s(bool,X76)) )),
  inference(subsumption_resolution,[],[f6064,f231])).
fof(f6064,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X77)) | p(s(bool,X78)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X75),s(bool,X76)),X78,X77) | s(bool,'F_0') = s(bool,X76)) )),
  inference(superposition,[],[f402,f888])).
fof(f6160,plain,(
  ( ! [X80,X81,X79,X82] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X79),s(bool,X80)),X81,X82) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X79),s(bool,X80)),X81,X82) | s(bool,'F_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f6065,f231])).
fof(f6065,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X79),s(bool,X80)),X81,X82) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X79),s(bool,X80)),X81,X82) | s(bool,'F_0') = s(bool,X80)) )),
  inference(superposition,[],[f405,f888])).
fof(f6161,plain,(
  ( ! [X85,X83,X86,X84] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X83),s(bool,X84)),X85,X86) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X83),s(bool,X84)),X85,X86) | s(bool,'F_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f6066,f231])).
fof(f6066,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X83),s(bool,X84)),X85,X86) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X83),s(bool,X84)),X85,X86) | s(bool,'F_0') = s(bool,X84)) )),
  inference(superposition,[],[f406,f888])).
fof(f6170,plain,(
  ( ! [X146,X149,X147,X150,X148] : (~p(s(bool,X148)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X148),s(bool,X149)),X150,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X146),s(bool,X147))) | s(bool,'F_0') = s(bool,X147)) )),
  inference(subsumption_resolution,[],[f6084,f231])).
fof(f6084,plain,(
  ( ! [X146,X149,X147,X150,X148] : (~p(s(bool,'T_0')) | ~p(s(bool,X148)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X148),s(bool,X149)),X150,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X146),s(bool,X147))) | s(bool,'F_0') = s(bool,X147)) )),
  inference(superposition,[],[f849,f888])).
fof(f6171,plain,(
  ( ! [X154,X152,X151,X155,X153] : (~p(s(bool,X153)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X153),s(bool,X154)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X151),s(bool,X152)),X155) | s(bool,'F_0') = s(bool,X152)) )),
  inference(subsumption_resolution,[],[f6085,f231])).
fof(f6085,plain,(
  ( ! [X154,X152,X151,X155,X153] : (~p(s(bool,'T_0')) | ~p(s(bool,X153)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X153),s(bool,X154)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X151),s(bool,X152)),X155) | s(bool,'F_0') = s(bool,X152)) )),
  inference(superposition,[],[f850,f888])).
fof(f6174,plain,(
  ( ! [X165,X163,X161,X164,X162] : (~p(s(bool,X163)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X163),s(bool,X164)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X161),s(bool,X162)),X165) | s(bool,'F_0') = s(bool,X162)) )),
  inference(subsumption_resolution,[],[f6087,f231])).
fof(f6087,plain,(
  ( ! [X165,X163,X161,X164,X162] : (~p(s(bool,'T_0')) | ~p(s(bool,X163)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X163),s(bool,X164)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X161),s(bool,X162)),X165) | s(bool,'F_0') = s(bool,X162)) )),
  inference(superposition,[],[f852,f888])).
fof(f6183,plain,(
  ( ! [X212,X215,X213,X211,X214] : (~p(s(bool,X213)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X214),s(bool,X213)),X215,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X211),s(bool,X212))) | s(bool,'F_0') = s(bool,X212)) )),
  inference(subsumption_resolution,[],[f6101,f231])).
fof(f6101,plain,(
  ( ! [X212,X215,X213,X211,X214] : (~p(s(bool,'T_0')) | ~p(s(bool,X213)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X214),s(bool,X213)),X215,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X211),s(bool,X212))) | s(bool,'F_0') = s(bool,X212)) )),
  inference(superposition,[],[f901,f888])).
fof(f6184,plain,(
  ( ! [X218,X216,X220,X219,X217] : (~p(s(bool,X218)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X219),s(bool,X218)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X216),s(bool,X217)),X220) | s(bool,'F_0') = s(bool,X217)) )),
  inference(subsumption_resolution,[],[f6102,f231])).
fof(f6102,plain,(
  ( ! [X218,X216,X220,X219,X217] : (~p(s(bool,'T_0')) | ~p(s(bool,X218)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X219),s(bool,X218)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X216),s(bool,X217)),X220) | s(bool,'F_0') = s(bool,X217)) )),
  inference(superposition,[],[f902,f888])).
fof(f6187,plain,(
  ( ! [X229,X227,X230,X228,X226] : (~p(s(bool,X228)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X229),s(bool,X228)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X226),s(bool,X227)),X230) | s(bool,'F_0') = s(bool,X227)) )),
  inference(subsumption_resolution,[],[f6104,f231])).
fof(f6104,plain,(
  ( ! [X229,X227,X230,X228,X226] : (~p(s(bool,'T_0')) | ~p(s(bool,X228)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X229),s(bool,X228)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X226),s(bool,X227)),X230) | s(bool,'F_0') = s(bool,X227)) )),
  inference(superposition,[],[f904,f888])).
fof(f6269,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X66)),X65)) )),
  inference(superposition,[],[f946,f277])).
fof(f6283,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6266,f231])).
fof(f6266,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f946,f836])).
fof(f6284,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6267,f231])).
fof(f6267,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f946,f888])).
fof(f6307,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f231,f947])).
fof(f6327,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X61),s(bool,X59)),X60)) )),
  inference(superposition,[],[f947,f276])).
fof(f6328,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X66),s(bool,X64)),X65)) )),
  inference(superposition,[],[f947,f277])).
fof(f6329,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP4('const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,X70)),X71) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f947,f874])).
fof(f6334,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6314,f231])).
fof(f6314,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f947,f688])).
fof(f6340,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6322,f231])).
fof(f6322,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(superposition,[],[f947,f477])).
fof(f6342,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6325,f231])).
fof(f6325,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f947,f836])).
fof(f6343,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6326,f231])).
fof(f6326,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP4('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f947,f888])).
fof(f6373,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X66)),X65)) )),
  inference(superposition,[],[f971,f277])).
fof(f6387,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6370,f231])).
fof(f6370,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f971,f836])).
fof(f6388,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6371,f231])).
fof(f6371,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f971,f888])).
fof(f6419,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X61),s(bool,X59)),X60)) )),
  inference(superposition,[],[f972,f276])).
fof(f6420,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X66),s(bool,X64)),X65)) )),
  inference(superposition,[],[f972,f277])).
fof(f6421,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP3('const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,X70)),X71) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f972,f874])).
fof(f6426,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6406,f231])).
fof(f6406,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f972,f688])).
fof(f6432,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6414,f231])).
fof(f6414,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(superposition,[],[f972,f477])).
fof(f6434,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6417,f231])).
fof(f6417,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f972,f836])).
fof(f6435,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6418,f231])).
fof(f6418,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f972,f888])).
fof(f6467,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X66)),X65)) )),
  inference(superposition,[],[f1026,f277])).
fof(f6481,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6464,f231])).
fof(f6464,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1026,f836])).
fof(f6482,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6465,f231])).
fof(f6465,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1026,f888])).
fof(f6497,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f231,f1027])).
fof(f6517,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X61),s(bool,X59)),X60)) )),
  inference(superposition,[],[f1027,f276])).
fof(f6518,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X66),s(bool,X64)),X65)) )),
  inference(superposition,[],[f1027,f277])).
fof(f6519,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP6('const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,X70)),X71) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1027,f874])).
fof(f6524,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6504,f231])).
fof(f6504,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1027,f688])).
fof(f6530,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6512,f231])).
fof(f6512,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39)) ) | $spl2),
  inference(superposition,[],[f1027,f477])).
fof(f6532,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6515,f231])).
fof(f6515,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1027,f836])).
fof(f6533,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6516,f231])).
fof(f6516,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP6('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1027,f888])).
fof(f6564,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP7(X65,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X66)))) )),
  inference(superposition,[],[f1062,f277])).
fof(f6575,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP7(X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6561,f231])).
fof(f6561,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP7(X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1062,f836])).
fof(f6576,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6562,f231])).
fof(f6562,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1062,f888])).
fof(f6585,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f231,f420,f231,f1063])).
fof(f6601,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP7(X60,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X61),s(bool,X59)))) )),
  inference(superposition,[],[f1063,f276])).
fof(f6602,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP7(X65,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X66),s(bool,X64)))) )),
  inference(superposition,[],[f1063,f277])).
fof(f6603,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP7(X71,'const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,X70))) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1063,f874])).
fof(f6605,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6588,f231])).
fof(f6588,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1063,f688])).
fof(f6611,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP7(X39,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6596,f231])).
fof(f6596,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP7(X39,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)))) ) | $spl2),
  inference(superposition,[],[f1063,f477])).
fof(f6613,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP7(X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6599,f231])).
fof(f6599,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP7(X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1063,f836])).
fof(f6614,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6600,f231])).
fof(f6600,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP7(X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1063,f888])).
fof(f6684,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f420,f1123])).
fof(f6708,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | p(s(bool,X70)) | p(s(bool,X71)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,'const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)))),X70,X71) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1123,f874])).
fof(f6715,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X0)),X1,X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6693,f231])).
fof(f6693,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X0)),X1,X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1123,f688])).
fof(f6722,plain,(
  ( ! [X39,X38,X40] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'T_0')),X38,X39) | p(s(bool,X38)) | p(s(bool,X39))) ) | $spl2),
  inference(forward_demodulation,[],[f6721,f477])).
fof(f6721,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | p(s(bool,X39)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X38,X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6701,f231])).
fof(f6701,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | p(s(bool,X39)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X38,X39)) ) | $spl2),
  inference(superposition,[],[f1123,f477])).
fof(f6800,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f420,f1169])).
fof(f6816,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | p(s(bool,X70)) | p(s(bool,X71)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,'const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)))),X71,X70) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1169,f874])).
fof(f6817,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X0)),X2,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6801,f231])).
fof(f6801,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X0)),X2,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1169,f688])).
fof(f6824,plain,(
  ( ! [X39,X38,X40] : (~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'T_0')),X39,X38) | p(s(bool,X38)) | p(s(bool,X39))) ) | $spl2),
  inference(forward_demodulation,[],[f6823,f477])).
fof(f6823,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | p(s(bool,X39)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X38)) ) | $spl2),
  inference(subsumption_resolution,[],[f6809,f231])).
fof(f6809,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | p(s(bool,X39)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))),X39,X38)) ) | $spl2),
  inference(superposition,[],[f1169,f477])).
fof(f6868,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | p(s(bool,X64)) | ~p(s(bool,X65)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),X64,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X65),s(bool,X66)))) )),
  inference(superposition,[],[f1239,f277])).
fof(f6882,plain,(
  ( ! [X47,X50,X48,X51,X49] : (p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X50),s(bool,X51))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6865,f231])).
fof(f6865,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X50),s(bool,X51))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1239,f836])).
fof(f6883,plain,(
  ( ! [X54,X52,X56,X55,X53] : (p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X54,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6866,f231])).
fof(f6866,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X54,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X55),s(bool,X56))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1239,f888])).
fof(f6891,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) )),
  inference(unit_resulting_resolution,[],[f231,f231,f420,f1240])).
fof(f6911,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | p(s(bool,X59)) | ~p(s(bool,X60)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),X59,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X61),s(bool,X60)))) )),
  inference(superposition,[],[f1240,f276])).
fof(f6912,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | p(s(bool,X64)) | ~p(s(bool,X65)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)),X64,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X66),s(bool,X65)))) )),
  inference(superposition,[],[f1240,f277])).
fof(f6913,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | p(s(bool,X70)) | ~p(s(bool,X71)) | ~sP10('const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),X70,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,X71))) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1240,f874])).
fof(f6918,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X0,X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6898,f231])).
fof(f6898,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X0,X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1240,f688])).
fof(f6924,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | ~p(s(bool,X39)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X38,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X39)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6906,f231])).
fof(f6906,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | ~p(s(bool,X39)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X38,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X39)))) ) | $spl2),
  inference(superposition,[],[f1240,f477])).
fof(f6926,plain,(
  ( ! [X47,X50,X48,X51,X49] : (p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X50))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6909,f231])).
fof(f6909,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | ~p(s(bool,X50)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X50))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1240,f836])).
fof(f6927,plain,(
  ( ! [X54,X52,X56,X55,X53] : (p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X54,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X55))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6910,f231])).
fof(f6910,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | p(s(bool,X54)) | ~p(s(bool,X55)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53)),X54,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X55))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1240,f888])).
fof(f6948,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X64),s(bool,X66)),X65,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)))) )),
  inference(superposition,[],[f1287,f277])).
fof(f6958,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6945,f231])).
fof(f6945,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X51)),X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1287,f836])).
fof(f6959,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6946,f231])).
fof(f6946,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X54),s(bool,X56)),X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1287,f888])).
fof(f6968,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f231,f1288])).
fof(f6982,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X61),s(bool,X59)),X60,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)))) )),
  inference(superposition,[],[f1288,f276])).
fof(f6983,plain,(
  ( ! [X66,X64,X62,X65,X63] : (~p(s(bool,X63)) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X66),s(bool,X64)),X65,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X62),s(bool,X63)))) )),
  inference(superposition,[],[f1288,f277])).
fof(f6984,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X72),s(bool,X70)),X71,'const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69))) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1288,f874])).
fof(f6985,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6969,f231])).
fof(f6969,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1288,f688])).
fof(f6991,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6977,f231])).
fof(f6977,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X40),s(bool,X38)),X39,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f1288,f477])).
fof(f6993,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X49)) | p(s(bool,X50)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6980,f231])).
fof(f6980,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,X49)) | p(s(bool,X50)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X49)),X50,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48))) | s(bool,'F_0') = s(bool,X47)) )),
  inference(superposition,[],[f1288,f836])).
fof(f6994,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X55)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f6981,f231])).
fof(f6981,plain,(
  ( ! [X54,X52,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X54)) | p(s(bool,X55)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X56),s(bool,X54)),X55,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X52),s(bool,X53))) | s(bool,'F_0') = s(bool,X53)) )),
  inference(superposition,[],[f1288,f888])).
fof(f3196,plain,(
  ( ! [X241,X239,X242,X240] : (s(bool,'T_0') != s(bool,f(s(X239,sK15(X240,X241,bool,X239)))) | s(fun(X239,bool),X240) = s(fun(X239,bool),X241) | s(bool,X242) = s(bool,g(s(X239,sK15(X240,X241,bool,X239)))) | s(bool,'T_0') = s(bool,X242)) )),
  inference(superposition,[],[f323,f688])).
fof(f2973,plain,(
  ( ! [X246,X244,X247,X245] : (s(bool,X247) != s(bool,f(s(X244,sK15(X245,X246,bool,X244)))) | s(fun(X244,bool),X245) = s(fun(X244,bool),X246) | s(bool,'T_0') = s(bool,X247) | s(bool,'T_0') = s(bool,g(s(X244,sK15(X245,X246,bool,X244))))) )),
  inference(superposition,[],[f323,f688])).
fof(f1327,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(subsumption_resolution,[],[f1315,f420])).
fof(f1315,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(superposition,[],[f281,f239])).
fof(f2966,plain,(
  ( ! [X220,X219,X221] : (s('type.realax.real','const.real.max_2'(s('type.realax.real',X219),s('type.realax.real',X220))) = s('type.realax.real','const.bool.COND_3'(s(bool,X221),s('type.realax.real',X220),s('type.realax.real',X219))) | s(bool,'T_0') = s(bool,X221) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X219),s('type.realax.real',X220)))) )),
  inference(superposition,[],[f280,f688])).
fof(f3626,plain,(
  ( ! [X212,X213,X211,X214] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X212),s('type.realax.real',X213)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X211),s('type.realax.real',X213)))) | s(bool,X214) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X211),s('type.realax.real',X212))) | s(bool,'T_0') = s(bool,X214)) )),
  inference(subsumption_resolution,[],[f3188,f231])).
fof(f3188,plain,(
  ( ! [X212,X213,X211,X214] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X212),s('type.realax.real',X213)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X211),s('type.realax.real',X213)))) | s(bool,X214) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X211),s('type.realax.real',X212))) | s(bool,'T_0') = s(bool,X214)) )),
  inference(superposition,[],[f324,f688])).
fof(f3627,plain,(
  ( ! [X216,X215,X217] : (s('type.realax.real',X216) = s('type.realax.real','const.real.max_2'(s('type.realax.real',X215),s('type.realax.real',X216))) | s(bool,X217) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X215),s('type.realax.real',X216))) | s(bool,'T_0') = s(bool,X217)) )),
  inference(forward_demodulation,[],[f3189,f276])).
fof(f3189,plain,(
  ( ! [X216,X215,X217] : (s('type.realax.real','const.real.max_2'(s('type.realax.real',X215),s('type.realax.real',X216))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',X216),s('type.realax.real',X215))) | s(bool,X217) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X215),s('type.realax.real',X216))) | s(bool,'T_0') = s(bool,X217)) )),
  inference(superposition,[],[f280,f688])).
fof(f5926,plain,(
  ( ! [X327,X329,X328,X330] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X329),s('type.realax.real',X330)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X330),s('type.realax.real','const.bool.COND_3'(s(bool,X327),s('type.realax.real',X328),s('type.realax.real',X329)))))) | s(bool,'T_0') = s(bool,X327)) )),
  inference(superposition,[],[f281,f874])).
fof(f5927,plain,(
  ( ! [X333,X331,X332,X334] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X334),s('type.realax.real',X333)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X331),s('type.realax.real',X332),s('type.realax.real',X333))),s('type.realax.real',X334)))) | s(bool,'T_0') = s(bool,X331)) )),
  inference(superposition,[],[f281,f874])).
fof(f5930,plain,(
  ( ! [X344,X346,X343,X345,X347] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X346),s('type.realax.real',X345)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X343),s('type.realax.real',X344),s('type.realax.real',X345))),s('type.realax.real',X347)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X346),s('type.realax.real',X347)))) | s(bool,'T_0') = s(bool,X343)) )),
  inference(superposition,[],[f324,f874])).
fof(f5931,plain,(
  ( ! [X350,X352,X349,X351,X348] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X350),s('type.realax.real',X351)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X351),s('type.realax.real',X352)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X348),s('type.realax.real',X349),s('type.realax.real',X350))),s('type.realax.real',X352)))) | s(bool,'T_0') = s(bool,X348)) )),
  inference(superposition,[],[f324,f874])).
fof(f6205,plain,(
  ( ! [X14,X12,X13,X11] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X13),s('type.realax.real',X14)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X14),s('type.realax.real','const.bool.COND_3'(s(bool,X11),s('type.realax.real',X12),s('type.realax.real',X13))))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1327,f874])).
fof(f6211,plain,(
  ( ! [X14,X12,X13,X11] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X14),s('type.realax.real',X13)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X11),s('type.realax.real',X12),s('type.realax.real',X13))),s('type.realax.real',X14))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1327,f874])).
fof(f7032,plain,(
  ( ! [X4,X2,X3] : (s('type.realax.real',X2) = s('type.realax.real','const.real.max_2'(s('type.realax.real',X2),s('type.realax.real',X4))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X2),s('type.realax.real',X3))),s('type.realax.real',X4))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))) )),
  inference(superposition,[],[f1473,f1473])).
fof(f7039,plain,(
  ( ! [X4,X2,X3] : (s('type.realax.real',X4) = s('type.realax.real','const.real.max_2'(s('type.realax.real',X4),s('type.realax.real',X2))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X4),s('type.realax.real','const.real.max_2'(s('type.realax.real',X2),s('type.realax.real',X3))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X3)))) )),
  inference(superposition,[],[f1473,f1473])).
fof(f7137,plain,(
  ( ! [X61,X59,X60] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X59),s('type.realax.real',X61)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X61),s('type.realax.real','const.real.max_2'(s('type.realax.real',X59),s('type.realax.real',X60)))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X59),s('type.realax.real',X60)))) )),
  inference(superposition,[],[f281,f1473])).
fof(f7138,plain,(
  ( ! [X64,X62,X63] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X64),s('type.realax.real',X62)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X62),s('type.realax.real',X63))),s('type.realax.real',X64)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X62),s('type.realax.real',X63)))) )),
  inference(superposition,[],[f281,f1473])).
fof(f7141,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X73),s('type.realax.real',X71)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X71),s('type.realax.real',X72))),s('type.realax.real',X74)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X73),s('type.realax.real',X74)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X71),s('type.realax.real',X72)))) )),
  inference(superposition,[],[f324,f1473])).
fof(f7142,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X75),s('type.realax.real',X77)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X77),s('type.realax.real',X78)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X75),s('type.realax.real',X76))),s('type.realax.real',X78)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X75),s('type.realax.real',X76)))) )),
  inference(superposition,[],[f324,f1473])).
fof(f7143,plain,(
  ( ! [X80,X81,X79] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X79),s('type.realax.real',X81)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X81),s('type.realax.real','const.real.max_2'(s('type.realax.real',X79),s('type.realax.real',X80))))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X79),s('type.realax.real',X80)))) )),
  inference(superposition,[],[f1327,f1473])).
fof(f7144,plain,(
  ( ! [X83,X84,X82] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X84),s('type.realax.real',X82)))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X82),s('type.realax.real',X83))),s('type.realax.real',X84))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X82),s('type.realax.real',X83)))) )),
  inference(superposition,[],[f1327,f1473])).
fof(f5853,plain,(
  ( ! [X6,X7,X5] : (s(bool,'T_0') != s(bool,X7) | p(s(bool,'const.bool.COND_3'(s(bool,X5),s(bool,X6),s(bool,X7)))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f249,f874])).
fof(f5854,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X10)) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X8),s(bool,X9),s(bool,X10))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f250,f874])).
fof(f5857,plain,(
  ( ! [X19,X17,X20,X18] : (p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X20) = s(bool,'const.bool.COND_3'(s(bool,X17),s(bool,X18),s(bool,X19))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f282,f874])).
fof(f5859,plain,(
  ( ! [X28,X26,X27,X25] : (~p(s(bool,X27)) | ~p(s(bool,X28)) | s(bool,X28) = s(bool,'const.bool.COND_3'(s(bool,X25),s(bool,X26),s(bool,X27))) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f285,f874])).
fof(f5882,plain,(
  ( ! [X134,X132,X133,X131] : (p(s(bool,X133)) | s(bool,X134) = s(bool,'const.bool.COND_3'(s(bool,X131),s(bool,X132),s(bool,X133))) | s(bool,'T_0') = s(bool,X134) | s(bool,'T_0') = s(bool,X131)) )),
  inference(superposition,[],[f748,f874])).
fof(f5893,plain,(
  ( ! [X177,X175,X178,X176,X179] : (~p(s(bool,X177)) | sP0(X178,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X175),s(bool,X176),s(bool,X177))),s(bool,X179))) | s(bool,'T_0') = s(bool,X175)) )),
  inference(superposition,[],[f845,f874])).
fof(f5894,plain,(
  ( ! [X182,X180,X184,X183,X181] : (~p(s(bool,X182)) | sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X180),s(bool,X181),s(bool,X182))),s(bool,X183)),X184) | s(bool,'T_0') = s(bool,X180)) )),
  inference(superposition,[],[f846,f874])).
fof(f5895,plain,(
  ( ! [X189,X187,X185,X188,X186] : (~p(s(bool,X187)) | p(s(bool,X188)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X185),s(bool,X186),s(bool,X187))),s(bool,X189)),X188) | s(bool,'T_0') = s(bool,X185)) )),
  inference(superposition,[],[f847,f874])).
fof(f5896,plain,(
  ( ! [X191,X194,X192,X190,X193] : (~p(s(bool,X192)) | p(s(bool,X193)) | sP1(X193,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X190),s(bool,X191),s(bool,X192))),s(bool,X194))) | s(bool,'T_0') = s(bool,X190)) )),
  inference(superposition,[],[f848,f874])).
fof(f5899,plain,(
  ( ! [X212,X210,X208,X211,X209,X207] : (~p(s(bool,X209)) | p(s(bool,X210)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X207),s(bool,X208),s(bool,X209))),s(bool,X211)),X212,X210) | s(bool,'T_0') = s(bool,X207)) )),
  inference(superposition,[],[f851,f874])).
fof(f6649,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | p(s(bool,X70)) | p(s(bool,X71)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69))),s(bool,X72)),X70,X71) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1122,f874])).
fof(f6763,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | p(s(bool,X70)) | p(s(bool,X71)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69))),s(bool,X72)),X71,X70) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1168,f874])).
fof(f7043,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.realax.real',X17) = s('type.realax.real','const.real.max_2'(s('type.realax.real',X17),s('type.realax.real',X16))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X17),s('type.realax.real','const.bool.COND_3'(s(bool,X14),s('type.realax.real',X15),s('type.realax.real',X16))))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f1473,f874])).
fof(f7036,plain,(
  ( ! [X14,X17,X15,X16] : (s('type.realax.real',X16) = s('type.realax.real','const.real.max_2'(s('type.realax.real',X16),s('type.realax.real',X17))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.bool.COND_3'(s(bool,X14),s('type.realax.real',X15),s('type.realax.real',X16))),s('type.realax.real',X17))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f1473,f874])).
fof(f7001,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP11('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2,X3) | p(s(bool,X3)) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl2),
  inference(superposition,[],[f5368,f688])).
fof(f6949,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71,'const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69))) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1287,f874])).
fof(f6947,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X59),s(bool,X61)),X60,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)))) )),
  inference(superposition,[],[f1287,f276])).
fof(f6956,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6942,f231])).
fof(f6942,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f1287,f477])).
fof(f6950,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6934,f231])).
fof(f6934,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1287,f688])).
fof(f6933,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f231,f1287])).
fof(f6869,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | p(s(bool,X70)) | ~p(s(bool,X71)) | ~sP10('const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),X70,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X71),s(bool,X72))) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1239,f874])).
fof(f6867,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | p(s(bool,X59)) | ~p(s(bool,X60)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),X59,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X60),s(bool,X61)))) )),
  inference(superposition,[],[f1239,f276])).
fof(f6880,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | ~p(s(bool,X39)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X38,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6862,f231])).
fof(f6862,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | ~p(s(bool,X39)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X38,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)))) ) | $spl2),
  inference(superposition,[],[f1239,f477])).
fof(f6874,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X0,X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6854,f231])).
fof(f6854,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X0,X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1239,f688])).
fof(f6847,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f231,f231,f420,f1239])).
fof(f6771,plain,(
  ( ! [X39,X38,X40] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X40)),X39,X38) | p(s(bool,X38)) | p(s(bool,X39))) ) | $spl2),
  inference(forward_demodulation,[],[f6770,f477])).
fof(f6770,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | p(s(bool,X39)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X40)),X39,X38)) ) | $spl2),
  inference(subsumption_resolution,[],[f6756,f231])).
fof(f6756,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | p(s(bool,X39)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X40)),X39,X38)) ) | $spl2),
  inference(superposition,[],[f1168,f477])).
fof(f6764,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)),X2,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6748,f231])).
fof(f6748,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)),X2,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1168,f688])).
fof(f6747,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f420,f1168])).
fof(f6663,plain,(
  ( ! [X39,X38,X40] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X40)),X38,X39) | p(s(bool,X38)) | p(s(bool,X39))) ) | $spl2),
  inference(forward_demodulation,[],[f6662,f477])).
fof(f6662,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | p(s(bool,X39)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X40)),X38,X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6642,f231])).
fof(f6642,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | p(s(bool,X39)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X40)),X38,X39)) ) | $spl2),
  inference(superposition,[],[f1122,f477])).
fof(f6656,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)),X1,X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6634,f231])).
fof(f6634,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X3)),X1,X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1122,f688])).
fof(f6625,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f420,f1122])).
fof(f6565,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP7(X71,'const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72))) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1062,f874])).
fof(f6563,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP7(X60,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X59),s(bool,X61)))) )),
  inference(superposition,[],[f1062,f276])).
fof(f6573,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP7(X39,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)))) ) | $spl2),
  inference(subsumption_resolution,[],[f6558,f231])).
fof(f6558,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP7(X39,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)))) ) | $spl2),
  inference(superposition,[],[f1062,f477])).
fof(f6567,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6550,f231])).
fof(f6550,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1062,f688])).
fof(f6547,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f231,f420,f231,f1062])).
fof(f6468,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP6('const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f1026,f874])).
fof(f6466,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP6('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X59),s(bool,X61)),X60)) )),
  inference(superposition,[],[f1026,f276])).
fof(f6479,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6461,f231])).
fof(f6461,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(superposition,[],[f1026,f477])).
fof(f6473,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6453,f231])).
fof(f6453,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1026,f688])).
fof(f6446,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f231,f1026])).
fof(f6374,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP3('const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f971,f874])).
fof(f6372,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X59),s(bool,X61)),X60)) )),
  inference(superposition,[],[f971,f276])).
fof(f6385,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6367,f231])).
fof(f6367,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(superposition,[],[f971,f477])).
fof(f6379,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6359,f231])).
fof(f6359,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f971,f688])).
fof(f6270,plain,(
  ( ! [X70,X68,X72,X71,X69,X67] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP4('const.bool.COND_3'(s(bool,X67),s(bool,X68),s(bool,X69)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X70),s(bool,X72)),X71) | s(bool,'T_0') = s(bool,X67)) )),
  inference(superposition,[],[f946,f874])).
fof(f6268,plain,(
  ( ! [X61,X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X59)) | p(s(bool,X60)) | ~sP4('const.bool.COND_3'(s(bool,'T_0'),s(bool,X57),s(bool,X58)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X59),s(bool,X61)),X60)) )),
  inference(superposition,[],[f946,f276])).
fof(f6281,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | p(s(bool,X39)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(subsumption_resolution,[],[f6263,f231])).
fof(f6263,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | p(s(bool,X39)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X40)),X39)) ) | $spl2),
  inference(superposition,[],[f946,f477])).
fof(f6275,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6255,f231])).
fof(f6255,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f946,f688])).
fof(f6248,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f231,f946])).
fof(f6235,plain,(
  ( ! [X12,X13] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X13),s('type.realax.real',X12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X12),s('type.realax.real',X13)))) )),
  inference(subsumption_resolution,[],[f6219,f420])).
fof(f6219,plain,(
  ( ! [X12,X13] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X13),s('type.realax.real',X12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X12),s('type.realax.real',X13)))) )),
  inference(superposition,[],[f1327,f239])).
fof(f5900,plain,(
  ( ! [X218,X216,X215,X213,X217,X214] : (~p(s(bool,X215)) | ~p(s(bool,X216)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X216),s(bool,X217)),'const.bool.COND_3'(s(bool,X213),s(bool,X214),s(bool,X215)),X218) | s(bool,'T_0') = s(bool,X213)) )),
  inference(superposition,[],[f852,f874])).
fof(f5898,plain,(
  ( ! [X206,X204,X202,X205,X203,X201] : (~p(s(bool,X203)) | ~p(s(bool,X204)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X204),s(bool,X205)),'const.bool.COND_3'(s(bool,X201),s(bool,X202),s(bool,X203)),X206) | s(bool,'T_0') = s(bool,X201)) )),
  inference(superposition,[],[f850,f874])).
fof(f5897,plain,(
  ( ! [X198,X196,X200,X199,X197,X195] : (~p(s(bool,X197)) | ~p(s(bool,X198)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X198),s(bool,X199)),X200,'const.bool.COND_3'(s(bool,X195),s(bool,X196),s(bool,X197))) | s(bool,'T_0') = s(bool,X195)) )),
  inference(superposition,[],[f849,f874])).
fof(f5889,plain,(
  ( ! [X161,X159,X162,X160] : (sP5('T_0','const.bool.COND_3'(s(bool,X159),s(bool,X160),s(bool,X161)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X161),s(bool,X162))) | s(bool,'T_0') = s(bool,X159)) )),
  inference(superposition,[],[f825,f874])).
fof(f5887,plain,(
  ( ! [X154,X152,X151,X153] : (~sP5('F_0','const.bool.COND_3'(s(bool,X151),s(bool,X152),s(bool,X153)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X153),s(bool,X154))) | s(bool,'T_0') = s(bool,X151)) )),
  inference(superposition,[],[f824,f874])).
fof(f5885,plain,(
  ( ! [X146,X144,X145,X143] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X145),s(bool,X146)),'const.bool.COND_3'(s(bool,X143),s(bool,X144),s(bool,X145))) | s(bool,'T_0') = s(bool,X143)) )),
  inference(superposition,[],[f823,f874])).
fof(f5883,plain,(
  ( ! [X138,X136,X135,X137] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X137),s(bool,X138)),'const.bool.COND_3'(s(bool,X135),s(bool,X136),s(bool,X137))) | s(bool,'T_0') = s(bool,X135)) )),
  inference(superposition,[],[f822,f874])).
fof(f5877,plain,(
  ( ! [X111,X114,X112,X110,X113] : (~p(s(bool,X112)) | ~sP8('const.bool.COND_3'(s(bool,X110),s(bool,X111),s(bool,X112)),X113,X114) | sP9('const.bool.COND_3'(s(bool,X110),s(bool,X111),s(bool,X112)),X113,X114) | s(bool,'T_0') = s(bool,X110)) )),
  inference(superposition,[],[f406,f874])).
fof(f5876,plain,(
  ( ! [X109,X107,X105,X108,X106] : (~p(s(bool,X107)) | ~sP10('const.bool.COND_3'(s(bool,X105),s(bool,X106),s(bool,X107)),X108,X109) | sP11('const.bool.COND_3'(s(bool,X105),s(bool,X106),s(bool,X107)),X108,X109) | s(bool,'T_0') = s(bool,X105)) )),
  inference(superposition,[],[f405,f874])).
fof(f5875,plain,(
  ( ! [X103,X101,X102,X100,X104] : (~p(s(bool,X102)) | ~p(s(bool,X103)) | p(s(bool,X104)) | ~sP11('const.bool.COND_3'(s(bool,X100),s(bool,X101),s(bool,X102)),X104,X103) | s(bool,'T_0') = s(bool,X100)) )),
  inference(superposition,[],[f402,f874])).
fof(f5874,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~p(s(bool,X97)) | ~p(s(bool,X98)) | sP11('const.bool.COND_3'(s(bool,X95),s(bool,X96),s(bool,X97)),X98,X99) | s(bool,'T_0') = s(bool,X95)) )),
  inference(superposition,[],[f401,f874])).
fof(f5873,plain,(
  ( ! [X94,X92,X90,X93,X91] : (~p(s(bool,X92)) | p(s(bool,X93)) | sP11('const.bool.COND_3'(s(bool,X90),s(bool,X91),s(bool,X92)),X94,X93) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f400,f874])).
fof(f5872,plain,(
  ( ! [X88,X87,X85,X89,X86] : (~p(s(bool,X87)) | p(s(bool,X88)) | ~p(s(bool,X89)) | ~sP10(X89,X88,'const.bool.COND_3'(s(bool,X85),s(bool,X86),s(bool,X87))) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f395,f874])).
fof(f5871,plain,(
  ( ! [X80,X83,X81,X84,X82] : (~p(s(bool,X82)) | p(s(bool,X83)) | p(s(bool,X84)) | ~sP9('const.bool.COND_3'(s(bool,X80),s(bool,X81),s(bool,X82)),X84,X83) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f385,f874])).
fof(f5870,plain,(
  ( ! [X78,X76,X79,X77,X75] : (~p(s(bool,X77)) | ~p(s(bool,X78)) | sP9('const.bool.COND_3'(s(bool,X75),s(bool,X76),s(bool,X77)),X78,X79) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f384,f874])).
fof(f5869,plain,(
  ( ! [X70,X74,X72,X71,X73] : (~p(s(bool,X72)) | ~p(s(bool,X73)) | sP9('const.bool.COND_3'(s(bool,X70),s(bool,X71),s(bool,X72)),X74,X73) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f383,f874])).
fof(f5868,plain,(
  ( ! [X68,X66,X69,X67,X65] : (~p(s(bool,X67)) | p(s(bool,X68)) | p(s(bool,X69)) | ~sP8('const.bool.COND_3'(s(bool,X65),s(bool,X66),s(bool,X67)),X68,X69) | s(bool,'T_0') = s(bool,X65)) )),
  inference(superposition,[],[f378,f874])).
fof(f5867,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,X62)) | ~p(s(bool,X63)) | p(s(bool,X64)) | ~sP7(X64,X63,'const.bool.COND_3'(s(bool,X60),s(bool,X61),s(bool,X62))) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f370,f874])).
fof(f5866,plain,(
  ( ! [X59,X57,X58,X56,X55] : (~p(s(bool,X57)) | ~p(s(bool,X58)) | p(s(bool,X59)) | ~sP6(X58,'const.bool.COND_3'(s(bool,X55),s(bool,X56),s(bool,X57)),X59) | s(bool,'T_0') = s(bool,X55)) )),
  inference(superposition,[],[f361,f874])).
fof(f5865,plain,(
  ( ! [X54,X52,X50,X53,X51] : (~p(s(bool,X52)) | ~p(s(bool,X53)) | p(s(bool,X54)) | ~sP3(X53,'const.bool.COND_3'(s(bool,X50),s(bool,X51),s(bool,X52)),X54) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f342,f874])).
fof(f5864,plain,(
  ( ! [X47,X45,X48,X46,X49] : (~p(s(bool,X47)) | ~p(s(bool,X48)) | p(s(bool,X49)) | ~sP4(X48,'const.bool.COND_3'(s(bool,X45),s(bool,X46),s(bool,X47)),X49) | s(bool,'T_0') = s(bool,X45)) )),
  inference(superposition,[],[f338,f874])).
fof(f5863,plain,(
  ( ! [X43,X41,X44,X42] : (~p(s(bool,X43)) | p(s(bool,X44)) | sP1(X44,'const.bool.COND_3'(s(bool,X41),s(bool,X42),s(bool,X43))) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f310,f874])).
fof(f5862,plain,(
  ( ! [X39,X37,X38,X40] : (~p(s(bool,X39)) | p(s(bool,X40)) | sP1('const.bool.COND_3'(s(bool,X37),s(bool,X38),s(bool,X39)),X40) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f307,f874])).
fof(f5861,plain,(
  ( ! [X35,X33,X36,X34] : (~p(s(bool,X35)) | sP0('const.bool.COND_3'(s(bool,X33),s(bool,X34),s(bool,X35)),X36) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f292,f874])).
fof(f5860,plain,(
  ( ! [X30,X31,X29,X32] : (~p(s(bool,X31)) | sP0(X32,'const.bool.COND_3'(s(bool,X29),s(bool,X30),s(bool,X31))) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f291,f874])).
fof(f5846,plain,(
  ( ! [X12,X10,X13,X11] : (s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X10),s(bool,X11),s(bool,X12))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f874,f688])).
fof(f5844,plain,(
  ( ! [X4,X2,X5,X3] : (s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X2) | s(bool,X5) = s(bool,'const.bool.COND_3'(s(bool,X2),s(bool,X3),s(bool,X4))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f874,f688])).
fof(f5806,plain,(
  ( ! [X61,X64,X62,X60,X65,X63] : (s(X63,X64) = s(X63,'const.bool.COND_3'(s(bool,X62),s(X63,X65),s(X63,X64))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,X60),s(bool,X61),s(bool,X62))) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f874,f874])).
fof(f5804,plain,(
  ( ! [X54,X52,X50,X53,X51] : (s(X52,X53) = s(X52,'const.bool.COND_3'(s(bool,X50),s(X52,X54),s(X52,X53))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X50),s(bool,X51)))) )),
  inference(superposition,[],[f874,f276])).
fof(f5403,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X50)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X51)) )),
  inference(superposition,[],[f852,f276])).
fof(f5411,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f5400,f231])).
fof(f5400,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(superposition,[],[f852,f477])).
fof(f5405,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5392,f231])).
fof(f5392,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f852,f688])).
fof(f5391,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f231,f231,f852])).
fof(f5368,plain,(
  ( ! [X39,X38,X40] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X39)),X40,X38) | p(s(bool,X38))) ) | $spl2),
  inference(forward_demodulation,[],[f5367,f477])).
fof(f5367,plain,(
  ( ! [X39,X38,X40] : (p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X39)),X40,X38)) ) | $spl2),
  inference(subsumption_resolution,[],[f5356,f231])).
fof(f5356,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | p(s(bool,X38)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X39)),X40,X38)) ) | $spl2),
  inference(superposition,[],[f851,f477])).
fof(f5361,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X2)),X3,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5348,f231])).
fof(f5348,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X2)),X3,X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f851,f688])).
fof(f5347,plain,(
  ( ! [X0,X1] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f851])).
fof(f5316,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X50)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X51)) )),
  inference(superposition,[],[f850,f276])).
fof(f5324,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(subsumption_resolution,[],[f5313,f231])).
fof(f5313,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X40)) ) | $spl2),
  inference(superposition,[],[f850,f477])).
fof(f5318,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5305,f231])).
fof(f5305,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X0,X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f850,f688])).
fof(f5304,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f231,f231,f850])).
fof(f5284,plain,(
  ( ! [X47,X50,X48,X51,X49] : (~p(s(bool,X47)) | ~p(s(bool,X49)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X49),s(bool,X50)),X51,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)))) )),
  inference(superposition,[],[f849,f276])).
fof(f5292,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),X40,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(subsumption_resolution,[],[f5281,f231])).
fof(f5281,plain,(
  ( ! [X39,X38,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X38)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X38),s(bool,X39)),X40,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f849,f477])).
fof(f5286,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5273,f231])).
fof(f5273,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,X0) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f849,f688])).
fof(f5272,plain,(
  ( ! [X0,X1] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f231,f849])).
fof(f5166,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1895,f354])).
fof(f5124,plain,(
  ( ! [X0] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1887,f332])).
fof(f5059,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1879,f333])).
fof(f4591,plain,(
  ( ! [X2,X0,X1] : (sP1(X1,'const.bool.COND_3'(s(bool,X0),s(bool,X2),s(bool,'T_0'))) | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f2814,f239])).
fof(f4424,plain,(
  ( ! [X2,X0,X1] : (sP1('const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,'T_0')),X2) | p(s(bool,X2)) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f2784,f239])).
fof(f4400,plain,(
  ( ! [X2,X0,X3,X1] : (sP1(X1,'const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X2))) | p(s(bool,X1)) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl2),
  inference(superposition,[],[f2754,f688])).
fof(f4360,plain,(
  ( ! [X2,X0,X3,X1] : (sP1('const.bool.COND_3'(s(bool,X0),s(bool,X0),s(bool,X1)),X2) | p(s(bool,X2)) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl2),
  inference(superposition,[],[f2728,f688])).
fof(f3199,plain,(
  ( ! [X251,X249,X252,X250] : (s(X251,f(s(bool,'T_0'))) != s(X251,g(s(bool,'T_0'))) | s(fun(bool,X251),X249) = s(fun(bool,X251),X250) | s(bool,X252) = s(bool,sK15(X249,X250,X251,bool)) | s(bool,'T_0') = s(bool,X252)) )),
  inference(superposition,[],[f323,f688])).
fof(f3621,plain,(
  ( ! [X127,X128,X126,X129] : (p(s(bool,X127)) | sP1(X127,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X126),s(bool,X128))) | s(bool,X126) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) )),
  inference(subsumption_resolution,[],[f3158,f231])).
fof(f3158,plain,(
  ( ! [X127,X128,X126,X129] : (~p(s(bool,'T_0')) | p(s(bool,X127)) | sP1(X127,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X126),s(bool,X128))) | s(bool,X126) = s(bool,X129) | s(bool,'T_0') = s(bool,X129)) )),
  inference(superposition,[],[f848,f688])).
fof(f3620,plain,(
  ( ! [X125,X123,X124,X122] : (p(s(bool,X123)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X122),s(bool,X124)),X123) | s(bool,X122) = s(bool,X125) | s(bool,'T_0') = s(bool,X125)) )),
  inference(subsumption_resolution,[],[f3157,f231])).
fof(f3157,plain,(
  ( ! [X125,X123,X124,X122] : (~p(s(bool,'T_0')) | p(s(bool,X123)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X122),s(bool,X124)),X123) | s(bool,X122) = s(bool,X125) | s(bool,'T_0') = s(bool,X125)) )),
  inference(superposition,[],[f847,f688])).
fof(f3619,plain,(
  ( ! [X121,X118,X120,X119] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X118),s(bool,X119)),X120) | s(bool,X118) = s(bool,X121) | s(bool,'T_0') = s(bool,X121)) )),
  inference(subsumption_resolution,[],[f3156,f231])).
fof(f3156,plain,(
  ( ! [X121,X118,X120,X119] : (~p(s(bool,'T_0')) | sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X118),s(bool,X119)),X120) | s(bool,X118) = s(bool,X121) | s(bool,'T_0') = s(bool,X121)) )),
  inference(superposition,[],[f846,f688])).
fof(f3618,plain,(
  ( ! [X116,X114,X117,X115] : (sP0(X115,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X114),s(bool,X116))) | s(bool,X114) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(subsumption_resolution,[],[f3155,f231])).
fof(f3155,plain,(
  ( ! [X116,X114,X117,X115] : (~p(s(bool,'T_0')) | sP0(X115,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X114),s(bool,X116))) | s(bool,X114) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(superposition,[],[f845,f688])).
fof(f3153,plain,(
  ( ! [X109,X110,X108] : (sP5('T_0',X108,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X109))) | s(bool,X108) = s(bool,X110) | s(bool,'T_0') = s(bool,X110)) )),
  inference(superposition,[],[f825,f688])).
fof(f3151,plain,(
  ( ! [X103,X102,X104] : (~sP5('F_0',X102,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X103))) | s(bool,X102) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) )),
  inference(superposition,[],[f824,f688])).
fof(f3149,plain,(
  ( ! [X97,X98,X96] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X97)),X96) | s(bool,X96) = s(bool,X98) | s(bool,'T_0') = s(bool,X98)) )),
  inference(superposition,[],[f823,f688])).
fof(f3147,plain,(
  ( ! [X92,X90,X91] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X91)),X90) | s(bool,X90) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f822,f688])).
fof(f3617,plain,(
  ( ! [X85,X83,X86,X84] : (~sP8(X83,X84,X85) | sP9(X83,X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(subsumption_resolution,[],[f3145,f231])).
fof(f3145,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | ~sP8(X83,X84,X85) | sP9(X83,X84,X85) | s(bool,X83) = s(bool,X86) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f406,f688])).
fof(f3616,plain,(
  ( ! [X80,X81,X79,X82] : (~sP10(X79,X80,X81) | sP11(X79,X80,X81) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(subsumption_resolution,[],[f3144,f231])).
fof(f3144,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~sP10(X79,X80,X81) | sP11(X79,X80,X81) | s(bool,X79) = s(bool,X82) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f405,f688])).
fof(f3615,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X76)) | p(s(bool,X77)) | ~sP11(X75,X77,X76) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(subsumption_resolution,[],[f3143,f231])).
fof(f3143,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X76)) | p(s(bool,X77)) | ~sP11(X75,X77,X76) | s(bool,X75) = s(bool,X78) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f402,f688])).
fof(f3614,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,X72)) | sP11(X71,X72,X73) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f3142,f231])).
fof(f3142,plain,(
  ( ! [X74,X72,X71,X73] : (~p(s(bool,'T_0')) | ~p(s(bool,X72)) | sP11(X71,X72,X73) | s(bool,X71) = s(bool,X74) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f401,f688])).
fof(f3613,plain,(
  ( ! [X70,X68,X69,X67] : (p(s(bool,X68)) | sP11(X67,X69,X68) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(subsumption_resolution,[],[f3141,f231])).
fof(f3141,plain,(
  ( ! [X70,X68,X69,X67] : (~p(s(bool,'T_0')) | p(s(bool,X68)) | sP11(X67,X69,X68) | s(bool,X67) = s(bool,X70) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f400,f688])).
fof(f3612,plain,(
  ( ! [X66,X64,X65,X63] : (p(s(bool,X64)) | ~p(s(bool,X65)) | ~sP10(X65,X64,X63) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f3140,f231])).
fof(f3140,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,X64)) | ~p(s(bool,X65)) | ~sP10(X65,X64,X63) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f395,f688])).
fof(f3611,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,X60)) | p(s(bool,X61)) | ~sP9(X59,X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(subsumption_resolution,[],[f3139,f231])).
fof(f3139,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X60)) | p(s(bool,X61)) | ~sP9(X59,X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(superposition,[],[f385,f688])).
fof(f3610,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X56)) | sP9(X55,X56,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(subsumption_resolution,[],[f3138,f231])).
fof(f3138,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X56)) | sP9(X55,X56,X57) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f384,f688])).
fof(f3609,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X52)) | sP9(X51,X53,X52) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f3137,f231])).
fof(f3137,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X52)) | sP9(X51,X53,X52) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f383,f688])).
fof(f3608,plain,(
  ( ! [X47,X50,X48,X49] : (p(s(bool,X48)) | p(s(bool,X49)) | ~sP8(X47,X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f3136,f231])).
fof(f3136,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X48)) | p(s(bool,X49)) | ~sP8(X47,X48,X49) | s(bool,X47) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f378,f688])).
fof(f3607,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X44)) | p(s(bool,X45)) | ~sP7(X45,X44,X43) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(subsumption_resolution,[],[f3135,f231])).
fof(f3135,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,X44)) | p(s(bool,X45)) | ~sP7(X45,X44,X43) | s(bool,X43) = s(bool,X46) | s(bool,'T_0') = s(bool,X46)) )),
  inference(superposition,[],[f370,f688])).
fof(f3606,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X41)) | ~sP6(X40,X39,X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(subsumption_resolution,[],[f3134,f231])).
fof(f3134,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'T_0')) | ~p(s(bool,X40)) | p(s(bool,X41)) | ~sP6(X40,X39,X41) | s(bool,X39) = s(bool,X42) | s(bool,'T_0') = s(bool,X42)) )),
  inference(superposition,[],[f361,f688])).
fof(f3605,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP3(X36,X35,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f3133,f231])).
fof(f3133,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP3(X36,X35,X37) | s(bool,X35) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f342,f688])).
fof(f3604,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | ~sP4(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f3132,f231])).
fof(f3132,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,'T_0')) | ~p(s(bool,X32)) | p(s(bool,X33)) | ~sP4(X32,X31,X33) | s(bool,X31) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f338,f688])).
fof(f3603,plain,(
  ( ! [X30,X28,X29] : (p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(subsumption_resolution,[],[f3131,f231])).
fof(f3131,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,'T_0')) | p(s(bool,X29)) | sP1(X29,X28) | s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f310,f688])).
fof(f3602,plain,(
  ( ! [X26,X27,X25] : (p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(subsumption_resolution,[],[f3130,f231])).
fof(f3130,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,X26)) | sP1(X25,X26) | s(bool,X25) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f307,f688])).
fof(f3601,plain,(
  ( ! [X24,X23,X22] : (sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f3129,f231])).
fof(f3129,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,'T_0')) | sP0(X22,X23) | s(bool,X22) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f292,f688])).
fof(f3600,plain,(
  ( ! [X21,X19,X20] : (sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f3128,f231])).
fof(f3128,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,'T_0')) | sP0(X20,X19) | s(bool,X19) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f291,f688])).
fof(f3599,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f3127,f231])).
fof(f3127,plain,(
  ( ! [X17,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,X17)) | s(bool,X16) = s(bool,X17) | s(bool,X16) = s(bool,X18) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f285,f688])).
fof(f3598,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f3123,f231])).
fof(f3123,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f253,f688])).
fof(f3098,plain,(
  ( ! [X134,X136,X135] : (sP5('T_0','T_0','const.bool.COND_3'(s(bool,X134),s(bool,X134),s(bool,X135))) | s(bool,X134) = s(bool,X136) | s(bool,'T_0') = s(bool,X136)) )),
  inference(superposition,[],[f825,f688])).
fof(f3096,plain,(
  ( ! [X130,X128,X129] : (~sP5('F_0','T_0','const.bool.COND_3'(s(bool,X128),s(bool,X128),s(bool,X129))) | s(bool,X128) = s(bool,X130) | s(bool,'T_0') = s(bool,X130)) )),
  inference(superposition,[],[f824,f688])).
fof(f3094,plain,(
  ( ! [X123,X124,X122] : (sP5('T_0','const.bool.COND_3'(s(bool,X122),s(bool,X122),s(bool,X123)),'T_0') | s(bool,X122) = s(bool,X124) | s(bool,'T_0') = s(bool,X124)) )),
  inference(superposition,[],[f823,f688])).
fof(f3092,plain,(
  ( ! [X118,X116,X117] : (~sP5('F_0','const.bool.COND_3'(s(bool,X116),s(bool,X116),s(bool,X117)),'T_0') | s(bool,X116) = s(bool,X118) | s(bool,'T_0') = s(bool,X118)) )),
  inference(superposition,[],[f822,f688])).
fof(f3065,plain,(
  ( ! [X26,X24,X27,X25] : (sP5('T_0',X25,'const.bool.COND_3'(s(bool,X24),s(bool,X25),s(bool,X26))) | s(bool,X24) = s(bool,X27) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f825,f688])).
fof(f3064,plain,(
  ( ! [X23,X21,X22,X20] : (~sP5('F_0',X21,'const.bool.COND_3'(s(bool,X20),s(bool,X21),s(bool,X22))) | s(bool,X20) = s(bool,X23) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f824,f688])).
fof(f3063,plain,(
  ( ! [X19,X17,X18,X16] : (sP5('T_0','const.bool.COND_3'(s(bool,X16),s(bool,X17),s(bool,X18)),X17) | s(bool,X16) = s(bool,X19) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f823,f688])).
fof(f3062,plain,(
  ( ! [X14,X12,X15,X13] : (~sP5('F_0','const.bool.COND_3'(s(bool,X12),s(bool,X13),s(bool,X14)),X13) | s(bool,X12) = s(bool,X15) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f822,f688])).
fof(f3061,plain,(
  ( ! [X6,X8,X7,X5,X9] : (s(X6,X7) = s(X6,'const.bool.COND_3'(s(bool,X5),s(X6,X7),s(X6,X8))) | s(bool,X5) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f276,f688])).
fof(f3060,plain,(
  ( ! [X4,X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f249,f688])).
fof(f2976,plain,(
  ( ! [X255,X257,X254,X256] : (s(X256,f(s(bool,X257))) != s(X256,g(s(bool,X257))) | s(fun(bool,X256),X254) = s(fun(bool,X256),X255) | s(bool,'T_0') = s(bool,X257) | s(bool,'T_0') = s(bool,sK15(X254,X255,X256,bool))) )),
  inference(superposition,[],[f323,f688])).
fof(f2928,plain,(
  ( ! [X109,X110,X108] : (sP5('T_0',X108,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X109),s(bool,X110))) | s(bool,'T_0') = s(bool,X109) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f825,f688])).
fof(f2926,plain,(
  ( ! [X103,X102,X104] : (~sP5('F_0',X102,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X103),s(bool,X104))) | s(bool,'T_0') = s(bool,X103) | s(bool,'T_0') = s(bool,X102)) )),
  inference(superposition,[],[f824,f688])).
fof(f2924,plain,(
  ( ! [X97,X98,X96] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X97),s(bool,X98)),X96) | s(bool,'T_0') = s(bool,X97) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f823,f688])).
fof(f2922,plain,(
  ( ! [X92,X90,X91] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X91),s(bool,X92)),X90) | s(bool,'T_0') = s(bool,X91) | s(bool,'T_0') = s(bool,X90)) )),
  inference(superposition,[],[f822,f688])).
fof(f2880,plain,(
  ( ! [X17,X15,X16] : (s(bool,'T_0') = s(bool,X15) | s(bool,X17) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X15),s(bool,X16))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f688,f276])).
fof(f2869,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f688,f688])).
fof(f2854,plain,(
  ( ! [X24,X23,X25] : (s(bool,X23) = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X23),s(bool,X24)))) )),
  inference(superposition,[],[f688,f276])).
fof(f2754,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1))) | p(s(bool,X0))) ) | $spl2),
  inference(forward_demodulation,[],[f2753,f477])).
fof(f2753,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | sP1(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X1)))) ) | $spl2),
  inference(subsumption_resolution,[],[f2746,f231])).
fof(f2746,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X1)))) ) | $spl2),
  inference(superposition,[],[f848,f477])).
fof(f2745,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) )),
  inference(unit_resulting_resolution,[],[f231,f420,f848])).
fof(f2728,plain,(
  ( ! [X0,X1] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X0) | p(s(bool,X0))) ) | $spl2),
  inference(forward_demodulation,[],[f2727,f477])).
fof(f2727,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X1)),X0)) ) | $spl2),
  inference(subsumption_resolution,[],[f2720,f231])).
fof(f2720,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X1)),X0)) ) | $spl2),
  inference(superposition,[],[f847,f477])).
fof(f2719,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f847])).
fof(f2589,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f231,f846])).
fof(f2559,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f231,f845])).
fof(f2550,plain,(
  ( ! [X4,X3] : (sP5('T_0','F_0','const.bool.COND_3'(s(bool,X3),s(bool,X4),s(bool,X3))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f873,f239])).
fof(f2538,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0',X1,'const.bool.COND_3'(s(bool,X0),s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f873,f239])).
fof(f2519,plain,(
  ( ! [X4,X3] : (~sP5('F_0','F_0','const.bool.COND_3'(s(bool,X3),s(bool,X4),s(bool,X3))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f872,f239])).
fof(f2507,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',X1,'const.bool.COND_3'(s(bool,X0),s(bool,X2),s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f872,f239])).
fof(f2487,plain,(
  ( ! [X4,X3] : (sP5('T_0','const.bool.COND_3'(s(bool,X3),s(bool,X4),s(bool,X3)),'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f871,f239])).
fof(f2475,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f871,f239])).
fof(f2141,plain,(
  ( ! [X4,X3] : (~sP5('F_0','const.bool.COND_3'(s(bool,X3),s(bool,X4),s(bool,X3)),'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f870,f239])).
fof(f2129,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2)),X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f870,f239])).
fof(f2097,plain,(
  ( ! [X4,X3] : (sP5('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f825,f239])).
fof(f2094,plain,(
  ( ! [X0] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl2),
  inference(superposition,[],[f825,f477])).
fof(f2091,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) )),
  inference(unit_resulting_resolution,[],[f825,f333])).
fof(f2063,plain,(
  ( ! [X4,X3] : (~sP5('F_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f824,f239])).
fof(f2060,plain,(
  ( ! [X0] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | $spl2),
  inference(superposition,[],[f824,f477])).
fof(f2054,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f445,f428,f824,f337])).
fof(f2075,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl2),
  inference(forward_demodulation,[],[f2055,f477])).
fof(f2055,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f446,f429,f824,f337])).
fof(f2029,plain,(
  ( ! [X8,X7,X9] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X9)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)))) )),
  inference(superposition,[],[f823,f276])).
fof(f2027,plain,(
  ( ! [X4,X3] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4)),'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f823,f239])).
fof(f2024,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f823,f477])).
fof(f2021,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f823,f333])).
fof(f1995,plain,(
  ( ! [X8,X7,X9] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X9)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)))) )),
  inference(superposition,[],[f822,f276])).
fof(f1993,plain,(
  ( ! [X4,X3] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4)),'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f822,f239])).
fof(f1990,plain,(
  ( ! [X0] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f822,f477])).
fof(f2007,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(forward_demodulation,[],[f1981,f477])).
fof(f1981,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f449,f433,f822,f337])).
fof(f1987,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f448,f433,f822,f335])).
fof(f1637,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f231,f1308,f285])).
fof(f1638,plain,(
  ( ! [X0,X1] : (s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f285])).
fof(f1639,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) )),
  inference(unit_resulting_resolution,[],[f1308,f291])).
fof(f1640,plain,(
  ( ! [X0,X1] : (sP0('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f1308,f292])).
fof(f1641,plain,(
  ( ! [X0] : (~sP1('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f1308,f306])).
fof(f1643,plain,(
  ( ! [X0] : (~sP1('T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f231,f1308,f306])).
fof(f1644,plain,(
  ( ! [X0,X1] : (~sP1('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f306])).
fof(f1645,plain,(
  ( ! [X0] : (sP1('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f1308,f307])).
fof(f1646,plain,(
  ( ! [X0] : (sP1('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f420,f1308,f310])).
fof(f1649,plain,(
  ( ! [X0] : (~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f334])).
fof(f1650,plain,(
  ( ! [X0,X1] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1308,f420,f1308,f334])).
fof(f1652,plain,(
  ( ! [X0] : (sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f442,f435,f428,f1308,f335])).
fof(f1654,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f443,f436,f428,f1308,f335])).
fof(f1658,plain,(
  ( ! [X0] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f442,f435,f429,f1308,f335])).
fof(f1660,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f443,f436,f429,f1308,f335])).
fof(f1669,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f338])).
fof(f1676,plain,(
  ( ! [X0] : (~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f338])).
fof(f1677,plain,(
  ( ! [X0,X1] : (~sP4('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1308,f420,f1308,f338])).
fof(f1683,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X2)))) )),
  inference(unit_resulting_resolution,[],[f1308,f339])).
fof(f1684,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f342])).
fof(f1691,plain,(
  ( ! [X0] : (~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f342])).
fof(f1692,plain,(
  ( ! [X0,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1308,f420,f1308,f342])).
fof(f1698,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X2)))) )),
  inference(unit_resulting_resolution,[],[f1308,f343])).
fof(f1699,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X2)))) )),
  inference(unit_resulting_resolution,[],[f1308,f347])).
fof(f1702,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f477,f1308,f351])).
fof(f1705,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X1)) )),
  inference(unit_resulting_resolution,[],[f276,f1308,f351])).
fof(f1707,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f477,f1308,f351])).
fof(f1710,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)))) )),
  inference(unit_resulting_resolution,[],[f276,f1308,f351])).
fof(f1712,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f473,f1308,f352])).
fof(f1714,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f473,f1308,f352])).
fof(f1716,plain,(
  ( ! [X0,X1] : (~sP7('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f1308,f355])).
fof(f1717,plain,(
  ( ! [X0,X1] : (~sP7('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f420,f1308,f356])).
fof(f1720,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f452,f1308,f357])).
fof(f1727,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f452,f1308,f357])).
fof(f1728,plain,(
  ( ! [X0,X1] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1308,f452,f1308,f357])).
fof(f1732,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f361])).
fof(f1739,plain,(
  ( ! [X0] : (~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f361])).
fof(f1740,plain,(
  ( ! [X0,X1] : (~sP6('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f1308,f420,f1308,f361])).
fof(f1746,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X2)))) )),
  inference(unit_resulting_resolution,[],[f1308,f362])).
fof(f1747,plain,(
  ( ! [X0] : (sP7('T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f231,f1308,f367])).
fof(f1752,plain,(
  ( ! [X0] : (sP7('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f231,f231,f1308,f367])).
fof(f1754,plain,(
  ( ! [X0,X1] : (sP7('T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) )),
  inference(unit_resulting_resolution,[],[f231,f1308,f1308,f367])).
fof(f1757,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f231,f1308,f367])).
fof(f1758,plain,(
  ( ! [X0,X1] : (sP7('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f1308,f231,f1308,f367])).
fof(f1759,plain,(
  ( ! [X0,X1] : (sP7('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) )),
  inference(unit_resulting_resolution,[],[f231,f1308,f1308,f367])).
fof(f1760,plain,(
  ( ! [X2,X0,X1] : (sP7('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X2)))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f1308,f367])).
fof(f1761,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f370])).
fof(f1765,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f370])).
fof(f1766,plain,(
  ( ! [X0,X1] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) )),
  inference(unit_resulting_resolution,[],[f1308,f420,f1308,f370])).
fof(f1769,plain,(
  ( ! [X0,X1] : (~sP9('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) )),
  inference(unit_resulting_resolution,[],[f420,f1308,f371])).
fof(f1775,plain,(
  ( ! [X0,X1] : (~sP9('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f420,f1308,f372])).
fof(f1787,plain,(
  ( ! [X0] : (~sP8('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f420,f1308,f378])).
fof(f1794,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X2)))) )),
  inference(unit_resulting_resolution,[],[f1308,f379])).
fof(f1795,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1308,f380])).
fof(f1796,plain,(
  ( ! [X0,X1] : (sP9('T_0',X0,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) )),
  inference(unit_resulting_resolution,[],[f231,f1308,f383])).
fof(f1800,plain,(
  ( ! [X2,X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X2)))) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f383])).
fof(f1801,plain,(
  ( ! [X0,X1] : (sP9('T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f231,f1308,f384])).
fof(f1805,plain,(
  ( ! [X2,X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f384])).
fof(f1806,plain,(
  ( ! [X0] : (~sP9('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f420,f1308,f385])).
fof(f1807,plain,(
  ( ! [X0,X1] : (~sP11('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f420,f1308,f389])).
fof(f1832,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f420,f231,f1308,f395])).
fof(f1839,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f420,f231,f1308,f395])).
fof(f1840,plain,(
  ( ! [X0,X1] : (~sP10('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) )),
  inference(unit_resulting_resolution,[],[f420,f1308,f1308,f395])).
fof(f1846,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1308,f397])).
fof(f1847,plain,(
  ( ! [X0] : (sP11('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f420,f420,f1308,f399])).
fof(f1850,plain,(
  ( ! [X0,X1] : (sP11('T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1)) )),
  inference(unit_resulting_resolution,[],[f231,f1308,f401])).
fof(f1854,plain,(
  ( ! [X2,X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f1308,f1308,f401])).
fof(f1855,plain,(
  ( ! [X0] : (~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f402])).
fof(f1860,plain,(
  ( ! [X0] : (~sP11('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f1308,f402])).
fof(f1861,plain,(
  ( ! [X0,X1] : (~sP11('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) )),
  inference(unit_resulting_resolution,[],[f1308,f420,f1308,f402])).
fof(f1862,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f466,f1308,f405])).
fof(f1864,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f468,f1308,f405])).
fof(f1865,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f469,f1308,f405])).
fof(f1867,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f458,f1308,f406])).
fof(f1868,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f459,f1308,f406])).
fof(f1870,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f461,f1308,f406])).
fof(f1871,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f462,f1308,f406])).
fof(f1873,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1308,f577])).
fof(f1875,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1308,f588])).
fof(f1877,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f1308,f622])).
fof(f1879,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f1308,f952])).
fof(f1887,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f1308,f977])).
fof(f1895,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f1308,f1032])).
fof(f1471,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl2),
  inference(forward_demodulation,[],[f1454,f276])).
fof(f1454,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK12),s('type.realax.real',sK13))) | $spl2),
  inference(superposition,[],[f280,f477])).
fof(f1442,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f446,f438,f431,f420,f337])).
fof(f1382,plain,(
  sP5('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f442,f435,f431,f420,f336])).
fof(f1383,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f443,f436,f431,f420,f336])).
fof(f1396,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f449,f440,f433,f420,f336])).
fof(f1344,plain,(
  sP5('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f448,f435,f428,f231,f335])).
fof(f1345,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f448,f436,f428,f231,f335])).
fof(f1349,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f448,f436,f429,f231,f335])).
fof(f1358,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f448,f804,f433,f231,f335])).
fof(f1293,plain,(
  ( ! [X0,X1] : (~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1,X0) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1283,f231])).
fof(f1283,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1,X0)) ) | $spl2),
  inference(superposition,[],[f402,f477])).
fof(f1273,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f1261,f354])).
fof(f1261,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f231,f420,f1032])).
fof(f1250,plain,(
  ~sP11('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f1234,f390])).
fof(f1245,plain,(
  ( ! [X0,X1] : (~sP10(X1,X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ~p(s(bool,X1)) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1235,f231])).
fof(f1235,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | ~p(s(bool,X1)) | ~sP10(X1,X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f395,f477])).
fof(f1234,plain,(
  ~sP10('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f231,f420,f231,f395])).
fof(f1221,plain,(
  sP11('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f471,f231,f420,f394])).
fof(f1188,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f231,f420,f977])).
fof(f1168,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X10)) | p(s(bool,X12)) | p(s(bool,X13)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X13,X12)) )),
  inference(superposition,[],[f385,f276])).
fof(f1175,plain,(
  ( ! [X0,X1] : (~sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1,X0) | p(s(bool,X1)) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1164,f231])).
fof(f1164,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1,X0)) ) | $spl2),
  inference(superposition,[],[f385,f477])).
fof(f1134,plain,(
  ~sP9('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1117,f373])).
fof(f1122,plain,(
  ( ! [X12,X10,X13,X11] : (~p(s(bool,X10)) | p(s(bool,X12)) | p(s(bool,X13)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),X12,X13)) )),
  inference(superposition,[],[f378,f276])).
fof(f1129,plain,(
  ( ! [X0,X1] : (~sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1118,f231])).
fof(f1118,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(superposition,[],[f378,f477])).
fof(f1117,plain,(
  ~sP8('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f420,f420,f231,f378])).
fof(f1102,plain,(
  sP9('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f464,f420,f420,f377])).
fof(f1098,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f1086,f333])).
fof(f1086,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f231,f420,f952])).
fof(f1066,plain,(
  ( ! [X0,X1] : (~sP7(X1,X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1058,f231])).
fof(f1058,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP7(X1,X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f370,f477])).
fof(f1037,plain,(
  ~sP7('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f1021,f354])).
fof(f1032,plain,(
  ( ! [X0,X1] : (~sP6(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f1022,f231])).
fof(f1022,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP6(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(superposition,[],[f361,f477])).
fof(f1021,plain,(
  ~sP6('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f420,f231,f231,f361])).
fof(f1007,plain,(
  sP7('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f451,f231,f231,f357])).
fof(f1008,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f452,f231,f231,f357])).
fof(f1003,plain,(
  ~sP5('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f990,f331])).
fof(f990,plain,(
  ~sP2('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f420,f420,f420,f346])).
fof(f982,plain,(
  ~sP5('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f966,f332])).
fof(f977,plain,(
  ( ! [X0,X1] : (~sP3(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f967,f231])).
fof(f967,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP3(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(superposition,[],[f342,f477])).
fof(f966,plain,(
  ~sP3('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f420,f231,f231,f342])).
fof(f952,plain,(
  ( ! [X0,X1] : (~sP4(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1) | p(s(bool,X1)) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f942,f231])).
fof(f942,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X1)) | ~sP4(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(superposition,[],[f338,f477])).
fof(f941,plain,(
  ~sP4('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f420,f231,f231,f338])).
fof(f928,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f622])).
fof(f874,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f277,f239])).
fof(f854,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X51)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X53,X54) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X53,X54)) )),
  inference(superposition,[],[f406,f276])).
fof(f853,plain,(
  ( ! [X47,X50,X48,X49] : (~p(s(bool,X47)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50)) )),
  inference(superposition,[],[f405,f276])).
fof(f852,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,X45)) | ~p(s(bool,X43)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46)) )),
  inference(superposition,[],[f401,f276])).
fof(f851,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X39)) | p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)),X42,X41)) )),
  inference(superposition,[],[f400,f276])).
fof(f850,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X37)) | ~p(s(bool,X35)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X35),s(bool,X36)),X37,X38)) )),
  inference(superposition,[],[f384,f276])).
fof(f849,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X33)) | ~p(s(bool,X31)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33)) )),
  inference(superposition,[],[f383,f276])).
fof(f848,plain,(
  ( ! [X30,X28,X29] : (~p(s(bool,X28)) | p(s(bool,X30)) | sP1(X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29)))) )),
  inference(superposition,[],[f310,f276])).
fof(f847,plain,(
  ( ! [X26,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X27)) | sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27)) )),
  inference(superposition,[],[f307,f276])).
fof(f846,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24)) )),
  inference(superposition,[],[f292,f276])).
fof(f845,plain,(
  ( ! [X21,X19,X20] : (~p(s(bool,X19)) | sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20)))) )),
  inference(superposition,[],[f291,f276])).
fof(f822,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) )),
  inference(unit_resulting_resolution,[],[f420,f276,f353])).
fof(f823,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) )),
  inference(unit_resulting_resolution,[],[f231,f276,f351])).
fof(f824,plain,(
  ( ! [X0,X1] : (~sP5('F_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f420,f276,f353])).
fof(f825,plain,(
  ( ! [X0,X1] : (sP5('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(unit_resulting_resolution,[],[f231,f276,f351])).
fof(f804,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f420,f477,f353])).
fof(f808,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f477,f353])).
fof(f795,plain,(
  ~sP5('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f231,f473,f352])).
fof(f797,plain,(
  ~sP5('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f231,f473,f352])).
fof(f782,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl2),
  inference(unit_resulting_resolution,[],[f231,f477,f351])).
fof(f784,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f477,f351])).
fof(f774,plain,(
  sP5('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f420,f473,f350])).
fof(f775,plain,(
  sP5('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f420,f473,f350])).
fof(f749,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f611])).
fof(f670,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(subsumption_resolution,[],[f668,f231])).
fof(f668,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(superposition,[],[f406,f477])).
fof(f663,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f459,f231,f406])).
fof(f666,plain,(
  ( ! [X0] : (sP9('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f462,f231,f406])).
fof(f647,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(subsumption_resolution,[],[f645,f231])).
fof(f645,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(superposition,[],[f405,f477])).
fof(f643,plain,(
  ( ! [X0] : (sP11('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f469,f231,f405])).
fof(f622,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f620,f231])).
fof(f620,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(superposition,[],[f401,f477])).
fof(f619,plain,(
  ( ! [X0] : (sP11('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f231,f231,f401])).
fof(f616,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f588])).
fof(f611,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1,X0) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f609,f231])).
fof(f609,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1,X0)) ) | $spl2),
  inference(superposition,[],[f400,f477])).
fof(f608,plain,(
  ( ! [X0] : (sP11('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f231,f400])).
fof(f600,plain,(
  ( ! [X0] : (~sP11('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f231,f420,f389])).
fof(f598,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f420,f388])).
fof(f588,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f586,f231])).
fof(f586,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(superposition,[],[f384,f477])).
fof(f585,plain,(
  ( ! [X0] : (sP9('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f231,f231,f384])).
fof(f582,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f231,f577])).
fof(f577,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1,X0) | ~p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f575,f231])).
fof(f575,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1,X0)) ) | $spl2),
  inference(superposition,[],[f383,f477])).
fof(f574,plain,(
  ( ! [X0] : (sP9('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f231,f383])).
fof(f571,plain,(
  ( ! [X0] : (~sP9('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f231,f420,f372])).
fof(f568,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f371])).
fof(f563,plain,(
  ( ! [X0] : (sP7('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f420,f420,f366])).
fof(f555,plain,(
  ( ! [X0] : (sP7('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f420,f420,f365])).
fof(f552,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl2),
  inference(unit_resulting_resolution,[],[f420,f528])).
fof(f551,plain,(
  ( ! [X0] : (~sP7('T_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f231,f420,f356])).
fof(f548,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f231,f420,f355])).
fof(f540,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f420,f420,f421])).
fof(f528,plain,(
  ( ! [X0] : (sP1(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f526,f231])).
fof(f526,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(superposition,[],[f310,f477])).
fof(f525,plain,(
  sP1('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f420,f231,f310])).
fof(f522,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl2),
  inference(unit_resulting_resolution,[],[f420,f518])).
fof(f518,plain,(
  ( ! [X0] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0) | p(s(bool,X0))) ) | $spl2),
  inference(subsumption_resolution,[],[f516,f231])).
fof(f516,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | $spl2),
  inference(superposition,[],[f307,f477])).
fof(f515,plain,(
  sP1('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f420,f231,f307])).
fof(f512,plain,(
  ~sP1('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f231,f231,f306])).
fof(f511,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f420,f420,f305])).
fof(f469,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f397])).
fof(f462,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f380])).
fof(f459,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f379])).
fof(f451,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f362])).
fof(f452,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f362])).
fof(f449,plain,(
  ( ! [X0,X1] : (sP2('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f349])).
fof(f446,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f348])).
fof(f443,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f347])).
fof(f436,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f343])).
fof(f429,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f339])).
fof(f425,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f231,f292])).
fof(f426,plain,(
  ( ! [X0] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f292])).
fof(f422,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f231,f291])).
fof(f423,plain,(
  ( ! [X0] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f416,f291])).
fof(f389,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f222])).
fof(f390,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f222])).
fof(f392,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f222])).
fof(f393,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f222])).
fof(f373,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f214])).
fof(f375,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f214])).
fof(f376,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f214])).
fof(f354,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f207])).
fof(f357,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f207])).
fof(f352,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f204])).
fof(f346,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f203])).
fof(f331,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f195])).
fof(f334,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f195])).
fof(f323,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK15(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK15(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f190])).
fof(f190,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK15(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK15(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15])],[f130])).
fof(f130,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.real.REAL_MAX_LE',aHL_EXT)).
fof(f305,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f184])).
fof(f306,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f184])).
fof(f421,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f290,f420])).
fof(f290,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f177])).
fof(f18333,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,'T_0'),s(bool,'F_0')),'F_0') | ($spl2 | $spl5)),
  inference(superposition,[],[f12040,f15927])).
fof(f20107,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20106,f1699])).
fof(f20106,plain,(
  ~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,'T_0')),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18332,f18647])).
fof(f18332,plain,(
  ~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,'T_0')),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(superposition,[],[f11649,f15927])).
fof(f20105,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20104,f1698])).
fof(f20104,plain,(
  ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18331,f18647])).
fof(f18331,plain,(
  ~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(superposition,[],[f11598,f15927])).
fof(f20097,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20096,f1700])).
fof(f20096,plain,(
  ~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18327,f18647])).
fof(f18327,plain,(
  ~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(superposition,[],[f9540,f15927])).
fof(f20095,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20094,f1701])).
fof(f20094,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f20093,f18647])).
fof(f20093,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18326,f19329])).
fof(f18326,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,'T_0')),'F_0') | ($spl2 | $spl5)),
  inference(superposition,[],[f9473,f15927])).
fof(f20090,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967,f19969,f19971,f19983,f19991,f19995,f19999,f20057,f20061,f20084,f20089])).
fof(f20089,plain,(
  ( ! [X177] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X177)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f20088,f1471])).
fof(f20088,plain,(
  ( ! [X177] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X177)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18324,f18647])).
fof(f18324,plain,(
  ( ! [X177] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X177)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(superposition,[],[f8897,f15927])).
fof(f20084,plain,(
  ( ! [X175] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X175)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f20083,f1471])).
fof(f20083,plain,(
  ( ! [X175] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X175)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18322,f18647])).
fof(f18322,plain,(
  ( ! [X175] : (sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X175)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(superposition,[],[f8895,f15927])).
fof(f20061,plain,(
  ( ! [X172] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X172)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18307,f18647])).
fof(f18307,plain,(
  ( ! [X172] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X172)))) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f8664,f15927])).
fof(f20057,plain,(
  ( ! [X170] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X170)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18305,f18647])).
fof(f18305,plain,(
  ( ! [X170] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X170)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f8662,f15927])).
fof(f19999,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X28,X29)) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19998,f18647])).
fof(f19998,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X28,X29)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19997,f19318])).
fof(f19997,plain,(
  ( ! [X28,X29] : (~p(s(bool,X28)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X28,X29)) ) | ($spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18221,f231])).
fof(f18221,plain,(
  ( ! [X28,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X28)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X28,X29)) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f401,f15927])).
fof(f19995,plain,(
  ( ! [X21,X20] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X20,X21)) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19994,f18647])).
fof(f19994,plain,(
  ( ! [X21,X20] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X20,X21)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19993,f19318])).
fof(f19993,plain,(
  ( ! [X21,X20] : (~p(s(bool,X20)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X20,X21)) ) | ($spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18217,f231])).
fof(f18217,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X20,X21)) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f384,f15927])).
fof(f19991,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X19,X18)) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19990,f18647])).
fof(f19990,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X19,X18)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19989,f19318])).
fof(f19989,plain,(
  ( ! [X19,X18] : (~p(s(bool,X18)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X19,X18)) ) | ($spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18216,f231])).
fof(f18216,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X19,X18)) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f383,f15927])).
fof(f19983,plain,(
  ( ! [X3] : (s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19982,f18647])).
fof(f19982,plain,(
  ( ! [X3] : (s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19981,f19318])).
fof(f19981,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18206,f231])).
fof(f18206,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X3)) | s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f285,f15927])).
fof(f19971,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18571,f18647])).
fof(f18571,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f16034])).
fof(f19969,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18570,f18647])).
fof(f18570,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f16033])).
fof(f19967,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18569,f18647])).
fof(f18569,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f16020])).
fof(f19963,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18566,f18647])).
fof(f18566,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f15958])).
fof(f19961,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18565,f18647])).
fof(f18565,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f15957])).
fof(f19959,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18564,f18647])).
fof(f18564,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f15956])).
fof(f19957,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18563,f18647])).
fof(f18563,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f15955])).
fof(f19955,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18562,f18647])).
fof(f18562,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f15954])).
fof(f19953,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18561,f18647])).
fof(f18561,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f15950])).
fof(f19918,plain,(
  ( ! [X24] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19917,f18647])).
fof(f19917,plain,(
  ( ! [X24] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18539,f19329])).
fof(f18539,plain,(
  ( ! [X24] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f12210])).
fof(f19912,plain,(
  ( ! [X24] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19911,f18647])).
fof(f19911,plain,(
  ( ! [X24] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18537,f19329])).
fof(f18537,plain,(
  ( ! [X24] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f12152])).
fof(f19909,plain,(
  ( ! [X24] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19908,f19329])).
fof(f19908,plain,(
  ( ! [X24] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18536,f18647])).
fof(f18536,plain,(
  ( ! [X24] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f12093])).
fof(f19904,plain,(
  ( ! [X24] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19903,f19329])).
fof(f19903,plain,(
  ( ! [X24] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18534,f18647])).
fof(f18534,plain,(
  ( ! [X24] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X24),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f12031])).
fof(f19901,plain,(
  ( ! [X30,X31,X29] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19900,f18647])).
fof(f19900,plain,(
  ( ! [X30,X31,X29] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18532,f19329])).
fof(f18532,plain,(
  ( ! [X30,X31,X29] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11956])).
fof(f19898,plain,(
  ( ! [X25] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18531,f18647])).
fof(f18531,plain,(
  ( ! [X25] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11954])).
fof(f19896,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18530,f18647])).
fof(f18530,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11953])).
fof(f19894,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19893,f18647])).
fof(f19893,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18529,f19329])).
fof(f18529,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11952])).
fof(f19891,plain,(
  ( ! [X22] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X22)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18528,f18647])).
fof(f18528,plain,(
  ( ! [X22] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X22)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11951])).
fof(f19888,plain,(
  ( ! [X30,X31,X29] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19887,f18647])).
fof(f19887,plain,(
  ( ! [X30,X31,X29] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18519,f19329])).
fof(f18519,plain,(
  ( ! [X30,X31,X29] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X29),s(bool,X30)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11899])).
fof(f19885,plain,(
  ( ! [X28,X26,X27] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X26),s(bool,X28)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X26),s(bool,X27)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18518,f18647])).
fof(f18518,plain,(
  ( ! [X28,X26,X27] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X26),s(bool,X28)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X26),s(bool,X27)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11898])).
fof(f19883,plain,(
  ( ! [X25] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18517,f18647])).
fof(f18517,plain,(
  ( ! [X25] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11897])).
fof(f19881,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18516,f18647])).
fof(f18516,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11896])).
fof(f19879,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19878,f19329])).
fof(f19878,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18515,f18647])).
fof(f18515,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11895])).
fof(f19876,plain,(
  ( ! [X22] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X22)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18514,f18647])).
fof(f18514,plain,(
  ( ! [X22] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X22)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11894])).
fof(f19226,plain,(
  ( ! [X102] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X102)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f18479])).
fof(f19225,plain,(
  ( ! [X100] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X100)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f18478])).
fof(f19182,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f17759])).
fof(f19181,plain,(
  ( ! [X0] : (sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f17755])).
fof(f19180,plain,(
  ( ! [X0] : (sP5('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f17700])).
fof(f19179,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f17667])).
fof(f19841,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19133,f19329])).
fof(f19133,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16471])).
fof(f19132,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16457])).
fof(f19838,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19130,f19329])).
fof(f19130,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16426])).
fof(f19129,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16420])).
fof(f19835,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19127,f19329])).
fof(f19127,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16405])).
fof(f19126,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16391])).
fof(f19831,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19121,f19329])).
fof(f19121,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16339])).
fof(f19120,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16325])).
fof(f19066,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16032])).
fof(f19065,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16031])).
fof(f19062,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16018])).
fof(f19820,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19054,f19329])).
fof(f19054,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16007])).
fof(f19050,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16002])).
fof(f19817,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19049,f19329])).
fof(f19049,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16001])).
fof(f19033,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f15953])).
fof(f19032,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f15952])).
fof(f19031,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f15951])).
fof(f19030,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f15949])).
fof(f19029,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f15948])).
fof(f19028,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f15947])).
fof(f19026,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f15944])).
fof(f18951,plain,(
  ~sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12289])).
fof(f18950,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12271])).
fof(f19779,plain,(
  ( ! [X25] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18949,f19329])).
fof(f18949,plain,(
  ( ! [X25] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12211])).
fof(f19777,plain,(
  ( ! [X23] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X23),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18948,f19329])).
fof(f18948,plain,(
  ( ! [X23] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'F_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12209])).
fof(f19773,plain,(
  ( ! [X25] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18945,f19329])).
fof(f18945,plain,(
  ( ! [X25] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12153])).
fof(f19771,plain,(
  ( ! [X23] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X23),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18944,f19329])).
fof(f18944,plain,(
  ( ! [X23] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'F_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12151])).
fof(f19769,plain,(
  ( ! [X25] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18943,f19329])).
fof(f18943,plain,(
  ( ! [X25] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12094])).
fof(f19767,plain,(
  ( ! [X23] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X23),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18942,f19329])).
fof(f18942,plain,(
  ( ! [X23] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12092])).
fof(f19763,plain,(
  ( ! [X25] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18939,f19329])).
fof(f18939,plain,(
  ( ! [X25] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12032])).
fof(f19761,plain,(
  ( ! [X23] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X23),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18938,f19329])).
fof(f18938,plain,(
  ( ! [X23] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X23),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12030])).
fof(f18937,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11852])).
fof(f19757,plain,(
  ( ! [X30,X28,X29] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18934,f19329])).
fof(f18934,plain,(
  ( ! [X30,X28,X29] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11669])).
fof(f18933,plain,(
  ( ! [X24] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11667])).
fof(f19754,plain,(
  ( ! [X23] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18932,f19329])).
fof(f18932,plain,(
  ( ! [X23] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11666])).
fof(f18931,plain,(
  ( ! [X22] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X22)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11665])).
fof(f19750,plain,(
  ( ! [X30,X28,X29] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18922,f19329])).
fof(f18922,plain,(
  ( ! [X30,X28,X29] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X29),s(bool,X30)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11618])).
fof(f18921,plain,(
  ( ! [X26,X27,X25] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11617])).
fof(f18920,plain,(
  ( ! [X24] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11616])).
fof(f19746,plain,(
  ( ! [X23] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18919,f19329])).
fof(f18919,plain,(
  ( ! [X23] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11615])).
fof(f18918,plain,(
  ( ! [X22] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X22)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11614])).
fof(f19743,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X1) = s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19655,f276])).
fof(f19655,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',X1),s('type.realax.real',X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f280])).
fof(f19648,plain,(
  ( ! [X0,X1] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f17771])).
fof(f19647,plain,(
  ( ! [X0,X1] : (~sP3('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f17736])).
fof(f19624,plain,(
  ( ! [X0] : (sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f14571])).
fof(f19589,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f6891])).
fof(f19578,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f6684])).
fof(f19569,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f6585])).
fof(f19557,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f6497])).
fof(f19534,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f6307])).
fof(f19722,plain,(
  ( ! [X7] : (s(bool,'F_0') = s(bool,X7)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19511,f19329])).
fof(f19511,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X7)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f6146])).
fof(f19710,plain,(
  ( ! [X6] : (s(bool,'F_0') = s(bool,X6)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19451,f19329])).
fof(f19451,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X6)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f5735])).
fof(f19394,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2805])).
fof(f19392,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2775])).
fof(f19388,plain,(
  ( ! [X0] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2547])).
fof(f19387,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2535])).
fof(f19386,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2524])).
fof(f19384,plain,(
  ( ! [X0] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2516])).
fof(f19383,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2504])).
fof(f19382,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2501])).
fof(f19381,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2490])).
fof(f19379,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2484])).
fof(f19378,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2472])).
fof(f19377,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2148])).
fof(f19376,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2144])).
fof(f19374,plain,(
  ( ! [X0] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2138])).
fof(f19373,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'T_0','F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2126])).
fof(f19372,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2124])).
fof(f19371,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2100])).
fof(f19369,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2066])).
fof(f19367,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2057])).
fof(f19366,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f2030])).
fof(f19364,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f1996])).
fof(f19362,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f1985])).
fof(f19361,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X1)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f1711])).
fof(f19360,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X2)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f1706])).
fof(f19701,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19700,f19318])).
fof(f19700,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46) | ~p(s(bool,X45))) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19347,f19318])).
fof(f19347,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46) | ~p(s(bool,X45)) | ~p(s(bool,X44))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f904])).
fof(f19699,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19698,f19318])).
fof(f19698,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33) | ~p(s(bool,X33))) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19344,f19318])).
fof(f19344,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33) | ~p(s(bool,X33)) | ~p(s(bool,X32))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f901])).
fof(f19697,plain,(
  ( ! [X24,X23,X22] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24)) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19341,f19318])).
fof(f19341,plain,(
  ( ! [X24,X23,X22] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24) | ~p(s(bool,X23))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f898])).
fof(f19696,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19340,f19318])).
fof(f19340,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20))) | ~p(s(bool,X20))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f897])).
fof(f19338,plain,(
  ( ! [X0,X1] : (sP5('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f873])).
fof(f19337,plain,(
  ( ! [X0,X1] : (~sP5('F_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f872])).
fof(f19336,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f871])).
fof(f19335,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f870])).
fof(f19332,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f277])).
fof(f20085,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967,f19969,f19971,f19983,f19991,f19995,f19999,f20057,f20061,f20084])).
fof(f20080,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18318,f19701])).
fof(f18318,plain,(
  ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl2 | $spl5)),
  inference(superposition,[],[f8810,f15927])).
fof(f20079,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20078,f1846])).
fof(f20078,plain,(
  ~sP10('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0'))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18317,f18647])).
fof(f18317,plain,(
  ~sP10('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0'))) | ($spl2 | $spl5)),
  inference(superposition,[],[f8808,f15927])).
fof(f20077,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18316,f19699])).
fof(f18316,plain,(
  ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(superposition,[],[f8806,f15927])).
fof(f20076,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18315,f19699])).
fof(f18315,plain,(
  ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(superposition,[],[f8804,f15927])).
fof(f20075,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20074,f1794])).
fof(f20074,plain,(
  ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18314,f18647])).
fof(f18314,plain,(
  ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(superposition,[],[f8800,f15927])).
fof(f20073,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20072,f1795])).
fof(f20072,plain,(
  ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18313,f18647])).
fof(f18313,plain,(
  ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl2 | $spl5)),
  inference(superposition,[],[f8796,f15927])).
fof(f20070,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20069,f1746])).
fof(f20069,plain,(
  ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18311,f18647])).
fof(f18311,plain,(
  ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(superposition,[],[f8791,f15927])).
fof(f20068,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20067,f1698])).
fof(f20067,plain,(
  ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18310,f18647])).
fof(f18310,plain,(
  ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(superposition,[],[f8787,f15927])).
fof(f20066,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20065,f1683])).
fof(f20065,plain,(
  ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18309,f18647])).
fof(f18309,plain,(
  ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl2 | $spl5)),
  inference(superposition,[],[f8783,f15927])).
fof(f20064,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20063,f1710])).
fof(f20063,plain,(
  ( ! [X173] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X173,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X173),s(bool,'T_0')))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18308,f18647])).
fof(f18308,plain,(
  ( ! [X173] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X173,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X173),s(bool,'T_0')))) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f8664,f15927])).
fof(f20062,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967,f19969,f19971,f19983,f19991,f19995,f19999,f20057,f20061])).
fof(f20060,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f20059,f1705])).
fof(f20059,plain,(
  ( ! [X171] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X171),s(bool,'T_0')),X171)) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18306,f18647])).
fof(f18306,plain,(
  ( ! [X171] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X171),s(bool,'T_0')),X171)) ) | ($spl2 | $spl5)),
  inference(superposition,[],[f8662,f15927])).
fof(f20058,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967,f19969,f19971,f19983,f19991,f19995,f19999,f20057])).
fof(f20000,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967,f19969,f19971,f19983,f19991,f19995,f19999])).
fof(f19996,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967,f19969,f19971,f19983,f19991,f19995])).
fof(f19992,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967,f19969,f19971,f19983,f19991])).
fof(f19984,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967,f19969,f19971,f19983])).
fof(f19972,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967,f19969,f19971])).
fof(f19970,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967,f19969])).
fof(f19968,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963,f19967])).
fof(f19964,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961,f19963])).
fof(f19962,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959,f19961])).
fof(f19960,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957,f19959])).
fof(f19958,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955,f19957])).
fof(f19956,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953,f19955])).
fof(f19954,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918,f19953])).
fof(f19951,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl130)),
  inference(global_subsumption,[],[f19950,f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918])).
fof(f19950,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)))) ) | ($spl0 | $spl2 | $spl5 | $spl130)),
  inference(forward_demodulation,[],[f18559,f18647])).
fof(f18559,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)))) ) | ($spl0 | $spl2 | $spl5 | $spl130)),
  inference(backward_demodulation,[],[f18363,f15429])).
fof(f15429,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)))) ) | ($spl0 | $spl130)),
  inference(superposition,[],[f13606,f8850])).
fof(f19949,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl128)),
  inference(global_subsumption,[],[f19948,f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918])).
fof(f19948,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5 | $spl128)),
  inference(forward_demodulation,[],[f18558,f18647])).
fof(f18558,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5 | $spl128)),
  inference(backward_demodulation,[],[f18363,f15378])).
fof(f15378,plain,(
  ( ! [X24] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X24)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl0 | $spl128)),
  inference(superposition,[],[f13605,f8850])).
fof(f19921,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19920,f18792])).
fof(f19920,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18540,f18647])).
fof(f18540,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f12251])).
fof(f19919,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912,f19918])).
fof(f19916,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19915,f18661])).
fof(f19915,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19914,f18647])).
fof(f19914,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18538,f19329])).
fof(f18538,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f12161])).
fof(f19913,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909,f19912])).
fof(f19910,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904,f19909])).
fof(f19907,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19906,f18660])).
fof(f19906,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18535,f18647])).
fof(f18535,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f12042])).
fof(f19905,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901,f19904])).
fof(f19902,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898,f19901])).
fof(f19899,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896,f19898])).
fof(f19897,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894,f19896])).
fof(f19895,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891,f19894])).
fof(f19892,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888,f19891])).
fof(f19889,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885,f19888])).
fof(f19886,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883,f19885])).
fof(f19884,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881,f19883])).
fof(f19882,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879,f19881])).
fof(f19880,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876,f19879])).
fof(f19877,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226,f19876])).
fof(f19860,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225,f19226])).
fof(f19859,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182,f19225])).
fof(f19858,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181,f19182])).
fof(f19857,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180,f19181])).
fof(f19856,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179,f19180])).
fof(f19855,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841,f19179])).
fof(f19853,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19172,f5059])).
fof(f19172,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f17486])).
fof(f19852,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19170,f5124])).
fof(f19170,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f17482])).
fof(f19851,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19149,f19320])).
fof(f19149,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16524])).
fof(f19850,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19147,f18706])).
fof(f19147,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16518])).
fof(f19849,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19144,f18680])).
fof(f19144,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16515])).
fof(f19848,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19143,f18678])).
fof(f19143,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16510])).
fof(f19847,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19142,f18660])).
fof(f19142,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16505])).
fof(f19846,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19141,f18657])).
fof(f19141,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16500])).
fof(f19845,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19844,f19701])).
fof(f19844,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f19136,f19329])).
fof(f19136,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16489])).
fof(f19843,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19135,f19701])).
fof(f19135,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16484])).
fof(f19842,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132,f19841])).
fof(f19840,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838,f19132])).
fof(f19839,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129,f19838])).
fof(f19837,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835,f19129])).
fof(f19836,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126,f19835])).
fof(f19834,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831,f19126])).
fof(f19832,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120,f19831])).
fof(f19830,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066,f19120])).
fof(f19826,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065,f19066])).
fof(f19825,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062,f19065])).
fof(f19824,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820,f19062])).
fof(f19823,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19058,f17523])).
fof(f19058,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16011])).
fof(f19822,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19056,f1654])).
fof(f19056,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f16009])).
fof(f19821,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050,f19820])).
fof(f19819,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817,f19050])).
fof(f19818,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033,f19817])).
fof(f19816,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032,f19033])).
fof(f19815,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031,f19032])).
fof(f19814,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030,f19031])).
fof(f19813,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029,f19030])).
fof(f19812,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028,f19029])).
fof(f19811,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026,f19028])).
fof(f19810,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951,f19026])).
fof(f19809,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl130)),
  inference(global_subsumption,[],[f19004,f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951])).
fof(f19004,plain,(
  ( ! [X25] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)))) ) | ($spl0 | $spl2 | $spl5 | $spl130)),
  inference(backward_demodulation,[],[f18647,f15430])).
fof(f15430,plain,(
  ( ! [X25] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)))) ) | ($spl5 | $spl130)),
  inference(superposition,[],[f13606,f10252])).
fof(f19808,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl130)),
  inference(global_subsumption,[],[f19807,f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951])).
fof(f19807,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)))) ) | ($spl0 | $spl2 | $spl5 | $spl130)),
  inference(forward_demodulation,[],[f19003,f19329])).
fof(f19003,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)))) ) | ($spl0 | $spl2 | $spl5 | $spl130)),
  inference(backward_demodulation,[],[f18647,f15428])).
fof(f15428,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)))) ) | ($spl5 | $spl130)),
  inference(superposition,[],[f13606,f8779])).
fof(f19806,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl128)),
  inference(global_subsumption,[],[f19002,f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951])).
fof(f19002,plain,(
  ( ! [X25] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5 | $spl128)),
  inference(backward_demodulation,[],[f18647,f15379])).
fof(f15379,plain,(
  ( ! [X25] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)))) ) | ($spl5 | $spl128)),
  inference(superposition,[],[f13605,f10252])).
fof(f19805,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl128)),
  inference(global_subsumption,[],[f19804,f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951])).
fof(f19804,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5 | $spl128)),
  inference(forward_demodulation,[],[f19001,f19329])).
fof(f19001,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5 | $spl128)),
  inference(backward_demodulation,[],[f18647,f15377])).
fof(f15377,plain,(
  ( ! [X23] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X23)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl5 | $spl128)),
  inference(superposition,[],[f13605,f8779])).
fof(f19803,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18988,f1846])).
fof(f18988,plain,(
  ( ! [X0] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f15035])).
fof(f19802,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18986,f1850])).
fof(f18986,plain,(
  ( ! [X0] : (~sP11('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f15003])).
fof(f19801,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18977,f18883])).
fof(f18977,plain,(
  ( ! [X0] : (~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f14733])).
fof(f19784,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18954,f1683])).
fof(f18954,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12388])).
fof(f19783,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18952,f18792])).
fof(f18952,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12340])).
fof(f19782,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950,f18951])).
fof(f19781,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779,f18950])).
fof(f19780,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777,f19779])).
fof(f19778,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773,f19777])).
fof(f19776,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18947,f1700])).
fof(f18947,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12164])).
fof(f19775,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18946,f18661])).
fof(f18946,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12162])).
fof(f19774,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771,f19773])).
fof(f19772,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769,f19771])).
fof(f19770,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767,f19769])).
fof(f19768,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763,f19767])).
fof(f19766,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18941,f18660])).
fof(f18941,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12043])).
fof(f19765,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18940,f1701])).
fof(f18940,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f12040])).
fof(f19764,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761,f19763])).
fof(f19762,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937,f19761])).
fof(f19760,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757,f18937])).
fof(f19759,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18936,f1698])).
fof(f18936,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11692])).
fof(f19758,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933,f19757])).
fof(f19756,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754,f18933])).
fof(f19755,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931,f19754])).
fof(f19753,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750,f18931])).
fof(f19752,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18924,f1699])).
fof(f18924,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11649])).
fof(f19751,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921,f19750])).
fof(f19749,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920,f18921])).
fof(f19748,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746,f18920])).
fof(f19747,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918,f19746])).
fof(f19745,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743,f18918])).
fof(f19744,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648,f19743])).
fof(f19742,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647,f19648])).
fof(f19741,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624,f19647])).
fof(f19740,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl130)),
  inference(global_subsumption,[],[f19640,f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624])).
fof(f19640,plain,(
  ( ! [X37,X35,X36] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X35),s(bool,X36)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X36),s(bool,X37)))) ) | ($spl0 | $spl2 | $spl5 | $spl130)),
  inference(backward_demodulation,[],[f19329,f15434])).
fof(f15434,plain,(
  ( ! [X37,X35,X36] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,X36)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X36),s(bool,X37)))) ) | $spl130),
  inference(superposition,[],[f13606,f277])).
fof(f19738,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl128)),
  inference(global_subsumption,[],[f19636,f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624])).
fof(f19636,plain,(
  ( ! [X37,X35,X36] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X36),s(bool,X37)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X35),s(bool,X36)))) ) | ($spl0 | $spl2 | $spl5 | $spl128)),
  inference(backward_demodulation,[],[f19329,f15383])).
fof(f15383,plain,(
  ( ! [X37,X35,X36] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X36),s(bool,X37)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,X36)))) ) | $spl128),
  inference(superposition,[],[f13605,f277])).
fof(f19736,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589,f19624])).
fof(f19735,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl205)),
  inference(subsumption_resolution,[],[f19619,f19329])).
fof(f19619,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'T_0'))) | ($spl0 | $spl2 | $spl5 | $spl205)),
  inference(backward_demodulation,[],[f19329,f13953])).
fof(f19732,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19601,f19701])).
fof(f19601,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','T_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f6968])).
fof(f19731,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578,f19589])).
fof(f19730,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19582,f19699])).
fof(f19582,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f6800])).
fof(f19729,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569,f19578])).
fof(f19728,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557,f19569])).
fof(f19727,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534,f19557])).
fof(f19726,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722,f19534])).
fof(f19723,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710,f19722])).
fof(f19711,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891,f19316,f19318,f19319,f19320,f19325,f19326,f19327,f18912,f19329,f19332,f19335,f19336,f19337,f19338,f19696,f19697,f19699,f19701,f19360,f19361,f19362,f19364,f19366,f19367,f19369,f19371,f19372,f19373,f19374,f19376,f19377,f19378,f19379,f19381,f19382,f19383,f19384,f19386,f19387,f19388,f19392,f19394,f19710])).
fof(f19695,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19333,f231])).
fof(f19333,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f420])).
fof(f19694,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19693,f19318])).
fof(f19693,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19330,f19329])).
fof(f19330,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f19329,f253])).
fof(f19328,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18911,f1698])).
fof(f18911,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11598])).
fof(f19313,plain,(
  ( ! [X8] : (~p(s(bool,X8))) ) | $spl206),
  inference(cnf_transformation,[],[f19313_D])).
fof(f19313_D,plain,(
  ( ! [X8] : (~p(s(bool,X8))) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f6233,plain,(
  ( ! [X8] : (p(s(bool,X8))) ) | $spl58),
  inference(cnf_transformation,[],[f6233_D])).
fof(f6233_D,plain,(
  ( ! [X8] : (p(s(bool,X8))) ) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f19316,plain,(
  ( ! [X14,X15] : (p(s(bool,X15)) | ~p(s(bool,X14))) ) | ($spl0 | $spl2 | $spl5)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f416,f423,f422,f426,f425,f429,f428,f431,f433,f436,f435,f438,f440,f443,f442,f446,f445,f449,f448,f452,f451,f454,f456,f459,f458,f462,f461,f464,f466,f469,f468,f471,f473,f477,f511,f512,f515,f518,f522,f525,f528,f540,f548,f551,f552,f555,f563,f568,f571,f574,f577,f582,f585,f588,f598,f600,f608,f611,f616,f619,f622,f643,f647,f666,f663,f670,f688,f748,f749,f775,f774,f784,f782,f797,f795,f808,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f946,f966,f977,f971,f982,f990,f1003,f1008,f1007,f1021,f1032,f1026,f1037,f1066,f1062,f1086,f1098,f1102,f1117,f1129,f1122,f1134,f1175,f1168,f1188,f1221,f1234,f1245,f1239,f1250,f1261,f1273,f1293,f1287,f1308,f1358,f1349,f1345,f1344,f1396,f1383,f1382,f1442,f1471,f1895,f1887,f1879,f1877,f1875,f1873,f1871,f1870,f1868,f1867,f1865,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1728,f1727,f1720,f1717,f1716,f1714,f1712,f1710,f1707,f1705,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1660,f1658,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2007,f1990,f1993,f1995,f2021,f2024,f2027,f2029,f2075,f2054,f2060,f2063,f2091,f2094,f2097,f2129,f2141,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f4360,f4400,f4424,f4591,f5059,f5124,f5166,f5272,f5286,f5288,f5291,f5292,f5284,f5304,f5318,f5320,f5323,f5324,f5316,f5347,f5361,f5363,f5366,f5368,f5391,f5405,f5407,f5410,f5411,f5403,f5465,f5468,f5503,f5506,f5536,f5539,f5574,f5577,f5804,f5806,f5844,f5846,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5883,f5885,f5887,f5889,f5897,f5898,f5900,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6268,f6270,f6336,f6339,f6379,f6381,f6384,f6385,f6372,f6374,f6428,f6431,f6446,f6473,f6475,f6478,f6479,f6466,f6468,f6526,f6529,f6547,f6567,f6569,f6572,f6573,f6563,f6565,f6607,f6610,f6625,f6656,f6658,f6661,f6663,f6717,f6720,f6747,f6764,f6766,f6769,f6771,f6819,f6822,f6847,f6874,f6876,f6879,f6880,f6867,f6869,f6920,f6923,f6933,f6950,f6952,f6955,f6956,f6947,f6949,f6987,f6990,f7001,f7036,f7043,f6763,f6649,f5899,f5896,f5895,f5894,f5893,f5882,f5859,f5857,f5854,f5853,f1503,f7144,f7143,f7142,f7141,f7138,f7137,f7039,f7032,f6211,f6205,f5931,f5930,f5927,f5926,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f6994,f6993,f6991,f6985,f6984,f6983,f6982,f6968,f6959,f6958,f6948,f6927,f6926,f6924,f6918,f6913,f6912,f6911,f6891,f6883,f6882,f6868,f6824,f6817,f6816,f6800,f6722,f6715,f6708,f6684,f6614,f6613,f6611,f6605,f6603,f6602,f6601,f6585,f6576,f6575,f6564,f6533,f6532,f6530,f6524,f6519,f6518,f6517,f6497,f6482,f6481,f6467,f6435,f6434,f6432,f6426,f6421,f6420,f6419,f6388,f6387,f6373,f6343,f6342,f6340,f6334,f6329,f6328,f6327,f6307,f6284,f6283,f6269,f6187,f6184,f6183,f6174,f6171,f6170,f6161,f6160,f6159,f6158,f6157,f6156,f6155,f6154,f6153,f6152,f6151,f6150,f6149,f6146,f6094,f6092,f6091,f6089,f6076,f6074,f6072,f6070,f6035,f6034,f6033,f6009,f5916,f5915,f5914,f5913,f5912,f5911,f5910,f5909,f5907,f5905,f5904,f5902,f5891,f5856,f5855,f5848,f5805,f5781,f5780,f5778,f5777,f5776,f5774,f5772,f5770,f5768,f5765,f5764,f5755,f5754,f5753,f5752,f5751,f5750,f5749,f5748,f5747,f5746,f5745,f5744,f5743,f5742,f5741,f5740,f5739,f5738,f5737,f5735,f5686,f5684,f5683,f5681,f5670,f5668,f5666,f5664,f5616,f5615,f5597,f5578,f5572,f5571,f5570,f5558,f5541,f5534,f5520,f5507,f5501,f5500,f5499,f5487,f5469,f5463,f5462,f5461,f5449,f5404,f5317,f5285,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2547,f2535,f2524,f2520,f2516,f2504,f2501,f2490,f2488,f2484,f2472,f2148,f2144,f2142,f2138,f2126,f2124,f2100,f2098,f2066,f2064,f2057,f2030,f2028,f1996,f1994,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f420,f277,f254,f253,f419,f414,f8816,f8812,f8811,f8810,f8808,f8807,f8806,f8804,f8801,f8800,f8796,f8795,f8793,f8791,f8789,f8787,f8785,f8783,f8779,f8778,f8777,f8776,f8773,f8772,f8768,f8767,f8766,f8764,f8761,f8760,f8757,f8756,f8755,f8752,f8745,f8739,f8738,f8736,f8733,f8732,f8728,f8727,f8726,f8725,f8724,f8721,f8719,f8714,f8713,f8709,f8708,f8703,f8686,f8685,f8684,f8683,f8679,f8678,f8674,f8673,f8672,f8669,f8667,f8665,f8664,f8663,f8662,f8661,f8660,f8659,f8654,f8653,f8652,f8651,f8644,f8643,f8635,f8634,f8633,f8630,f8629,f8628,f8625,f8624,f8620,f8619,f8615,f8612,f8611,f8609,f8604,f8842,f9105,f9102,f9099,f9093,f9092,f9087,f9086,f9082,f9076,f9070,f9064,f9058,f9052,f9046,f9045,f9042,f9041,f9040,f9037,f9036,f9033,f9032,f9031,f9030,f9029,f9228,f9387,f9386,f9394,f9455,f9473,f9462,f9461,f9533,f9532,f9540,f9530,f9544,f9573,f9578,f9104,f9098,f9085,f9079,f9075,f9067,f9063,f9055,f9051,f9044,f9039,f9035,f9028,f9027,f9026,f9025,f9024,f9023,f9022,f9021,f9020,f9019,f9018,f9017,f9013,f9012,f9005,f9004,f9000,f8999,f8994,f8977,f8976,f8975,f8970,f8965,f8964,f8959,f8949,f8943,f8941,f8940,f8937,f8936,f8935,f8934,f8933,f8930,f8928,f8923,f8922,f8918,f8917,f8912,f8910,f8909,f8904,f8901,f8900,f8899,f8898,f8897,f8896,f8895,f8894,f8893,f8892,f8891,f8890,f8886,f8885,f8880,f8879,f8875,f8874,f8869,f8868,f8867,f8866,f8865,f8863,f8862,f8859,f8858,f8857,f8856,f8854,f8853,f8852,f8850,f10240,f10241,f10203,f10205,f10207,f10209,f10543,f10542,f10540,f10537,f10536,f10530,f10529,f10524,f10523,f10522,f10518,f10515,f10512,f10511,f10505,f10502,f10499,f10498,f10492,f10489,f10486,f10485,f10479,f10478,f10477,f10475,f10474,f10473,f10472,f10470,f10469,f10468,f10466,f10465,f10464,f10463,f10462,f10461,f10460,f10459,f10458,f10457,f10456,f10455,f10454,f10453,f10452,f10451,f10450,f10449,f10445,f10444,f10435,f10434,f10429,f10428,f10422,f10420,f10399,f10398,f10397,f10391,f10385,f10384,f10379,f10369,f10363,f10360,f10359,f10355,f10354,f10353,f10352,f10351,f10347,f10345,f10339,f10338,f10333,f10332,f10326,f10323,f10322,f10316,f10313,f10312,f10311,f10310,f10309,f10308,f10307,f10306,f10305,f10304,f10303,f10302,f10301,f10300,f10299,f10298,f10297,f10296,f10291,f10290,f10284,f10283,f10278,f10277,f10271,f10270,f10269,f10268,f10267,f10265,f10264,f10261,f10260,f10259,f10258,f10256,f10255,f10254,f10252,f10689,f10696,f10694,f10708,f10714,f10719,f10724,f10731,f10728,f10742,f10752,f10760,f10757,f10778,f10777,f10781,f10775,f10988,f11010,f11008,f11006,f11030,f11045,f11062,f11061,f11057,f11082,f11081,f11101,f11098,f11125,f11124,f11128,f11122,f11288,f11289,f11295,f11296,f11297,f11298,f11299,f11300,f11301,f11302,f11303,f11304,f11305,f11306,f11307,f11308,f11309,f11310,f11242,f11244,f11246,f11248,f11319,f11320,f11323,f11324,f11325,f11326,f11327,f11332,f11333,f11598,f11600,f11606,f11608,f11610,f11611,f11613,f11614,f11615,f11616,f11617,f11618,f11619,f11649,f11651,f11657,f11659,f11661,f11662,f11664,f11665,f11666,f11667,f11669,f11670,f11692,f11790,f11791,f11797,f11798,f11799,f11800,f11801,f11802,f11803,f11804,f11805,f11806,f11807,f11808,f11809,f11810,f11811,f11812,f11738,f11740,f11742,f11744,f11821,f11822,f11825,f11826,f11827,f11828,f11829,f11834,f11835,f11770,f11772,f11852,f11877,f11880,f11886,f11888,f11890,f11891,f11893,f11894,f11895,f11896,f11897,f11898,f11899,f11900,f11934,f11937,f11943,f11945,f11947,f11948,f11950,f11951,f11952,f11953,f11954,f11956,f11957,f12040,f12042,f12043,f12030,f12031,f12032,f12092,f12093,f12094,f12161,f12162,f12164,f12151,f12152,f12153,f12209,f12210,f12211,f12251,f12265,f12271,f12289,f12340,f12346,f12388,f12549,f12550,f12573,f12574,f12627,f12628,f12632,f12638,f12762,f12764,f12766,f12768,f12836,f12967,f12969,f12971,f12973,f13119,f13120,f13158,f13159,f13191,f13192,f13221,f13222,f13276,f13345,f13363,f13393,f13394,f13429,f13430,f13431,f13445,f13471,f13472,f13473,f13476,f13477,f13479,f13481,f13485,f13490,f13491,f13492,f13493,f13494,f13495,f13496,f13498,f13500,f13501,f13502,f13504,f13505,f13506,f13507,f13509,f13510,f13511,f13515,f13516,f13518,f13519,f13521,f13523,f13524,f13526,f13527,f13662,f13682,f13684,f13687,f13690,f13681,f13723,f13719,f13743,f13745,f13748,f13751,f13742,f13789,f13788,f13787,f13785,f13807,f13809,f13812,f13815,f13806,f13848,f13847,f13846,f13844,f13843,f13842,f13866,f13868,f13871,f13874,f13865,f13906,f13907,f13908,f13909,f13910,f13940,f13941,f13955,f14142,f14171,f14202,f14258,f14310,f14313,f14372,f14426,f14461,f14493,f14504,f14516,f14533,f14544,f14556,f14571,f14574,f14585,f14597,f14613,f14624,f14636,f14653,f14664,f14676,f14694,f14705,f14717,f14733,f14734,f14769,f14804,f14835,f14868,f14903,f14937,f14970,f15003,f15004,f15035,f15039,f15073,f15079,f15114,f15120,f15155,f15190,f15196,f15303,f15313,f15336,f15346,f15463,f15497,f15531,f15565,f15576,f15588,f15605,f15616,f15628,f15645,f15656,f15668,f15685,f15696,f15708,f15733,f15767,f15773,f15816,f15822,f15854,f15860,f15911,f15894,f15898,f15922,f16524,f16523,f16518,f16517,f16516,f16515,f16510,f16505,f16500,f16492,f16490,f16489,f16487,f16485,f16484,f16482,f16477,f16472,f16471,f16463,f16458,f16457,f16449,f16448,f16447,f16438,f16429,f16428,f16427,f16426,f16422,f16421,f16420,f16416,f16411,f16406,f16405,f16397,f16392,f16391,f16383,f16378,f16373,f16372,f16364,f16359,f16358,f16350,f16345,f16340,f16339,f16331,f16326,f16325,f16317,f16316,f16315,f16314,f16313,f16312,f16311,f16310,f16309,f16308,f16307,f16306,f16305,f16304,f16303,f16302,f16299,f16297,f16294,f16293,f16290,f16289,f16288,f16287,f16286,f16285,f16284,f16283,f16282,f16281,f16280,f16279,f16278,f16277,f16276,f16275,f16274,f16273,f16272,f16271,f16270,f16266,f16265,f16262,f16261,f16258,f16257,f16256,f16255,f16254,f16253,f16252,f16251,f16250,f16249,f16248,f16247,f16246,f16245,f16244,f16243,f16242,f16241,f16240,f16239,f16238,f16237,f16236,f16230,f16229,f16216,f16215,f16208,f16207,f16199,f16197,f16153,f16152,f16151,f16142,f16133,f16132,f16123,f16098,f16081,f16078,f16077,f16073,f16072,f16071,f16070,f16069,f16065,f16063,f16057,f16056,f16049,f16048,f16040,f16034,f16033,f16032,f16031,f16030,f16029,f16020,f16018,f16016,f16013,f16012,f16011,f16010,f16009,f16008,f16007,f16006,f16005,f16004,f16003,f16002,f16001,f16000,f15999,f15998,f15997,f15996,f15995,f15994,f15993,f15992,f15985,f15984,f15976,f15975,f15968,f15967,f15959,f15958,f15957,f15956,f15955,f15954,f15953,f15952,f15951,f15950,f15949,f15948,f15947,f15946,f15945,f15944,f15943,f15940,f15939,f15936,f15935,f15934,f15933,f15931,f15930,f15929,f15927,f17046,f17061,f17063,f17064,f17066,f17117,f17119,f17134,f17136,f17342,f17353,f17351,f17349,f17347,f17388,f17393,f17414,f17411,f17433,f17461,f17458,f17486,f17485,f17489,f17490,f17482,f17494,f17529,f17527,f17525,f17523,f17521,f17570,f17594,f17635,f17631,f17629,f17627,f17626,f17667,f17666,f17736,f17738,f17700,f17697,f17759,f17758,f17771,f17772,f17755,f18362,f18363,f18365,f18366,f18375,f18376,f18377,f18381,f18385,f18386,f18387,f18388,f18397,f18398,f18399,f18403,f18414,f18415,f18417,f18418,f18419,f18420,f18422,f18426,f18428,f18434,f18436,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18459,f18464,f18474,f18475,f18476,f18478,f18479,f18480,f18481,f18647,f18654,f18655,f18657,f18658,f18660,f18661,f18675,f18676,f18678,f18679,f18680,f18681,f18682,f18683,f18690,f18702,f18703,f18706,f18707,f18717,f18718,f18719,f18727,f18731,f18732,f18733,f18735,f18736,f18737,f18741,f18742,f18745,f18749,f18758,f18759,f18760,f18761,f18792,f18796,f18848,f18849,f18850,f18866,f18880,f18881,f18882,f18883,f18885,f18886,f18887,f19312,f19314,f19315,f18891])).
fof(f19315,plain,(
  ( ! [X12,X13] : (p(s(bool,X13)) | ~p(s(bool,X12))) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18890,f18678])).
fof(f18890,plain,(
  ( ! [X12,X13] : (~sP6(X12,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X13) | p(s(bool,X13)) | ~p(s(bool,X12))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11299])).
fof(f19314,plain,(
  ( ! [X10,X11] : (p(s(bool,X11)) | ~p(s(bool,X10))) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18889,f18660])).
fof(f18889,plain,(
  ( ! [X10,X11] : (~sP3(X10,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X11) | p(s(bool,X11)) | ~p(s(bool,X10))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11298])).
fof(f19312,plain,(
  ( ! [X8,X9] : (p(s(bool,X9)) | ~p(s(bool,X8))) ) | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18888,f18657])).
fof(f18888,plain,(
  ( ! [X8,X9] : (~sP4(X8,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X9) | p(s(bool,X9)) | ~p(s(bool,X8))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f11297])).
fof(f19311,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18876,f18866])).
fof(f18876,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10775])).
fof(f19310,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18875,f18866])).
fof(f18875,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10760])).
fof(f19309,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18869,f18792])).
fof(f18869,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10724])).
fof(f19308,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18859,f18741])).
fof(f18859,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10542])).
fof(f19307,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18858,f18707])).
fof(f18858,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10536])).
fof(f19306,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18857,f18682])).
fof(f18857,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10522])).
fof(f19305,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18855,f18679])).
fof(f18855,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10511])).
fof(f19304,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18851,f18658])).
fof(f18851,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10485])).
fof(f19303,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18838,f18703])).
fof(f18838,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10452])).
fof(f19302,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18827,f1861])).
fof(f18827,plain,(
  sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10420])).
fof(f19301,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18798,f17627])).
fof(f18798,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10311])).
fof(f19300,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18788,f1650])).
fof(f18788,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f10301])).
fof(f19299,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18757,f17666])).
fof(f18757,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9578])).
fof(f19298,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18756,f17697])).
fof(f18756,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9573])).
fof(f19297,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18755,f17758])).
fof(f18755,plain,(
  ~sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9544])).
fof(f19296,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18754,f1700])).
fof(f18754,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9540])).
fof(f19295,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18752,f17570])).
fof(f18752,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9532])).
fof(f19294,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18751,f5124])).
fof(f18751,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9530])).
fof(f19293,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18750,f1701])).
fof(f18750,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9473])).
fof(f19292,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18748,f17594])).
fof(f18748,plain,(
  sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9461])).
fof(f19291,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18747,f17626])).
fof(f18747,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9455])).
fof(f19290,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18746,f5059])).
fof(f18746,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9394])).
fof(f19289,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18744,f17494])).
fof(f18744,plain,(
  sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9386])).
fof(f19288,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18743,f17521])).
fof(f18743,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f9228])).
fof(f19287,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl10)),
  inference(subsumption_resolution,[],[f18739,f1641])).
fof(f18739,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5 | $spl10)),
  inference(backward_demodulation,[],[f18647,f8814])).
fof(f8814,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl5 | $spl10)),
  inference(unit_resulting_resolution,[],[f419,f3555])).
fof(f19286,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl6)),
  inference(subsumption_resolution,[],[f18738,f1643])).
fof(f18738,plain,(
  sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5 | $spl6)),
  inference(backward_demodulation,[],[f18647,f8813])).
fof(f8813,plain,(
  sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl5 | $spl6)),
  inference(unit_resulting_resolution,[],[f419,f3551])).
fof(f19285,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18734,f1846])).
fof(f18734,plain,(
  ( ! [X0] : (~sP10('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8808])).
fof(f19284,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18730,f1794])).
fof(f18730,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8801])).
fof(f19283,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18729,f1794])).
fof(f18729,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8800])).
fof(f19282,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18728,f1795])).
fof(f18728,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8796])).
fof(f19281,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18726,f1746])).
fof(f18726,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8793])).
fof(f19280,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18725,f1746])).
fof(f18725,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8791])).
fof(f19279,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18724,f1698])).
fof(f18724,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8789])).
fof(f19278,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18723,f1698])).
fof(f18723,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8787])).
fof(f19277,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18722,f1683])).
fof(f18722,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8785])).
fof(f19276,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18721,f1683])).
fof(f18721,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8783])).
fof(f19275,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f19274,f473])).
fof(f19274,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(forward_demodulation,[],[f18720,f1637])).
fof(f18720,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8779])).
fof(f19273,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18716,f1639])).
fof(f18716,plain,(
  ~sP0('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8773])).
fof(f19272,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18715,f1639])).
fof(f18715,plain,(
  ~sP0('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8772])).
fof(f19271,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18714,f1640])).
fof(f18714,plain,(
  ~sP0('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8768])).
fof(f19270,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18713,f1717])).
fof(f18713,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0',X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8767])).
fof(f19269,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18712,f1716])).
fof(f18712,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8766])).
fof(f19268,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18711,f1850])).
fof(f18711,plain,(
  ~sP11('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8764])).
fof(f19267,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18709,f1860])).
fof(f18709,plain,(
  sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8760])).
fof(f19266,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18708,f1807])).
fof(f18708,plain,(
  sP11('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8757])).
fof(f19265,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18705,f1846])).
fof(f18705,plain,(
  ~sP10('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8752])).
fof(f19264,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18704,f1864])).
fof(f18704,plain,(
  ( ! [X0] : (~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0',X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8745])).
fof(f19263,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18701,f1862])).
fof(f18701,plain,(
  ( ! [X0] : (~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8736])).
fof(f19262,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18700,f1796])).
fof(f18700,plain,(
  ~sP9('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8733])).
fof(f19261,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18699,f1796])).
fof(f18699,plain,(
  ~sP9('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8732])).
fof(f19260,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18698,f1801])).
fof(f18698,plain,(
  ~sP9('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8728])).
fof(f19259,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18694,f1806])).
fof(f18694,plain,(
  sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8724])).
fof(f19258,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18693,f1769])).
fof(f18693,plain,(
  sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8721])).
fof(f19257,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18692,f1769])).
fof(f18692,plain,(
  sP9('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8719])).
fof(f19256,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18691,f1775])).
fof(f18691,plain,(
  sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8714])).
fof(f19255,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18689,f1794])).
fof(f18689,plain,(
  ~sP8('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8709])).
fof(f19254,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18688,f1794])).
fof(f18688,plain,(
  ~sP8('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8708])).
fof(f19253,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18687,f1795])).
fof(f18687,plain,(
  ~sP8('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8703])).
fof(f19252,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18686,f1870])).
fof(f18686,plain,(
  ( ! [X0] : (~sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0',X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8686])).
fof(f19251,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18685,f1867])).
fof(f18685,plain,(
  ( ! [X0] : (~sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,'T_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8685])).
fof(f19250,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18684,f1757])).
fof(f18684,plain,(
  ~sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8684])).
fof(f19249,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18677,f1746])).
fof(f18677,plain,(
  ~sP6('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8669])).
fof(f19248,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18674,f1710])).
fof(f18674,plain,(
  ( ! [X0,X1] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8664])).
fof(f19247,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18673,f1707])).
fof(f18673,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8663])).
fof(f19246,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18672,f1705])).
fof(f18672,plain,(
  ( ! [X0,X1] : (~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8662])).
fof(f19245,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18671,f1702])).
fof(f18671,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8661])).
fof(f19244,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18670,f1712])).
fof(f18670,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8660])).
fof(f19243,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18669,f1714])).
fof(f18669,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8659])).
fof(f19242,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18668,f1699])).
fof(f18668,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8654])).
fof(f19241,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18667,f1699])).
fof(f18667,plain,(
  ~sP2('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8653])).
fof(f19240,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18666,f1699])).
fof(f18666,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8652])).
fof(f19239,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18665,f1699])).
fof(f18665,plain,(
  ~sP2('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8651])).
fof(f19238,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18664,f1700])).
fof(f18664,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8644])).
fof(f19237,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18663,f1700])).
fof(f18663,plain,(
  ~sP2('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8643])).
fof(f19236,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18662,f1701])).
fof(f18662,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8635])).
fof(f19235,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18659,f1698])).
fof(f18659,plain,(
  ~sP3('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8630])).
fof(f19234,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18656,f1683])).
fof(f18656,plain,(
  ~sP4('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8625])).
fof(f19233,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18653,f1649])).
fof(f18653,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8619])).
fof(f19232,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18652,f1652])).
fof(f18652,plain,(
  ~sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8615])).
fof(f19231,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18650,f1646])).
fof(f18650,plain,(
  ~sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8611])).
fof(f19230,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18649,f1645])).
fof(f18649,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8609])).
fof(f19229,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18648,f1637])).
fof(f18648,plain,(
  s(bool,'T_0') != s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18647,f8604])).
fof(f18646,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18477,f14733])).
fof(f18477,plain,(
  ( ! [X45] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X45)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11744])).
fof(f18645,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18473,f8633])).
fof(f18473,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11128])).
fof(f18644,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18472,f10724])).
fof(f18472,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11125])).
fof(f18643,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18471,f9544])).
fof(f18471,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11124])).
fof(f18642,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18470,f10708])).
fof(f18470,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11122])).
fof(f18641,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18469,f10708])).
fof(f18469,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11101])).
fof(f18640,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18468,f9573])).
fof(f18468,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11098])).
fof(f18639,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18467,f10724])).
fof(f18467,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11082])).
fof(f18638,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18466,f9578])).
fof(f18466,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11081])).
fof(f18637,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18463,f9455])).
fof(f18463,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11057])).
fof(f18636,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18462,f9461])).
fof(f18462,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11045])).
fof(f18635,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18461,f9532])).
fof(f18461,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11030])).
fof(f18634,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18460,f10311])).
fof(f18460,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11010])).
fof(f18633,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18458,f9228])).
fof(f18458,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f11006])).
fof(f18632,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18457,f9386])).
fof(f18457,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f10988])).
fof(f18631,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18453,f8816])).
fof(f18453,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9104])).
fof(f18630,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18452,f8756])).
fof(f18452,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9098])).
fof(f18629,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18451,f8679])).
fof(f18451,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9085])).
fof(f18628,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18450,f8673])).
fof(f18450,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9079])).
fof(f18627,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18449,f8673])).
fof(f18449,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9075])).
fof(f18626,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18448,f8634])).
fof(f18448,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9067])).
fof(f18625,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18447,f8634])).
fof(f18447,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9063])).
fof(f18624,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18446,f8629])).
fof(f18446,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9055])).
fof(f18623,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18445,f8629])).
fof(f18445,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9051])).
fof(f18622,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18437,f8686])).
fof(f18437,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9024])).
fof(f18621,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18435,f8685])).
fof(f18435,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'T_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9022])).
fof(f18620,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18433,f8745])).
fof(f18433,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9020])).
fof(f18619,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18432,f8736])).
fof(f18432,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9019])).
fof(f18618,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18430,f8760])).
fof(f18430,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9017])).
fof(f18617,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl30)),
  inference(subsumption_resolution,[],[f18429,f8815])).
fof(f8815,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl5 | $spl30)),
  inference(unit_resulting_resolution,[],[f419,f3585])).
fof(f18429,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9013])).
fof(f18616,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18427,f8738])).
fof(f18427,plain,(
  sP11('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9005])).
fof(f18615,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18425,f8755])).
fof(f18425,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f9000])).
fof(f18614,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18424,f8755])).
fof(f18424,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8999])).
fof(f18613,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18423,f8756])).
fof(f18423,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8994])).
fof(f18612,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18421,f8724])).
fof(f18421,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8976])).
fof(f18611,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18416,f8713])).
fof(f18416,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8959])).
fof(f18610,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18413,f8674])).
fof(f18413,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8941])).
fof(f18609,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18412,f8674])).
fof(f18412,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8940])).
fof(f18608,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18411,f8679])).
fof(f18411,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8937])).
fof(f18607,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18407,f8684])).
fof(f18407,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8933])).
fof(f18606,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18406,f8665])).
fof(f18406,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8930])).
fof(f18605,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18405,f8665])).
fof(f18405,plain,(
  sP7('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8928])).
fof(f18604,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18404,f8667])).
fof(f18404,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8923])).
fof(f18603,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18402,f8672])).
fof(f18402,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8918])).
fof(f18602,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18401,f8672])).
fof(f18401,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8917])).
fof(f18601,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18400,f8673])).
fof(f18400,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8912])).
fof(f18600,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18396,f8767])).
fof(f18396,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0',X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8901])).
fof(f18599,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18395,f8766])).
fof(f18395,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8900])).
fof(f18598,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18394,f8659])).
fof(f18394,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8899])).
fof(f18597,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18393,f8660])).
fof(f18393,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8898])).
fof(f18596,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18392,f8664])).
fof(f18392,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8897])).
fof(f18595,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18391,f8663])).
fof(f18391,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8896])).
fof(f18594,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18390,f8662])).
fof(f18390,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8895])).
fof(f18593,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18389,f8661])).
fof(f18389,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8894])).
fof(f18592,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18384,f8633])).
fof(f18384,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8886])).
fof(f18591,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18383,f8633])).
fof(f18383,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8885])).
fof(f18590,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18382,f8634])).
fof(f18382,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8880])).
fof(f18589,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18380,f8628])).
fof(f18380,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8875])).
fof(f18588,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18379,f8628])).
fof(f18379,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8874])).
fof(f18587,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18378,f8629])).
fof(f18378,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8869])).
fof(f18586,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18374,f8615])).
fof(f18374,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8865])).
fof(f18585,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18372,f8619])).
fof(f18372,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8862])).
fof(f18584,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18371,f8611])).
fof(f18371,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8859])).
fof(f18583,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18370,f8609])).
fof(f18370,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8858])).
fof(f18582,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl6)),
  inference(subsumption_resolution,[],[f18368,f8813])).
fof(f18368,plain,(
  ~sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8856])).
fof(f18581,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl10)),
  inference(subsumption_resolution,[],[f18367,f8814])).
fof(f18367,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8854])).
fof(f18580,plain,(
  $false | ($spl0 | $spl2 | $spl5)),
  inference(subsumption_resolution,[],[f18364,f8604])).
fof(f18364,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl5)),
  inference(backward_demodulation,[],[f18363,f8850])).
fof(f13951,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK15(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK15(X0,X1,bool,bool))))) ) | $spl202),
  inference(cnf_transformation,[],[f13951_D])).
fof(f13951_D,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK15(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK15(X0,X1,bool,bool))))) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f13953,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | $spl205),
  inference(cnf_transformation,[],[f13953_D])).
fof(f13953_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl205),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl205])])).
fof(f13941,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,g(s(bool,sK15(X3,X4,bool,bool)))) | s(bool,X5) = s(bool,sK15(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1516,f688])).
fof(f13940,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,g(s(bool,sK15(X0,X1,bool,bool)))) | s(bool,X2) = s(bool,sK15(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1516,f688])).
fof(f13916,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl196),
  inference(cnf_transformation,[],[f13916_D])).
fof(f13916_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f13912,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK15(X0,X1,bool,bool))) ) | $spl192),
  inference(cnf_transformation,[],[f13912_D])).
fof(f13912_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK15(X0,X1,bool,bool))) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f13919,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl201),
  inference(cnf_transformation,[],[f13919_D])).
fof(f13919_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl201),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl201])])).
fof(f13910,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK15(X12,X13,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1515,f239])).
fof(f13917,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl198),
  inference(cnf_transformation,[],[f13917_D])).
fof(f13917_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f13909,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK15(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1515,f688])).
fof(f13908,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,sK15(X7,X8,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1515,f688])).
fof(f13911,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl190),
  inference(cnf_transformation,[],[f13911_D])).
fof(f13911_D,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f13914,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl195),
  inference(cnf_transformation,[],[f13914_D])).
fof(f13914_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl195),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl195])])).
fof(f13907,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,sK15(X3,X4,bool,bool)) | s(bool,X5) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1515,f688])).
fof(f13906,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK15(X0,X1,bool,bool)) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1515,f688])).
fof(f13869,plain,(
  ( ! [X2,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) ) | $spl188),
  inference(cnf_transformation,[],[f13869_D])).
fof(f13869_D,plain,(
  ( ! [X2,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f13871,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) )),
  inference(condensation,[],[f13870])).
fof(f13870,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f13855,f748])).
fof(f13855,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f906,f688])).
fof(f13868,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) )),
  inference(condensation,[],[f13867])).
fof(f13867,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f13854,f748])).
fof(f13854,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f906,f688])).
fof(f13810,plain,(
  ( ! [X2,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) ) | $spl186),
  inference(cnf_transformation,[],[f13810_D])).
fof(f13810_D,plain,(
  ( ! [X2,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f13812,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) )),
  inference(condensation,[],[f13811])).
fof(f13811,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f13796,f748])).
fof(f13796,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X30),s(bool,'T_0')),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f905,f688])).
fof(f13809,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),X2,X3)) )),
  inference(condensation,[],[f13808])).
fof(f13808,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f13795,f748])).
fof(f13795,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~sP10('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X25),s(bool,'T_0')),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f905,f688])).
fof(f13746,plain,(
  ( ! [X2,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) ) | $spl184),
  inference(cnf_transformation,[],[f13746_D])).
fof(f13746_D,plain,(
  ( ! [X2,X3,X1] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f13748,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) )),
  inference(condensation,[],[f13747])).
fof(f13747,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f13732,f748])).
fof(f13732,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f854,f688])).
fof(f13745,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) )),
  inference(condensation,[],[f13744])).
fof(f13744,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f13731,f748])).
fof(f13731,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f854,f688])).
fof(f13685,plain,(
  ( ! [X2,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) ) | $spl182),
  inference(cnf_transformation,[],[f13685_D])).
fof(f13685_D,plain,(
  ( ! [X2,X3,X1] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f13687,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) )),
  inference(condensation,[],[f13686])).
fof(f13686,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f13671,f748])).
fof(f13671,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X30)),X31,X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f853,f688])).
fof(f13684,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),X2,X3)) )),
  inference(condensation,[],[f13683])).
fof(f13683,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f13670,f748])).
fof(f13670,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X25)),X26,X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f853,f688])).
fof(f13648,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl181),
  inference(cnf_transformation,[],[f13648_D])).
fof(f13648_D,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl181),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl181])])).
fof(f13527,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f9018,f1473])).
fof(f13646,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') | $spl179),
  inference(cnf_transformation,[],[f13646_D])).
fof(f13646_D,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') <=> ~$spl179),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl179])])).
fof(f13526,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f9017,f1473])).
fof(f13644,plain,(
  ( ! [X31] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X31)) ) | $spl176),
  inference(cnf_transformation,[],[f13644_D])).
fof(f13644_D,plain,(
  ( ! [X31] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X31)) ) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f13524,plain,(
  ( ! [X31] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X31) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f9012,f1473])).
fof(f13643,plain,(
  sP11('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl174),
  inference(cnf_transformation,[],[f13643_D])).
fof(f13643_D,plain,(
  sP11('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f13523,plain,(
  sP11('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f9005,f1473])).
fof(f13641,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl173),
  inference(cnf_transformation,[],[f13641_D])).
fof(f13641_D,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl173),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl173])])).
fof(f13521,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f9000,f1473])).
fof(f13639,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') | $spl171),
  inference(cnf_transformation,[],[f13639_D])).
fof(f13639_D,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') <=> ~$spl171),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl171])])).
fof(f13519,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8994,f1473])).
fof(f13637,plain,(
  ( ! [X28] : (~sP11('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X28)) ) | $spl168),
  inference(cnf_transformation,[],[f13637_D])).
fof(f13637_D,plain,(
  ( ! [X28] : (~sP11('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X28)) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f13518,plain,(
  ( ! [X28] : (~sP11('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X28) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8977,f1473])).
fof(f13636,plain,(
  ( ! [X27] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X27)) ) | $spl166),
  inference(cnf_transformation,[],[f13636_D])).
fof(f13636_D,plain,(
  ( ! [X27] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X27)) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f13516,plain,(
  ( ! [X27] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X27) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8975,f1473])).
fof(f13635,plain,(
  ( ! [X26] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X26,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl164),
  inference(cnf_transformation,[],[f13635_D])).
fof(f13635_D,plain,(
  ( ! [X26] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X26,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f13515,plain,(
  ( ! [X26] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X26,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8970,f1473])).
fof(f13634,plain,(
  ( ! [X21] : (~sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X21)) ) | $spl162),
  inference(cnf_transformation,[],[f13634_D])).
fof(f13634_D,plain,(
  ( ! [X21] : (~sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X21)) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f13511,plain,(
  ( ! [X21] : (~sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X21) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8949,f1473])).
fof(f13633,plain,(
  ( ! [X20] : (~sP9('F_0',X20,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl160),
  inference(cnf_transformation,[],[f13633_D])).
fof(f13633_D,plain,(
  ( ! [X20] : (~sP9('F_0',X20,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f13510,plain,(
  ( ! [X20] : (~sP9('F_0',X20,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8943,f1473])).
fof(f13632,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl159),
  inference(cnf_transformation,[],[f13632_D])).
fof(f13632_D,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl159),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl159])])).
fof(f13509,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8941,f1473])).
fof(f13630,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl157),
  inference(cnf_transformation,[],[f13630_D])).
fof(f13630_D,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') <=> ~$spl157),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl157])])).
fof(f13507,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8937,f1473])).
fof(f13628,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl154),
  inference(cnf_transformation,[],[f13628_D])).
fof(f13628_D,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f13506,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8936,f1473])).
fof(f13626,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl152),
  inference(cnf_transformation,[],[f13626_D])).
fof(f13626_D,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f13505,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8935,f1473])).
fof(f13624,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl150),
  inference(cnf_transformation,[],[f13624_D])).
fof(f13624_D,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f13504,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8934,f1473])).
fof(f13622,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl148),
  inference(cnf_transformation,[],[f13622_D])).
fof(f13622_D,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f13502,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8930,f1473])).
fof(f13620,plain,(
  sP7('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl146),
  inference(cnf_transformation,[],[f13620_D])).
fof(f13620_D,plain,(
  sP7('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f13501,plain,(
  sP7('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8928,f1473])).
fof(f13618,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl144),
  inference(cnf_transformation,[],[f13618_D])).
fof(f13618_D,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f13500,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8923,f1473])).
fof(f13616,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl143),
  inference(cnf_transformation,[],[f13616_D])).
fof(f13616_D,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') <=> ~$spl143),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl143])])).
fof(f13498,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8918,f1473])).
fof(f13614,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') | $spl141),
  inference(cnf_transformation,[],[f13614_D])).
fof(f13614_D,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') <=> ~$spl141),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl141])])).
fof(f13496,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8912,f1473])).
fof(f13612,plain,(
  ( ! [X17] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0',X17)) ) | $spl138),
  inference(cnf_transformation,[],[f13612_D])).
fof(f13612_D,plain,(
  ( ! [X17] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0',X17)) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f13495,plain,(
  ( ! [X17] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0',X17) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8901,f1473])).
fof(f13611,plain,(
  ( ! [X16] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X16,'F_0')) ) | $spl136),
  inference(cnf_transformation,[],[f13611_D])).
fof(f13611_D,plain,(
  ( ! [X16] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X16,'F_0')) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f13494,plain,(
  ( ! [X16] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X16,'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8900,f1473])).
fof(f13610,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') | $spl135),
  inference(cnf_transformation,[],[f13610_D])).
fof(f13610_D,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') <=> ~$spl135),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl135])])).
fof(f13493,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8899,f1473])).
fof(f13608,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') | $spl133),
  inference(cnf_transformation,[],[f13608_D])).
fof(f13608_D,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') <=> ~$spl133),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl133])])).
fof(f13492,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8898,f1473])).
fof(f13606,plain,(
  ( ! [X14,X15] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X14,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)))) ) | $spl130),
  inference(cnf_transformation,[],[f13606_D])).
fof(f13606_D,plain,(
  ( ! [X14,X15] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X14,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f13491,plain,(
  ( ! [X14,X15] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X14,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8897,f1473])).
fof(f13605,plain,(
  ( ! [X12,X13] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X13)),X12)) ) | $spl128),
  inference(cnf_transformation,[],[f13605_D])).
fof(f13605_D,plain,(
  ( ! [X12,X13] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X13)),X12)) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f13490,plain,(
  ( ! [X12,X13] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X13)),X12) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl0),
  inference(superposition,[],[f8895,f1473])).
fof(f13604,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl127),
  inference(cnf_transformation,[],[f13604_D])).
fof(f13604_D,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') <=> ~$spl127),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl127])])).
fof(f13485,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8886,f1473])).
fof(f13602,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl125),
  inference(cnf_transformation,[],[f13602_D])).
fof(f13602_D,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') <=> ~$spl125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl125])])).
fof(f13481,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8875,f1473])).
fof(f13600,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') | $spl123),
  inference(cnf_transformation,[],[f13600_D])).
fof(f13600_D,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') <=> ~$spl123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl123])])).
fof(f13479,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8869,f1473])).
fof(f13598,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl121),
  inference(cnf_transformation,[],[f13598_D])).
fof(f13598_D,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') <=> ~$spl121),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl121])])).
fof(f13477,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8863,f1473])).
fof(f13596,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | $spl119),
  inference(cnf_transformation,[],[f13596_D])).
fof(f13596_D,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f13476,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8862,f1473])).
fof(f13594,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl117),
  inference(cnf_transformation,[],[f13594_D])).
fof(f13594_D,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl117),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl117])])).
fof(f13473,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8857,f1473])).
fof(f13592,plain,(
  ~sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | $spl115),
  inference(cnf_transformation,[],[f13592_D])).
fof(f13592_D,plain,(
  ~sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f13472,plain,(
  ~sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8856,f1473])).
fof(f13590,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | $spl113),
  inference(cnf_transformation,[],[f13590_D])).
fof(f13590_D,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f13471,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl0),
  inference(superposition,[],[f8854,f1473])).
fof(f10108,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10053,f8816])).
fof(f10053,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9104])).
fof(f9963,plain,(
  s('type.realax.real',sK14) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl92),
  inference(forward_demodulation,[],[f9884,f276])).
fof(f9884,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK14),s('type.realax.real',sK13))) | $spl92),
  inference(superposition,[],[f280,f7198])).
fof(f10107,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10052,f8756])).
fof(f10052,plain,(
  ( ! [X0] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9098])).
fof(f10106,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10051,f8679])).
fof(f10051,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9085])).
fof(f10105,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10050,f8673])).
fof(f10050,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9079])).
fof(f10104,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10049,f8673])).
fof(f10049,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9075])).
fof(f10103,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10048,f8634])).
fof(f10048,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9067])).
fof(f10102,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10047,f8634])).
fof(f10047,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9063])).
fof(f10101,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10046,f8629])).
fof(f10046,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl2 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9055])).
fof(f10100,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10045,f8629])).
fof(f10045,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9051])).
fof(f10099,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10037,f8686])).
fof(f10037,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9024])).
fof(f10098,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10035,f8685])).
fof(f10035,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'T_0')) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9022])).
fof(f10097,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10033,f8745])).
fof(f10033,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9020])).
fof(f10096,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10032,f8736])).
fof(f10032,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9019])).
fof(f10095,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10030,f8760])).
fof(f10030,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9017])).
fof(f10094,plain,(
  $false | ($spl0 | $spl5 | $spl30 | $spl92)),
  inference(subsumption_resolution,[],[f10029,f8815])).
fof(f10029,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9013])).
fof(f10093,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10027,f8738])).
fof(f10027,plain,(
  sP11('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9005])).
fof(f10092,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10025,f8755])).
fof(f10025,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f9000])).
fof(f10091,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10024,f8755])).
fof(f10024,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8999])).
fof(f10090,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10023,f8756])).
fof(f10023,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8994])).
fof(f10089,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10021,f8724])).
fof(f10021,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8976])).
fof(f10088,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10016,f8713])).
fof(f10016,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8959])).
fof(f10087,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10013,f8674])).
fof(f10013,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8941])).
fof(f10086,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10012,f8674])).
fof(f10012,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8940])).
fof(f10085,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10011,f8679])).
fof(f10011,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8937])).
fof(f10084,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10007,f8684])).
fof(f10007,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8933])).
fof(f10083,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10006,f8665])).
fof(f10006,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8930])).
fof(f10082,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10005,f8665])).
fof(f10005,plain,(
  sP7('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8928])).
fof(f10081,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10004,f8667])).
fof(f10004,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8923])).
fof(f10080,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10002,f8672])).
fof(f10002,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8918])).
fof(f10079,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10001,f8672])).
fof(f10001,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8917])).
fof(f10078,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f10000,f8673])).
fof(f10000,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8912])).
fof(f10077,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9996,f8767])).
fof(f9996,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0',X0)) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8901])).
fof(f10076,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9995,f8766])).
fof(f9995,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8900])).
fof(f10075,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9994,f8659])).
fof(f9994,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8899])).
fof(f10074,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9993,f8660])).
fof(f9993,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8898])).
fof(f10073,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9992,f8664])).
fof(f9992,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8897])).
fof(f10072,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9991,f8663])).
fof(f9991,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl0 | $spl2 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8896])).
fof(f10071,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9990,f8662])).
fof(f9990,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8895])).
fof(f10070,plain,(
  $false | ($spl0 | $spl2 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9989,f8661])).
fof(f9989,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl2 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8894])).
fof(f10069,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9984,f8633])).
fof(f9984,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8886])).
fof(f10068,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9983,f8633])).
fof(f9983,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8885])).
fof(f10067,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9982,f8634])).
fof(f9982,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8880])).
fof(f10066,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9980,f8628])).
fof(f9980,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8875])).
fof(f10065,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9979,f8628])).
fof(f9979,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8874])).
fof(f10064,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9978,f8629])).
fof(f9978,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8869])).
fof(f10063,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9974,f8615])).
fof(f9974,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8865])).
fof(f10062,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9972,f8619])).
fof(f9972,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8862])).
fof(f10061,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9971,f8611])).
fof(f9971,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8859])).
fof(f10060,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9970,f8609])).
fof(f9970,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8858])).
fof(f10059,plain,(
  $false | ($spl0 | $spl5 | $spl6 | $spl92)),
  inference(subsumption_resolution,[],[f9968,f8813])).
fof(f9968,plain,(
  ~sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8856])).
fof(f10058,plain,(
  $false | ($spl0 | $spl5 | $spl10 | $spl92)),
  inference(subsumption_resolution,[],[f9967,f8814])).
fof(f9967,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8854])).
fof(f10057,plain,(
  $false | ($spl0 | $spl5 | $spl92)),
  inference(subsumption_resolution,[],[f9964,f8604])).
fof(f9964,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl0 | $spl92)),
  inference(backward_demodulation,[],[f9963,f8850])).
fof(f8266,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116,f8118,f8126,f8127,f8128,f8129,f8215,f8249,f8257,f8261,f8265])).
fof(f8265,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X28,X29)) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f8264,f7527])).
fof(f8264,plain,(
  ( ! [X28,X29] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X28,X29)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8263,f7668])).
fof(f8263,plain,(
  ( ! [X28,X29] : (~p(s(bool,X28)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X28,X29)) ) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f7244,f231])).
fof(f7244,plain,(
  ( ! [X28,X29] : (~p(s(bool,'T_0')) | ~p(s(bool,X28)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X28,X29)) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f401,f7208])).
fof(f8261,plain,(
  ( ! [X21,X20] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X20,X21)) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f8260,f7527])).
fof(f8260,plain,(
  ( ! [X21,X20] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X20,X21)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8259,f7668])).
fof(f8259,plain,(
  ( ! [X21,X20] : (~p(s(bool,X20)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X20,X21)) ) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f7240,f231])).
fof(f7240,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X20,X21)) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f384,f7208])).
fof(f8257,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X19,X18)) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f8256,f7527])).
fof(f8256,plain,(
  ( ! [X19,X18] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X19,X18)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8255,f7668])).
fof(f8255,plain,(
  ( ! [X19,X18] : (~p(s(bool,X18)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X19,X18)) ) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f7239,f231])).
fof(f7239,plain,(
  ( ! [X19,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X18)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),X19,X18)) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f383,f7208])).
fof(f8249,plain,(
  ( ! [X3] : (s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f8248,f7527])).
fof(f8248,plain,(
  ( ! [X3] : (s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8247,f7668])).
fof(f8247,plain,(
  ( ! [X3] : (~p(s(bool,X3)) | s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f7229,f231])).
fof(f7229,plain,(
  ( ! [X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X3)) | s(bool,X3) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f285,f7208])).
fof(f8215,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X1) = s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f8132,f276])).
fof(f8132,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',X1),s('type.realax.real',X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f280])).
fof(f8129,plain,(
  ( ! [X2] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f7830])).
fof(f8128,plain,(
  ( ! [X2] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f7827])).
fof(f8127,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f7826])).
fof(f8126,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f7706])).
fof(f8118,plain,(
  ( ! [X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f7615])).
fof(f8116,plain,(
  ( ! [X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f7613])).
fof(f8115,plain,(
  ( ! [X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f7612])).
fof(f8113,plain,(
  ( ! [X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f7610])).
fof(f8092,plain,(
  ( ! [X0] : (~sP10('T_0','F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f6891])).
fof(f8081,plain,(
  ( ! [X0] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f6684])).
fof(f8072,plain,(
  ( ! [X0] : (~sP7('F_0','T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f6585])).
fof(f8060,plain,(
  ( ! [X0] : (~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f6497])).
fof(f8037,plain,(
  ( ! [X0] : (~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f6307])).
fof(f8194,plain,(
  ( ! [X7] : (s(bool,'F_0') = s(bool,X7)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8014,f7832])).
fof(f8014,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X7)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f6146])).
fof(f8182,plain,(
  ( ! [X6] : (s(bool,'F_0') = s(bool,X6)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7954,f7832])).
fof(f7954,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') != s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7))) | s(bool,'F_0') = s(bool,X6)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f5735])).
fof(f7897,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2805])).
fof(f7895,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2775])).
fof(f7891,plain,(
  ( ! [X0] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2547])).
fof(f7890,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2535])).
fof(f7889,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2524])).
fof(f7887,plain,(
  ( ! [X0] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2516])).
fof(f7886,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2504])).
fof(f7885,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2501])).
fof(f7884,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2490])).
fof(f7882,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2484])).
fof(f7881,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2472])).
fof(f7880,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2148])).
fof(f7879,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2144])).
fof(f7877,plain,(
  ( ! [X0] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2138])).
fof(f7876,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'T_0','F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2126])).
fof(f7875,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2124])).
fof(f7874,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2100])).
fof(f7872,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2066])).
fof(f7870,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2057])).
fof(f7869,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f2030])).
fof(f7867,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f1996])).
fof(f7865,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f1985])).
fof(f7864,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X1)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f1711])).
fof(f7863,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X2)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f1706])).
fof(f8173,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8172,f7668])).
fof(f8172,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46) | ~p(s(bool,X45))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7850,f7668])).
fof(f7850,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46) | ~p(s(bool,X45)) | ~p(s(bool,X44))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f904])).
fof(f8171,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8170,f7668])).
fof(f8170,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33) | ~p(s(bool,X33))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7847,f7668])).
fof(f7847,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33) | ~p(s(bool,X33)) | ~p(s(bool,X32))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f901])).
fof(f8169,plain,(
  ( ! [X24,X23,X22] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7844,f7668])).
fof(f7844,plain,(
  ( ! [X24,X23,X22] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24) | ~p(s(bool,X23))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f898])).
fof(f8168,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7843,f7668])).
fof(f7843,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20))) | ~p(s(bool,X20))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f897])).
fof(f7841,plain,(
  ( ! [X0,X1] : (sP5('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f873])).
fof(f7840,plain,(
  ( ! [X0,X1] : (~sP5('F_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f872])).
fof(f7839,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f871])).
fof(f7838,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f870])).
fof(f7835,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f277])).
fof(f7832,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831])).
fof(f7831,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7496,f7527])).
fof(f7496,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2703])).
fof(f7830,plain,(
  ( ! [X2] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7495,f7527])).
fof(f7495,plain,(
  ( ! [X2] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2549])).
fof(f7827,plain,(
  ( ! [X2] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7493,f7527])).
fof(f7493,plain,(
  ( ! [X2] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2518])).
fof(f7826,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7492,f7527])).
fof(f7492,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2486])).
fof(f7706,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7378,f7527])).
fof(f7378,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2140])).
fof(f7703,plain,(
  ( ! [X2] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7376,f7527])).
fof(f7376,plain,(
  ( ! [X2] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2096])).
fof(f7698,plain,(
  ( ! [X2] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7373,f7527])).
fof(f7373,plain,(
  ( ! [X2] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2062])).
fof(f7697,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7372,f7527])).
fof(f7372,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2026])).
fof(f7694,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7370,f7527])).
fof(f7370,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1992])).
fof(f7693,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7369,f7527])).
fof(f7369,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1863])).
fof(f7664,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7356])).
fof(f7659,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7349])).
fof(f7655,plain,(
  ( ! [X0] : (sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7342])).
fof(f7654,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7341])).
fof(f7653,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7340])).
fof(f7652,plain,(
  ( ! [X0,X1] : (sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7337])).
fof(f7651,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7336])).
fof(f7650,plain,(
  ( ! [X0,X1] : (sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7335])).
fof(f7649,plain,(
  ( ! [X0,X1] : (sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7334])).
fof(f7648,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7333])).
fof(f7647,plain,(
  ( ! [X0,X1] : (sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7332])).
fof(f7646,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7331])).
fof(f7645,plain,(
  ( ! [X0,X1] : (sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7330])).
fof(f7644,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X1)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7329])).
fof(f7674,plain,(
  ( ! [X43,X41,X42] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X43)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7624,f7668])).
fof(f7624,plain,(
  ( ! [X43,X41,X42] : (sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X43) | ~p(s(bool,X41))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f5579])).
fof(f7673,plain,(
  ( ! [X43,X41,X42] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X43)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7623,f7668])).
fof(f7623,plain,(
  ( ! [X43,X41,X42] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X43) | ~p(s(bool,X41))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f5508])).
fof(f7672,plain,(
  ( ! [X43,X41,X42] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),X43,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7622,f7668])).
fof(f7622,plain,(
  ( ! [X43,X41,X42] : (sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),X43,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ~p(s(bool,X41))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f5470])).
fof(f7671,plain,(
  ( ! [X43,X41,X42] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X43)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7621,f7668])).
fof(f7621,plain,(
  ( ! [X43,X41,X42] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X43) | ~p(s(bool,X41))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f5412])).
fof(f7670,plain,(
  ( ! [X43,X41,X42] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X43)) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7620,f7668])).
fof(f7620,plain,(
  ( ! [X43,X41,X42] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X43) | ~p(s(bool,X41))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f5325])).
fof(f7669,plain,(
  ( ! [X43,X41,X42] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),X43,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7619,f7668])).
fof(f7619,plain,(
  ( ! [X43,X41,X42] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),X43,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ~p(s(bool,X41))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f5293])).
fof(f7617,plain,(
  ( ! [X0] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f5155])).
fof(f7616,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f5113])).
fof(f7615,plain,(
  ( ! [X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2548])).
fof(f7614,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2523])).
fof(f7613,plain,(
  ( ! [X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2517])).
fof(f7612,plain,(
  ( ! [X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2485])).
fof(f7611,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2147])).
fof(f7610,plain,(
  ( ! [X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2139])).
fof(f7609,plain,(
  ( ! [X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2095])).
fof(f7608,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2074])).
fof(f7607,plain,(
  ( ! [X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2061])).
fof(f7606,plain,(
  ( ! [X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2025])).
fof(f7605,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f2006])).
fof(f7604,plain,(
  ( ! [X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1991])).
fof(f7591,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1708])).
fof(f7590,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1703])).
fof(f7589,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1668])).
fof(f7588,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1666])).
fof(f7587,plain,(
  ( ! [X0] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1664])).
fof(f7586,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1662])).
fof(f7585,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1656])).
fof(f7583,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1472])).
fof(f7582,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1443])).
fof(f7581,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1397])).
fof(f7580,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','F_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1384])).
fof(f7578,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1354])).
fof(f7577,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1353])).
fof(f7575,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','T_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1346])).
fof(f7569,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f1180])).
fof(f7668,plain,(
  ( ! [X3] : (p(s(bool,X3))) ) | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560])).
fof(f7560,plain,(
  ( ! [X2,X3] : (~sP4(X2,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X3) | p(s(bool,X3)) | ~p(s(bool,X2))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f953])).
fof(f7559,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f809])).
fof(f7558,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f806])).
fof(f7556,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f783])).
fof(f7667,plain,(
  ( ! [X2,X3] : (~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X2,X3) | sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X2,X3)) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7553,f7527])).
fof(f7553,plain,(
  ( ! [X2,X3] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X2,X3) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f671])).
fof(f7666,plain,(
  ( ! [X2,X3] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X2,X3) | sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X2,X3)) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7550,f7527])).
fof(f7550,plain,(
  ( ! [X2,X3] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X2,X3) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3)) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f648])).
fof(f7548,plain,(
  ( ! [X2,X3] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X2,X3) | ~p(s(bool,X2))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f623])).
fof(f7547,plain,(
  ( ! [X2,X3] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X3,X2) | p(s(bool,X2))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f612])).
fof(f7545,plain,(
  ( ! [X2,X3] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X2,X3) | ~p(s(bool,X2))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f589])).
fof(f7544,plain,(
  ( ! [X2,X3] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X3,X2) | ~p(s(bool,X2))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f578])).
fof(f7541,plain,(
  ( ! [X1] : (sP1(X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | p(s(bool,X1))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f529])).
fof(f7540,plain,(
  ( ! [X1] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),X1) | p(s(bool,X1))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f519])).
fof(f7527,plain,(
  s('type.realax.real',sK12) = s('type.realax.real',sK14) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7363,f1472])).
fof(f7363,plain,(
  s('type.realax.real',sK14) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1615])).
fof(f7361,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1577])).
fof(f7356,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1446])).
fof(f7354,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7328,f1423])).
fof(f7353,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1422])).
fof(f7351,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1400])).
fof(f7350,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7328,f1394])).
fof(f7349,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1393])).
fof(f7346,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1361])).
fof(f7344,plain,(
  sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','T_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1222])).
fof(f7343,plain,(
  sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1103])).
fof(f7342,plain,(
  ( ! [X0] : (sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f681])).
fof(f7341,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f679])).
fof(f7340,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f641])).
fof(f7337,plain,(
  ( ! [X0,X1] : (sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f472])).
fof(f7336,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f467])).
fof(f7335,plain,(
  ( ! [X0,X1] : (sP8('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f465])).
fof(f7334,plain,(
  ( ! [X0,X1] : (sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f457])).
fof(f7333,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f455])).
fof(f7332,plain,(
  ( ! [X0,X1] : (sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f441])).
fof(f7331,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f439])).
fof(f7330,plain,(
  ( ! [X0,X1] : (sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f434])).
fof(f7329,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f432])).
fof(f7328,plain,(
  s('type.realax.real',sK14) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f7219,f276])).
fof(f7219,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK14),s('type.realax.real',sK13))) | ($spl1 | $spl2)),
  inference(superposition,[],[f280,f7208])).
fof(f7327,plain,(
  ( ! [X0] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',X0))))) ) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f7218,f231])).
fof(f7218,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X0)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',X0))))) ) | ($spl1 | $spl2)),
  inference(superposition,[],[f324,f7208])).
fof(f7210,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f420,f7208,f353])).
fof(f7211,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)),'T_0') | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f231,f7208,f351])).
fof(f7212,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f420,f7208,f353])).
fof(f7213,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f231,f7208,f351])).
fof(f7208,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f7055,f477])).
fof(f7055,plain,(
  s(bool,'T_0') != s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) | $spl1),
  inference(superposition,[],[f474,f1473])).
fof(f6992,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(subsumption_resolution,[],[f6978,f231])).
fof(f6978,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f1288,f478])).
fof(f6957,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(subsumption_resolution,[],[f6943,f231])).
fof(f6943,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f1287,f478])).
fof(f6925,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,X41)) | ~p(s(bool,X42)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X41,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X42)))) ) | $spl4),
  inference(subsumption_resolution,[],[f6907,f231])).
fof(f6907,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | p(s(bool,X41)) | ~p(s(bool,X42)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X41,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X42)))) ) | $spl4),
  inference(superposition,[],[f1240,f478])).
fof(f6881,plain,(
  ( ! [X43,X41,X42] : (p(s(bool,X41)) | ~p(s(bool,X42)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X41,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X42),s(bool,X43)))) ) | $spl4),
  inference(subsumption_resolution,[],[f6863,f231])).
fof(f6863,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | p(s(bool,X41)) | ~p(s(bool,X42)) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X41,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X42),s(bool,X43)))) ) | $spl4),
  inference(superposition,[],[f1239,f478])).
fof(f6612,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP7(X42,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)))) ) | $spl4),
  inference(subsumption_resolution,[],[f6597,f231])).
fof(f6597,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP7(X42,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)))) ) | $spl4),
  inference(superposition,[],[f1063,f478])).
fof(f6574,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP7(X42,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)))) ) | $spl4),
  inference(subsumption_resolution,[],[f6559,f231])).
fof(f6559,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP7(X42,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)))) ) | $spl4),
  inference(superposition,[],[f1062,f478])).
fof(f6531,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6513,f231])).
fof(f6513,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(superposition,[],[f1027,f478])).
fof(f6480,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6462,f231])).
fof(f6462,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP6('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(superposition,[],[f1026,f478])).
fof(f6433,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6415,f231])).
fof(f6415,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(superposition,[],[f972,f478])).
fof(f6386,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6368,f231])).
fof(f6368,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(superposition,[],[f971,f478])).
fof(f6341,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6323,f231])).
fof(f6323,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X43),s(bool,X41)),X42)) ) | $spl4),
  inference(superposition,[],[f947,f478])).
fof(f6282,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | p(s(bool,X42)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(subsumption_resolution,[],[f6264,f231])).
fof(f6264,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | p(s(bool,X42)) | ~sP4('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X43)),X42)) ) | $spl4),
  inference(superposition,[],[f946,f478])).
fof(f5579,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X43)) ) | $spl4),
  inference(subsumption_resolution,[],[f5568,f231])).
fof(f5568,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X43)) ) | $spl4),
  inference(superposition,[],[f904,f478])).
fof(f5508,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X43)) ) | $spl4),
  inference(subsumption_resolution,[],[f5497,f231])).
fof(f5497,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X43)) ) | $spl4),
  inference(superposition,[],[f902,f478])).
fof(f5472,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f433,f441,f2213,f337])).
fof(f5480,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f5473,f2157])).
fof(f5473,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f433,f822,f2213,f337])).
fof(f5479,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f5474,f2157])).
fof(f5474,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f433,f870,f2213,f337])).
fof(f5475,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f433,f440,f2213,f336])).
fof(f5476,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f434,f440,f2213,f336])).
fof(f5470,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),X43,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(subsumption_resolution,[],[f5459,f231])).
fof(f5459,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X42),s(bool,X41)),X43,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f901,f478])).
fof(f5427,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f420,f433,f438,f2212,f337])).
fof(f5430,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f433,f439,f2212,f337])).
fof(f5447,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f5433,f2157])).
fof(f5433,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))),s(bool,X0)),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f2195,f824,f2212,f337])).
fof(f5445,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f5435,f2157])).
fof(f5435,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f2195,f872,f2212,f337])).
fof(f5417,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f420,f431,f440,f2211,f336])).
fof(f5412,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X43)) ) | $spl4),
  inference(subsumption_resolution,[],[f5401,f231])).
fof(f5401,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X43)) ) | $spl4),
  inference(superposition,[],[f852,f478])).
fof(f5379,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f448,f428,f2210,f335])).
fof(f5384,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f448,f2195,f2210,f335])).
fof(f5376,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f2203,f332])).
fof(f5345,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f2196,f332])).
fof(f5329,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f448,f435,f2195,f335])).
fof(f5331,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f231,f448,f436,f2195,f335])).
fof(f5333,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f231,f448,f437,f2195,f335])).
fof(f5325,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X43)) ) | $spl4),
  inference(subsumption_resolution,[],[f5314,f231])).
fof(f5314,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X43)) ) | $spl4),
  inference(superposition,[],[f850,f478])).
fof(f5302,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f2188,f333])).
fof(f5293,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),X43,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(subsumption_resolution,[],[f5282,f231])).
fof(f5282,plain,(
  ( ! [X43,X41,X42] : (~p(s(bool,'T_0')) | ~p(s(bool,X41)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X41),s(bool,X42)),X43,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f849,f478])).
fof(f5197,plain,(
  ( ! [X0] : (~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1899,f354])).
fof(f5155,plain,(
  ( ! [X0] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1891,f332])).
fof(f5113,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1883,f333])).
fof(f506,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f254])).
fof(f1992,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(superposition,[],[f822,f506])).
fof(f2004,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f1986,f506])).
fof(f1986,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f439,f432,f822,f337])).
fof(f2026,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(superposition,[],[f823,f506])).
fof(f2062,plain,(
  ( ! [X2] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)))) ) | $spl1),
  inference(superposition,[],[f824,f506])).
fof(f2076,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f2053,f506])).
fof(f2053,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f441,f433,f824,f337])).
fof(f2096,plain,(
  ( ! [X2] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X2)))) ) | $spl1),
  inference(superposition,[],[f825,f506])).
fof(f2139,plain,(
  ( ! [X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f870,f478])).
fof(f2140,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(superposition,[],[f870,f506])).
fof(f2145,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f2125,f506])).
fof(f2125,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f439,f432,f870,f337])).
fof(f2147,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f2121,f478])).
fof(f2121,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f420,f450,f433,f870,f337])).
fof(f2218,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f277,f1616,f351])).
fof(f2223,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,X0)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f277,f1616,f351])).
fof(f2485,plain,(
  ( ! [X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f871,f478])).
fof(f2486,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(superposition,[],[f871,f506])).
fof(f2517,plain,(
  ( ! [X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')))) ) | $spl4),
  inference(superposition,[],[f872,f478])).
fof(f2518,plain,(
  ( ! [X2] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')))) ) | $spl1),
  inference(superposition,[],[f872,f506])).
fof(f2523,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f2503,f478])).
fof(f2503,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f420,f447,f430,f872,f337])).
fof(f2525,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | $spl1),
  inference(forward_demodulation,[],[f2500,f506])).
fof(f2500,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f441,f433,f872,f337])).
fof(f2548,plain,(
  ( ! [X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X1),s(bool,'T_0')))) ) | $spl4),
  inference(superposition,[],[f873,f478])).
fof(f2549,plain,(
  ( ! [X2] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'F_0')))) ) | $spl1),
  inference(superposition,[],[f873,f506])).
fof(f1504,plain,(
  ( ! [X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X1)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X1))))) ) | $spl4),
  inference(subsumption_resolution,[],[f1495,f231])).
fof(f1495,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',X1)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',X1))))) ) | $spl4),
  inference(superposition,[],[f324,f478])).
fof(f2703,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X2)) ) | $spl1),
  inference(subsumption_resolution,[],[f2698,f420])).
fof(f2698,plain,(
  ( ! [X2] : (p(s(bool,'F_0')) | s(bool,X2) = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,X2)) ) | $spl1),
  inference(superposition,[],[f748,f506])).
fof(f2157,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f1616,f285])).
fof(f2159,plain,(
  ( ! [X0] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f291])).
fof(f2160,plain,(
  ( ! [X0] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f292])).
fof(f2161,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f1616,f306])).
fof(f2163,plain,(
  ~sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f1616,f306])).
fof(f2164,plain,(
  ~sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f1616,f306])).
fof(f2165,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f420,f1616,f307])).
fof(f2166,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f1616,f310])).
fof(f2169,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f334])).
fof(f2170,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f420,f1616,f334])).
fof(f2172,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f445,f435,f428,f1616,f335])).
fof(f2173,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f445,f436,f428,f1616,f335])).
fof(f2174,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f445,f437,f428,f1616,f335])).
fof(f2175,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f446,f435,f429,f1616,f335])).
fof(f2176,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f446,f436,f429,f1616,f335])).
fof(f2177,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f446,f437,f429,f1616,f335])).
fof(f2178,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f447,f435,f430,f1616,f335])).
fof(f2179,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f447,f436,f430,f1616,f335])).
fof(f2180,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f447,f437,f430,f1616,f335])).
fof(f2181,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f338])).
fof(f2188,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f338])).
fof(f2189,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f420,f1616,f338])).
fof(f2195,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f339])).
fof(f2196,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f342])).
fof(f2203,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f342])).
fof(f2204,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f420,f1616,f342])).
fof(f2210,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f343])).
fof(f2211,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f347])).
fof(f2212,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f348])).
fof(f2213,plain,(
  ( ! [X0,X1] : (sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f349])).
fof(f2214,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f477,f1616,f351])).
fof(f2215,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f478,f1616,f351])).
fof(f2216,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f506,f1616,f351])).
fof(f2217,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f276,f1616,f351])).
fof(f2219,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f477,f1616,f351])).
fof(f2220,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f478,f1616,f351])).
fof(f2221,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(unit_resulting_resolution,[],[f506,f1616,f351])).
fof(f2222,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f276,f1616,f351])).
fof(f2224,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f473,f1616,f352])).
fof(f2225,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(unit_resulting_resolution,[],[f474,f1616,f352])).
fof(f2226,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f473,f1616,f352])).
fof(f2227,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f474,f1616,f352])).
fof(f2228,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f1616,f355])).
fof(f2229,plain,(
  ( ! [X0] : (~sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0',X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f1616,f356])).
fof(f2232,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f231,f452,f1616,f357])).
fof(f2234,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f231,f453,f1616,f357])).
fof(f2239,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f231,f452,f1616,f357])).
fof(f2240,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f1616,f452,f1616,f357])).
fof(f2241,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f231,f453,f1616,f357])).
fof(f2242,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f1616,f453,f1616,f357])).
fof(f2244,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f361])).
fof(f2251,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f361])).
fof(f2252,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f420,f1616,f361])).
fof(f2258,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f362])).
fof(f2259,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f231,f1616,f367])).
fof(f2264,plain,(
  sP7('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f231,f1616,f367])).
fof(f2266,plain,(
  sP7('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f1616,f1616,f367])).
fof(f2269,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f231,f1616,f367])).
fof(f2270,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f231,f1616,f367])).
fof(f2271,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f1616,f1616,f367])).
fof(f2272,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f1616,f1616,f367])).
fof(f2273,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f370])).
fof(f2277,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f370])).
fof(f2278,plain,(
  ~sP7('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f420,f1616,f370])).
fof(f2281,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f1616,f371])).
fof(f2287,plain,(
  ( ! [X0] : (~sP9('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f1616,f372])).
fof(f2299,plain,(
  ~sP8('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f420,f420,f1616,f378])).
fof(f2306,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f379])).
fof(f2307,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f380])).
fof(f2308,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f1616,f383])).
fof(f2312,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f1616,f383])).
fof(f2313,plain,(
  ( ! [X0] : (sP9('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f1616,f384])).
fof(f2317,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f1616,f384])).
fof(f2318,plain,(
  ~sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f420,f420,f1616,f385])).
fof(f2319,plain,(
  ( ! [X0] : (~sP11('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f1616,f389])).
fof(f2343,plain,(
  sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f472,f1616,f394])).
fof(f2344,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f420,f231,f1616,f395])).
fof(f2351,plain,(
  ~sP10('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f231,f1616,f395])).
fof(f2352,plain,(
  ~sP10('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f1616,f1616,f395])).
fof(f2358,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f397])).
fof(f2359,plain,(
  sP11('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f420,f1616,f399])).
fof(f2362,plain,(
  ( ! [X0] : (sP11('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f1616,f401])).
fof(f2366,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f1616,f401])).
fof(f2367,plain,(
  ~sP11('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f402])).
fof(f2372,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f420,f1616,f402])).
fof(f2373,plain,(
  ~sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f1616,f420,f1616,f402])).
fof(f2374,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f466,f1616,f405])).
fof(f2375,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f467,f1616,f405])).
fof(f2376,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0',X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f468,f1616,f405])).
fof(f2377,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f469,f1616,f405])).
fof(f2378,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f470,f1616,f405])).
fof(f2379,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,'T_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f458,f1616,f406])).
fof(f2380,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f459,f1616,f406])).
fof(f2381,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f460,f1616,f406])).
fof(f2382,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'T_0',X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f461,f1616,f406])).
fof(f2383,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0)) ) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f462,f1616,f406])).
fof(f2384,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f463,f1616,f406])).
fof(f2385,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f1616,f577])).
fof(f2386,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f1616,f578])).
fof(f2387,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f1616,f588])).
fof(f2388,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f1616,f589])).
fof(f2389,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f1616,f622])).
fof(f2390,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f1616,f623])).
fof(f2391,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f420,f1616,f952])).
fof(f2395,plain,(
  ~sP4('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f420,f1616,f953])).
fof(f2399,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f420,f1616,f977])).
fof(f2403,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f420,f1616,f978])).
fof(f2407,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f420,f1616,f1032])).
fof(f2411,plain,(
  ~sP6('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f420,f1616,f1033])).
fof(f2150,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f420,f440,f433,f1578,f336])).
fof(f2109,plain,(
  ~sP2('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f420,f441,f433,f1576,f337])).
fof(f2095,plain,(
  ( ! [X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)))) ) | $spl4),
  inference(superposition,[],[f825,f478])).
fof(f2079,plain,(
  ~sP4('T_0','T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f448,f441,f1529,f335])).
fof(f2061,plain,(
  ( ! [X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)))) ) | $spl4),
  inference(superposition,[],[f824,f478])).
fof(f2074,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f2056,f478])).
fof(f2056,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X0)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f420,f447,f430,f824,f337])).
fof(f2025,plain,(
  ( ! [X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f823,f478])).
fof(f1991,plain,(
  ( ! [X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X1)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f822,f478])).
fof(f2006,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f1982,f478])).
fof(f1982,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f420,f450,f433,f822,f337])).
fof(f1656,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f444,f437,f428,f1308,f335])).
fof(f1662,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f444,f437,f429,f1308,f335])).
fof(f1664,plain,(
  ( ! [X0] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f442,f435,f430,f1308,f335])).
fof(f1666,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f443,f436,f430,f1308,f335])).
fof(f1668,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f444,f437,f430,f1308,f335])).
fof(f1703,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f478,f1308,f351])).
fof(f1704,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f506,f1308,f351])).
fof(f1708,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f478,f1308,f351])).
fof(f1709,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f506,f1308,f351])).
fof(f1713,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f474,f1308,f352])).
fof(f1715,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0')) ) | $spl1),
  inference(unit_resulting_resolution,[],[f474,f1308,f352])).
fof(f1722,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f231,f453,f1308,f357])).
fof(f1729,plain,(
  ( ! [X0] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f231,f453,f1308,f357])).
fof(f1730,plain,(
  ( ! [X0,X1] : (sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1308,f453,f1308,f357])).
fof(f1831,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f472,f1308,f394])).
fof(f1863,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f467,f1308,f405])).
fof(f1866,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f470,f1308,f405])).
fof(f1869,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f460,f1308,f406])).
fof(f1872,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f463,f1308,f406])).
fof(f1874,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1308,f578])).
fof(f1876,plain,(
  ( ! [X0,X1] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1308,f589])).
fof(f1878,plain,(
  ( ! [X0,X1] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1308,f623])).
fof(f1883,plain,(
  ( ! [X0] : (~sP4('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f420,f1308,f953])).
fof(f1891,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f420,f1308,f978])).
fof(f1899,plain,(
  ( ! [X0] : (~sP6('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f420,f1308,f1033])).
fof(f1616,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) | $spl1),
  inference(subsumption_resolution,[],[f1583,f420])).
fof(f1583,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))))) | $spl1),
  inference(superposition,[],[f281,f506])).
fof(f1615,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))) = s('type.realax.real','const.real.max_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(forward_demodulation,[],[f1582,f277])).
fof(f1582,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) = s('type.realax.real','const.bool.COND_3'(s(bool,'F_0'),s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))))) | $spl1),
  inference(superposition,[],[f280,f506])).
fof(f1576,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f420,f506,f353])).
fof(f1577,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f506,f351])).
fof(f1578,plain,(
  ~sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(unit_resulting_resolution,[],[f420,f506,f353])).
fof(f1529,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f231,f474,f352])).
fof(f1532,plain,(
  ~sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(unit_resulting_resolution,[],[f231,f474,f352])).
fof(f1472,plain,(
  s('type.realax.real',sK12) = s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl4),
  inference(forward_demodulation,[],[f1455,f276])).
fof(f1455,plain,(
  s('type.realax.real','const.real.max_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',sK12),s('type.realax.real',sK14))) | $spl4),
  inference(superposition,[],[f280,f478])).
fof(f1422,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f449,f441,f433,f420,f337])).
fof(f1423,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f450,f441,f433,f420,f337])).
fof(f1443,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f447,f438,f431,f420,f337])).
fof(f1445,plain,(
  sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(unit_resulting_resolution,[],[f445,f439,f432,f420,f337])).
fof(f1446,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f446,f439,f432,f420,f337])).
fof(f1447,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f447,f439,f432,f420,f337])).
fof(f1384,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f444,f437,f431,f420,f336])).
fof(f1392,plain,(
  sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(unit_resulting_resolution,[],[f442,f435,f432,f420,f336])).
fof(f1393,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f443,f436,f432,f420,f336])).
fof(f1394,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f444,f437,f432,f420,f336])).
fof(f1397,plain,(
  sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl4),
  inference(unit_resulting_resolution,[],[f450,f440,f433,f420,f336])).
fof(f1400,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(unit_resulting_resolution,[],[f449,f440,f434,f420,f336])).
fof(f1401,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f450,f440,f434,f420,f336])).
fof(f1346,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f448,f437,f428,f231,f335])).
fof(f1350,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'T_0') | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f448,f437,f429,f231,f335])).
fof(f1353,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f448,f436,f430,f231,f335])).
fof(f1354,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f448,f437,f430,f231,f335])).
fof(f1357,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f448,f441,f433,f231,f335])).
fof(f1359,plain,(
  ~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f448,f806,f433,f231,f335])).
fof(f1361,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f448,f440,f434,f231,f335])).
fof(f1362,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f448,f441,f434,f231,f335])).
fof(f1335,plain,(
  ~sP7('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl4),
  inference(unit_resulting_resolution,[],[f1299,f354])).
fof(f1299,plain,(
  ~sP6('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f231,f420,f1033])).
fof(f1294,plain,(
  ( ! [X2,X3] : (~p(s(bool,X2)) | p(s(bool,X3)) | ~sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3,X2)) ) | $spl4),
  inference(subsumption_resolution,[],[f1284,f231])).
fof(f1284,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3,X2)) ) | $spl4),
  inference(superposition,[],[f402,f478])).
fof(f1246,plain,(
  ( ! [X2,X3] : (p(s(bool,X2)) | ~p(s(bool,X3)) | ~sP10(X3,X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(subsumption_resolution,[],[f1236,f231])).
fof(f1236,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | ~p(s(bool,X3)) | ~sP10(X3,X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f395,f478])).
fof(f1222,plain,(
  sP11('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','T_0') | $spl1),
  inference(unit_resulting_resolution,[],[f472,f231,f420,f394])).
fof(f1205,plain,(
  ~sP3('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f231,f420,f978])).
fof(f1180,plain,(
  ~sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl4),
  inference(unit_resulting_resolution,[],[f1146,f333])).
fof(f1176,plain,(
  ( ! [X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | ~sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3,X2)) ) | $spl4),
  inference(subsumption_resolution,[],[f1165,f231])).
fof(f1165,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | p(s(bool,X3)) | ~sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3,X2)) ) | $spl4),
  inference(superposition,[],[f385,f478])).
fof(f1146,plain,(
  ~sP4('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f231,f420,f953])).
fof(f1130,plain,(
  ( ! [X2,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3)) ) | $spl4),
  inference(subsumption_resolution,[],[f1119,f231])).
fof(f1119,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | p(s(bool,X3)) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3)) ) | $spl4),
  inference(superposition,[],[f378,f478])).
fof(f1103,plain,(
  sP9('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0','F_0') | $spl1),
  inference(unit_resulting_resolution,[],[f465,f420,f420,f377])).
fof(f1067,plain,(
  ( ! [X2,X3] : (~p(s(bool,X2)) | p(s(bool,X3)) | ~sP7(X3,X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(subsumption_resolution,[],[f1059,f231])).
fof(f1059,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP7(X3,X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f370,f478])).
fof(f1033,plain,(
  ( ! [X2,X3] : (~sP6(X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3) | p(s(bool,X3)) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f1023,f231])).
fof(f1023,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP6(X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3)) ) | $spl4),
  inference(superposition,[],[f361,f478])).
fof(f1009,plain,(
  sP7('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f453,f231,f231,f357])).
fof(f978,plain,(
  ( ! [X2,X3] : (~sP3(X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3) | p(s(bool,X3)) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f968,f231])).
fof(f968,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP3(X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3)) ) | $spl4),
  inference(superposition,[],[f342,f478])).
fof(f958,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f231,f623])).
fof(f953,plain,(
  ( ! [X2,X3] : (~sP4(X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3) | p(s(bool,X3)) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f943,f231])).
fof(f943,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | p(s(bool,X3)) | ~sP4(X2,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3)) ) | $spl4),
  inference(superposition,[],[f338,f478])).
fof(f806,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f420,f478,f353])).
fof(f809,plain,(
  ~sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl4),
  inference(unit_resulting_resolution,[],[f420,f478,f353])).
fof(f783,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f231,f478,f351])).
fof(f785,plain,(
  sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl4),
  inference(unit_resulting_resolution,[],[f231,f478,f351])).
fof(f768,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f420,f612])).
fof(f730,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0',X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f231,f589])).
fof(f679,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f455,f420,f407])).
fof(f681,plain,(
  ( ! [X0] : (sP7('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f457,f420,f407])).
fof(f671,plain,(
  ( ! [X2,X3] : (~sP8('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3) | sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3)) ) | $spl4),
  inference(subsumption_resolution,[],[f669,f231])).
fof(f669,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~sP8('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3) | sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3)) ) | $spl4),
  inference(superposition,[],[f406,f478])).
fof(f664,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f460,f231,f406])).
fof(f667,plain,(
  ( ! [X0] : (sP9('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f463,f231,f406])).
fof(f648,plain,(
  ( ! [X2,X3] : (~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3) | sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3)) ) | $spl4),
  inference(subsumption_resolution,[],[f646,f231])).
fof(f646,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~sP10('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3) | sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3)) ) | $spl4),
  inference(superposition,[],[f405,f478])).
fof(f641,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f467,f231,f405])).
fof(f644,plain,(
  ( ! [X0] : (sP11('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f470,f231,f405])).
fof(f623,plain,(
  ( ! [X2,X3] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f621,f231])).
fof(f621,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3)) ) | $spl4),
  inference(superposition,[],[f401,f478])).
fof(f612,plain,(
  ( ! [X2,X3] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3,X2) | p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f610,f231])).
fof(f610,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,X2)) | sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3,X2)) ) | $spl4),
  inference(superposition,[],[f400,f478])).
fof(f599,plain,(
  ( ! [X0] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,'T_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f231,f578])).
fof(f589,plain,(
  ( ! [X2,X3] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f587,f231])).
fof(f587,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X2,X3)) ) | $spl4),
  inference(superposition,[],[f384,f478])).
fof(f578,plain,(
  ( ! [X2,X3] : (sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3,X2) | ~p(s(bool,X2))) ) | $spl4),
  inference(subsumption_resolution,[],[f576,f231])).
fof(f576,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,X2)) | sP9('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X3,X2)) ) | $spl4),
  inference(superposition,[],[f383,f478])).
fof(f567,plain,(
  sP1('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl4),
  inference(unit_resulting_resolution,[],[f420,f529])).
fof(f547,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f420,f519])).
fof(f529,plain,(
  ( ! [X1] : (sP1(X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | p(s(bool,X1))) ) | $spl4),
  inference(subsumption_resolution,[],[f527,f231])).
fof(f527,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | sP1(X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(superposition,[],[f310,f478])).
fof(f519,plain,(
  ( ! [X1] : (sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1) | p(s(bool,X1))) ) | $spl4),
  inference(subsumption_resolution,[],[f517,f231])).
fof(f517,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl4),
  inference(superposition,[],[f307,f478])).
fof(f478,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f250])).
fof(f474,plain,(
  s(bool,'T_0') != s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f249])).
fof(f472,plain,(
  ( ! [X0,X1] : (sP10('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f398])).
fof(f470,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f397])).
fof(f467,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f396])).
fof(f465,plain,(
  ( ! [X0,X1] : (sP8('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f381])).
fof(f463,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f380])).
fof(f460,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f379])).
fof(f457,plain,(
  ( ! [X0,X1] : (sP6('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f364])).
fof(f455,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f363])).
fof(f453,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f362])).
fof(f450,plain,(
  ( ! [X0,X1] : (sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0,X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f349])).
fof(f447,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f348])).
fof(f444,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f347])).
fof(f441,plain,(
  ( ! [X0,X1] : (sP3('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f345])).
fof(f439,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f344])).
fof(f437,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f343])).
fof(f434,plain,(
  ( ! [X0,X1] : (sP4('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f341])).
fof(f432,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f415,f340])).
fof(f430,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f339])).
fof(f427,plain,(
  ( ! [X0] : (sP0('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f292])).
fof(f424,plain,(
  ( ! [X0] : (sP0(X0,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f418,f291])).
fof(f8262,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116,f8118,f8126,f8127,f8128,f8129,f8215,f8249,f8257,f8261])).
fof(f8258,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116,f8118,f8126,f8127,f8128,f8129,f8215,f8249,f8257])).
fof(f8250,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116,f8118,f8126,f8127,f8128,f8129,f8215,f8249])).
fof(f8243,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8242,f7646])).
fof(f8242,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7515,f7527])).
fof(f7515,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0')) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f5479])).
fof(f8241,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8240,f7616])).
fof(f8240,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7514,f7527])).
fof(f7514,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f5476])).
fof(f8238,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8237,f7617])).
fof(f8237,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7512,f7527])).
fof(f7512,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f5472])).
fof(f8235,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8234,f7647])).
fof(f8234,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f8233,f7527])).
fof(f8233,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7510,f7832])).
fof(f7510,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f5445])).
fof(f8232,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8231,f7617])).
fof(f8231,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7509,f7527])).
fof(f7509,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f5430])).
fof(f8220,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl10)),
  inference(subsumption_resolution,[],[f8219,f1641])).
fof(f8219,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2 | $spl4 | $spl10)),
  inference(forward_demodulation,[],[f7498,f7527])).
fof(f7498,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2 | $spl10)),
  inference(backward_demodulation,[],[f7328,f4866])).
fof(f4866,plain,(
  sP1('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl10)),
  inference(subsumption_resolution,[],[f4850,f420])).
fof(f4850,plain,(
  p(s(bool,'F_0')) | sP1('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl10)),
  inference(superposition,[],[f3555,f506])).
fof(f8218,plain,(
  $false | ($spl1 | $spl2 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f8217,f1643])).
fof(f8217,plain,(
  sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f7497,f7527])).
fof(f7497,plain,(
  sP1('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl6)),
  inference(backward_demodulation,[],[f7328,f4865])).
fof(f4865,plain,(
  sP1('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f4849,f420])).
fof(f4849,plain,(
  p(s(bool,'F_0')) | sP1('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))) | ($spl1 | $spl6)),
  inference(superposition,[],[f3551,f506])).
fof(f8216,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116,f8118,f8126,f8127,f8128,f8129,f8215])).
fof(f8214,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116,f8118,f8126,f8127,f8128,f8129])).
fof(f8213,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116,f8118,f8126,f8127,f8128])).
fof(f8212,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116,f8118,f8126,f8127])).
fof(f8211,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116,f8118,f8126])).
fof(f8210,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116,f8118])).
fof(f8209,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8117,f7647])).
fof(f8117,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f7614])).
fof(f8208,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115,f8116])).
fof(f8207,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113,f8115])).
fof(f8206,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8114,f7646])).
fof(f8114,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f7611])).
fof(f8205,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092,f8113])).
fof(f8204,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8104,f8173])).
fof(f8104,plain,(
  ( ! [X0] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','T_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f6968])).
fof(f8203,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081,f8092])).
fof(f8202,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8085,f8171])).
fof(f8085,plain,(
  ( ! [X0] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f6800])).
fof(f8201,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072,f8081])).
fof(f8200,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060,f8072])).
fof(f8199,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037,f8060])).
fof(f8198,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194,f8037])).
fof(f8195,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182,f8194])).
fof(f8183,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f230,f229,f228,f231,f239,f250,f249,f276,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f418,f416,f415,f424,f423,f422,f427,f426,f425,f430,f429,f428,f432,f431,f434,f433,f437,f436,f435,f439,f438,f441,f440,f444,f443,f442,f447,f446,f445,f450,f449,f448,f453,f452,f451,f455,f454,f457,f456,f460,f459,f458,f463,f462,f461,f465,f464,f467,f466,f470,f469,f468,f472,f471,f474,f473,f478,f477,f511,f512,f515,f518,f519,f522,f525,f528,f529,f540,f547,f548,f551,f552,f555,f563,f567,f568,f571,f574,f577,f578,f582,f585,f588,f589,f598,f599,f600,f608,f611,f612,f616,f619,f622,f623,f644,f643,f641,f647,f648,f667,f666,f664,f663,f670,f671,f681,f679,f688,f730,f748,f749,f768,f775,f774,f785,f784,f783,f782,f797,f795,f809,f808,f806,f804,f825,f824,f823,f822,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f874,f928,f941,f952,f953,f946,f958,f966,f977,f978,f971,f982,f990,f1003,f1009,f1008,f1007,f1021,f1032,f1033,f1026,f1037,f1066,f1067,f1062,f1086,f1098,f1103,f1102,f1117,f1129,f1130,f1122,f1134,f1146,f1175,f1176,f1168,f1180,f1188,f1205,f1222,f1221,f1234,f1245,f1246,f1239,f1250,f1261,f1273,f1293,f1294,f1287,f1299,f1308,f1335,f1362,f1361,f1359,f1358,f1357,f1354,f1353,f1350,f1349,f1346,f1345,f1344,f1401,f1400,f1397,f1396,f1394,f1393,f1392,f1384,f1383,f1382,f1447,f1446,f1445,f1443,f1442,f1423,f1422,f1471,f1472,f1532,f1529,f1578,f1577,f1576,f1615,f1616,f1899,f1895,f1891,f1887,f1883,f1879,f1878,f1877,f1876,f1875,f1874,f1873,f1872,f1871,f1870,f1869,f1868,f1867,f1866,f1865,f1864,f1863,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1831,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1730,f1729,f1728,f1727,f1722,f1720,f1717,f1716,f1715,f1714,f1713,f1712,f1710,f1709,f1708,f1707,f1705,f1704,f1703,f1702,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1668,f1666,f1664,f1662,f1660,f1658,f1656,f1654,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f2006,f2007,f1990,f1991,f1993,f1995,f2021,f2024,f2025,f2027,f2029,f2074,f2075,f2054,f2060,f2061,f2063,f2079,f2091,f2094,f2095,f2097,f2109,f2129,f2141,f2150,f2411,f2407,f2403,f2399,f2395,f2391,f2390,f2389,f2388,f2387,f2386,f2385,f2384,f2383,f2382,f2381,f2380,f2379,f2378,f2377,f2376,f2375,f2374,f2373,f2372,f2367,f2366,f2362,f2359,f2358,f2352,f2351,f2344,f2343,f2319,f2318,f2317,f2313,f2312,f2308,f2307,f2306,f2299,f2287,f2281,f2278,f2277,f2273,f2272,f2271,f2270,f2269,f2266,f2264,f2259,f2258,f2252,f2251,f2244,f2242,f2241,f2240,f2239,f2234,f2232,f2229,f2228,f2227,f2226,f2225,f2224,f2222,f2221,f2220,f2219,f2217,f2216,f2215,f2214,f2213,f2212,f2211,f2210,f2204,f2203,f2196,f2195,f2189,f2188,f2181,f2180,f2179,f2178,f2177,f2176,f2175,f2174,f2173,f2172,f2170,f2169,f2166,f2165,f2164,f2163,f2161,f2160,f2159,f2157,f2475,f2487,f2507,f2519,f2538,f2550,f2559,f2589,f2703,f2719,f2728,f2745,f2754,f2854,f2869,f2880,f2922,f2924,f2926,f2928,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f1503,f1504,f3627,f3626,f2966,f1473,f1327,f324,f281,f280,f2973,f3196,f3625,f3624,f3623,f3622,f3165,f3163,f3162,f3160,f3110,f3108,f3107,f3105,f2940,f2938,f2937,f2935,f2881,f2855,f2814,f2805,f2784,f2775,f2657,f2623,f2551,f2549,f2548,f2547,f2535,f2525,f2524,f2523,f2520,f2518,f2517,f2516,f2504,f2501,f2490,f2488,f2486,f2485,f2484,f2472,f2223,f2218,f2148,f2147,f2145,f2144,f2142,f2140,f2139,f2138,f2126,f2124,f2100,f2098,f2096,f2076,f2066,f2064,f2062,f2057,f2030,f2028,f2026,f2004,f1996,f1994,f1992,f1985,f1711,f1706,f1516,f1515,f1288,f1240,f1169,f1123,f1063,f1027,f972,f947,f906,f905,f904,f903,f902,f901,f900,f899,f898,f897,f888,f873,f872,f871,f870,f836,f506,f420,f277,f254,f253,f4360,f4400,f4424,f4591,f5059,f5113,f5124,f5155,f5166,f5197,f5272,f5286,f5288,f5291,f5292,f5293,f5284,f5285,f5302,f5304,f5318,f5320,f5323,f5324,f5325,f5316,f5317,f5333,f5331,f5329,f5345,f5347,f5361,f5363,f5366,f5368,f5376,f5384,f5379,f5391,f5405,f5407,f5410,f5411,f5412,f5403,f5404,f5417,f5445,f5447,f5430,f5427,f5449,f5463,f5465,f5468,f5469,f5470,f5461,f5462,f5476,f5475,f5479,f5480,f5472,f5487,f5501,f5503,f5506,f5507,f5508,f5499,f5500,f5520,f5534,f5536,f5539,f5541,f5558,f5572,f5574,f5577,f5578,f5579,f5570,f5571,f5597,f5615,f5616,f5735,f5737,f5738,f5739,f5740,f5741,f5742,f5743,f5744,f5745,f5746,f5747,f5748,f5749,f5750,f5751,f5752,f5753,f5754,f5755,f5664,f5666,f5668,f5670,f5764,f5765,f5768,f5681,f5683,f5684,f5686,f5770,f5772,f5774,f5776,f5777,f5778,f5780,f5781,f5804,f5805,f5806,f5844,f5846,f5848,f5853,f5854,f5855,f5856,f5857,f5859,f5860,f5861,f5862,f5863,f5864,f5865,f5866,f5867,f5868,f5869,f5870,f5871,f5872,f5873,f5874,f5875,f5876,f5877,f5882,f5883,f5885,f5887,f5889,f5891,f5893,f5894,f5895,f5896,f5897,f5898,f5899,f5900,f5902,f5904,f5905,f5907,f5909,f5910,f5911,f5912,f5913,f5914,f5915,f5916,f5926,f5927,f5930,f5931,f6009,f6033,f6034,f6035,f6146,f6149,f6150,f6151,f6152,f6153,f6154,f6155,f6156,f6157,f6158,f6159,f6160,f6161,f6070,f6072,f6074,f6076,f6170,f6171,f6174,f6089,f6091,f6092,f6094,f6183,f6184,f6187,f6205,f6211,f6231,f6234,f6235,f6248,f6275,f6277,f6280,f6281,f6282,f6283,f6284,f6268,f6269,f6270,f6307,f6334,f6336,f6339,f6340,f6341,f6342,f6343,f6327,f6328,f6329,f6379,f6381,f6384,f6385,f6386,f6387,f6388,f6372,f6373,f6374,f6426,f6428,f6431,f6432,f6433,f6434,f6435,f6419,f6420,f6421,f6446,f6473,f6475,f6478,f6479,f6480,f6481,f6482,f6466,f6467,f6468,f6497,f6524,f6526,f6529,f6530,f6531,f6532,f6533,f6517,f6518,f6519,f6547,f6567,f6569,f6572,f6573,f6574,f6575,f6576,f6563,f6564,f6565,f6585,f6605,f6607,f6610,f6611,f6612,f6613,f6614,f6601,f6602,f6603,f6625,f6656,f6658,f6661,f6663,f6649,f6684,f6715,f6717,f6720,f6722,f6708,f6747,f6764,f6766,f6769,f6771,f6763,f6800,f6817,f6819,f6822,f6824,f6816,f6847,f6874,f6876,f6879,f6880,f6881,f6882,f6883,f6867,f6868,f6869,f6891,f6918,f6920,f6923,f6924,f6925,f6926,f6927,f6911,f6912,f6913,f6933,f6950,f6952,f6955,f6956,f6957,f6958,f6959,f6947,f6948,f6949,f6968,f6985,f6987,f6990,f6991,f6992,f6993,f6994,f6982,f6983,f6984,f7001,f7032,f7036,f7039,f7043,f7046,f7047,f7048,f7049,f7050,f7051,f7052,f7053,f7054,f7208,f7137,f7138,f7141,f7142,f7143,f7144,f7213,f7212,f7211,f7210,f7327,f7328,f7329,f7330,f7331,f7332,f7333,f7334,f7335,f7336,f7337,f7340,f7341,f7342,f7343,f7344,f7346,f7349,f7350,f7351,f7353,f7354,f7356,f7361,f7527,f7540,f7541,f7544,f7545,f7547,f7548,f7666,f7667,f7556,f7558,f7559,f7560,f7668,f7569,f7575,f7577,f7578,f7580,f7581,f7582,f7583,f7585,f7586,f7587,f7588,f7589,f7590,f7591,f7604,f7605,f7606,f7607,f7608,f7609,f7610,f7611,f7612,f7613,f7614,f7615,f7616,f7617,f7669,f7670,f7671,f7672,f7673,f7674,f7644,f7645,f7646,f7647,f7648,f7649,f7650,f7651,f7652,f7653,f7654,f7655,f7659,f7664,f7693,f7694,f7697,f7698,f7703,f7706,f7826,f7827,f7830,f7831,f7832,f7835,f7838,f7839,f7840,f7841,f8168,f8169,f8171,f8173,f7863,f7864,f7865,f7867,f7869,f7870,f7872,f7874,f7875,f7876,f7877,f7879,f7880,f7881,f7882,f7884,f7885,f7886,f7887,f7889,f7890,f7891,f7895,f7897,f8182])).
fof(f8167,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7836,f231])).
fof(f7836,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f420])).
fof(f8166,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f8165,f7668])).
fof(f8165,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7833,f7832])).
fof(f7833,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7832,f253])).
fof(f7829,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7828,f1700])).
fof(f7828,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7494,f7527])).
fof(f7494,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2525])).
fof(f7758,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7757,f7590])).
fof(f7757,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7424,f7527])).
fof(f7424,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2227])).
fof(f7755,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7754,f7591])).
fof(f7754,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7422,f7527])).
fof(f7422,plain,(
  ~sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2225])).
fof(f7750,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7749,f7616])).
fof(f7749,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7418,f7527])).
fof(f7418,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2221])).
fof(f7744,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7743,f1650])).
fof(f7743,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7413,f7527])).
fof(f7413,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK14)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2216])).
fof(f7710,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7709,f1701])).
fof(f7709,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','F_0') | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7380,f7527])).
fof(f7380,plain,(
  ~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','F_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2150])).
fof(f7708,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7707,f1701])).
fof(f7707,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7379,f7527])).
fof(f7379,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,'F_0')),'F_0')) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2145])).
fof(f7705,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7704,f1700])).
fof(f7704,plain,(
  ~sP2('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7377,f7527])).
fof(f7377,plain,(
  ~sP2('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2109])).
fof(f7702,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7701,f1683])).
fof(f7701,plain,(
  ~sP4('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7375,f7527])).
fof(f7375,plain,(
  ~sP4('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2079])).
fof(f7700,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7699,f1700])).
fof(f7699,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7374,f7527])).
fof(f7374,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2076])).
fof(f7696,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7695,f1701])).
fof(f7695,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7371,f7527])).
fof(f7371,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'F_0'),s(bool,X0)),'F_0')) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f2004])).
fof(f7692,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7691,f1861])).
fof(f7691,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7368,f7527])).
fof(f7368,plain,(
  ( ! [X0] : (sP11('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1831])).
fof(f7690,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7689,f7590])).
fof(f7689,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'T_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7367,f7527])).
fof(f7367,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0')) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1715])).
fof(f7688,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7687,f7591])).
fof(f7687,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7366,f7527])).
fof(f7366,plain,(
  ( ! [X0] : (~sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1713])).
fof(f7686,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7685,f7616])).
fof(f7685,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7365,f7527])).
fof(f7365,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1709])).
fof(f7684,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7683,f1650])).
fof(f7683,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7364,f7527])).
fof(f7364,plain,(
  ( ! [X0] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1704])).
fof(f7682,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7665,f1649])).
fof(f7665,plain,(
  sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7361])).
fof(f7681,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7663,f7617])).
fof(f7663,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7354])).
fof(f7680,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7662,f5124])).
fof(f7662,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7353])).
fof(f7679,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7661,f5059])).
fof(f7661,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7351])).
fof(f7678,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7660,f7616])).
fof(f7660,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12))) | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7350])).
fof(f7677,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7658,f1714])).
fof(f7658,plain,(
  sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','T_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7346])).
fof(f7676,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7657,f1860])).
fof(f7657,plain,(
  sP11('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','T_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7344])).
fof(f7675,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7656,f1806])).
fof(f7656,plain,(
  sP9('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real',sK12)),'F_0','F_0') | ($spl1 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f7527,f7343])).
fof(f7526,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7362,f1397])).
fof(f7362,plain,(
  ~sP5('F_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1578])).
fof(f7525,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7360,f1443])).
fof(f7360,plain,(
  ~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1576])).
fof(f7524,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7359,f785])).
fof(f7359,plain,(
  ~sP5('T_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1532])).
fof(f7523,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7358,f783])).
fof(f7358,plain,(
  ~sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1529])).
fof(f7522,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7355,f809])).
fof(f7355,plain,(
  sP5('F_0','T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1445])).
fof(f7521,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7348,f1180])).
fof(f7348,plain,(
  sP5('T_0','F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1392])).
fof(f7520,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7345,f806])).
fof(f7345,plain,(
  sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'T_0') | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f1357])).
fof(f7519,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7518,f473])).
fof(f7518,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl1 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f7339,f478])).
fof(f7339,plain,(
  s(bool,'F_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f506])).
fof(f7517,plain,(
  $false | ($spl1 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f7338,f478])).
fof(f7338,plain,(
  s(bool,'T_0') != s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12))) | ($spl1 | $spl2)),
  inference(backward_demodulation,[],[f7328,f474])).
fof(f7207,plain,(
  ( ! [X17,X16] : (sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X16,X17)) ) | $spl110),
  inference(cnf_transformation,[],[f7207_D])).
fof(f7207_D,plain,(
  ( ! [X17,X16] : (sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X16,X17)) ) <=> ~$spl110),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl110])])).
fof(f7054,plain,(
  ( ! [X17,X16] : (sP10('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X16,X17) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f472,f1473])).
fof(f7206,plain,(
  ( ! [X14,X15] : (sP10(X14,X15,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | $spl108),
  inference(cnf_transformation,[],[f7206_D])).
fof(f7206_D,plain,(
  ( ! [X14,X15] : (sP10(X14,X15,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f7053,plain,(
  ( ! [X14,X15] : (sP10(X14,X15,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f467,f1473])).
fof(f7205,plain,(
  ( ! [X12,X13] : (sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X12,X13)) ) | $spl106),
  inference(cnf_transformation,[],[f7205_D])).
fof(f7205_D,plain,(
  ( ! [X12,X13] : (sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X12,X13)) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f7052,plain,(
  ( ! [X12,X13] : (sP8('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X12,X13) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f465,f1473])).
fof(f7204,plain,(
  ( ! [X10,X11] : (sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X10,X11)) ) | $spl104),
  inference(cnf_transformation,[],[f7204_D])).
fof(f7204_D,plain,(
  ( ! [X10,X11] : (sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X10,X11)) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f7051,plain,(
  ( ! [X10,X11] : (sP6('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X10,X11) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f457,f1473])).
fof(f7203,plain,(
  ( ! [X8,X9] : (sP6(X8,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X9)) ) | $spl102),
  inference(cnf_transformation,[],[f7203_D])).
fof(f7203_D,plain,(
  ( ! [X8,X9] : (sP6(X8,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X9)) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f7050,plain,(
  ( ! [X8,X9] : (sP6(X8,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X9) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f455,f1473])).
fof(f7202,plain,(
  ( ! [X6,X7] : (sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X6,X7)) ) | $spl100),
  inference(cnf_transformation,[],[f7202_D])).
fof(f7202_D,plain,(
  ( ! [X6,X7] : (sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X6,X7)) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f7049,plain,(
  ( ! [X6,X7] : (sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X6,X7) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f441,f1473])).
fof(f7201,plain,(
  ( ! [X4,X5] : (sP3(X4,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X5)) ) | $spl98),
  inference(cnf_transformation,[],[f7201_D])).
fof(f7201_D,plain,(
  ( ! [X4,X5] : (sP3(X4,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X5)) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f7048,plain,(
  ( ! [X4,X5] : (sP3(X4,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X5) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f439,f1473])).
fof(f7200,plain,(
  ( ! [X2,X3] : (sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2,X3)) ) | $spl96),
  inference(cnf_transformation,[],[f7200_D])).
fof(f7200_D,plain,(
  ( ! [X2,X3] : (sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2,X3)) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f7047,plain,(
  ( ! [X2,X3] : (sP4('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X2,X3) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f434,f1473])).
fof(f7199,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) | $spl94),
  inference(cnf_transformation,[],[f7199_D])).
fof(f7199_D,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1)) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f7046,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),X1) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))) ) | $spl1),
  inference(superposition,[],[f432,f1473])).
fof(f6988,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,'T_0') | p(s(bool,X2))) ) | $spl90),
  inference(cnf_transformation,[],[f6988_D])).
fof(f6988_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,'T_0') | p(s(bool,X2))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f6990,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,'T_0')) )),
  inference(condensation,[],[f6989])).
fof(f6989,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6975,f748])).
fof(f6975,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1288,f688])).
fof(f6987,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2,'T_0')) )),
  inference(condensation,[],[f6986])).
fof(f6986,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6974,f748])).
fof(f6974,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1288,f688])).
fof(f6953,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,'T_0') | p(s(bool,X2))) ) | $spl88),
  inference(cnf_transformation,[],[f6953_D])).
fof(f6953_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,'T_0') | p(s(bool,X2))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f6955,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,'T_0')) )),
  inference(condensation,[],[f6954])).
fof(f6954,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6940,f748])).
fof(f6940,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1287,f688])).
fof(f6952,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2,'T_0')) )),
  inference(condensation,[],[f6951])).
fof(f6951,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6939,f748])).
fof(f6939,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1287,f688])).
fof(f6921,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | ~p(s(bool,X2))) ) | $spl86),
  inference(cnf_transformation,[],[f6921_D])).
fof(f6921_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2))) | ~p(s(bool,X2))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f6923,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2)))) )),
  inference(condensation,[],[f6922])).
fof(f6922,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~sP10('T_0',X30,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X31))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6904,f748])).
fof(f6904,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | ~p(s(bool,X31)) | ~sP10('T_0',X30,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X31))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1240,f688])).
fof(f6920,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X2)))) )),
  inference(condensation,[],[f6919])).
fof(f6919,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | ~sP10('T_0',X25,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X26))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6903,f748])).
fof(f6903,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~sP10('T_0',X25,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X26))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1240,f688])).
fof(f6877,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3))) | ~p(s(bool,X2))) ) | $spl84),
  inference(cnf_transformation,[],[f6877_D])).
fof(f6877_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3))) | ~p(s(bool,X2))) ) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f6879,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)))) )),
  inference(condensation,[],[f6878])).
fof(f6878,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | ~p(s(bool,X31)) | ~sP10('T_0',X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6860,f748])).
fof(f6860,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | ~p(s(bool,X31)) | ~sP10('T_0',X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1239,f688])).
fof(f6876,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10('T_0',X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)))) )),
  inference(condensation,[],[f6875])).
fof(f6875,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | ~p(s(bool,X26)) | ~sP10('T_0',X25,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X26),s(bool,X27))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6859,f748])).
fof(f6859,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | ~p(s(bool,X26)) | ~sP10('T_0',X25,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X26),s(bool,X27))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1239,f688])).
fof(f6820,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X2,X1)) ) | $spl82),
  inference(cnf_transformation,[],[f6820_D])).
fof(f6820_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X2,X1)) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f6822,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X2,X1)) )),
  inference(condensation,[],[f6821])).
fof(f6821,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | p(s(bool,X31)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,'T_0')),X31,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6807,f748])).
fof(f6807,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | p(s(bool,X31)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,'T_0')),X31,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1169,f688])).
fof(f6819,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X2,X1)) )),
  inference(condensation,[],[f6818])).
fof(f6818,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X26,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6806,f748])).
fof(f6806,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | p(s(bool,X26)) | ~sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X26,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1169,f688])).
fof(f6767,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X2,X1)) ) | $spl80),
  inference(cnf_transformation,[],[f6767_D])).
fof(f6767_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X2,X1)) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f6769,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X2,X1)) )),
  inference(condensation,[],[f6768])).
fof(f6768,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | p(s(bool,X31)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X32)),X31,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6754,f748])).
fof(f6754,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | p(s(bool,X31)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X32)),X31,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1168,f688])).
fof(f6766,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X2,X1)) )),
  inference(condensation,[],[f6765])).
fof(f6765,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X26,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6753,f748])).
fof(f6753,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | p(s(bool,X26)) | ~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X26,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1168,f688])).
fof(f6718,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X1,X2) | p(s(bool,X2))) ) | $spl78),
  inference(cnf_transformation,[],[f6718_D])).
fof(f6718_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X1,X2) | p(s(bool,X2))) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f6720,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X1,X2)) )),
  inference(condensation,[],[f6719])).
fof(f6719,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | p(s(bool,X31)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,'T_0')),X30,X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6699,f748])).
fof(f6699,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | p(s(bool,X31)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,'T_0')),X30,X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1123,f688])).
fof(f6717,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,'T_0')),X1,X2)) )),
  inference(condensation,[],[f6716])).
fof(f6716,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X25,X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6698,f748])).
fof(f6698,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | p(s(bool,X26)) | ~sP8('const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,'T_0')),X25,X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1123,f688])).
fof(f6659,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X1,X2) | p(s(bool,X2))) ) | $spl76),
  inference(cnf_transformation,[],[f6659_D])).
fof(f6659_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X1,X2) | p(s(bool,X2))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f6661,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X1,X2)) )),
  inference(condensation,[],[f6660])).
fof(f6660,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | p(s(bool,X31)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X32)),X30,X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6640,f748])).
fof(f6640,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | p(s(bool,X31)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X32)),X30,X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1122,f688])).
fof(f6658,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X3)),X1,X2)) )),
  inference(condensation,[],[f6657])).
fof(f6657,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | p(s(bool,X26)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X25,X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6639,f748])).
fof(f6639,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | p(s(bool,X26)) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X27)),X25,X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1122,f688])).
fof(f6608,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)))) ) | $spl74),
  inference(cnf_transformation,[],[f6608_D])).
fof(f6608_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f6610,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)))) )),
  inference(condensation,[],[f6609])).
fof(f6609,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(X31,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6594,f748])).
fof(f6594,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(X31,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1063,f688])).
fof(f6607,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)))) )),
  inference(condensation,[],[f6606])).
fof(f6606,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP7(X26,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6593,f748])).
fof(f6593,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP7(X26,'T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1063,f688])).
fof(f6570,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)))) ) | $spl72),
  inference(cnf_transformation,[],[f6570_D])).
fof(f6570_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f6572,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)))) )),
  inference(condensation,[],[f6571])).
fof(f6571,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(X31,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6556,f748])).
fof(f6556,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(X31,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1062,f688])).
fof(f6569,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)))) )),
  inference(condensation,[],[f6568])).
fof(f6568,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP7(X26,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6555,f748])).
fof(f6555,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP7(X26,'T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1062,f688])).
fof(f6527,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) | $spl70),
  inference(cnf_transformation,[],[f6527_D])).
fof(f6527_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f6529,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6528])).
fof(f6528,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6510,f748])).
fof(f6510,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1027,f688])).
fof(f6526,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6525])).
fof(f6525,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6509,f748])).
fof(f6509,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1027,f688])).
fof(f6476,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) | $spl68),
  inference(cnf_transformation,[],[f6476_D])).
fof(f6476_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f6478,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6477])).
fof(f6477,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6459,f748])).
fof(f6459,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1026,f688])).
fof(f6475,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6474])).
fof(f6474,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6458,f748])).
fof(f6458,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP6('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1026,f688])).
fof(f6429,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) | $spl66),
  inference(cnf_transformation,[],[f6429_D])).
fof(f6429_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f6431,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6430])).
fof(f6430,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6412,f748])).
fof(f6412,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f972,f688])).
fof(f6428,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6427])).
fof(f6427,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6411,f748])).
fof(f6411,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f972,f688])).
fof(f6382,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) | $spl64),
  inference(cnf_transformation,[],[f6382_D])).
fof(f6382_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f6384,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6383])).
fof(f6383,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6365,f748])).
fof(f6365,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f971,f688])).
fof(f6381,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6380])).
fof(f6380,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6364,f748])).
fof(f6364,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f971,f688])).
fof(f6337,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) | $spl62),
  inference(cnf_transformation,[],[f6337_D])).
fof(f6337_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2) | p(s(bool,X2))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f6339,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6338])).
fof(f6338,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6320,f748])).
fof(f6320,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X32),s(bool,X30)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f947,f688])).
fof(f6336,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X3),s(bool,X1)),X2)) )),
  inference(condensation,[],[f6335])).
fof(f6335,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6319,f748])).
fof(f6319,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X25)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f947,f688])).
fof(f6278,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) | $spl60),
  inference(cnf_transformation,[],[f6278_D])).
fof(f6278_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2) | p(s(bool,X2))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f6280,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6279])).
fof(f6279,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f6261,f748])).
fof(f6261,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X32)),X31) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f946,f688])).
fof(f6277,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X3)),X2)) )),
  inference(condensation,[],[f6276])).
fof(f6276,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | p(s(bool,X26)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f6260,f748])).
fof(f6260,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X27)),X26) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f946,f688])).
fof(f6232,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) ) | $spl56),
  inference(cnf_transformation,[],[f6232_D])).
fof(f6232_D,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f6234,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X11)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X10),s('type.realax.real',X9))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X9),s('type.realax.real',X10)))) )),
  inference(subsumption_resolution,[],[f6218,f249])).
fof(f6218,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,X11)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X10),s('type.realax.real',X9))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X9),s('type.realax.real',X10)))) )),
  inference(superposition,[],[f1327,f688])).
fof(f6231,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X8)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) )),
  inference(subsumption_resolution,[],[f6217,f249])).
fof(f6217,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,X8)) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6))) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real',X7))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1327,f688])).
fof(f5575,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) ) | $spl54),
  inference(cnf_transformation,[],[f5575_D])).
fof(f5575_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f5577,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) )),
  inference(condensation,[],[f5576])).
fof(f5576,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5565,f748])).
fof(f5565,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f904,f688])).
fof(f5574,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) )),
  inference(condensation,[],[f5573])).
fof(f5573,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5564,f748])).
fof(f5564,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f904,f688])).
fof(f5537,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X3,X1)) ) | $spl52),
  inference(cnf_transformation,[],[f5537_D])).
fof(f5537_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X3,X1)) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f5539,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X3,X1)) )),
  inference(condensation,[],[f5538])).
fof(f5538,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,'T_0')),X32,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5527,f748])).
fof(f5527,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,'T_0')),X32,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f903,f688])).
fof(f5536,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,'T_0')),X3,X1)) )),
  inference(condensation,[],[f5535])).
fof(f5535,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,'T_0')),X27,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5526,f748])).
fof(f5526,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,'T_0')),X27,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f903,f688])).
fof(f5504,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) ) | $spl50),
  inference(cnf_transformation,[],[f5504_D])).
fof(f5504_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f5506,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) )),
  inference(condensation,[],[f5505])).
fof(f5505,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5494,f748])).
fof(f5494,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f902,f688])).
fof(f5503,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),'T_0',X3)) )),
  inference(condensation,[],[f5502])).
fof(f5502,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5493,f748])).
fof(f5493,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f902,f688])).
fof(f5466,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,'T_0')) ) | $spl48),
  inference(cnf_transformation,[],[f5466_D])).
fof(f5466_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,'T_0')) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f5468,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,'T_0')) )),
  inference(condensation,[],[f5467])).
fof(f5467,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),X32,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5456,f748])).
fof(f5456,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X31),s(bool,X30)),X32,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f901,f688])).
fof(f5465,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X2),s(bool,X1)),X3,'T_0')) )),
  inference(condensation,[],[f5464])).
fof(f5464,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),X27,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5455,f748])).
fof(f5455,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X25)),X27,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f901,f688])).
fof(f5408,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) ) | $spl46),
  inference(cnf_transformation,[],[f5408_D])).
fof(f5408_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f5410,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) )),
  inference(condensation,[],[f5409])).
fof(f5409,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5398,f748])).
fof(f5398,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f852,f688])).
fof(f5407,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) )),
  inference(condensation,[],[f5406])).
fof(f5406,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5397,f748])).
fof(f5397,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f852,f688])).
fof(f5364,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X3,X1)) ) | $spl44),
  inference(cnf_transformation,[],[f5364_D])).
fof(f5364_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X3,X1)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f5366,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X3,X1)) )),
  inference(condensation,[],[f5365])).
fof(f5365,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X31)),X32,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5354,f748])).
fof(f5354,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X31)),X32,X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f851,f688])).
fof(f5363,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),X3,X1)) )),
  inference(condensation,[],[f5362])).
fof(f5362,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X26)),X27,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5353,f748])).
fof(f5353,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X26)),X27,X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f851,f688])).
fof(f5321,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) ) | $spl42),
  inference(cnf_transformation,[],[f5321_D])).
fof(f5321_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f5323,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) )),
  inference(condensation,[],[f5322])).
fof(f5322,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5311,f748])).
fof(f5311,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),'T_0',X32) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f850,f688])).
fof(f5320,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),'T_0',X3)) )),
  inference(condensation,[],[f5319])).
fof(f5319,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5310,f748])).
fof(f5310,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),'T_0',X27) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f850,f688])).
fof(f5289,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,'T_0')) ) | $spl40),
  inference(cnf_transformation,[],[f5289_D])).
fof(f5289_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,'T_0')) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f5291,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,'T_0')) )),
  inference(condensation,[],[f5290])).
fof(f5290,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5279,f748])).
fof(f5279,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X30),s(bool,X31)),X32,'T_0') | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f849,f688])).
fof(f5288,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X3,'T_0')) )),
  inference(condensation,[],[f5287])).
fof(f5287,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5278,f748])).
fof(f5278,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | ~p(s(bool,X25)) | sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27,'T_0') | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f849,f688])).
fof(f3859,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741,f3746,f3747,f3748,f3750,f3858])).
fof(f3858,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X1) = s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) ) | $spl8),
  inference(forward_demodulation,[],[f3772,f276])).
fof(f3772,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.max_2'(s('type.realax.real',X0),s('type.realax.real',X1))) = s('type.realax.real','const.bool.COND_3'(s(bool,'T_0'),s('type.realax.real',X1),s('type.realax.real',X0)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f280])).
fof(f3750,plain,(
  ( ! [X0] : (sP1('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2805])).
fof(f3748,plain,(
  ( ! [X0] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2775])).
fof(f3747,plain,(
  ( ! [X0,X1] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),X1)) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2657])).
fof(f3746,plain,(
  ( ! [X0,X1] : (sP0(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2623])).
fof(f3741,plain,(
  ( ! [X0,X1] : (sP4('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2535])).
fof(f3733,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0','F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2504])).
fof(f3732,plain,(
  ( ! [X0] : (~sP3('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2501])).
fof(f3731,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2490])).
fof(f3726,plain,(
  ( ! [X0,X1] : (sP4('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2472])).
fof(f3720,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2144])).
fof(f3715,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'T_0','F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2126])).
fof(f3714,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2124])).
fof(f3713,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2100])).
fof(f3709,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2066])).
fof(f3706,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0','F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2057])).
fof(f3705,plain,(
  ( ! [X12,X10,X11] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f2030])).
fof(f3701,plain,(
  ( ! [X12,X10,X11] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X11),s(bool,X12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f1996])).
fof(f3698,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f1985])).
fof(f3697,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),X1,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X1)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f1711])).
fof(f3696,plain,(
  ( ! [X2,X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)),X2)) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f1706])).
fof(f3693,plain,(
  ( ! [X14,X17,X15,X16] : (~sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X17,X16) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f1288])).
fof(f3692,plain,(
  ( ! [X14,X17,X15,X16] : (~sP10(X17,X16,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15))) | ~p(s(bool,X15)) | p(s(bool,X16)) | ~p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f1240])).
fof(f3691,plain,(
  ( ! [X14,X17,X15,X16] : (~sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X17,X16) | ~p(s(bool,X15)) | p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f1169])).
fof(f3690,plain,(
  ( ! [X14,X17,X15,X16] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X16,X17) | ~p(s(bool,X15)) | p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f1123])).
fof(f3689,plain,(
  ( ! [X14,X17,X15,X16] : (~sP7(X17,X16,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15))) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f1063])).
fof(f3688,plain,(
  ( ! [X14,X17,X15,X16] : (~sP6(X16,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X17) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f1027])).
fof(f3687,plain,(
  ( ! [X14,X17,X15,X16] : (~sP3(X16,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X17) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f972])).
fof(f3686,plain,(
  ( ! [X14,X17,X15,X16] : (~sP4(X16,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X14),s(bool,X15)),X17) | ~p(s(bool,X15)) | ~p(s(bool,X16)) | p(s(bool,X17))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f947])).
fof(f3800,plain,(
  ( ! [X54,X52,X53,X51] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X53,X54) | ~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X53,X54) | ~p(s(bool,X52))) ) | $spl8),
  inference(forward_demodulation,[],[f3685,f3552])).
fof(f3685,plain,(
  ( ! [X54,X52,X53,X51] : (~sP8('const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52)),X53,X54) | ~p(s(bool,X52)) | sP9('const.bool.COND_3'(s(bool,'F_0'),s(bool,X51),s(bool,X52)),X53,X54)) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f906])).
fof(f3798,plain,(
  ( ! [X47,X50,X48,X49] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | ~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | ~p(s(bool,X48))) ) | $spl8),
  inference(forward_demodulation,[],[f3684,f3552])).
fof(f3684,plain,(
  ( ! [X47,X50,X48,X49] : (~sP10('const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)),X49,X50) | ~p(s(bool,X48)) | sP11('const.bool.COND_3'(s(bool,'F_0'),s(bool,X47),s(bool,X48)),X49,X50)) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f905])).
fof(f3683,plain,(
  ( ! [X45,X43,X46,X44] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X43),s(bool,X44)),X45,X46) | ~p(s(bool,X44)) | ~p(s(bool,X45))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f904])).
fof(f3682,plain,(
  ( ! [X39,X41,X42,X40] : (sP11('const.bool.COND_3'(s(bool,'T_0'),s(bool,X39),s(bool,X40)),X42,X41) | ~p(s(bool,X40)) | p(s(bool,X41))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f903])).
fof(f3681,plain,(
  ( ! [X37,X35,X38,X36] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X35),s(bool,X36)),X37,X38) | ~p(s(bool,X36)) | ~p(s(bool,X37))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f902])).
fof(f3680,plain,(
  ( ! [X33,X31,X34,X32] : (sP9('const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)),X34,X33) | ~p(s(bool,X32)) | ~p(s(bool,X33))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f901])).
fof(f3679,plain,(
  ( ! [X30,X28,X29] : (sP1(X30,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29))) | ~p(s(bool,X29)) | p(s(bool,X30))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f900])).
fof(f3678,plain,(
  ( ! [X26,X27,X25] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26)),X27) | ~p(s(bool,X26)) | p(s(bool,X27))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f899])).
fof(f3677,plain,(
  ( ! [X24,X23,X22] : (sP0('const.bool.COND_3'(s(bool,'T_0'),s(bool,X22),s(bool,X23)),X24) | ~p(s(bool,X23))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f898])).
fof(f3676,plain,(
  ( ! [X21,X19,X20] : (sP0(X21,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X19),s(bool,X20))) | ~p(s(bool,X20))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f897])).
fof(f3674,plain,(
  ( ! [X0,X1] : (sP5('T_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f873])).
fof(f3673,plain,(
  ( ! [X0,X1] : (~sP5('F_0',X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f872])).
fof(f3672,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f871])).
fof(f3671,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f870])).
fof(f3667,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f277])).
fof(f3782,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl8),
  inference(subsumption_resolution,[],[f3665,f3552])).
fof(f3665,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl8),
  inference(backward_demodulation,[],[f3552,f253])).
fof(f3857,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3751,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741,f3746,f3747,f3748,f3750])).
fof(f3751,plain,(
  ( ! [X0,X1] : (sP1(X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0'))) | p(s(bool,X0))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2814])).
fof(f3856,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741,f3746,f3747,f3748,f3750])).
fof(f3855,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3749,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741,f3746,f3747,f3748])).
fof(f3749,plain,(
  ( ! [X0,X1] : (sP1('const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),X0) | p(s(bool,X0))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2784])).
fof(f3854,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741,f3746,f3747,f3748])).
fof(f3853,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741,f3746,f3747])).
fof(f3852,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741,f3746])).
fof(f3851,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3744,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741])).
fof(f3744,plain,(
  ( ! [X2] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2549])).
fof(f3850,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3743,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741])).
fof(f3743,plain,(
  ( ! [X1] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')))) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2548])).
fof(f3849,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3742,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741])).
fof(f3742,plain,(
  ( ! [X0] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2547])).
fof(f3848,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733,f3741])).
fof(f3847,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3740,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733])).
fof(f3740,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2525])).
fof(f3846,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3739,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733])).
fof(f3739,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2524])).
fof(f3845,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3738,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733])).
fof(f3738,plain,(
  ( ! [X0] : (~sP3('const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2523])).
fof(f3844,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3736,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733])).
fof(f3736,plain,(
  ( ! [X2] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2518])).
fof(f3843,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3735,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733])).
fof(f3735,plain,(
  ( ! [X1] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')))) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2517])).
fof(f3842,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3734,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733])).
fof(f3734,plain,(
  ( ! [X0] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2516])).
fof(f3841,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732,f3733])).
fof(f3840,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731,f3732])).
fof(f3839,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726,f3731])).
fof(f3838,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3729,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726])).
fof(f3729,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2486])).
fof(f3837,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3728,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726])).
fof(f3728,plain,(
  ( ! [X1] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2485])).
fof(f3836,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3727,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726])).
fof(f3727,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2484])).
fof(f3835,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720,f3726])).
fof(f3834,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3725,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720])).
fof(f3725,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),X0,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X0)))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2223])).
fof(f3833,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3724,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720])).
fof(f3724,plain,(
  ( ! [X0,X1] : (sP5('const.real.real_lte_2'(s('type.realax.real',sK12),s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14)))),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)),X1)) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2218])).
fof(f3832,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3723,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720])).
fof(f3723,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)),'F_0')) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2148])).
fof(f3831,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3722,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720])).
fof(f3722,plain,(
  ( ! [X0] : (~sP3('const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)),'F_0')) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2147])).
fof(f3830,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3721,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720])).
fof(f3721,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'F_0')) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2145])).
fof(f3829,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715,f3720])).
fof(f3828,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3718,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715])).
fof(f3718,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2140])).
fof(f3827,plain,(
  $false | ($spl4 | $spl8)),
  inference(global_subsumption,[],[f3717,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715])).
fof(f3717,plain,(
  ( ! [X1] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) ) | ($spl4 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2139])).
fof(f3826,plain,(
  $false | ($spl2 | $spl8)),
  inference(global_subsumption,[],[f3716,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715])).
fof(f3716,plain,(
  ( ! [X0] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,'T_0')),'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) ) | ($spl2 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2138])).
fof(f3825,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714,f3715])).
fof(f3824,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713,f3714])).
fof(f3823,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709,f3713])).
fof(f3822,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3711,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709])).
fof(f3711,plain,(
  ( ! [X2] : (sP5('T_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2096])).
fof(f3821,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3710,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709])).
fof(f3710,plain,(
  ( ! [X0] : (~sP2('const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'F_0')) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2076])).
fof(f3820,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706,f3709])).
fof(f3819,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3707,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706])).
fof(f3707,plain,(
  ( ! [X2] : (~sP5('F_0','const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2062])).
fof(f3818,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705,f3706])).
fof(f3817,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701,f3705])).
fof(f3816,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3703,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701])).
fof(f3703,plain,(
  ( ! [X2] : (sP5('T_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2026])).
fof(f3815,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3702,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701])).
fof(f3702,plain,(
  ( ! [X0] : (~sP2('const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)),'const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X0)),'F_0')) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f2004])).
fof(f3814,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698,f3701])).
fof(f3813,plain,(
  $false | ($spl1 | $spl8)),
  inference(global_subsumption,[],[f3699,f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698])).
fof(f3699,plain,(
  ( ! [X2] : (~sP5('F_0','const.bool.COND_3'(s(bool,'T_0'),s(bool,'T_0'),s(bool,X2)),'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) ) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f3552,f1992])).
fof(f3812,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697,f3698])).
fof(f3811,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696,f3697])).
fof(f3810,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693,f3696])).
fof(f3809,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692,f3693])).
fof(f3808,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691,f3692])).
fof(f3807,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690,f3691])).
fof(f3806,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689,f3690])).
fof(f3805,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688,f3689])).
fof(f3804,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687,f3688])).
fof(f3803,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686,f3687])).
fof(f3802,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800,f3686])).
fof(f3801,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798,f3800])).
fof(f3799,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683,f3798])).
fof(f3797,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682,f3683])).
fof(f3796,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681,f3682])).
fof(f3795,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680,f3681])).
fof(f3794,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679,f3680])).
fof(f3793,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678,f3679])).
fof(f3792,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677,f3678])).
fof(f3791,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676,f3677])).
fof(f3790,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674,f3676])).
fof(f3789,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673,f3674])).
fof(f3788,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672,f3673])).
fof(f3787,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671,f3672])).
fof(f3786,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667,f3671])).
fof(f3785,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f3668,f231])).
fof(f3668,plain,(
  ~p(s(bool,'T_0')) | $spl8),
  inference(backward_demodulation,[],[f3552,f420])).
fof(f3784,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782,f3667])).
fof(f3783,plain,(
  $false | $spl8),
  inference(global_subsumption,[],[f230,f229,f228,f231,f420,f239,f250,f249,f254,f253,f276,f277,f280,f281,f285,f282,f292,f291,f421,f310,f307,f306,f305,f323,f324,f337,f336,f335,f334,f333,f332,f331,f341,f340,f339,f338,f345,f344,f343,f342,f349,f348,f347,f346,f353,f352,f351,f350,f407,f357,f356,f355,f354,f364,f363,f362,f361,f370,f367,f366,f365,f377,f376,f375,f406,f373,f372,f371,f381,f380,f379,f378,f385,f384,f383,f382,f394,f393,f392,f405,f390,f389,f388,f398,f397,f396,f395,f402,f401,f400,f399,f422,f425,f428,f431,f433,f435,f438,f440,f442,f445,f448,f451,f454,f456,f458,f461,f464,f466,f468,f471,f473,f511,f512,f515,f525,f540,f548,f551,f555,f563,f568,f571,f574,f585,f598,f600,f608,f619,f688,f748,f775,f774,f797,f795,f825,f824,f823,f822,f836,f845,f846,f847,f848,f849,f850,f851,f852,f853,f854,f873,f872,f871,f870,f874,f888,f897,f898,f899,f900,f901,f902,f903,f904,f905,f906,f941,f946,f947,f966,f971,f972,f982,f990,f1003,f1007,f1021,f1026,f1027,f1037,f1062,f1063,f1102,f1117,f1122,f1123,f1134,f1168,f1169,f1221,f1234,f1239,f1240,f1250,f1287,f1288,f1308,f1327,f1344,f1382,f1473,f1515,f1516,f1870,f1867,f1864,f1862,f1861,f1860,f1855,f1854,f1850,f1847,f1846,f1840,f1839,f1832,f1807,f1806,f1805,f1801,f1800,f1796,f1795,f1794,f1787,f1775,f1769,f1766,f1765,f1761,f1760,f1759,f1758,f1757,f1754,f1752,f1747,f1746,f1740,f1739,f1732,f1717,f1716,f1714,f1712,f1711,f1710,f1706,f1705,f1701,f1700,f1699,f1698,f1692,f1691,f1684,f1683,f1677,f1676,f1669,f1652,f1650,f1649,f1646,f1645,f1644,f1643,f1641,f1640,f1639,f1638,f1637,f1987,f1985,f1993,f1994,f1995,f1996,f2021,f2027,f2028,f2029,f2030,f2057,f2054,f2063,f2064,f2066,f2091,f2097,f2098,f2100,f2126,f2124,f2129,f2141,f2142,f2144,f2472,f2475,f2487,f2488,f2490,f2504,f2501,f2507,f2519,f2520,f2535,f2538,f2550,f2551,f2559,f2589,f2623,f2657,f2719,f2745,f2775,f2805,f2854,f2855,f2869,f2880,f2881,f2922,f2924,f2926,f2928,f2935,f2937,f2938,f2940,f2966,f2973,f2976,f3060,f3061,f3062,f3063,f3064,f3065,f3550,f3554,f3557,f3560,f3563,f3566,f3569,f3572,f3575,f3578,f3581,f3584,f3587,f3590,f3593,f3596,f3092,f3094,f3096,f3098,f3105,f3107,f3108,f3110,f3598,f3599,f3600,f3601,f3602,f3603,f3604,f3605,f3606,f3607,f3608,f3609,f3610,f3611,f3612,f3613,f3614,f3615,f3616,f3617,f3147,f3149,f3151,f3153,f3618,f3619,f3620,f3621,f3160,f3162,f3163,f3165,f3622,f3623,f3624,f3625,f3626,f3627,f3196,f3199,f3633,f3635,f3637,f3639,f3641,f3643,f3645,f3647,f3649,f3651,f3653,f3655,f3657,f3659,f3661,f3663,f3552,f3782])).
fof(f3597,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~sP8('T_0',X1,X2)) ) | $spl38),
  inference(cnf_transformation,[],[f3597_D])).
fof(f3597_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~sP8('T_0',X1,X2)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f3663,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f3662])).
fof(f3662,plain,(
  ( ! [X111,X109,X112,X110] : (~sP8('T_0',X110,X111) | sP9('T_0',X110,X111) | s(bool,X109) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(subsumption_resolution,[],[f3231,f748])).
fof(f3231,plain,(
  ( ! [X111,X109,X112,X110] : (~p(s(bool,X109)) | ~sP8('T_0',X110,X111) | sP9('T_0',X110,X111) | s(bool,X109) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(superposition,[],[f406,f688])).
fof(f3594,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~sP10('T_0',X1,X2)) ) | $spl36),
  inference(cnf_transformation,[],[f3594_D])).
fof(f3594_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~sP10('T_0',X1,X2)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f3661,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0',X1,X2) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f3660])).
fof(f3660,plain,(
  ( ! [X107,X105,X108,X106] : (~sP10('T_0',X106,X107) | sP11('T_0',X106,X107) | s(bool,X105) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(subsumption_resolution,[],[f3230,f748])).
fof(f3230,plain,(
  ( ! [X107,X105,X108,X106] : (~p(s(bool,X105)) | ~sP10('T_0',X106,X107) | sP11('T_0',X106,X107) | s(bool,X105) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f405,f688])).
fof(f3591,plain,(
  ( ! [X2,X1] : (~sP11('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) | $spl34),
  inference(cnf_transformation,[],[f3591_D])).
fof(f3591_D,plain,(
  ( ! [X2,X1] : (~sP11('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f3659,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f3658])).
fof(f3658,plain,(
  ( ! [X103,X101,X102,X104] : (~p(s(bool,X102)) | p(s(bool,X103)) | ~sP11('T_0',X103,X102) | s(bool,X101) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) )),
  inference(subsumption_resolution,[],[f3229,f748])).
fof(f3229,plain,(
  ( ! [X103,X101,X102,X104] : (~p(s(bool,X101)) | ~p(s(bool,X102)) | p(s(bool,X103)) | ~sP11('T_0',X103,X102) | s(bool,X101) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) )),
  inference(superposition,[],[f402,f688])).
fof(f3588,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl32),
  inference(cnf_transformation,[],[f3588_D])).
fof(f3588_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f3657,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f3656])).
fof(f3656,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,X98)) | sP11('T_0',X98,X99) | s(bool,X97) = s(bool,X100) | s(bool,'T_0') = s(bool,X100)) )),
  inference(subsumption_resolution,[],[f3228,f748])).
fof(f3228,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,X97)) | ~p(s(bool,X98)) | sP11('T_0',X98,X99) | s(bool,X97) = s(bool,X100) | s(bool,'T_0') = s(bool,X100)) )),
  inference(superposition,[],[f401,f688])).
fof(f3585,plain,(
  ( ! [X2,X1] : (sP11('T_0',X2,X1) | p(s(bool,X1))) ) | $spl30),
  inference(cnf_transformation,[],[f3585_D])).
fof(f3585_D,plain,(
  ( ! [X2,X1] : (sP11('T_0',X2,X1) | p(s(bool,X1))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f3655,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f3654])).
fof(f3654,plain,(
  ( ! [X94,X95,X93,X96] : (p(s(bool,X94)) | sP11('T_0',X95,X94) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(subsumption_resolution,[],[f3227,f748])).
fof(f3227,plain,(
  ( ! [X94,X95,X93,X96] : (~p(s(bool,X93)) | p(s(bool,X94)) | sP11('T_0',X95,X94) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f400,f688])).
fof(f3582,plain,(
  ( ! [X2,X1] : (~sP10(X2,X1,'T_0') | ~p(s(bool,X2)) | p(s(bool,X1))) ) | $spl28),
  inference(cnf_transformation,[],[f3582_D])).
fof(f3582_D,plain,(
  ( ! [X2,X1] : (~sP10(X2,X1,'T_0') | ~p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f3653,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X2,X1,'T_0')) )),
  inference(condensation,[],[f3652])).
fof(f3652,plain,(
  ( ! [X92,X90,X91,X89] : (p(s(bool,X90)) | ~p(s(bool,X91)) | ~sP10(X91,X90,'T_0') | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(subsumption_resolution,[],[f3226,f748])).
fof(f3226,plain,(
  ( ! [X92,X90,X91,X89] : (~p(s(bool,X89)) | p(s(bool,X90)) | ~p(s(bool,X91)) | ~sP10(X91,X90,'T_0') | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f395,f688])).
fof(f3579,plain,(
  ( ! [X2,X1] : (~sP9('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) | $spl26),
  inference(cnf_transformation,[],[f3579_D])).
fof(f3579_D,plain,(
  ( ! [X2,X1] : (~sP9('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f3651,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f3650])).
fof(f3650,plain,(
  ( ! [X88,X87,X85,X86] : (p(s(bool,X86)) | p(s(bool,X87)) | ~sP9('T_0',X87,X86) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(subsumption_resolution,[],[f3225,f748])).
fof(f3225,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X85)) | p(s(bool,X86)) | p(s(bool,X87)) | ~sP9('T_0',X87,X86) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f385,f688])).
fof(f3576,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~p(s(bool,X1))) ) | $spl24),
  inference(cnf_transformation,[],[f3576_D])).
fof(f3576_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X1,X2) | ~p(s(bool,X1))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f3649,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f3648])).
fof(f3648,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X82)) | sP9('T_0',X82,X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f3224,f748])).
fof(f3224,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X81)) | ~p(s(bool,X82)) | sP9('T_0',X82,X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(superposition,[],[f384,f688])).
fof(f3573,plain,(
  ( ! [X2,X1] : (sP9('T_0',X2,X1) | ~p(s(bool,X1))) ) | $spl22),
  inference(cnf_transformation,[],[f3573_D])).
fof(f3573_D,plain,(
  ( ! [X2,X1] : (sP9('T_0',X2,X1) | ~p(s(bool,X1))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f3647,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f3646])).
fof(f3646,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,X78)) | sP9('T_0',X79,X78) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f3223,f748])).
fof(f3223,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,X77)) | ~p(s(bool,X78)) | sP9('T_0',X79,X78) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f383,f688])).
fof(f3570,plain,(
  ( ! [X2,X1] : (~sP8('T_0',X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) ) | $spl20),
  inference(cnf_transformation,[],[f3570_D])).
fof(f3570_D,plain,(
  ( ! [X2,X1] : (~sP8('T_0',X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f3645,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f3644])).
fof(f3644,plain,(
  ( ! [X76,X74,X75,X73] : (p(s(bool,X74)) | p(s(bool,X75)) | ~sP8('T_0',X74,X75) | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(subsumption_resolution,[],[f3222,f748])).
fof(f3222,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X73)) | p(s(bool,X74)) | p(s(bool,X75)) | ~sP8('T_0',X74,X75) | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(superposition,[],[f378,f688])).
fof(f3567,plain,(
  ( ! [X2,X1] : (~sP7(X2,X1,'T_0') | p(s(bool,X2)) | ~p(s(bool,X1))) ) | $spl18),
  inference(cnf_transformation,[],[f3567_D])).
fof(f3567_D,plain,(
  ( ! [X2,X1] : (~sP7(X2,X1,'T_0') | p(s(bool,X2)) | ~p(s(bool,X1))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f3643,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) )),
  inference(condensation,[],[f3642])).
fof(f3642,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,X70)) | p(s(bool,X71)) | ~sP7(X71,X70,'T_0') | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f3221,f748])).
fof(f3221,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP7(X71,X70,'T_0') | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f370,f688])).
fof(f3564,plain,(
  ( ! [X2,X1] : (~sP6(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl16),
  inference(cnf_transformation,[],[f3564_D])).
fof(f3564_D,plain,(
  ( ! [X2,X1] : (~sP6(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f3641,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X1,'T_0',X2)) )),
  inference(condensation,[],[f3640])).
fof(f3640,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X66)) | p(s(bool,X67)) | ~sP6(X66,'T_0',X67) | s(bool,X65) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(subsumption_resolution,[],[f3220,f748])).
fof(f3220,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X65)) | ~p(s(bool,X66)) | p(s(bool,X67)) | ~sP6(X66,'T_0',X67) | s(bool,X65) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(superposition,[],[f361,f688])).
fof(f3561,plain,(
  ( ! [X2,X1] : (~sP3(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl14),
  inference(cnf_transformation,[],[f3561_D])).
fof(f3561_D,plain,(
  ( ! [X2,X1] : (~sP3(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f3639,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f3638])).
fof(f3638,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,X62)) | p(s(bool,X63)) | ~sP3(X62,'T_0',X63) | s(bool,X61) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(subsumption_resolution,[],[f3219,f748])).
fof(f3219,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,X61)) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP3(X62,'T_0',X63) | s(bool,X61) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f342,f688])).
fof(f3558,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl12),
  inference(cnf_transformation,[],[f3558_D])).
fof(f3558_D,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f3637,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f3636])).
fof(f3636,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X58)) | p(s(bool,X59)) | ~sP4(X58,'T_0',X59) | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f3218,f748])).
fof(f3218,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X58)) | p(s(bool,X59)) | ~sP4(X58,'T_0',X59) | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f338,f688])).
fof(f3555,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) | $spl10),
  inference(cnf_transformation,[],[f3555_D])).
fof(f3555_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f3635,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f3634])).
fof(f3634,plain,(
  ( ! [X54,X56,X55] : (p(s(bool,X55)) | sP1(X55,'T_0') | s(bool,X54) = s(bool,X56) | s(bool,'T_0') = s(bool,X56)) )),
  inference(subsumption_resolution,[],[f3217,f748])).
fof(f3217,plain,(
  ( ! [X54,X56,X55] : (~p(s(bool,X54)) | p(s(bool,X55)) | sP1(X55,'T_0') | s(bool,X54) = s(bool,X56) | s(bool,'T_0') = s(bool,X56)) )),
  inference(superposition,[],[f310,f688])).
fof(f3551,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) | $spl6),
  inference(cnf_transformation,[],[f3551_D])).
fof(f3551_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f3633,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f3632])).
fof(f3632,plain,(
  ( ! [X52,X53,X51] : (p(s(bool,X52)) | sP1('T_0',X52) | s(bool,X51) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f3216,f748])).
fof(f3216,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,X51)) | p(s(bool,X52)) | sP1('T_0',X52) | s(bool,X51) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f307,f688])).
fof(f3596,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP8('T_0',X1,X2) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f3595])).
fof(f3595,plain,(
  ( ! [X111,X109,X112,X110] : (~sP8('T_0',X110,X111) | sP9('T_0',X110,X111) | s(bool,X109) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(subsumption_resolution,[],[f3090,f748])).
fof(f3090,plain,(
  ( ! [X111,X109,X112,X110] : (~p(s(bool,X109)) | ~sP8('T_0',X110,X111) | sP9('T_0',X110,X111) | s(bool,X109) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(superposition,[],[f406,f688])).
fof(f3593,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~sP10('T_0',X1,X2) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f3592])).
fof(f3592,plain,(
  ( ! [X107,X105,X108,X106] : (~sP10('T_0',X106,X107) | sP11('T_0',X106,X107) | s(bool,X105) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(subsumption_resolution,[],[f3089,f748])).
fof(f3089,plain,(
  ( ! [X107,X105,X108,X106] : (~p(s(bool,X105)) | ~sP10('T_0',X106,X107) | sP11('T_0',X106,X107) | s(bool,X105) = s(bool,X108) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f405,f688])).
fof(f3590,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f3589])).
fof(f3589,plain,(
  ( ! [X103,X101,X102,X104] : (~p(s(bool,X102)) | p(s(bool,X103)) | ~sP11('T_0',X103,X102) | s(bool,X101) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) )),
  inference(subsumption_resolution,[],[f3088,f748])).
fof(f3088,plain,(
  ( ! [X103,X101,X102,X104] : (~p(s(bool,X101)) | ~p(s(bool,X102)) | p(s(bool,X103)) | ~sP11('T_0',X103,X102) | s(bool,X101) = s(bool,X104) | s(bool,'T_0') = s(bool,X104)) )),
  inference(superposition,[],[f402,f688])).
fof(f3587,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP11('T_0',X1,X2)) )),
  inference(condensation,[],[f3586])).
fof(f3586,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,X98)) | sP11('T_0',X98,X99) | s(bool,X97) = s(bool,X100) | s(bool,'T_0') = s(bool,X100)) )),
  inference(subsumption_resolution,[],[f3087,f748])).
fof(f3087,plain,(
  ( ! [X99,X97,X100,X98] : (~p(s(bool,X97)) | ~p(s(bool,X98)) | sP11('T_0',X98,X99) | s(bool,X97) = s(bool,X100) | s(bool,'T_0') = s(bool,X100)) )),
  inference(superposition,[],[f401,f688])).
fof(f3584,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f3583])).
fof(f3583,plain,(
  ( ! [X94,X95,X93,X96] : (p(s(bool,X94)) | sP11('T_0',X95,X94) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(subsumption_resolution,[],[f3086,f748])).
fof(f3086,plain,(
  ( ! [X94,X95,X93,X96] : (~p(s(bool,X93)) | p(s(bool,X94)) | sP11('T_0',X95,X94) | s(bool,X93) = s(bool,X96) | s(bool,'T_0') = s(bool,X96)) )),
  inference(superposition,[],[f400,f688])).
fof(f3581,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP10(X2,X1,'T_0')) )),
  inference(condensation,[],[f3580])).
fof(f3580,plain,(
  ( ! [X92,X90,X91,X89] : (p(s(bool,X90)) | ~p(s(bool,X91)) | ~sP10(X91,X90,'T_0') | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(subsumption_resolution,[],[f3085,f748])).
fof(f3085,plain,(
  ( ! [X92,X90,X91,X89] : (~p(s(bool,X89)) | p(s(bool,X90)) | ~p(s(bool,X91)) | ~sP10(X91,X90,'T_0') | s(bool,X89) = s(bool,X92) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f395,f688])).
fof(f3578,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f3577])).
fof(f3577,plain,(
  ( ! [X88,X87,X85,X86] : (p(s(bool,X86)) | p(s(bool,X87)) | ~sP9('T_0',X87,X86) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(subsumption_resolution,[],[f3084,f748])).
fof(f3084,plain,(
  ( ! [X88,X87,X85,X86] : (~p(s(bool,X85)) | p(s(bool,X86)) | p(s(bool,X87)) | ~sP9('T_0',X87,X86) | s(bool,X85) = s(bool,X88) | s(bool,'T_0') = s(bool,X88)) )),
  inference(superposition,[],[f385,f688])).
fof(f3575,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X1,X2)) )),
  inference(condensation,[],[f3574])).
fof(f3574,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X82)) | sP9('T_0',X82,X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f3083,f748])).
fof(f3083,plain,(
  ( ! [X83,X81,X84,X82] : (~p(s(bool,X81)) | ~p(s(bool,X82)) | sP9('T_0',X82,X83) | s(bool,X81) = s(bool,X84) | s(bool,'T_0') = s(bool,X84)) )),
  inference(superposition,[],[f384,f688])).
fof(f3572,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f3571])).
fof(f3571,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,X78)) | sP9('T_0',X79,X78) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f3082,f748])).
fof(f3082,plain,(
  ( ! [X80,X78,X79,X77] : (~p(s(bool,X77)) | ~p(s(bool,X78)) | sP9('T_0',X79,X78) | s(bool,X77) = s(bool,X80) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f383,f688])).
fof(f3569,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP8('T_0',X1,X2)) )),
  inference(condensation,[],[f3568])).
fof(f3568,plain,(
  ( ! [X76,X74,X75,X73] : (p(s(bool,X74)) | p(s(bool,X75)) | ~sP8('T_0',X74,X75) | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(subsumption_resolution,[],[f3081,f748])).
fof(f3081,plain,(
  ( ! [X76,X74,X75,X73] : (~p(s(bool,X73)) | p(s(bool,X74)) | p(s(bool,X75)) | ~sP8('T_0',X74,X75) | s(bool,X73) = s(bool,X76) | s(bool,'T_0') = s(bool,X76)) )),
  inference(superposition,[],[f378,f688])).
fof(f3566,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) )),
  inference(condensation,[],[f3565])).
fof(f3565,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,X70)) | p(s(bool,X71)) | ~sP7(X71,X70,'T_0') | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(subsumption_resolution,[],[f3080,f748])).
fof(f3080,plain,(
  ( ! [X70,X72,X71,X69] : (~p(s(bool,X69)) | ~p(s(bool,X70)) | p(s(bool,X71)) | ~sP7(X71,X70,'T_0') | s(bool,X69) = s(bool,X72) | s(bool,'T_0') = s(bool,X72)) )),
  inference(superposition,[],[f370,f688])).
fof(f3563,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP6(X1,'T_0',X2)) )),
  inference(condensation,[],[f3562])).
fof(f3562,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X66)) | p(s(bool,X67)) | ~sP6(X66,'T_0',X67) | s(bool,X65) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(subsumption_resolution,[],[f3079,f748])).
fof(f3079,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X65)) | ~p(s(bool,X66)) | p(s(bool,X67)) | ~sP6(X66,'T_0',X67) | s(bool,X65) = s(bool,X68) | s(bool,'T_0') = s(bool,X68)) )),
  inference(superposition,[],[f361,f688])).
fof(f3560,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP3(X1,'T_0',X2)) )),
  inference(condensation,[],[f3559])).
fof(f3559,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,X62)) | p(s(bool,X63)) | ~sP3(X62,'T_0',X63) | s(bool,X61) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(subsumption_resolution,[],[f3078,f748])).
fof(f3078,plain,(
  ( ! [X61,X64,X62,X63] : (~p(s(bool,X61)) | ~p(s(bool,X62)) | p(s(bool,X63)) | ~sP3(X62,'T_0',X63) | s(bool,X61) = s(bool,X64) | s(bool,'T_0') = s(bool,X64)) )),
  inference(superposition,[],[f342,f688])).
fof(f3557,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f3556])).
fof(f3556,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X58)) | p(s(bool,X59)) | ~sP4(X58,'T_0',X59) | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(subsumption_resolution,[],[f3077,f748])).
fof(f3077,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X57)) | ~p(s(bool,X58)) | p(s(bool,X59)) | ~sP4(X58,'T_0',X59) | s(bool,X57) = s(bool,X60) | s(bool,'T_0') = s(bool,X60)) )),
  inference(superposition,[],[f338,f688])).
fof(f3554,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f3553])).
fof(f3553,plain,(
  ( ! [X54,X56,X55] : (p(s(bool,X55)) | sP1(X55,'T_0') | s(bool,X54) = s(bool,X56) | s(bool,'T_0') = s(bool,X56)) )),
  inference(subsumption_resolution,[],[f3076,f748])).
fof(f3076,plain,(
  ( ! [X54,X56,X55] : (~p(s(bool,X54)) | p(s(bool,X55)) | sP1(X55,'T_0') | s(bool,X54) = s(bool,X56) | s(bool,'T_0') = s(bool,X56)) )),
  inference(superposition,[],[f310,f688])).
fof(f3550,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f3549])).
fof(f3549,plain,(
  ( ! [X52,X53,X51] : (p(s(bool,X52)) | sP1('T_0',X52) | s(bool,X51) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(subsumption_resolution,[],[f3075,f748])).
fof(f3075,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,X51)) | p(s(bool,X52)) | sP1('T_0',X52) | s(bool,X51) = s(bool,X53) | s(bool,'T_0') = s(bool,X53)) )),
  inference(superposition,[],[f307,f688])).
fof(f414,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) | $spl0),
  inference(cnf_transformation,[],[f414_D])).
fof(f414_D,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f416,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl2),
  inference(cnf_transformation,[],[f416_D])).
fof(f416_D,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f228,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))))),
  inference(cnf_transformation,[],[f154])).
fof(f154,plain,(
  (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))))) & (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f153])).
fof(f153,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.realax.real',X0)))) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X0)))))) & (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X0))))))),
  inference(flattening,[],[f152])).
fof(f152,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.realax.real',X0)))) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X0)))))) & (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.realax.real',X0)))) | (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X0)))))))),
  inference(nnf_transformation,[],[f108])).
fof(f108,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.realax.real',X0)))) <~> (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X0))))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s('type.realax.real',X0)))) <=> (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X2),s('type.realax.real',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s('type.realax.real',X6)))) <=> (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X8),s('type.realax.real',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',X7),s('type.realax.real',X8))),s('type.realax.real',X6)))) <=> (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X8),s('type.realax.real',X6))))))),
  file('thm.real.REAL_MAX_LE','thm.real.REAL_MAX_LE')).
fof(f418,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | $spl4),
  inference(cnf_transformation,[],[f418_D])).
fof(f418_D,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f229,plain,(
  p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))))),
  inference(cnf_transformation,[],[f154])).
fof(f415,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) | $spl1),
  inference(cnf_transformation,[],[f415_D])).
fof(f415_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f417,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | $spl3),
  inference(cnf_transformation,[],[f417_D])).
fof(f417_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f419,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | $spl5),
  inference(cnf_transformation,[],[f419_D])).
fof(f419_D,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f230,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK14),s('type.realax.real',sK12)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK13),s('type.realax.real',sK12)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real','const.real.max_2'(s('type.realax.real',sK13),s('type.realax.real',sK14))),s('type.realax.real',sK12))))),
  inference(cnf_transformation,[],[f154])).
% SZS output end Proof for thm.real
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1876
% Passive clauses: 5696
% Generated clauses: 42200
% Final active clauses: 1071
% Final passive clauses: 1393
% Input formulas: 43
% Initial clauses: 177
% 
% Duplicate literals: 861
% Trivial inequalities: 40
% Fw subsumption resolutions: 1596
% Fw demodulations: 5039
% Bw demodulations: 2400
% Condensations: 1923
% Global subsumptions: 197
% 
% Simple tautologies: 88
% Equational tautologies: 100
% Forward subsumptions: 25885
% Bw demodulations to eq. taut.: 29
% 
% Unit resulting resolution: 10754
% Factoring: 5
% Forward superposition: 13205
% Backward superposition: 4202
% Self superposition: 65
% Equality factoring: 30
% Equality resolution: 1
% 
% Split clauses: 231
% Split components: 468
% SAT solver clauses: 6901
% SAT solver unit clauses: 385
% SAT solver binary clauses: 2049
% 
% Sat splits: 231
% Sat splitting refutations: 544
% 
% Memory used [KB]: 19445
% Time elapsed: 1.707 s
% ------------------------------
% ------------------------------
% Success in time 3.083 s
